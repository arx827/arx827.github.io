<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[LOMA]_290_保險公司的運作</title>
      <link href="/2022/08/07/LOMA-290-%E4%BF%9D%E9%9A%AA%E5%85%AC%E5%8F%B8%E7%9A%84%E9%81%8B%E4%BD%9C/"/>
      <url>/2022/08/07/LOMA-290-%E4%BF%9D%E9%9A%AA%E5%85%AC%E5%8F%B8%E7%9A%84%E9%81%8B%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>LOMA 290 筆記</p><a id="more"></a><h1 id="第一部分：公司組織和治理">第一部分：公司組織和治理</h1><h2 id="第-1-章-組織和運營">第 1 章 組織和運營</h2><p><code>使命陳述</code>：是對公司的根本目的或其存在原因的正式書面陳述。</p><p>保險公司的使命，是向個人提供產品，<br>這些產品，能為人們因特定風險而遭受的財務損失提供保障。</p><ul><li><strong>保險公司有三種類型：</strong><ul><li>壽險公司</li><li>健康保險公司</li><li>健康和意外傷害保險公司</li></ul></li></ul><p>壽險公司簽發和銷售的產品，主要為因死亡而導致的財務損失提供保障。</p><p><code>被保險人</code>：其生命受壽險保單保障的人。</p><ul><li><strong>壽險保險金常用於：</strong><ul><li>在被保險人去世時支付殯葬費用或償還債務</li><li>為被保險人的遺屬建立現金儲備</li><li>維持被保險人遺屬的生活水準</li><li>清償抵押貸款或支付租金</li><li>支付遺產稅和繼承稅</li><li>為向慈善組織的捐贈籌資</li><li>在被保險人去世後幫助企業持續經營</li><li>為被保險人的子女設立教育基金</li><li>為仍在世的配偶提供補充性的退休收入</li></ul></li></ul><p>年金所保障的是，長壽者耗盡自身儲蓄或財務資源的財務風險。</p><h3 id="保險公司的利益相關者">保險公司的利益相關者</h3><p><code>利益相關者 (利益相關方)</code>：是對公司如何經營具有利益關係的人。</p><ul><li><h4 id="公司所有人">公司所有人</h4><ul><li><strong>股份制保險公司</strong><ul><li><code>股東 (股票持有人)</code></li><li><code>股票</code>：代表公司所有權利益的一種金融證券。</li><li><code>證券</code>：是代表 ( 1 ) 對企業的所有權(如股票) 或 ( 2 ) 企業、政府或代理機構承擔債務(即債券)的文件或證明。</li><li><code>董事會</code>：最高管理層。</li><li>董事會以<code>股東紅利</code>的形式對盈餘進行分配。</li></ul></li><li><strong>相互制保險公司</strong><ul><li><code>保單所有人</code>：即那些從公司購買保單的企業或個人擁有的公司。</li><li>不發行或出售股票。</li><li>董事會支付<code>保單紅利</code>：它被視為保單所有人在保單年度，支付給公司保費的部分返還。</li></ul></li><li><strong>互助會</strong><ul><li>保險產品的第三類供應者，向其會員提供社會保障和保險給付的非盈利性組織。</li><li>就像相互制保險公司的保單所有人一樣，互助會的會員也可能會定期收到保費返還。</li></ul></li></ul></li><li><h4 id="客戶">客戶</h4><ul><li><code>外部客戶</code>：保單所有人、被保險人、受益人、投保人</li><li>( 1 ) 購買或使用公司所提供的產品，或者 ( 2 )建議、影響他人購買或使用公司產品的任何個人或組織。</li></ul></li><li><h4 id="業務員">業務員</h4><ul><li><code>保險業務員</code>：是獲得許可證，有資格銷售保險產品、展業或協商保險契約的人。</li><li><code>外部客戶</code>：業務員向個人客戶和組織客戶就保險產品的採購提出建議。</li><li><code>內部客戶</code>：依靠組織內其他員工或部門支持的員工或部門。可以從保險人那裡獲得充足的財務和其他方面的支持。</li><li><code>傭金</code>：一般為已售保單所繳保費的一個百分比。</li><li>業務員通常還希望獲得其他形式的補償，例如激勵性獎金和保險福利。</li></ul></li><li><h4 id="員工">員工</h4><ul><li>保險公司員工的共同努力，對公司運營的成功以及盈利能力，有著至關重要的影響。</li></ul></li><li><h4 id="監管機構">監管機構</h4><ul><li>壽險公司面臨著廣泛的政府監管。</li><li>監管的目的在於保護客戶、維持保險人的長期財務穩健。</li><li><strong>保險監管分為兩大類：</strong><ul><li>償付能力監管 (審慎監管)：<ul><li><code>償付能力</code>：公司按時償還其債務、履行契約責任和支付營業費用的能力。</li></ul></li><li>市場行為監管 (市場監管)：<ul><li>旨在確保壽險公司以公平、合乎道德的方式開展業務。</li></ul></li></ul></li><li>保險公司除了要服從保險監管外，還必須遵守那些規範所有企業的法律，例如稅法、雇傭法，以及與投資交易有關的法律。</li></ul></li><li><h4 id="評級機構">評級機構</h4><ul><li><code>評級機構</code>：獨立於任何保險人和政府部門的一種機構，它們評估保險人的財務狀況，並向保險公司的潛在客戶和投資者提供資訊。</li><li><code>A.M. Best</code>、<code>惠譽</code>、<code>穆迪</code>、<code>標準普爾</code>和<code>魏斯評級</code>都是主要的保險評級機構。</li><li>為了贏得評級機構對其高等級的評級，保險人必須滿足評級機構內部開發的關於償付能力和盈利能力的最低標准。</li></ul></li><li><h4 id="再保險人">再保險人</h4><p>其他利益相關者 …1.8<br>利益相關者的利益平衡…1.8<br>管理層級 …1.9<br>董事會 …1.9<br>高級管理層… 1.10<br>初級管理層… 1.10<br>管理職能 … 1.10<br>計畫 … 1.11<br>組織 … 1.12<br>保險運營活動的組織 …1.14<br>價值鏈概述… 1.14<br>保險人組織工作活動的傳統方式… 1.16<br>利潤中心 / 戰略業務單位(SBUs) …1.19<br>委員會 .1.20<br>控股公司制 …1.22<br>順向控股公司和逆向控股公司 …1.23</p><p><code>再保險</code><br><code>直接承保人</code><br><code>再保險人</code><br><code>職權</code><br><code>職責</code><br><code>責任性</code><br><code>首席執行官(CEO)</code><br><code>內部董事</code><br><code>外部董事</code><br><code>首席運營官(COO)</code><br><code>首席財務官(CFO)</code><br><code>計畫</code></p></li></ul><p><code>目標</code><br><code>戰略</code><br><code>戰術</code><br><code>戰略計畫</code><br><code>運營計畫</code><br><code>組織</code><br><code>勞動分工</code><br><code>部門化</code><br><code>組織結構圖</code><br><code>命令鏈</code><br><code>授權</code><br><code>集權型組織</code><br><code>分權型組織</code><br><code>職能</code></p><p><code>業務部門</code><br><code>支持部門</code><br><code>價值鏈</code><br><code>利潤中心</code><br><code>戰略業務單位(SBU)</code><br><code>委員會</code><br><code>常務委員會</code><br><code>特別委員會</code><br><code>控股公司</code><br><code>控股權</code><br><code>子公司</code><br><code>順向控股公司</code><br><code>逆向控股公司</code></p><h2 id="第-2-章-公司治理、倫理與控制">第 2 章 公司治理、倫理與控制</h2><p>公司治理 …2.2<br>領導…2.3<br>公司倫理與道德行為 …2.4<br>行為準則 …2.5<br>道德規範辦公室 …2.5<br>教育 …2.6<br>培訓 …2.7<br>協會會員 …2.8<br>控制…2.9<br>控制類型 …2.10<br>建立績效標準 … 2.13<br>績效衡量 …2.13</p><h1 id="第二部分：支援功能">第二部分：支援功能</h1><h2 id="第-3-章-法律與合規">第 3 章 法律與合規</h2><p>法律與合規職能的組織…3.2<br>法律部門的職責…3.3<br>對董事會的職責 …3.3<br>對內部職能部門的職責…3.5<br>對外部單位的職責 …3.6<br>合規部門的職責…3.8<br>預防 …3.9<br>教育和培訓… 3.10<br>監控 … 3.10<br>美國的市場行為檢查 …3.11</p><h2 id="第-4-章-人力資源管理">第 4 章 人力資源管理</h2><p>人力資源部門的組織結構…4.2<br>人力資源規劃…4.3<br>預測員工配備需求 …4.4<br>評估勞動力供給 …4.7<br>招聘…4.8<br>內部招聘 …4.8<br>外部招聘 …4.10<br>員工選拔 … 4.10<br>就業申請和甄選面試… 4.10<br>職前測試 …4.12<br>雇傭面試 …4.12<br>背景調查和藥物檢查… 4.13<br>培訓和發展 …4.13<br>績效評估 … 4.14<br>設置績效目標 … 4.14<br>監督和考核員工績效… 4.16<br>績效評估程式 … 4.16<br>員工薪酬和福利 … 4.18<br>合規 … 4.19</p><h2 id="第-5-章-資訊與技術">第 5 章 資訊與技術</h2><p>資訊技術(IT)部門的職責…5.2<br>資訊技術(IT)部門的組織…5.3<br>資訊管理 …5.5<br>資料庫 …5.6<br>資料庫管理系統 …5.6<br>文檔管理系統…5.9<br>工作流管理系統 … 5.10<br>業務處理技術… 5.10<br>交易處理系統 … 5.11<br>商業智慧 …5.11<br>外包資訊技術(IT)運營活動 …5.13<br>電信 … 5.14<br>網路 … 5.14<br>電腦電話集成 … 5.17<br>其他電信技術 … 5.18<br>資訊技術(IT)安全和災難恢復 …5.18</p><h1 id="第三部分：財務功能">第三部分：財務功能</h1><h2 id="第-6-章-財務管理">第 6 章 財務管理</h2><p>財務管理活動的組織 …6.2<br>會計和財務報告 …6.4<br>資金運營 …6.5<br>投資運營 …6.6<br>審計和內部控制 …6.8<br>各部門的職責…6.9<br>財務管理的職責 … 6.10<br>制定財務戰略 … 6.10<br>風險管理 …6.11<br>償付能力與盈利能力管理 … 6.14<br>資本管理 …6.15<br>現金流管理… 6.16<br>向利益相關者提供資訊… 6.17<br>財務合規 … 6.20<br>監控償付能力的工具… 6.22</p><h2 id="第-7-章-會計、資金運營和審計">第 7 章 會計、資金運營和審計</h2><p>會計、資金運營和審計活動的組織…7.2<br>會計…7.3<br>會計資訊的使用者 …7.4<br>會計制度 …7.5<br>財務會計 …7.6<br>管理會計 …7.10<br>資金運營 … 7.12<br>現金管理 …7.13<br>流動性管理… 7.14<br>審計 … 7.15<br>內部控制 …7.16</p><h2 id="第-8-章-投資管理">第 8 章 投資管理</h2><p>投資政策 …8.2<br>投資風險 …8.3<br>風險和回報…8.3<br>多元化 …8.4<br>投資運營 …8.5<br>投資評估 …8.5<br>買賣證券 …8.6<br>投資組合 …8.7<br>一般帳戶 …8.8<br>獨立帳戶 …8.8<br>投資種類 …8.9<br>債券 …8.9<br>抵押貸款 …8.13<br>股票 … 8.14<br>不動產 … 8.15<br>保單貸款 …8.16</p><h1 id="第四部分：行銷、產品開發和分銷">第四部分：行銷、產品開發和分銷</h1><h2 id="第-9-章-行銷">第 9 章 行銷</h2><p>行銷的組織結構…9.2<br>行銷計畫 …9.4<br>傳達行銷計畫…9.5<br>行銷組合 …9.6<br>產品 …9.6<br>價格 …9.6<br>促銷 …9.7<br>分銷 …9.8<br>定位…9.8<br>基本的保險行銷活動 …9.9<br>識別市場 …9.9<br>細分市場 …9.9<br>目標行銷 …9.11<br>目標行銷策略 … 9.11<br>行銷資訊 … 9.13<br>內部資料庫… 9.14<br>網站流量分析 … 9.14<br>競爭與市場情報 … 9.14<br>行銷調研 …9.15<br>行銷環境 …9.16<br>行銷控制 … 9.16</p><h2 id="第-10-章-產品開發">第 10 章 產品開發</h2><p>產品開發過程… 10.3<br>產品計畫 …10.4<br>綜合業務分析 … 10.4<br>技術設計 …10.7<br>產品實施 …10.8<br>績效監控和審查 … 10.10</p><h2 id="第-11-章-產品分銷">第 11 章 產品分銷</h2><p>個人銷售分銷體系 … 11.2<br>代理人 … 11.4<br>代理管道支援 … 11.8<br>個人銷售方式 … 11.13<br>領薪銷售代表 … 11.15<br>理財顧問 … 11.16<br>協力廠商機構分銷體系… 11.16<br>經紀自營商… 11.16<br>銀行和其他儲蓄機構… 11.17<br>保險公司 … 11.18<br>直接反應分銷體系 … 11.19<br>分銷決策 … 11.19<br>成本 … 11.19<br>控制 … 11.21<br>專業技能 … 11.21<br>消費者特徵… 11.22<br>產品特徵 … 11.22<br>外部行銷環境 … 11.22</p><h1 id="第五部分：產品管理功能">第五部分：產品管理功能</h1><h2 id="第-12-章-核保">第 12 章 核保</h2><p>新業務處理 …12.3<br>處理壽險投保單 … 12.4<br>處理新年金業務 … 12.4<br>新業務和核保運營活動的組織 … 12.5<br>核保的目的 …12.6<br>核保哲學和核保準則… 12.8<br>核保流程 … 12.9<br>外勤核保和遠程核保… 12.11<br>醫療核保、財務核保和個人核保… 12.12<br>核保決策 … 12.13<br>適用保險費率 … 12.15<br>核保運營活動的控制機制… 12.15<br>職權級別 … 12.17<br>其他核保控制 … 12.17<br>保險公司內部關係和核保… 12.18<br>團體核保 … 12.19<br>團體核保流程 … 12.19<br>團體壽險的風險因素… 12.21<br>監管要求 … 12.21</p><h2 id="第-13-章-理賠和年金給付管理">第 13 章 理賠和年金給付管理</h2><p>理賠部門的組織 … 13.3<br>理賠哲學和理賠實務 …13.4<br>壽險理賠流程… 13.5<br>確定是否應該進行保險給付 … 13.6<br>計算給付金額 … 13.11<br>支付保險金… 13.13<br>確定合適的受領人 … 13.14<br>理賠調查 … 13.15<br>騙賠 … 13.15<br>理賠處理的品質控制 … 13.16<br>監管要求 … 13.17<br>不公正理賠處理實務示範法案 … 13.18<br>國際法律 … 13.18<br>年金管理 … 13.18<br>年金的死亡給付管理… 13.18<br>年金給付期間定期支付的管理 … 13.19</p><h2 id="第-14-章-客戶服務">第 14 章 客戶服務</h2><p>客戶服務部門的組織 …14.3<br>典型的客戶服務工作崗位 … 14.4<br>客戶服務部門的關係… 14.4<br>有效客戶服務… 14.4<br>教育與培訓… 14.6<br>技術 … 14.7<br>客戶關係管理 … 14.8<br>客戶服務流程… 14.9<br>滿足客戶請求 … 14.9<br>處理客戶投訴 … 14.14<br>保全客戶、追加銷售和交叉銷售… 14.15<br>團體保險產品的客戶服務流程 … 14.17<br>客戶服務的控制機制 … 14.18<br>定性績效評估 … 14.20<br>定量績效評估 … 14.20</p>]]></content>
      
      
      
        <tags>
            
            <tag> LOMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[LOMA]_290_保險公司的運作_試題</title>
      <link href="/2022/08/05/LOMA-290-%E4%BF%9D%E9%9A%AA%E5%85%AC%E5%8F%B8%E7%9A%84%E9%81%8B%E4%BD%9C-%E8%A9%A6%E9%A1%8C/"/>
      <url>/2022/08/05/LOMA-290-%E4%BF%9D%E9%9A%AA%E5%85%AC%E5%8F%B8%E7%9A%84%E9%81%8B%E4%BD%9C-%E8%A9%A6%E9%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>LOMA 290 試題</p><a id="more"></a><h1 id="練習題-v2">練習題</h1><h2 id="第-1-章-組織和運營-v2">第 1 章 組織和運營</h2><blockquote><p><strong>學習目標</strong>： 識別並描述保險公司的利益相關者群體。</p></blockquote><ol><li>Hamilton 是一家相互制保險公司。這一資訊最有可能表明，Hamilton由其____擁有。 (p. 5)<br>( 1 ) 股東<br><span style="color:red;"><strong>✓</strong> </span> ( 2 ) 保單所有人<br>( 3 ) 業務員<br>( 4 ) 董事會</li></ol><blockquote><p><strong>學習目標</strong>： 區分外部客戶與內部客戶。</p></blockquote><ol start="2"><li>保險公司既有內部客戶，又有外部客戶；有時候保險公司的某一利益相關者既是公司的內部客戶，又是外部客戶。經常被認為既是保險人的內部客戶，又是外部客戶的一個利益相關者實例是____。 (p. 6)<br><span style="color:red;"><strong>✓</strong> </span> ( 1 ) 業務員<br>( 2 ) 監管機構<br>( 3 ) 保單所有人<br>( 4 ) 理賠調查員</li></ol><blockquote><p><strong>學習目標</strong>： 區分償付能力法規和市場行為法規。</p></blockquote><ol start="3"><li>保險監管分為償付能力監管和市場行為監管。通常，償付能力監管主要致力於確保保險公司____。 (p. 7)<br>( 1 ) 根據監管規定處理保險索賠<br>( 2 ) 實施公正的行銷和銷售實務<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 有能力按時償還其到期債務、契約責任和營業費用<br>( 4 ) 及時處理客戶投訴</li></ol><blockquote><p><strong>學習目標</strong>： 闡述有關組織的概念如職權、職責、責任性、命令鏈、授權、集權型組織和分權型組織。</p></blockquote><ol start="4"><li>在管理學中，責任性是指____。 (p. 9)<br>( 1 ) 員工為了履行職責而製定決策、採取行動以及指導他人的權利<br>( 2 ) 分配給員工的責任和任務<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 員工對其如何履行自己的職責承擔責任<br>( 4 ) 分配給其他員工完成特定任務的職責的過程</li></ol><blockquote><p><strong>學習目標</strong>： 闡述管理層級，並列示管理的四個職能。</p></blockquote><ol start="5"><li><p>公司的最高管理層是董事會。通常，公司的首席執行官(CEO)(<strong>是 / 不是</strong>)公司董事會的成員。董事會一般包括內部董事和外部董事。外部董事是在公司內(<strong>擔任 / 不擔任</strong>)職務的董事會成員。 (p. 9)<br>( 1 ) 是 / 擔任<br><span style="color:red;"><strong>✓</strong> </span> ( 2 ) 是 / 不擔任<br>( 3 ) 不是 / 擔任<br>( 4 ) 不是 / 不擔任</p></li><li><p>以下關於公司傳統管理職能的應用的正確陳述____。 (p. 10)<br><strong>A. 基層主管通常比中級管理人員在執行高管的指示上擁有更大的自由度。</strong><br><strong>B. 通常，管理層級越高，管理人員在計畫和組織活動上耗費的時間就越少。</strong><br>( 1 ) 包括A和B<br>( 2 ) 只包括A<br>( 3 ) 只包括B<br><span style="color:red;"><strong>✓</strong> </span> ( 4 ) 既不包括A，也不包括B</p></li><li><p>被稱為計畫的管理職能包括戰略計畫和運營計畫。在這些計畫中，涵蓋更長期間的是(<strong>戰略 / 運營</strong>)計畫。主要關注運營計畫的管理層級是(<strong>公司高管 / 中級管理人員</strong>)。 (p. 11-12)<br>( 1 ) 戰略 / 公司高管<br><span style="color:red;"><strong>✓</strong> </span> ( 2 ) 戰略 / 中級管理人員<br>( 3 ) 運營 / 公司高管<br>( 4 ) 運營 / 中級管理人員</p></li></ol><blockquote><p><strong>學習目標</strong>： 闡述有關組織的概念如職權、職責、責任性、命令鏈、授權、集權型組織和分權型組織等。</p></blockquote><ol start="8"><li>公司可能是集權型組織，也可能是分權型組織。與集權型組織相比，分權型組織通常____。 (p. 13)<br>( 1 ) 由最高管理層擁有絕大多數決策權<br>( 2 ) 政策和行動會更加一致<br>( 3 ) 不能對未預期的情況做出快速反應<br><span style="color:red;"><strong>✓</strong> </span> ( 4 ) 對中級和初級管理人員進行更多的授權</li></ol><blockquote><p><strong>學習目標</strong>： 保險公司的職能領域可以分為業務部門和支援部門。通常被劃歸為業務部門的職能領域是____。</p></blockquote><ol start="9"><li><p>公司可能是集權型組織，也可能是分權型組織。與集權型組織相比，分權型組織通常____。 (p. 14)<br><span style="color:red;"><strong>✓</strong> </span> ( 1 ) 理賠管理<br>( 2 ) 會計<br>( 3 ) 資訊技術<br>( 4 ) 合規</p></li><li><p>某壽險公司的一個職能領域由精算師組成。通常，保險人的精算師主要負責____。 (p. 14-15)<br>( 1 ) 根據公司管理層制定的方針，管理公司的投資<br>( 2 ) 維護公司各種業務的財務記錄，對公司的財務狀況進行編報並遞交規定的財務報表<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 確保公司在數理合理的基礎上開展運營活動，協助產品開發和財務設計，計算保單準備金和保單紅利金額<br>( 4 ) 確保公司對準被保險人進行分類，使其實際發生的死亡率落在產品財務設計時假設的死亡率範圍以內</p></li></ol><blockquote><p><strong>學習目標</strong>： 解釋公司如何利用價值鏈來確定運營中的競爭優勢。</p></blockquote><ol start="11"><li>關於價值鏈模型，最可能正確的說法是：如果工作活動能夠____，這些活動就被稱為增值活動。 (p. 14-16)<br>( 1 ) 為公司節約成本<br>( 2 ) 建立價值鏈活動之間的聯繫從而增加公司的利潤<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 提供客戶價值<br>( 4 ) 為價值鏈中的其他活動提供支援</li></ol><blockquote><p><strong>學習目標</strong>： 闡述保險人組織其運營活動的傳統方式。</p></blockquote><ol start="12"><li><p>以下是關於產品型組織和職能型組織的優缺點的陳述。選擇包含正確陳述的選項____。 (p. 17-18)<br>( 1 ) 隨著公司提供的不同產品的數量、公司的市場規模和市場多樣化程度的提高，僅按照職能組織運營活動的組織的效率更高<br><span style="color:red;"><strong>✓</strong> </span> ( 2 ) 按照職能組織運營活動的主要優勢在於方法簡單，它注重每個職能領域的管理技能和技術技能的發展<br>( 3 ) 按照產品組織運營活動的一個缺點是難以對公司不同的產品線進行比較<br>( 4 ) 按照產品組織運營活動往往會導致組織集中化，因為它使得那些並非專於產品線的管理人員作出產品決策</p></li><li><p>Cadence保險公司根據公司的業務線(個人壽險、團體壽險和年金)分配工作。每條業務線負責各自的精算、行銷和其他管理活動。而其他一些職能，如資訊技術、法律/合規和人力資源則由集中的管理部門處理。以上資訊表明，Cadence採用的組織結構被稱為按照____組織。 (p. 18)<br>( 1 ) 分銷體系<br>( 2 ) 職能<br>( 3 ) 地域<br><span style="color:red;"><strong>✓</strong> </span> ( 4 ) 產品</p></li></ol><blockquote><p><strong>學習目標</strong>： 明確利潤中心和戰略業務單位(SBU)的主要特徵。</p></blockquote><ol start="14"><li>有些保險人採用戰略業務單位(SBUs)來組織其運營活動。關於這種組織形式的一項正確陳述是：它____。 (p. 19-20)<br><span style="color:red;"><strong>✓</strong> </span> ( 1 ) 組建自身能產生明確利潤的利潤中心<br>( 2 ) 要求公司採用集中決策制定機制<br>( 3 ) 使得公司免去了重複建設支援部門的成本<br>( 4 ) 難以確定績效低於預期的業務線</li></ol><blockquote><p><strong>學習目標</strong>： 明確不同類型的委員會，並說明委員會在公司中的作用。</p></blockquote><ol start="15"><li>以下陳述描述了Rainbow保險公司成立的委員會。選擇對特別委員會描述最佳的選項____。 (p. 20-22)<br>( 1 ) Rainbow的董事會成立了一個投資委員會，對公司廣泛的投資政策進行持續的審查<br>( 2 ) Rainbow的信息技術(IT)委員會是一個跨部門委員會，其目的是在持續經營的基礎上審查IT專案並確定專案的優先順序<br>( 3 ) Rainbow的預算委員會是永久性的跨部門委員會，它對預估Rainbow營業收入和費用的年度預算進行審查<br><span style="color:red;"><strong>✓</strong> </span> ( 4 ) Rainbow的管理團隊為了設計新的理賠管理系統這一特定目的而成立了一個臨時委員會</li></ol><blockquote><p><strong>學習目標</strong>： 解釋控股公司結構並說明保險人按這種結構組建的四個優勢。</p></blockquote><ol start="16"><li>Venus壽險公司組建了Moonbeam 控股公司。Venus擁有並控制Moonbeam，而Moonbeam反過來擁有並控制Clarion公司。關於這種情形的正確陳述是：Moonbeam____。 (p. 22-23)<br>( 1 ) 是Clarion的子公司<br><span style="color:red;"><strong>✓</strong> </span> ( 2 ) 是順向控股公司<br>( 3 ) 對Venus擁有控股權<br>( 4 ) 是逆向控股公司</li></ol><hr><h2 id="第-2-章-公司治理、倫理與控制-v2">第 2 章 公司治理、倫理與控制</h2><blockquote><p><strong>學習目標</strong>： 定義公司治理，並識別良好的公司治理應具備的要素。</p></blockquote><ol><li><strong>對於本題，如果選項( 1 )到( 3 )都是正確的，那麼選擇選項( 4 )。否則，選擇正確的答案選項。</strong><br>近年來，公司治理變得日益重要。實現良好的公司治理應具備的要素包括____。 (p. 3)<br>( 1 ) 為利益相關者提供透明度和責任性的公司各級控制體系<br>( 2 ) 注重平衡所有利益相關者需求的戰略計畫<br>( 3 ) 領導力以及平衡風險與回報的、合乎倫理的組織文化<br><span style="color:red;"><strong>✓</strong> </span> ( 4 ) 以上所有選項</li></ol><blockquote><p><strong>學習目標</strong>： 從管理職能的角度闡述領導的重要性，並識別與領導相關的管理活動。</p></blockquote><ol start="2"><li>指導和激勵員工的管理活動與被稱為____的管理職能最密切相關。 (p. 3)<br>( 1 ) 計畫<br>( 2 ) 組織<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 領導<br>( 4 ) 控制</li></ol><blockquote><p><strong>學習目標</strong>： 定義公司倫理，並識別保險人培育按照道德倫理規範行事的文化的方式。</p></blockquote><ol start="3"><li>以下是關於公司如何形成一個促進良好公司治理和遵守法律法規的道德倫理環境的陳述。選擇包含正確陳述的選項____。 (p. 5)<br>( 1 ) 行為準則應當提供寬泛的指導方針，並避免涉及可能與公司運作過程相關的特定活動<br>( 2 ) 公司成立道德規範辦公室的一個缺點是員工不能匿名舉報不道德行為<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 為了不偏不倚，受理申訴專員通常直接向公司董事會或CEO報告<br>( 4 ) 公司不應鼓勵員工參與審查和修訂公司的行為準則的活動</li></ol><blockquote><p><strong>學習目標</strong>： 瞭解保險行業的教育計畫和專業協會。</p></blockquote><ol start="4"><li>下列關於道德標準與教育和專業協會的正確陳述____。 (p. 6-8)<br><strong>A. 教育和培訓一般不用於促進公司內部的道德行為。</strong><br><strong>B. 專業協會通常為其會員設定行為準則或道德規範。</strong><br>( 1 ) 包括A和B<br>( 2 ) 只包括A<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 只包括B<br>( 4 ) 既不包括A，也不包括B</li></ol><blockquote><p><strong>學習目標</strong>： 解釋內幕交易並識別內部資訊的實例。</p></blockquote><ol start="5"><li><strong>對於本題，如果選項( 1 )到( 3 )都是正確的，那麼選擇選項( 4 )。否則，選擇正確的答案選項。</strong><br>Michael Stockton在Jupiter公司工作。Jupiter公司計畫了結一項重大的訴訟案件，Stockton先生在這一資訊公諸於眾之前就已獲悉。因為該消息發佈後很可能會導致Jupiter公司股票價格的下跌，因此Stockton先生考慮賣掉他持有的Jupiter公司股票。關於此情形的正確陳述包括____。 (p. 7)<br>( 1 ) 如果Stockton先生基於尚未公開的資訊出售了其持有的Jupiter公司股票，那麼他就參 與了內幕交易<br>( 2 ) Stockton先生獲得的資訊被認為是內部資訊<br>( 3 ) Stockton先生獲得的資訊被認為是重大消息<br><span style="color:red;"><strong>✓</strong> </span> ( 4 ) 以上所有選項</li></ol><blockquote><p><strong>學習目標</strong>： 闡述與客戶相關的機密資訊的種類，以及保險公司員工應如何遵守隱私與保密法規來 處理此類資訊。</p></blockquote><ol start="6"><li>保險公司在其業務經營過程中可能獲得有關客戶的大量私人資訊，因此保險公司有義務培訓員工以保密的方式處理所有這類資訊，從而遵守相關的隱私權法。例如，通過郵件傳送的資訊一般被認為是(<strong>公共 / 保密</strong>)資訊。個人可識別資訊(PII)被認為是(<strong>公共 / 保 密</strong>)資訊。 (p. 8)<br>( 1 ) 公共 / 公共<br><span style="color:red;"><strong>✓</strong> </span> ( 2 ) 公共 / 保密<br>( 3 ) 保密 / 公共<br>( 4 ) 保密 / 保密</li></ol><blockquote><p><strong>學習目標</strong>： 從管理職能的角度解釋控制，並闡述控制圈中的迴圈特性。</p></blockquote><ol start="7"><li><strong>下面段落的陳述是不完整的。選擇包含可以正確完成該段落的詞語的選項。</strong><br>近年來，隨著良好公司治理重要性的提高，控制職能也越來越重要。控制職能的一個重要作用就是對公司的所有者、監管機構、員工和其他利益相關者均需落實____，這是良好的公司治理的一個基本要素。 (p. 10)<br>( 1 ) 職權<br>( 2 ) 職責<br>( 3 ) 部門化<br><span style="color:red;"><strong>✓</strong> </span> ( 4 ) 責任性</li></ol><blockquote><p><strong>學習目標</strong>： 闡述保險公司三種主要的控制機制，並識別各種機制的實例。</p></blockquote><ol start="8"><li><p>有一種控制類型是公司在業務流程開始之前使用的。這種控制類型被稱為(<strong>指導 / 即時</strong>) 控制。回饋控制是保險公司使用的另一種控制類型。(<strong>審計 / 流程手冊</strong>)就是一種回饋控制____。 (p. 10-11)<br><span style="color:red;"><strong>✓</strong> </span> ( 1 ) 指導 / 審計<br>( 2 ) 指導 / 流程手冊<br>( 3 ) 即時 / 審計<br>( 4 ) 即時 / 流程手冊</p></li><li><p>以下關於進行績效衡量的績效標準的正確陳述____。 (p. 13)<br><strong>A. 管理者必須為所有的業務流程和行為制定有效的績效標準，以促進公司目標的實現。</strong><br><strong>B. 基準比較法是要求保險公司只採用內部績效標準的活動。</strong><br>( 1 ) 包括A和B<br><span style="color:red;"><strong>✓</strong> </span> ( 2 ) 只包括A<br>( 3 ) 只包括B<br>( 4 ) 既不包括A，也不包括B</p></li><li><p>以下是關於公司將其用作控制圈組成部分的績效評估的陳述。選擇包含正確陳述的選項。 (p. 14-15)<br><span style="color:red;"><strong>✓</strong> </span> ( 1 ) 預算可以作為指導控制、即時控制或回饋控制<br>( 2 ) 儘管審計在審核財務結果中非常有用，但它卻不能用於評估非財務狀況<br>( 3 ) 管理層制定的績效標準通常是一個確定的績效水準，而不是一個可以接受的績效範圍<br>( 4 ) 對於落在可接受範圍之內的績效結果，異常報告一般只可以作為指導控制</p></li></ol><hr><h2 id="第-3-章-法律與合規-v2">第 3 章 法律與合規</h2><blockquote><p><strong>學習目標</strong>： 列舉公司的特徵，並概述世界上不同國家或地區的公司的不同特徵。</p></blockquote><ol><li>美國的保險法要求壽險保險人以公司形式進行組織和運營。公司的特徵之一是____。 (p. 3)<br>( 1 ) 公司不是一個法律實體<br>( 2 ) 公司不能成為法律訴訟中的一方當事人<br><span style="color:red;"><strong>✓</strong> </span> ( 3 ) 公司在其任一或全部所有者過世後仍然存續<br>( 4 ) 公司的所有者個人對公司的債務負責</li></ol><blockquote><p><strong>學習目標</strong>： 區別保險人的法律職能與合規職能。</p></blockquote><ol start="2"><li>保險人一旦組建成公司，其法律部門必須獲得一份授權保險人從事保險業務的文件。該檔被稱為____。 (p. 4)<br><span style="color:red;"><strong>✓</strong> </span> (1) 許可證，保險人通常必須從每一個其計畫從事業務的司法轄區獲得該檔<br>(2) 許可證，保險人通常只須從其發起設立所在地獲得該檔即可，即使其計畫到其他司法轄區從事業務<br>(3) 擔保，保險人通常必須從每一個其計畫從事業務的司法轄區獲得該檔<br>(4) 擔保，保險人通常只須從其發起設立所在地獲得該檔即可，即使其計畫到其他司法轄區從事業務</li></ol><blockquote><p><strong>學習目標</strong>： 定義跨國公司，識別保險人進入外國市場的三種方式。</p></blockquote><ol start="3"><li>Mosaic保險公司通過與一家外國當地保險人簽訂協定的方式在該國開展業務運營。這兩家相互獨立的公司同意在約定的期間內共同實施某一特殊專案。這種協議被稱為____。 (p. 4)<br>(1) 相互公司股份化<br>(2) 股份公司相互化<br>(3) 戰略業務單位(SBU)<br><span style="color:red;"><strong>✓</strong> </span> (4) 合資經營</li></ol><blockquote><p><strong>學習目標</strong>： 描述訴訟過程和訴訟期間法律部門的職責。</p></blockquote><ol start="4"><li>(<strong>起訴 / 審計</strong>)是宣稱被另一方當事人以某種方式傷害的一方當事人向法院提起訴訟的行為。一個人或一個組織有時會對壽險公司採取這種行動。在這種情況下，保險人的法律部門會安排一個通常被稱為(<strong>外部法律顧問 / 首席顧問</strong>)的獨立律師事務所，在訴訟過程中代表保險人。 (p. 6-7)<br><span style="color:red;"><strong>✓</strong> </span> (1) 起訴 / 外部法律顧問<br>(2) 起訴 / 首席顧問<br>(3) 審計 / 外部法律顧問<br>(4) 審計 / 首席顧問</li></ol><blockquote><p><strong>學習目標</strong>： 解釋法律部門解決法律糾紛的兩種解決爭議替代法(ADR)。</p></blockquote><ol start="5"><li>保險人的法律部門通常盡可能地通過其他辦法而不是訴訟來解決法律糾紛。法律部門常用的一種解決爭議替代法(ADR)是由公正的第三方對法律上有爭議的事實進行評判並做出裁決，這一裁決通常對爭議雙方當事人均具有約束力。根據定義，這種解決爭議替代法被稱為____。 (p. 7)<br>(1) 訴訟<br>(2) 協商<br>(3) 調解<br><span style="color:red;"><strong>✓</strong> </span> (4) 仲裁</li></ol><blockquote><p><strong>學習目標</strong>： 描述典型的合規活動和合規管理計畫的三個組成部分。</p></blockquote><ol start="6"><li><p><strong>對於本題，如果選項(1)到(3)都是正確的，那麼選擇選項(4)。否則，選擇正確的答案選項。</strong><br>合規部門的員工一般負責確保公司遵守市場行為法。典型的合規活動包括____。 (p. 8-9)<br>(1) 監督執照頒發、培訓和業務員的行為<br>(2) 管理預防欺詐的部門<br>(3) 審批宣傳和銷售資料<br><span style="color:red;"><strong>✓</strong> </span> (4) 以上所有選項</p></li><li><p>保險人必須建立內部控制制度，以評估員工堅持公司合規準則和合規流程的表現。保險人內部控制的實例____。 (p. 10)<br><strong>A.公司的流程規定行銷材料在使用前必須由合規官簽署</strong><br><strong>B.安裝一個電腦程式，偵測員工電子郵件中的機密資訊</strong><br><span style="color:red;"><strong>✓</strong> </span> (1) 包括A和B<br>(2) 只包括A<br>(3) 只包括B<br>(4) 既不包括A，也不包括B</p></li><li><p>Canyon保險公司合規部門的員工對Canyon理賠部門的記錄、保單和流程進行了審計。審計結果向Canyon董事會的審計委員會報告。Canyon合規部門員工進行的這種審計被稱為 ____。 (p. 11)<br>(1) 受理申訴專員審計<br>(2) 獨立審計<br>(3) 外部審計<br><span style="color:red;"><strong>✓</strong> </span> (4) 內部審計</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述美國市場行為檢查的目的和活動。</p></blockquote><ol start="9"><li><p>以下是關於美國保險監督官協會(NAIC)的陳述。其中三項陳述正確，一項陳述錯誤。選擇包含錯誤陳述的選項。 (p. 11)<br>(1) NAIC鼓勵多州保險監管機構聯合檢查以分攤成本。<br><span style="color:red;"><strong>✓</strong> </span> (2) NAIC是一個公共的、營利性組織。<br>(3) NAIC促進了美國各州保險監管的統一。<br>(4) NAIC主要的作用之一是以最有效益和最有效率的方式為各州保險監管機構監督保險公司的市場行為出謀劃策。</p></li><li><p>對保險公司的市場行為檢查，是確定保險人的市場行為是否遵守了適用的法律法規。在美國被稱為目標檢查的市場行為檢查是____。 (p. 12)<br>(1) 對保險人會計記錄進行的有限範圍的檢查<br><span style="color:red;"><strong>✓</strong> </span> (2) 對保險人非財務方面的一個或多個特定經營領域進行的有限範圍的檢查 (3) 對保險人所有非財務方面的經營活動進行的全面檢查<br>(4) 對保險人所有財務方面的經營活動進行的全面檢查</p></li><li><p>以下是關於美國市場行為檢查的陳述。選擇包含正確陳述的選項。 (p. 12-13)<br>(1) 大多數市場行為檢查都是綜合檢查，而不是目標檢查。<br>(2) 市場行為檢查完成之後，檢查官不必向所在州的保險署提交最終的報告。<br><span style="color:red;"><strong>✓</strong> </span> (3) 檢查官送給保險人報告草案之後，保險人有機會分析檢查官的報告草案並書面答覆報告中提出的問題。<br>(4) 目標檢查常常都是由於適用監管政策的最新變化所致，而不是因客戶投訴所致。</p></li></ol><hr><h2 id="第-4-章-人力資源管理-v2">第 4 章 人力資源管理</h2><blockquote><p><strong>學習目標</strong>： 描述人力資源(HR)部門一般的組織機構及其主要職責。</p></blockquote><ol><li>雖然人力資源部門的組織結構因公司而異，但是人力資源通常負責的職能____。 (p. 3)<br><strong>A. 招聘和選拔</strong><br><strong>B. 培訓和開發</strong><br><strong>C. 員工薪酬和福利</strong><br><strong>D. 績效評估</strong><br><span style="color:red;"><strong>✓</strong> </span> (1) 包括A、B、C、D<br>(2) 僅包括A、B、D<br>(3) 僅包括A、C<br>(4) 僅包括B、D<br>(5) 僅包括C</li></ol><blockquote><p><strong>學習目標</strong>： 描述人力資源規劃以及跨國人員編制和外包如何影響規劃過程。</p></blockquote><ol start="2"><li><p>跨國保險公司必須決定是採用母國化員工配置、東道國員工配置還是第三國員工配置。使用東道國員工配置海外機構的結果是，東道國員工配置____。 (p. 5)<br><span style="color:red;"><strong>✓</strong> </span> (1) 能夠引進已經熟悉當地文化、習俗和經營方式的員工<br>(2) 可以減少保險公司在工作準則和工作規程方面的培訓需求<br>(3) 會減少總部與海外機構之間的溝通障礙<br>(4) 會產生保險公司的母國員工調動、填補空位的額外費用負擔</p></li><li><p>Meriwether保險公司有一個新的呼叫中心計畫，並正在考慮將其整個業務外包給外包商。 Meriwether採用這種外包協議的原因包括除____以外的下述各項。 (p. 6)<br>(1) 利用外包商已有的資源優勢<br>(2) 避免建立新呼叫中心的高額啟動成本<br>(3) 允許Meriwether更快地對市場環境做出反應<br><span style="color:red;"><strong>✓</strong> </span> (4) 增加Meriwether對新呼叫中心運營的控制能力</p></li><li><p>壽險公司的人力資源管理部門常常為公司員工建立人事檔案。人事檔案的正確定義是 ____。 (p. 7)<br>(1) 預測每個部門所提供的以及公司納入其長期規劃的人員配備需求<br>(2) 公司需要招聘的各種職位的清單，包括每個職位的崗位描述、職責和責任性<br><span style="color:red;"><strong>✓</strong> </span> (3) 包含每位員工的教育、培訓和工作經驗等資訊的資料庫<br>(4) 關於因辭職、退休和其他自願及非自願離職所致的員工流動的調查報告</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述有關員工選拔的步驟。</p></blockquote><ol start="5"><li>公司可能使用內部或者外部招聘以彌補職位空缺。相對於內部招聘，外部招聘通常能夠____。 (p. 9-10)<br>(1) 降低識別和雇傭新員工的成本<br>(2) 鼓舞員工士氣<br>(3) 減少入職培訓和其它培訓的需求<br><span style="color:red;"><strong>✓</strong> </span> (4) 增強組織發展創新意識的潛質</li></ol><blockquote><p><strong>學習目標</strong>： 識別職前測試的幾種不同類型。</p></blockquote><ol start="6"><li><p>Carie Wilson應聘一家保險公司的文員崗位，她參加了一種雇傭測試，該測試考核了她勝任這一崗位所需的相關工作技能，如資料登錄、建立文檔和溝通技巧等。在測試中，她得到了90分。為了確認其工作表現，Wilson小姐三天后參加了同一測試另一版本的測試。她第二次測試的成績是78分。Wilson小姐參加測試的內容和結果表明，該測試____。 (p. 12)<br>(1) 既有效又可靠<br><span style="color:red;"><strong>✓</strong> </span> (2) 有效，但不可靠<br>(3) 可靠，但無效<br>(4) 既不可靠也無效</p></li><li><p>雇主為了選出某一崗位最合適的應聘者，會採用不同的職前測試。有一種職前測試旨在評估應聘者對特定職位所需特定技能的掌握程度，該測試被稱為____。 (p. 12)<br><span style="color:red;"><strong>✓</strong> </span> (1) 操作測試<br>(2) 能力測試<br>(3) 行為傾向測試<br>(4) 認知能力測試</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述不同類型的員工培訓方案的利弊。</p></blockquote><ol start="8"><li><p>Galloway保險公司有一流程是向新員工介紹組織的流程、政策、文化和其他員工。在新員工工作的第一周，人力資源部門的員工會向新員工介紹公司政策概述和公司全貌。然後，新員工所在部門的經理向新員工介紹其工作環境、同事、部門流程程和工作職責。該流程是公司員工培訓計畫的一部分，被稱為____。 (p. 13)<br>(1) 基準比較法<br><span style="color:red;"><strong>✓</strong> </span> (2) 入職培訓<br>(3) 甄選<br>(4) 專人輔導</p></li><li><p>以下是關於不同的員工培訓方法的利、弊的陳述。選擇包含正確陳述的選項。 (p. 14-15)<br><span style="color:red;"><strong>✓</strong> </span> (1) 在職培訓的弊端之一是受訓者所犯錯誤引發的問題必須由培訓主管來糾正<br>(2) 課堂培訓的弊端之一是其非正式的培訓結構可能對不同的受訓者產生不一致的效果<br>(3) 自學培訓的主要優點是它給每個受訓者提供了真實的工作培訓和個性化的關注<br>(4) 自學培訓的一個優點是它有助於受訓者與同事之間建立關係</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述績效評估過程，並識別績效評估中使用的不同類型的績效評估工具。</p></blockquote><ol start="10"><li><p>下列陳述是對一家壽險公司採用一種特定績效評估方法的描述。選擇對圖表定級評估法正<br>確描述的選項。 (p. 17)<br>(1) Kingston壽險公司基層主管記錄員工在工作場所積極和消極的行為事例，包括日期、與人員和所採取的行動，用這些事例來評估員工的績效。<br><span style="color:red;"><strong>✓</strong> </span> (2) mill壽險公司的基層主管基於許多在評估週期之初就已確定的、與工作相關的因素，例如“是否具有團隊精神”，對每一位員工在評估期間的工作進行評級。<br>(3) Maple壽險公司各部門的經理根據各自部門員工工作行為的具體特徵，對員工進行比較，將他們按從最好到最壞進行排序。<br>(4) Cucumber壽險公司的基層主管書面描述每一位員工在特定評估期間的工作績效。</p></li><li><p>在每次績效評估期間開始時，Gavin Spencer和其基層主管共同制定該評估期間明確的、可實現的目標以及實現這些目標的計畫。在評估期間結束時，Spencer先生和其主管評估 Spencer先生是否成功地實現了其目標。關於上述情形中使用的績效評估法和使用該方法的一個優點，正確的說法是：Spencer先生及其基層主管使用的這種方法被稱為____。 (p. 17)<br>(1) 全方位回饋評估法，這種方法的優點之一是它的成本最低<br>(2) 全方位回饋評估法，這種方法的優點之一是能迅速完成績效評估過程<br><span style="color:red;"><strong>✓</strong> </span> (3) 目標管理評估法(MBO)，這種方法的優點之一是員工通常更理解並努力實現這些目<br>標<br>(4) 目標管理評估法(MBO)，這種方法的優點之一是成本較低，並可以快速完成</p></li></ol><blockquote><p><strong>學習目標</strong>： 解釋人力資源在薪酬福利計畫中的作用。</p></blockquote><ol start="12"><li>Diamond保險公司為其員工提供利潤分享計畫。Diamond與其員工分享的金額基於公司的年 度利潤，這個金額(<strong>額外加於 / 代替了</strong>)每個員工的年薪。Diamond對其業務員實行(<strong>傭金制 / 獎金制</strong>)，它由業務員所產生保費收入的固定百分比組成。 (p. 18)<br><span style="color:red;"><strong>✓</strong> </span> (1) 額外加於 / 傭金制<br>(2) 額外加於 / 獎金制<br>(3) 代替了 / 傭金制<br>(4) 代替了 / 獎金制</li></ol><blockquote><p><strong>學習目標</strong>： 識別人力資源活動中特定的合規問題。</p></blockquote><ol start="13"><li>人力資源部門通常管理員工的離職。在一種離職情形中，雇主由於某種原因，永久性地終<br>止雇傭關係。這種離職被稱為____。 (p. 19)<br>(1) 解雇<br><span style="color:red;"><strong>✓</strong> </span> (2) 開除<br>(3) 再就業輔導<br>(4) 入職培訓</li></ol><hr><h2 id="第-5-章-資訊與技術-v2">第 5 章 資訊與技術</h2><blockquote><p><strong>學習目標</strong>： 瞭解並使用資訊與技術術語。</p></blockquote><ol><li><strong>對於本題，選擇包含正確完成下列段落中A和B處的詞語的選項。</strong><br>關於軟體的類型， <strong>A</strong> 軟體協調電腦硬體各組成部分的活動和功能。在網路中，管理網路資源的電腦或設備被稱為 <strong>B</strong> 。(<strong>A / B</strong>) (p. 3)<br><span style="color:red;"><strong>✓</strong> </span> (1) 系統 / 伺服器<br>(2) 系統 / 流覽器<br>(3) 應用 / 伺服器<br>(4) 應用 / 流覽器</li></ol><blockquote><p><strong>學習目標</strong>： (1)描述資訊技術(IT)部門的重要工作職位；(2)描述資訊管理的要素，包括資料 庫、資料庫管理系統、資料倉庫、文檔管理系統和工作流管理系統。</p></blockquote><ol start="2"><li>Highpoint保險公司的理賠管理部門要求Highpoint的資訊技術(IT)部門開發一個理賠工作 流管理系統。資訊技術部門的員工Elena Ferrero和理賠分析員一起工作，來識別理賠部門 的資訊技術需求，並確定滿足這些需求的最有效率和效益的資訊技術解決方案。在Highpoint 的程式師開發了這一工作流管理系統後，Ferrero女士在理賠中測試了該新系統。關於 Ferrero 女士在這一過程中的角色以及該工作流管理系統的目的， Ferrero女士可被最佳描述為 ____。 (p. 4、10)<br>(1) 安全分析員，該系統的目的是訪問Highpoint交易處理系統和資料庫中的資訊以支援決 策制定<br>(2) 安全分析員，該系統的目的是使Highpoint能夠控制與理賠處理相關的文檔和工作活動<br>(3) 業務分析員，該系統的目的是訪問Highpoint交易處理系統和資料庫中的資訊以支援決<br>策制定<br><span style="color:red;"><strong>✓</strong> </span> (4) 業務分析員，該系統的目的是使Highpoint能夠控制與理賠處理相關的文檔和工作活動</li></ol><blockquote><p><strong>學習目標</strong>： 瞭解並使用資訊與技術術語。</p></blockquote><ol start="3"><li>資訊管理的一個重要目標是確保公司的資訊具備一系列的特徵。例如，資訊被視為具有____。 (p. 6)<br>(1) 準確性，即資訊易於理解<br>(2) 相關性，即資訊成本符合其價值<br>(3) 實用性，即資訊沒有錯誤<br><span style="color:red;"><strong>✓</strong> </span> (4) 及時性，即在需要時能夠獲取最新的資訊</li></ol><blockquote><p><strong>學習目標</strong>： 解釋交易處理系統的目的以及遺留系統的益處和成本。</p></blockquote><ol start="4"><li>以下是對資訊系統類型的陳述。選擇對交易處理系統進行描述的選項____。 (p. 6、9、11-12)<br>(1) Able保險公司的核保部門使用基於知識的電腦系統，該系統向核保員提供專業諮詢，並對特定類型的個案提出核保決策建議<br><span style="color:red;"><strong>✓</strong> </span> (2) Eager保險公司的資訊系統包括其用於從事大量、常規和重複性商業活動(如提供給付說明)的程式、軟體、資料庫和設備的有組織的集合<br>(3) Heavenly保險公司的核保部門使用一種技術來收集、儲存、組織和檢索文檔，這種文檔已經經過電子化創建或以紙質形式創建，並通過成像轉化為數位元影像<br>(4) Ingersoll保險公司的資訊系統包括一組電腦程式，它們對資料庫中的資料進行組織並允許使用者獲得所需的資訊</li></ol><blockquote><p><strong>學習目標</strong>： 描述資訊管理的要素，包括資料庫、資料庫管理系統、資料倉庫、文檔管理系統和工作流管理系統。</p></blockquote><ol start="5"><li>保險公司的資訊系統整合了不同形式的電腦技術來支援運營活動。其中一種技術是資料採擷，它是指____。 (p. 9)<br>(1) 通過技術將印刷文字或圖像轉化成能以電子形式儲存的數位元化影像的過程<br><span style="color:red;"><strong>✓</strong> </span> (2) 對大量的資料進行分析，從而發現過去未知的趨勢、模式及關係<br>(3) 兩個商業夥伴通過採用雙方約定的資料格式在網際網路上進行電腦對電腦的資料交換<br>(4) 使用網際網路傳遞資訊、便利業務交易以及提供產品和服務</li></ol><blockquote><p><strong>學習目標</strong>： 解釋交易處理系統的目的以及遺留系統的益處和成本。</p></blockquote><ol start="6"><li>保險公司繼續使用遺留系統的原因之一是，該系統____。 (p. 11)<br>(1) 基於最先進的技術<br>(2) 所需的程式設計技能易於在當今市場得到<br>(3) 包含公司最新的資料<br><span style="color:red;"><strong>✓</strong> </span> (4) 的替代成本高昂</li></ol><blockquote><p><strong>學習目標</strong>： 闡述保險公司如何應用商業智慧、商業分析和專家系統。</p></blockquote><ol start="7"><li>商業智慧(BI)系統能夠為保險人提供一系列報告，包括異常報告。異常報告是(<strong>達到 / 未達到</strong>)設定的績效標準時產生的一種報告。商業智慧系統還能提供一種資訊系統應用軟體， 該軟體能將多種商業智慧來源的資訊整合為單一、易讀的電子格式，從而識別積極趨勢和消極趨勢。這種應用軟體被稱為(<strong>螢幕彈出 / 儀錶盤</strong>)，它將評估公司績效或單一業務流程所需的全部資訊彙集到一處，向管理層提供關鍵績效指標。 (p. 12)<br>(1) 達到 / 螢幕彈出<br>(2) 達到 / 儀錶盤<br>(3) 未達到 / 螢幕彈出<br><span style="color:red;"><strong>✓</strong> </span> (4) 未達到 / 儀錶盤</li></ol><blockquote><p><strong>學習目標</strong>： 定義軟體即服務(SaaS)和雲計算，並解釋它們如何用於擴大資訊技術的應用空間。</p></blockquote><ol start="8"><li>軟體即服務(SaaS)和雲計算是將資訊技術運營活動外包的兩種方法，以下是關於它們的陳述。其中三項陳述正確，一項陳述錯誤。選擇包含錯誤陳述的選項。 (p. 13)<br>(1) 通過使用軟體即服務(SaaS)，保險人無需承擔軟體程式的開發或購買成本、安裝成本和維護成本<br>(2) 軟體即服務(SaaS)只提供軟體；而在雲計算中，保險人以“插入”的方式通過供應商獲取所需的設施或軟體<br><span style="color:red;"><strong>✓</strong> </span> (3) 保險人通常在核心業務的處理中使用雲計算，因為它的資料安全性風險很低。<br>(4) 雲計算向保險人提供基於訂閱或按次付費的服務，這種服務通過互聯網即時提供。</li></ol><blockquote><p><strong>學習目標</strong>： 描述企業內部網、外聯網和網際網路，以及保險人使用各種網路的方式。</p></blockquote><ol start="9"><li>Colby保險公司允許外部業務員訪問其內聯網的一部分。業務員通過該網路可以獲得表格、銷售說明、傭金資訊和核保資訊。為了增強安全性，該網路在網際網路上使用硬體和軟體 二者結合作為“隧道”，以便只有擁有必需技術的業務員才能通過網路訪問資料。關於網路的類型，Colby授權業務員訪問的這部分電腦網路可被最佳描述為____。 (p. 14)<br>(1) 企業內部網和即時通訊網<br>(2) 企業內部網和虛擬私人網路絡(VPN)<br>(3) 外聯網和即時通訊網<br><span style="color:red;"><strong>✓</strong> </span> (4) 外聯網和虛擬私人網路絡(VPN)</li></ol><blockquote><p><strong>學習目標</strong>： (1)描述企業內部網、外聯網和網際網路，以及保險人使用各種網路的方式；(2)定義資料管控，明確保險人為了實現資訊安全最大化以及增強災難恢復能力而採取的措施。</p></blockquote><ol start="10"><li>Tetrad保險公司通過加密的方式保護資訊系統的資訊。加密的作用是____。 (p. 15)<br>(1) 在Tetrad系統的公開領域與機密領域之間設立一道電子屏障，保護企業內部網<br>(2) 對系統的網路通信進行監控，並在未經授權的使用者試圖入侵公司系統或資料庫時識別其指令序列<br>(3) 查找電腦病毒並防止病毒感染資料和其他電腦程式<br><span style="color:red;"><strong>✓</strong> </span> (4) 將資料進行編碼，使得只有那些擁有必需的硬體和(或)軟體、經過授權的人員才能對資料解碼</li></ol><blockquote><p><strong>學習目標</strong>： 解釋保險人如何使用不同類型的電腦電話集成(CTI)。</p></blockquote><ol start="11"><li>當Michael Chen呼叫Cello保險公司以確認Cello是否已經收到了他支付的保費時，一種基於電腦的技術應答了其電話，通過已錄製的留言問候了Chen先生，提示他通過電話按鍵輸入其帳戶密碼。通過電話按鍵，Chen先生回答了一系列事先錄製好的提示，並且不必通過客戶服務代表就可以獲得保費的支付資訊。處理Chen先生的請求的電腦電話集成(CTI)的類型 是____。 (p. 17)<br>(1) 智慧型電話<br>(2) 內容管理系統(CMS)<br><span style="color:red;"><strong>✓</strong> </span> (3) 互動式語音應答(IVR)系統<br>(4) 協作軟體</li></ol><blockquote><p><strong>學習目標</strong>： 定義資料管控，明確保險人為了實現資訊安全最大化以及增強災難恢復能力而採取的措施。</p></blockquote><ol start="12"><li><strong>對於本題，如果選項(1)到(3)都是正確的，那麼選擇選項(4)。否則，選擇正確的答案選項。</strong><br>資訊安全和災難恢復是保險公司資訊技術部門重點關注的問題。對資訊安全和災難恢復的正確陳述是：____。 (p. 18-19)<br>(1) 一個有效的災難恢復計畫應該避免備份關鍵資訊記錄<br>(2) 資訊安全並不是一個必須接受政府監管的領域<br><span style="color:red;"><strong>✓</strong> </span> (3) 資料管控確立了企業對資料的所有權和責任性<br>(4) 上述所有陳述</li></ol><hr><h2 id="第-6-章-財務管理-v2">第 6 章 財務管理</h2><blockquote><p><strong>學習目標</strong>： 描述保險公司如何組織公司的財務運營活動。</p></blockquote><ol><li>保險人的財務管理始於公司董事會。從下面的選項中，選出正確表明直接影響公司財務管理的保險人董事會中的兩個常務委員會。 (p. 2-3)<br>(1) 投資委員會 / 公司通訊委員會<br><span style="color:red;"><strong>✓</strong> </span> (2) 投資委員會 / 審計委員會<br>(3) 調研委員會 / 公司通訊委員會<br>(4) 調研委員會 / 審計委員會</li></ol><blockquote><p><strong>學習目標</strong>： 描述壽險公司中財務管理的核心職能。</p></blockquote><ol start="2"><li>Gardenia壽險公司的財務管理職能由四個部門組成：會計和財務報告、資金運營、投資運營與審計。如果Gardenia與大多數保險公司一樣，那麼其會計與財務報告負責人的頭銜和職能是____。 (p. 3-4)<br>(1) 司庫, 負責Gardenia財務運營的內部控制<br>(2) 司庫, 負責Gardenia所有現金交易記錄及報告的維護和管理<br><span style="color:red;"><strong>✓</strong> </span> (3) 主計長, 負責及時、準確地收集和報告Gardenia的財務資料<br>(4) 主計長, 負責監控Gardenia公司某一特定業務線的投資，並確保在需要支援業務線時有足夠的可用資金</li></ol><blockquote><p><strong>學習目標</strong>： 區分財務戰略的基本類型。</p></blockquote><ol start="3"><li>財務戰略可分為積極戰略、保守戰略和二者結合的戰略。一般來說，與相對積極的財務戰略相一致的一項活動是____。 (p. 10)<br>(1) 投資於相對低風險的資產<br><span style="color:red;"><strong>✓</strong> </span> (2) 拓展新的業務線<br>(3) 研發適應當前市場的傳統產品<br>(4) 使用現行的分銷系統</li></ol><blockquote><p><strong>學習目標</strong>： 識別和描述壽險公司面臨的一般風險。</p></blockquote><ol start="4"><li><p>Remembrance保險公司最近發現其索賠欺詐檢測系統存在一個漏洞，該漏洞使得幾件欺詐索賠未被發現。因為Remembrance錯賠了這些詐騙賠案，所以導致運營成本大大增加。為了防止這類情況再次發生，Remembrance為理賠分析員提供了額外培訓，並建立了新的、嚴密監控的索賠欺詐檢測系統。在這一情形中，正確的說法是：Remembrance所面臨的風險類型被稱為____。 (p. 12-13)<br><span style="color:red;"><strong>✓</strong> </span> (1) 操作風險<br>(2) 流動性風險<br>(3) 市場風險<br>(4) 違約風險</p></li><li><p>保險人在經營業務的各個方面都會面臨了風險。保險人面臨的一種常見風險是保單所有人的行為風險，即____。 (p. 12)<br><span style="color:red;"><strong>✓</strong> </span> (1) 因保單所有人所作選擇而產生的一種產品風險，如退保率情況高於保險人的預期<br>(2) 保險人某一保險產品的實際經驗遠遠遜於產品定價時的預期的一種產品風險<br>(3) 與市場利率波動導致的不確定性相關的投資風險<br>(4) 由於貨幣匯率變化而導致的投資風險</p></li></ol><blockquote><p><strong>學習目標</strong>： 闡述風險管理技術：多元化、對沖、費用管理。</p></blockquote><ol start="6"><li><p>以下是關於保險公司使用的風險管理技術的陳述。選擇包含正確陳述的選項。 (p. 11、13)<br>(1) 一般而言，相對收入，保險人的費用越低，那麼該保險人無法實現其財務目標的風險就越大<br>(2) 保險人可以通過買賣具有相似而非互補風險的投資和產品來對沖產品風險<br><span style="color:red;"><strong>✓</strong> </span> (3) 保險人可以通過在一個投資組合中持有多種風險特徵的資產來減少某一風險對投資組合的影響，從而實現多元化<br>(4) 監管機構和其他外部利益相關者並不衡量保險人管理費用的情況</p></li><li><p>考慮以下四家保險公司所運用的風險管理技術：<br>- Allagash壽險公司與幾家再保險人建立再保險關係，以減少其對任何一家再保險人的依賴<br>- Bellissimo壽險公司制定節約成本的工作準則和工作規程，包括降低維護成本<br>- Charisma壽險公司將資料備份儲存在幾個地方，以便在其中某一個地方發生自然災害時，公司仍能繼續經營<br>- Dodgen壽險公司銷售一種壽險產品，以抵消銷售另一種壽險產品所帶來的潛在損失<br>上述資訊表明，最能代表使用對沖這種風險管理技術的公司是____。 (p. 13-14)<br>(1) Allagash<br>(2) Bellissimo<br>(3) Charisma<br><span style="color:red;"><strong>✓</strong> </span> (4) Dodgen</p></li></ol><blockquote><p><strong>學習目標</strong>： 解釋企業風險管理(ERM)在壽險公司中的作用。</p></blockquote><ol start="8"><li>為了使組織中各種風險的負面影響最小化，大部分保險人都實施企業風險管理(ERM)。企業風險管理(ERM)被定義為____。 (p. 13)<br>(1) 協調保險人的資產組合管理和負債組合管理，旨在管理風險並獲取充足的回報<br><span style="color:red;"><strong>✓</strong> </span> (2) 從潛在威脅與潛在機遇兩個方面識別、量化和管理風險<br>(3) 通過對保險人的資源進行有效管理，從而實現保險人的財務目標，尤其是償付能力和盈利能力的總體目標<br>(4) 保險人在管理風險的同時，運用資本創造利潤的所有活動</li></ol><blockquote><p><strong>學習目標</strong>： 區分利潤與盈利能力。</p></blockquote><ol start="9"><li>盈利能力是大多數保險公司的主要財務目標。對於保險人而言，對盈利能力的最佳描述是____。 (p. 14)<br>(1) 用來衡量保險公司在相對較短期間內財務成功(即收入超過其費用)的程度<br>(2) 保險人將資本和盈餘保持或超過法定最低標準的能力<br><span style="color:red;"><strong>✓</strong> </span> (3) 在相對較長時間內，保險人為其所有者產生正回報的整體財務成功的程度<br>(4) 保險人預期從某一投資中獲得的報酬或補償</li></ol><blockquote><p><strong>學習目標</strong>： 解釋資本管理的重要性，並列出保險公司增加和使用資本的方式。</p></blockquote><ol start="10"><li><p>以下是關於保險公司資本管理的陳述。其中三項陳述正確，一項陳述錯誤。選擇包含錯誤陳述的選項。 (p. 15)<br><span style="color:red;"><strong>✓</strong> </span> (1) 如果保險人的資產減少或者負債增加，那麼其資本就增加<br>(2) 保險人通常通過持有相較於負債而言的大量資本來減少無償付能力的風險<br>(3) 公司的資本等於公司的資產減去負債的差額<br>(4) 保持強大的資本實力能使保險人獲利，例如品牌的潛在提升</p></li><li><p>Solidarity保險公司近期出售了部分業務，並利用出售收入贖回了本公司的股票。關於資本的運用和籌集，正確的說法是：Solidarity公司出售其部分業務是____。 (p. 16)<br>(1) 運用資本，贖回Solidarity股份也是運用資本的一種方式<br>(2) 運用資本，但贖回Solidarity股份是籌集資本的一種方式<br><span style="color:red;"><strong>✓</strong> </span> (3) 籌集資本，但贖回Solidarity股份是運用資本的一種方式<br>(4) 籌集資本，贖回Solidarity股份也是籌集資本的一種方式</p></li></ol><blockquote><p><strong>學習目標</strong>： 識別保險公司基本的現金流入與流出，並闡述現金流如何影響公司的償付能力和盈利能力。</p></blockquote><ol start="12"><li>財務經理記錄了Snapdragon壽險公司的以下現金流活動：<br>- 現金流A：Snapdragon向保單所有人和受益人支付保單給付<br>- 現金流B：Snapdragon為其投資組合購買股票<br>- 現金流C：Snapdragon匯款支付了公司總部的水電費<br>- 現金流D：Snapdragon獲得了進軍新市場的外部融資<br>在上述四項活動中，導致現金流入Snapdragon公司的是____。 (p. 16)<br>(1) 現金流A<br>(2) 現金流B<br>(3) 現金流C<br><span style="color:red;"><strong>✓</strong> </span> (4) 現金流D</li></ol><blockquote><p><strong>學習目標</strong>： (1)識別利益相關者獲取財務資訊的主要來源；(2)描述財務報告的要求以及用於監控保險人償付能力的工具。</p></blockquote><ol start="13"><li>在美國，大多數保險人都要編制年度報表和年度報告。(<strong>年度報表 / 年度報告</strong>)是為滿足 特定的保險監管要求而設計的。年度報表必須滿足的會計要求比年度報告必須滿足的會計 (<strong>更加 / 更不</strong>)嚴格。 (p. 17、19、21-22)<br><span style="color:red;"><strong>✓</strong> </span> (1) 年度報表 / 更加<br>(2) 年度報表 / 更不<br>(3) 年度報告 / 更加<br>(4) 年度報告 / 更不</li></ol><blockquote><p><strong>學習目標</strong>： 描述損益表和資產負債表，並說明資產負債表與基本會計等式有何聯繫。</p></blockquote><ol start="14"><li><p>Terranova 保險公司的會計正在編制公司的年終財務報表。這位會計要計算的一項數值是<br>公司的保費收入。保費收入應屬於____。 (p. 17)<br>(1) 收入，列入Terranova的資產負債表<br><span style="color:red;"><strong>✓</strong> </span> (2) 收入，列入Terranova的損益表<br>(3) 費用，列入T erranova的資產負債表<br>(4) 費用，列入Terranova的損益表</p></li><li><p>12月31日，LifeBlood保險公司擁有4,000萬美元的資產，3,400萬美元的負債以及200萬美元的盈餘。根據基本會計等式，上述資訊表明在12月31日，LifeBlood保險公司的資本是 ____。 (p. 18)<br>(1) 0<br>(2) 200萬美元<br><span style="color:red;"><strong>✓</strong> </span> (3) 400萬美元<br>(4) 800萬美元</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述財務報告的要求以及用於監控保險人償付能力的工具。</p></blockquote><ol start="16"><li>保險監管機構用來監管保險人的短期償付能力的一種工具是流動比率，流動比率的計算方<br>法是____。 (p. 19)<br>(1) 資本與盈餘除以總負債<br>(2) 總負債除以資本與盈餘<br><span style="color:red;"><strong>✓</strong> </span> (3) 流動資產除以流動負債<br>(4) 流動負債除以流動資產</li></ol><hr><h2 id="第-7-章-會計、資金運營和審計-v2">第 7 章 會計、資金運營和審計</h2><blockquote><p><strong>學習目標</strong>： 解釋如何基於職責分離的原則對會計、資金運營和審計活動進行組織。</p></blockquote><ol><li>在Habersham壽險公司，員工的工作職責被分別管理，這是一種內部控制的手段。以下是關於Habersham公司內部控制手段的陳述。選擇正確表明被稱為職責分離這一內部控制手段的選項。 (p. 2-4)<br>(1) Habersham公司的內部利益相關者，如管理人員和董事使用會計資訊來制定戰略計畫並進行財務管理<br>(2) Habersham公司的會計部門和精算部門合作完成公司應向保險監管機構提交的財務報表<br>(3) Habersham公司的核保、理賠和客戶服務部門的員工對會計資訊進行評估並將其用作日常運營和長遠計畫的指南<br><span style="color:red;"><strong>✓</strong> </span> (4) Habersham公司會計部門的員工批准運營費用和契約給付，但由資金運營部門的員工支付這些款項</li></ol><blockquote><p><strong>學習目標</strong>： 舉例說明內部和外部利益相關者如何使用保險公司的財務資訊。</p></blockquote><ol start="2"><li>保險公司會計資訊的使用者大致可以分為兩種：內部利益相關者和外部利益相關者。使用保險公司會計資訊的外部利益相關者的一個實例是____。 (p. 3-4)<br><span style="color:red;"><strong>✓</strong> </span> (1) 保險公司的保單所有人<br>(2) 保險公司的職業代理人<br>(3) 保險公司的董事會成員<br>(4) 保險公司的產品開發部經理</li></ol><blockquote><p><strong>學習目標</strong>： 區分財務會計和管理會計。</p></blockquote><ol start="3"><li>財務會計和管理會計的一個區別是：管理會計____。 (p. 5)<br>(1) 僅以整個公司為報告物件；而財務會計既可以以整個公司為報告物件，也可以具體的 業務單位為報告物件<br><span style="color:red;"><strong>✓</strong> </span> (2) 無須遵循特定的會計準則；而財務會計必須遵循特定的會計準則<br>(3) 為法律所要求；而財務會計不為法律所要求<br>(4) 為保險公司外部利益相關者提供資料；而財務會計為保險公司內部利益相關者提供資料</li></ol><blockquote><p><strong>學習目標</strong>： 描述不同類型的財務會計：保費會計、投資會計、一般會計和稅務會計。</p></blockquote><ol start="4"><li>以下是有關財務會計活動的陳述。選擇包含正確陳述的選項____。 (p. 6)<br><span style="color:red;"><strong>✓</strong> </span> (1) 一般會計是所有企業都必須從事的基本會計活動，包括工資會計和支出會計<br>(2) 一般會計僅包括與保險公司已簽發保單有關的財務交易，例如保單貸款和索賠支付<br>(3) 投資會計包括與保險公司從有效壽險保單中賺取的投資收入的保費稅有關的交易<br>(4) 保費會計體系僅適用於保單交易，並不涉及業務員傭金</li></ol><blockquote><p><strong>學習目標</strong>： 區分不同的會計標準：公認會計準則(GAAP)、法定會計實務和國際財務報告準則 (IFRS) 。</p></blockquote><ol start="5"><li><p>在會計中，(1)將每一筆交易中的專案作為資產、負債、資本或盈餘、收入或費用進行分類；並(2)在公司的會計帳簿中對交易加以記錄的過程被稱為____。 (p. 7)<br><span style="color:red;"><strong>✓</strong> </span> (1) 會計確認<br>(2) 審計<br>(3) 預算<br>(4) 估值</p></li><li><p>以下是有關保險公司在進行財務會計活動時所使用的會計準則的陳述，包括公認會計準則 (GAAP)、法定會計實務和國際財務報告準則(IFRS)。選擇包含正確陳述的選項____。 (p. 7-8)<br>(1) 美國所有的壽險公司在編制其提交給州保險監管部門的年度報表和其它財務報告時必須遵循公認會計準則(GAAP)<br>(2) 公認會計準則(GAAP)注重向監管部門證明保險人即使在不利情況下仍有能力履行保單義務；然而法定會計實務注重證明保險人的盈利能力<br>(3) 制定法定會計實務的目的是用來代替國際財務報告準則(IFRS)，從而促進股份制保險公司、相互制保險公司和互助保險人財務報表的一致性<br><span style="color:red;"><strong>✓</strong> </span> (4) 根據公認會計準則(GAAP)編制的財務報表使用標準化的定義、評估方法和格式，從而使利益相關者可以對一家公司不同年度的財務狀況進行評估，也可以對都使用 GAAP的幾家不同公司的財務狀況進行比較</p></li><li><p>在不同的國家，有時甚至在同一個國家，會計準則都有著顯著差異，這取決於其基本前提和(或)財務報告的目的。就持續經營理念和會計保守原則，從下列選項中，選擇正確表明公認會計準則(GAAP)和法定會計實務的基本前提____。 (<strong>公認會計準則 / 法定會計實務</strong>) (p. 7-8)<br><span style="color:red;"><strong>✓</strong> </span> (1) 持續經營理念 / 會計保守原則<br>(2) 持續經營理念 / 持續經營理念<br>(3) 會計保守原則 / 會計保守原則<br>(4) 會計保守原則 / 持續經營理念</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述保險公司資產負債表和損益表的主要組成部分。</p></blockquote><ol start="8"><li><p>所有的保險公司都編制兩個主要的財務報表：資產負債表和損益表。資產負債表的主要構成要素是保險公司的____。 (p. 8-9、第6章17)<br>(1) 資產、收入和費用<br><span style="color:red;"><strong>✓</strong> </span> (2) 資本和盈餘、資產和負債<br>(3) 資本和盈餘、收入和費用<br>(4) 收入、費用和淨收入</p></li><li><p>財務報告中的一種財務報表提供在規定的會計期間，保險公司的現金收入(流入)、現金 支出(流出)和淨現金變動的資訊。這種財務報表被稱為____。 (p. 9)<br>(1) 資產負債表<br>(2) 損益表<br><span style="color:red;"><strong>✓</strong> </span> (3) 現金流量表<br>(4) 所有者權益表</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述美國年度報表中的資產類別。</p></blockquote><ol start="10"><li>在美國，為了在年度報表中報告資產，壽險公司的資產分為三類：認可(公認)資產、部分認可(公認)資產和非認可(公認)資產。從下列選項中，選擇正確表明投資級證券和保險公司在90天或更長時間到期的應收帳款的資產類別的選項。 (投資級證券 / 在90天或更長時間到期的應收帳款) (p. 10)<br>(1) 認可資產 / 部分認可資產<br><span style="color:red;"><strong>✓</strong> </span> (2) 認可資產 / 非認可資產<br>(3) 部分認可資產 / 部分認可資產<br>(4) 部分認可資產 / 非認可資產</li></ol><blockquote><p><strong>學習目標</strong>： 解釋保險公司如何使用預算編制和成本會計等管理會計工具作為其控制機制。</p></blockquote><ol start="11"><li>Harmony壽險公司在會計期末進行了一次預算差異分析，通過對實際結果與預算額度進行比較，Harmony發現了以下關於保費收入和營業費用的資訊：</li></ol><table><thead><tr><th></th><th>預算額度</th><th>實際結果</th></tr></thead><tbody><tr><td>保費收入</td><td>1000萬美元</td><td>1050萬美元</td></tr><tr><td>營業費用</td><td>830萬美元</td><td>880萬美元</td></tr></tbody></table><p>對於有利差異和不利差異，以下說法正確的是：Harmony公司的保費收入在該會計期間出<br>現了____。 (p. 11-12)<br>(1) 有利差異，其營業費用也出現了有利差異<br><span style="color:red;"><strong>✓</strong> </span> (2) 有利差異，而其營業費用則出現了不利差異<br>(3) 不利差異，而其營業費用則出現了有利差異<br>(4) 不利差異，其營業費用也出現了不利差異</p><blockquote><p><strong>學習目標</strong>： 描述現金管理和和流動性管理中的資金運營活動。</p></blockquote><ol start="12"><li>大多數保險公司資金運營部門的員工從事除____以外的所有下述活動。 (p. 13-14)<br>(1) 管理與外匯匯率有關的風險<br>(2) 發掘和跟蹤現金交易中的欺詐活動<br><span style="color:red;"><strong>✓</strong> </span> (3) 購買和出售長期投資<br>(4) 確保可用現金足以按時支付到期義務</li></ol><blockquote><p><strong>學習目標</strong>： (1) 描述壽險公司使用的內部控制機制； (2) 解釋如何基於職責分離的原則對會計、 資金運營和審計活動進行組織。</p></blockquote><ol start="13"><li>在壽險公司中，一個典型的內部控制的實例是____。 (p. 15-16)<br>(1) 現金收入和現金收入的記錄都由運營部門的一名員工來處理<br>(2) 投資資產的的購買與出售，以及投資資產購買與出售的記錄都由投資運作部門的一名員工來處理<br>(3) 保單的理賠處理與理賠支付都由理賠管理部門的一位理賠分析員來處理<br><span style="color:red;"><strong>✓</strong> </span> (4) 進行內部審計，確保每一筆現金支付的數額、保單號、收款人以及授權碼都準確無誤</li></ol><hr><h2 id="第-8-章-投資管理-v2">第 8 章 投資管理</h2><blockquote><p><strong>學習目標</strong>： 描述保險人投資政策的必要要素。</p></blockquote><ol><li>保險人的投資政策通常包含其投資目標，其中一項投資目標是保持足夠的利差。根據定義，保險人的利差是指____。 (p. 2-3)<br>(1) 資產出售價高出其買入價的差額<br><span style="color:red;"><strong>✓</strong> </span> (2) 保險人的投資收益率與代表客戶利益的保險產品結算利率之間的差額<br>(3) 一種度量標準，用來衡量保險公司在相對較短期間內財務成功的程度<br>(4) 在規定的會計期間，保險人的收入超過其費用的額度</li></ol><blockquote><p><strong>學習目標</strong>： 解釋風險與回報權衡以及投資者如何決定投資的必要回報率。</p></blockquote><ol start="2"><li><p>一般而言，風險和潛在回報之間存在(<strong>正向 / 反向</strong>)關係。根據風險與回報權衡，在其他條件不變時，與投資相關的風險越大，該投資的預期回報就(<strong>越低 / 越高</strong>)。 (p. 3)<br>(1) 正向 / 越低<br><span style="color:red;"><strong>✓</strong> </span> (2) 正向 / 越高<br>(3) 反向 / 越低<br>(4) 反向 / 越高</p></li><li><p>某一特定投資的無風險收益率為2%，保險人對該項投資的風險溢價是5%。以上資訊表明，保險人對該項投資的必要回報率是____。 (p. 4)<br>(1) 2%<br>(2) 3%<br>(3) 5%<br><span style="color:red;"><strong>✓</strong> </span> (4) 7%</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述多元化如何降低投資風險。</p></blockquote><ol start="4"><li>以下是關於保險人投資回報的陳述。選擇包含正確陳述的選項。 (p. 3-5)<br><span style="color:red;"><strong>✓</strong> </span> (1) 通過多元化的投資策略，一種投資類型的較低回報對保險人整個投資組合回報的影響很小。<br>(2) 保險公司通過在投資組合中投資單一類型的資產或單一行業來實現投資多元化。<br>(3) 由於風險與回報的關係，在制定投資策略時，承擔較大風險的保險人期望得到較低回報的補償。<br>(4) 保險公司可以通過一直持有資金而不進行投資來規避所有的風險。</li></ol><blockquote><p><strong>學習目標</strong>： 解釋資產負債管理(ALM)以及購買持有戰略與積極管理戰略的差別。</p></blockquote><ol start="5"><li>考慮下列公司採用的投資策略：<br>- Everyman保險公司的投資人員仔細研究並選擇證券，他們通常期望長期持有，直至證券到期、提前償付或違約。<br>- Wonderland保險公司的投資人員認為，如果進行投資交易能夠提高投資組合的績效，那麼投資人員就可以將組合中的任一投資進行交易。<br><strong>從下列選項中，選擇正確表明兩家保險公司所採取的投資策略類型的選項。</strong><br>(<strong>Everyman / Wonderland</strong>) (p. 5)<br>(1) 積極管理戰略 / 購買持有戰略<br>(2) 積極管理戰略 / 積極管理戰略<br>(3) 購買持有戰略 / 購買持有戰略<br><span style="color:red;"><strong>✓</strong> </span> (4) 購買持有戰略 / 積極管理戰略</li></ol><blockquote><p><strong>學習目標</strong>： 區分債務證券和權益證券，並解釋證券是怎樣進行買賣的。</p></blockquote><ol start="6"><li><p>以下是關於投資運營的陳述。其中三項陳述正確，一項陳述錯誤。選擇包含錯誤陳述的選項。 (p. 5-6)<br>(1) 一項投資的預期收益率同時包含投資資產的資本利得和該資產的其他收入<br>(2) 當評估一項特定投資時，投資組合經理通常會考慮投資專案的預期收益率、現金流、風險特徵和流動性<br><span style="color:red;"><strong>✓</strong> </span> (3) 投資組合經理做出買賣投資的決策，並進行實際的買賣交易操作<br>(4) 保險人的投資管理系統生成反映投資績效的各種資產負債管理報告</p></li><li><p>Jamboree壽險公司的投資組合經理為Jamboree的投資組合購買了特定證券。這些證券代表與Red公司之間形成的債權債務關係。以上資訊表明，Jamboree的投資組合經理最有可能購買了Red公司的____。 (p. 6)<br>(1) 股票，屬於債務證券<br>(2) 股票，屬於權益證券<br><span style="color:red;"><strong>✓</strong> </span> (3) 債券，屬於債務證券<br>(4) 債券，屬於權益證券</p></li><li><p>保險人和其他大型的機構投資者可以通過由發行人直接將證券出售給機構投資者的方式來購買新發行的證券。採用這種方式發行的證券不需要在政府機構註冊。這種新證券的發 行方式被稱為____。 (p. 7)<br><span style="color:red;"><strong>✓</strong> </span> (1) 私募<br>(2) 場外交易(OTC)市場<br>(3) 證券交易所<br>(4) 公開發行</p></li></ol><blockquote><p><strong>學習目標</strong>： 區分保險人的一般帳戶和獨立帳戶。</p></blockquote><ol start="9"><li>獨立帳戶(分離資金)是壽險公司與其一般帳戶分開單獨維護的一種帳戶。壽險公司設立獨立帳戶的目的是____。 (p. 8-9)<br>(1) 保證能夠向保障型保險產品(如傳統終身壽險和固定年金)的所有人履行契約義務<br>(2) 維護一個不包括公司股票的低風險投資組合，提供可預測的現金收入流<br><span style="color:red;"><strong>✓</strong> </span> (3) 支援與壽險公司發行的變額產品(如變額壽險保單和變額年金)相關的契約義務<br>(4) 遵從法律要求，在對其投資組合選擇資產時遵循審慎原則</li></ol><blockquote><p><strong>學習目標</strong>： 列舉並描述保險公司投資中典型的投資類型。</p></blockquote><ol start="10"><li>Journey保險公司購買了票面利率為6%的一種新發行的債券。該債券的到期時間為30年，到期時發行人將向債券持有人支付1,000美元。以下是關於Journey購買的這一債券的陳述。選擇包含正確陳述的選項。 (p. 9-10)<br>(1) Journey持有的債券每年將會帶來600美元的收入。<br><span style="color:red;"><strong>✓</strong> </span> (2) Journey持有的債券面值是1,000美元。<br>(3) 如果在該債券發行一年後，市場利率下降到5%，那麼，Journey公司持有的該債券的票面利率很可能降為5%。<br>(4) 該債券發行一年後，市場利率的上升會使Journey公司持有的債券的市場價值上升。</li></ol><blockquote><p><strong>學習目標</strong>： 描述那些決定債券風險等級的特徵。</p></blockquote><ol start="11"><li>考慮Barfield壽險公司和Garrison壽險公司購買的以下類型的債券：<br>- Barfield購買了一種債券，如果他願意，該債券允許Barfield將其債券轉換成發行公司的普通股。<br>- Garrison購買了僅憑發行人的誠信度和信譽做擔保的債券。從以下選項中，選擇正確表明Barfield和Garrison購買的債券類型的選項。 (p. 12-13)<br>(<strong>Barfield / Garrison</strong>)<br>(1) 可贖回債券 / 信用債券<br>(2) 信用債券 / 可贖回債券<br><span style="color:red;"><strong>✓</strong> </span> (3) 可轉換債券 / 信用債券<br>(4) 可轉換債券 / 可贖回債券</li></ol><blockquote><p><strong>學習目標</strong>： 列舉並描述保險公司投資中典型的投資類型。</p></blockquote><ol start="12"><li><p>許多保險人都投資於抵押貸款。抵押貸款作為投資的一個特點是，抵押貸款通常____。 (p. 14)<br>(1) 比債券更具流動性<br>(2) 由抵押貸款信用評級機構評級，所以保險人比較容易評估其違約風險<br>(3) 由於保險人得到的是無法預測的支付流，因此被認為是變額收入投資<br><span style="color:red;"><strong>✓</strong> </span> (4) 是擔保債務工具，在出現違約時，可以保障保險人的投資</p></li><li><p>股票和債券是保險人投資的兩種形式。將股票投資與債券投資進行比較，通常正確的說法是：____。 (p. 9、14-15)<br>(1) 股票價格的波動比債券價格要小得多<br>(2) 股票是發行公司融資的一種方式，而債券不是發行公司融資的方式<br><span style="color:red;"><strong>✓</strong> </span> (3) 如果發行公司破產，相對於債權人，股東對公司資產的求償權排在債權人之後<br>(4) 股票的現金流比債券更有規律</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述保單貸款和保險公司其他投資的區別。</p></blockquote><ol start="14"><li>以下是關於壽險保單貸款的陳述。選擇包含正確陳述的選項。 (p. 16)<br><span style="color:red;"><strong>✓</strong> </span> (1) 被保險人死亡時，保險人會從保險給付中扣除未償付的保單貸款和應計利息<br>(2) 保單貸款要求借款人制定一個系統的償付計畫<br>(3) 保單貸款通常有契約到期日<br>(4) 保險人向客戶收取的保單貸款利率高於從其他投資中所賺的利率</li></ol><hr><h2 id="第-9-章-行銷-v2">第 9 章 行銷</h2><blockquote><p><strong>學習目標</strong>： 描述保險人如何組織其公司本部和代理部的行銷運作。</p></blockquote><ol><li>關於一個將其行銷運營劃分為公司行銷和代理機構行銷的公司，最可能正確的說法是：公司行銷主要直接面向(<strong>外部客戶 / 業務員</strong>)的行銷活動，行銷代表通常(<strong>參與 / 不參與</strong>) 產品開發。 (p. 2-3)<br><span style="color:red;"><strong>✓</strong> </span> (1) 外部客戶/ 參與<br>(2) 外部客戶/ 不參與<br>(3) 業務員/ 參與<br>(4) 業務員/ 不參與</li></ol><blockquote><p><strong>學習目標</strong>： 識別和描述行銷計畫的主要組成部分。</p></blockquote><ol start="2"><li>大多數行銷計畫都包含以下主要組成部分：執行摘要、形勢分析、行銷目標、行銷策略、戰術/行動方案、預算、評估和控制方法。戰術/行動方案可被最佳地描述為____。 (p. 4-5)<br>(1) 對影響保險人行銷運營的內部和外部環境因素的評估<br>(2) 對該計畫建議採取的行動、與這些行動有關的成本，以及這些活動預期結果的總結<br><span style="color:red;"><strong>✓</strong> </span> (3) 對即將開展的行銷活動的描述，負責實施行銷活動的人員以及這些活動預期產生的結果<br>(4) 預期費用和收入的進度，表明資金將如何分配到行銷組合的各個要素中以及資金將如何在與各個要素有關的活動中劃分</li></ol><blockquote><p><strong>學習目標</strong>： 識別和描述構成行銷組合的四個變數。</p></blockquote><ol start="3"><li>保險公司的行銷目標通常涉及管理四個主要的行銷變數——產品、價格、促銷和分銷——總稱為行銷組合。關於行銷組合中四個變數的定義，其中正確的是____。 (p. 7-8)<br>(1) 產品是指使產品能提供給消費者的相關活動和資源<br>(2) 價格是指銷售者向消費者提供的、以滿足其需求的產品、服務或理念<br><span style="color:red;"><strong>✓</strong> </span> (3) 促銷是指公司用來使消費者認識其所提供的產品，影響消費者購買和分銷者銷售產品的一系列活動的總稱<br>(4) 分銷是指消費者在市場上為交換產品而提供的貨幣價值</li></ol><blockquote><p><strong>學習目標</strong>： 區分保險人用來向消費者傳遞資訊的四種宣傳工具。</p></blockquote><ol start="4"><li>許多保險人既採用機構廣告也採用產品廣告。考慮Foxridge保險公司的下述電視廣告：<br>- 廣告A 宣傳Foxridge為老年人設計的生前殯葬保險產品。<br>- 廣告B 描繪遠足旅行者在一個茂密的森林裡，依靠指南針來指引通向安全的道路。Foxridge將其自身的財務實力和穩健性比作指南針，以確保消費者可以依靠 Foxridge幫助他們實現一個安全的財務未來。<br>關於Foxridge的廣告，以下說法正確的是：____。 (p. 8)<br>(1) 廣告A和廣告B都是產品廣告的實例<br><span style="color:red;"><strong>✓</strong> </span> (2) 廣告A是產品廣告的例子，而廣告B是機構廣告的實例<br>(3) 廣告A是機構廣告的例子，而廣告B是產品廣告的實例<br>(4) 廣告A和廣告B都是機構廣告的實例</li></ol><blockquote><p><strong>學習目標</strong>： 界定定位並且識別保險人自身在市場上定位的基礎。</p></blockquote><ol start="5"><li>Idlewood保險公司通過樹立“客戶服務效率最高的保險公司”形象，在消費者的心中為自己建立了一個獨特的地位。Idlewood開發行銷活動和促銷材料以支持其意欲樹立的地位。該資訊表明，Idlewood為其自身建立了獨特地位元所採用的方式可被最佳地稱為____。 (p. 8)<br><span style="color:red;"><strong>✓</strong> </span> (1) 定位<br>(2) 市場情報<br>(3) 競爭情報<br>(4) 外包資訊技術</li></ol><blockquote><p><strong>學習目標</strong>： 描述保險公司如何使用市場細分和目標行銷來識別最有可能購買其產品的消費者。</p></blockquote><ol start="6"><li><p>(<strong>市場細分 / 目標行銷</strong>)是將大的、多樣化的市場劃分為小的、相似的、需要相似產品和行銷組合的子市場的過程。保險產品的一個子市場是(<strong>組織 / 消費者</strong>)市場，該市場由為自己和家庭購買保險產品和服務的個人組成。 (p. 9-10)<br>(1) 市場細分 / 組織<br><span style="color:red;"><strong>✓</strong> </span> (2) 市場細分 / 消費者<br>(3) 目標行銷 / 組織<br>(4) 目標行銷 / 消費者</p></li><li><p>Lakeview保險公司將保險產品市場劃分為更為相似且具有類似產品或者行銷組合需求的、更小的子市場。Lakeview確定其中一個子市場由年齡35-45歲、年收入超過60,000美元的離異單身母親組成。該資訊表明，Lakeview採用的這種市場細分類型被稱為____。 (p. 10-11)<br>(1) 基於地理位置的單變數市場細分<br>(2) 基於人口特徵的單變數市場細分<br>(3) 基於地理位置的多變數市場細分<br><span style="color:red;"><strong>✓</strong> </span> (4) 基於人口特徵的多變數市場細分</p></li></ol><blockquote><p><strong>學習目標</strong>： 區分目標行銷策略的三種基本類型。</p></blockquote><ol start="8"><li>Celestial保險公司試圖通過提供許多產品和行銷組合，來滿足整個壽險市場中不同細分市場的需求。這些產品和行銷組合是為吸引總體市場中不同細分市場而設計的。該資訊表明，Celestial所採用的目標行銷策略被稱為____。 (p. 13)<br>(1) 大眾化行銷<br>(2) 集中營銷<br><span style="color:red;"><strong>✓</strong> </span> (3) 差異化行銷<br>(4) 無差異行銷</li></ol><blockquote><p><strong>學習目標</strong>： 描述保險人用來獲取行銷資訊的不同來源。</p></blockquote><ol start="9"><li>以下是有關保險人的行銷資訊系統和保險人用來獲取行銷資訊的各種不同來源的陳述。選擇包含正確陳述的答案選項。 (p. 14-15)<br>(1) 保險人一般禁止以資料採擷為目的來訪問內部資料庫<br><span style="color:red;"><strong>✓</strong> </span> (2) 從內部資料庫獲取資訊比保險人從其他來源獲取資訊的成本更低<br>(3) 網站流量的一個度量是頁面訪問量，它反映在一個固定時間區間內訪問一個網站至少一次的個人數量<br>(4) 保險人從私人來源而不是通過公共來源獲得其絕大多數的競爭和市場情報</li></ol><blockquote><p><strong>學習目標</strong>： 識別內部和外部行銷環境中的要素。</p></blockquote><ol start="10"><li>保險公司的行銷環境由公司內部和外部環境中的直接或者間接影響公司實施行銷活動能力的所有因素組成。保險人內部環境因素的一個實例是____。 (p. 16)<br>(1) 經濟因素的改變<br><span style="color:red;"><strong>✓</strong> </span> (2) 保險人的財務資源<br>(3) 競爭增強<br>(4) 監管變化</li></ol><blockquote><p><strong>學習目標</strong>： 描述行銷控制機制。</p></blockquote><ol start="11"><li>保險人使用諸如盈利能力分析的控制方法來監控行銷業績。根據定義，盈利能力分析是____的過程。 (p. 16)<br>(1) 通過審查其銷售量來評估公司的當前績效<br>(2) 將行銷成本與特定的行銷活動掛鉤，以便於行銷經理確定行銷活動的成本是否與其價值匹配<br>(3) 在一個非常廣泛的基礎上系統地審查和評估公司的行銷目標、策略、戰術/行動方案、組織結構和人員<br><span style="color:red;"><strong>✓</strong> </span> (4) 將一個活動產生的銷售額與產生這些銷售額所發生的費用進行比較來確定公司哪些運營發生損失或者產生盈利</li></ol><hr><h2 id="第-10-章-產品開發-v2">第 10 章 產品開發</h2><blockquote><p><strong>學習目標</strong>： 闡述新保險產品的三種類型。</p></blockquote><ol><li>新保險產品的三種基本類型是費率調整產品、改良產品和全新產品。公司對已售產品的管理費用進行調整最有可能被歸類為(<strong>費率調整產品 / 改良產品</strong>)。一家過去只出售定期壽險的公司開發一種變額年金產品最有可能被歸類為(<strong>改良產品 / 全新產品</strong>)____。 (p. 3)<br>(1) 費率調整產品 / 改良產品<br><span style="color:red;"><strong>✓</strong> </span> (2) 費率調整產品 / 全新產品<br>(3) 改良產品 / 改良產品<br>(4) 改良產品 / 全新產品</li></ol><blockquote><p><strong>學習目標</strong>： (1)描述新保險產品的三種類型；(2)描述產品開發過程的步驟。</p></blockquote><ol start="2"><li>對於保險人而言，以下關於產品開發過程描述正確的是____。<br><strong>A. 產品開發涵蓋了從對現有產品的細微改進到開發全新的產品。</strong><br><strong>B. 影響保險人產品開發過程的因素有很多，包括公司規模、使命、目標、文化、市場、現有產品、客戶、競爭、分銷體系、地理位置以及員工。</strong> (p. 3)<br><span style="color:red;"><strong>✓</strong> </span> (1) 包括A和B<br>(2) 僅包括A<br>(3) 僅包括B<br>(4) 既不包括A，也不包括B</li></ol><blockquote><p><strong>學習目標</strong>： 闡述保險人如何產生和篩選新產品創意以及如何通過觀念測試對新產品進行評估。</p></blockquote><ol start="3"><li>產品開發過程中的一個步驟是對產品創意進行淘汰，旨在用較低的成本對新產品創意進行快速的評估，選取那些值得進一步研究的創意。根據定義，這種快速評估新產品創意的步 驟被稱為____。 (p. 4)<br>(1) 觀念測試<br><span style="color:red;"><strong>✓</strong> </span> (2) 篩選<br>(3) 創意產生<br>(4) 市場分析</li></ol><blockquote><p><strong>學習目標</strong>： 闡述綜合業務分析的五個基本要素並明確保險人的各個職能領域在這一過程中的職 責。</p></blockquote><ol start="4"><li>綜合業務分析的一個要素是可行性研究。在可行性研究中，保險公司的產品開發團隊通常 ____。 (p. 5)<br>(1) 評估所有可能影響產品銷售的環境因素<br><span style="color:red;"><strong>✓</strong> </span> (2) 從操作和技術的角度來確定公司生產和提供新產品的實際可行性以及新產品對現有產品可能造成的影響<br>(3) 決定保險產品的基本特徵、產品特點、給付、簽單限制、年齡限制、傭金和保費結構、運營和行政管理要求<br>(4) 預測擬開發產品的保單銷量、收入、成本和利潤等</li></ol><blockquote><p><strong>學習目標</strong>： 解釋產品開發的技術設計階段。</p></blockquote><ol start="5"><li>在擬開發產品的技術設計階段，保險公司可能會成立外勤諮詢委員會來對產品設計提供回饋意見。一個典型的外勤諮詢委員會主要由____組成。 (p. 7)<br><span style="color:red;"><strong>✓</strong> </span> (1) 保險公司的業務員<br>(2) 保險人的外部客戶<br>(3) 目標市場中保險公司的潛在客戶(他們現在並不是公司的客戶)<br>(4) 保險監管機構和州保險監管部門的職員</li></ol><blockquote><p><strong>學習目標</strong>： 闡述保險人在產品開發的實施階段採取的行動。</p></blockquote><ol start="6"><li><p>以下是關於加拿大和美國的保單申報要求的陳述。選擇包含正確陳述的選項____。 (p. 8-9)<br>(1) 在美國，保險人無須獲得其計畫銷售的保險或年金產品所在州的保險監管部門的批准<br>(2) 在美國，銷售變額保險產品的保險人必須在美國保險監督官協會(NAIC)註冊新變額產品並等待批准<br><span style="color:red;"><strong>✓</strong> </span> (3) 在加拿大，只有當保險人第一次獲得許可證在某一省內銷售保險產品或在某一省內提供變額產品時，才必須符合省級保單申報要求<br>(4) 保單申報通常發生在新產品開發過程中的技術設計階段之前</p></li><li><p>美國Metropolis保險公司經營所在州在法律上要求Metropolis公司向除了信用人壽保險客戶和變額壽險客戶以外的所有潛在壽險客戶提供一份特別的出版物。該出版物向客戶解釋如何確定其所需的壽險保障保額、介紹壽險保單的種類並教育客戶如何比較類似保單的成本。根據定義，這種刊物被稱為____。 (p. 8-9)<br>(1) 募股說明書<br>(2) 保單摘要<br>(3) 資訊披露檔<br><span style="color:red;"><strong>✓</strong> </span> (4) 購買指南</p></li></ol><blockquote><p><strong>學習目標</strong>： 闡述保險人如何進行監控、評估並通過回饋來改進產品和產品開發過程。</p></blockquote><ol start="8"><li>在新保險產品推出以後，產品開發團隊監控新產品的績效以衡量其是否成功。以下是關於產品監控與審查的陳述。選擇包含正確陳述的選項____。 (p. 10-11)<br>(1) 在新保險產品推出後的最初幾個月，保險人很少監控產品的初始銷售活動<br>(2) 如果不能迅速有效地調整業績不佳的產品，保險公司就會向該產品投入更多的資源，而不是從市場上撤回該產品<br><span style="color:red;"><strong>✓</strong> </span> (3) 如果一種新保險產品沒有達到預期的銷售目標，保險人就會尋找導致銷售不佳的可能原因，並對產品進行調整以改進產品設計中存在的不足<br>(4) 如果保險公司從市場上撤回一種新保險產品，那麼就必須立即解除這種產品的所有保單</li></ol><hr><h2 id="第-11-章-產品分銷-v2">第 11 章 產品分銷</h2><blockquote><p><strong>學習目標</strong>： 區分產品分銷體系和分銷管道。</p></blockquote><ol><li>下列有關分銷體系和分銷管道的正確陳述：____。<br><strong>A. 保險公司的盈利能力在很大程度上取決於其如何有效地選擇、管理及整合其各分銷體系。</strong><br><strong>B. 保險人所使用的分銷管道是公司用以與其客戶進行溝通的特定人員、機構或交流方式。</strong> (p. 2-3)<br><span style="color:red;"><strong>✓</strong> </span> (1) 包括A和B<br>(2) 僅包括A<br>(3) 僅包括B<br>(4) 既不包括A也不包括B</li></ol><blockquote><p><strong>學習目標</strong>： 區分雇員和獨立訂約人。</p></blockquote><ol start="2"><li>Elaine Crenshaw是一名雇員並且還是一名與Starlight保險公司簽訂典型代理契約的保險代理人。考慮Crenshaw女士代表Starlight公司所從事的下述行為：<br>- 行為 A——招攬投保單<br>- 行為 B——收取首期保費<br>- 行為 C——收取續期保費<br>- 行為 D——通過保險契約而非臨時保費收據使Starlight成為當事人<br>關於代理人在典型的代理契約中的角色及責任，最可能正確的說法是，Crenshaw女士被授予____的權力。 (p. 4-5)<br>(1) 從事行為A，行為B，行為C和行為D<br>(2) 僅從事行為A，行為B和行為C<br><span style="color:red;"><strong>✓</strong> </span> (3) 僅從事行為A和行為B<br>(4) 僅從事行為D</li></ol><blockquote><p><strong>學習目標</strong>： 描述專業代理人、多險種代理人、獨立代理人、領薪銷售代表和理財顧問的特徵以及他們如何在個人銷售分銷體系中運作。</p></blockquote><ol start="3"><li><p>Joel Cohen是一名保險代理人，他為Lamplighter保險公司銷售人壽保險、健康保險、年金和財產意外保險產品，且主要銷售財產意外險產品。Cohen先生與Lamplighter保險公司的代理契約中明確規定，如果Lamplighter保險公司拒絕為投保人提供保障，Cohen先生就可以將有關業務安排給另外的保險公司。該資訊最有可能表明，Cohen先生是____。 (p. 6)<br>(1) 專業代理人<br>(2) 上門服務代理人<br>(3) 上門收費代理人<br><span style="color:red;"><strong>✓</strong> </span> (4) 多險種代理人</p></li><li><p>下面是關於代理人補償的陳述。選擇包含正確陳述的答案選項。 (p. 6-7)<br><span style="color:red;"><strong>✓</strong> </span> (1) 服務費一般支付給現在正在為保單提供服務的代理人，即使該保單最初並非此代理人出售。<br>(2) 續保傭金旨在鼓勵代理人進行更多新的銷售，而首年度傭金旨在鼓勵代理人維持有效的優良業務。<br>(3) 續保傭金一般支付給現在正在為該保單提供服務的代理人，即使該保單最初並非此代理出售。<br>(4) 公司非專屬代理人的傭金率通常低於專屬代理人的傭金率。</p></li><li><p>保險公司可以通過經紀人或個人業務總代理 (PPGAs)分銷其產品。關於使用經紀人分銷保險公司產品，正確的說法是：經紀人____。 (p. 8)<br>(1) 擁有與唯一一家保險公司的獨家代理契約<br>(2) 必須滿足最小銷售額要求<br>(3) 有權招聘、培訓全職子代理<br><span style="color:red;"><strong>✓</strong> </span> (4) 承擔其所有的業務費用，包括辦公費用、培訓費用、行銷費用和保障福利</p></li></ol><blockquote><p><strong>學習目標</strong>： 解釋保險公司如何針對不同類型的代理人提供諸如招聘、頒發執照、培訓等銷售支援。</p></blockquote><ol start="6"><li>以下是關於保險公司總部對其代理人支持的陳述。選擇包含正確陳述的答案選項。 (p. 10-12)<br>(1) 使用個人銷售分銷體系的保險人在雇傭、培訓和維持專屬代理人上的成本相對很低。<br><span style="color:red;"><strong>✓</strong> </span> (2) 許多司法管轄區域都要求，在保險業務員代表保險人開始銷售保險產品之前，保險人必須委託此人代表保險公司銷售產品。<br>(3) 要求保險人為代理人提供市場行為法和可接受銷售的行為培訓的法規適用於新代理人，但並不適用於經紀人和有經驗的銷售人員。<br>(4) 總部提供的廣告宣傳和銷售輔助必須遵從法規，但業務員銷售保險人產品時所使用的銷售材料則不須遵從。</li></ol><blockquote><p><strong>學習目標</strong>： 列舉三種不公平的銷售行為並描述保險人為了監督其代理人的市場行為而採取的措施。</p></blockquote><ol start="7"><li>考慮以下描述保險業務員涉及的違禁銷售行為的情形：<br>- 情形A：保險人的業務員多次勸導客戶用另一份壽險保單替換另一份壽險保單，以便 從中謀取一系列首年度傭金。<br>- 情形B：一名保險人的業務員向一名准壽險客戶提供現金報酬以誘導該客戶從其處購 買壽險產品。該業務員在類似的情形之下並沒有向所有的投保人都提供這種誘惑， 這種誘惑在保單中也沒有列明。<br>在以下選項中，選擇正確識別上述情形中違禁銷售行為的術語。 (p. 14)<br>(<strong>情形A / 情形B</strong>)<br>(1) 勸轉保 / 誘轉保<br><span style="color:red;"><strong>✓</strong> </span> (2) 勸轉保 / 回扣<br>(3) 回扣 / 誘轉保<br>(4) 回扣 / 回扣</li></ol><blockquote><p><strong>學習目標</strong>： 解釋經紀自營商、銀行和其他儲蓄機構以及保險公司在第三方分銷體系中的作用。</p></blockquote><ol start="8"><li><p>Parasol保險公司通過職場行銷安排向Juniper公司的雇員分銷壽險產品。在一個典型的職場行銷安排中，____。 (p. 14-15)<br>(1) Parasol公司向Juniper公司的雇員銷售產品的分銷和管理成本可以免除<br>(2) Parasol公司直接向Juniper公司的參保雇員收取保單保費<br><span style="color:red;"><strong>✓</strong> </span> (3) 即使Juniper公司的參保雇員與Juniper公司的雇傭關係終止，他們仍可以繼續擁有其購買的保險保障<br>(4) Juniper的參保雇員投保時必須要體檢</p></li><li><p>以下是關於經紀自營商和銀行作為第三方分銷機構的陳述。選擇包含正確陳述的答案選項。 (p. 16-18)<br><span style="color:red;"><strong>✓</strong> </span> (1) 在美國，證券僅能通過在證券交易委員會(SEC)註冊的、並是金融行業監管局 (FINRA)會員的經紀自營商分銷<br>(2) 保險公司僅是註冊經紀自營商子公司時才能經銷變額壽險和變額年金產品<br>(3) 銀行保險作為分銷管道的一個不利之處在於分銷成本一般比其他分銷管道要高<br>(4) 在合資銀行保險的分銷模式中，銀行作為仲介提供一家或多家保險公司的產品</p></li><li><p>Willow銀行通過平臺職員向其客戶分銷壽險、年金產品。 根據定義，平臺職員是____。 (p. 18)<br>(1) 在證券交易委員會(SEC)註冊的，提供證券投資建議的個人<br>(2) 被保險公司委託、向銀行推銷保險公司產品並向銀行提供行銷支援的銷售仲介<br><span style="color:red;"><strong>✓</strong> </span> (3) 其主要職責是處理客戶服務事務、銷售傳統銀行產品如支票和存款帳戶，但同時也擁有執照銷售保險的銀行職員<br>(4) 在行銷與服務團體產品的技能方面受過專門培訓的保險公司領薪員工</p></li></ol><blockquote><p><strong>學習目標</strong>： 識別並描述保險公司在決定使用何種分銷體系和管道時考慮的因素。</p></blockquote><ol start="11"><li>保險公司可以作為分銷管道來銷售其他保險公司開發的保險產品。根據定義，這種產品的類型是____。 (p. 18-19)<br>(1) 遺產規劃產品<br>(2) 子代理產品<br>(3) 陌生拜訪產品<br><span style="color:red;"><strong>✓</strong> </span> (4) 非專賣產品</li></ol><blockquote><p><strong>學習目標</strong>： 描述直接反應分銷體系並識別直接反應分銷管道的主要類型。</p></blockquote><ol start="12"><li>Isla保險公司直接向一組潛在客戶分發保險銷售材料。這些銷售材料包括說明書、一本描述 Isla公司保證定期壽險產品的小冊子和一份投保單。關於直接反應分銷管道，最有可能正確的說法是，Isla使用的分銷管道被稱為____。 (p. 20)<br><span style="color:red;"><strong>✓</strong> </span> (1) 直接郵寄<br>(2) 電話銷售<br>(3) 印刷媒體<br>(4) 廣播媒體</li></ol><blockquote><p><strong>學習目標</strong>： 識別並描述保險人在決定使用何種分銷體系和管道時須考慮的因素。</p></blockquote><ol start="13"><li>保險公司在做出分銷決策時會考慮若干因素，包括與各個體系相關的成本、對分銷活動的控制程度、消費者特徵、所售產品的特徵。關於這些特徵，最有可能正確的說法是：____。 (p. 19、21-22)<br><span style="color:red;"><strong>✓</strong> </span> (1) 直接反應分銷管道通常在獲得收益之前需要投入大量的前期成本<br>(2) 保險人對使用專屬代理人體系或直接反應分銷體系分銷活動的控制程度比對其他個人銷售分銷管道或第三方機構分銷管道的控制程度低<br>(3) 一些偏好在自己方便的時候在網上比較產品和價格的客戶更願意接受個人銷售分銷體系<br>(4) 比較簡單的產品，如定期壽險或者固定年金，要求使用個人銷售分銷體系</li></ol><hr><h2 id="第-12-章-核保-v2">第 12 章 核保</h2><blockquote><p><strong>學習目標</strong>： 定義核保並解釋新業務處理和核保之間的關係。</p></blockquote><ol><li>以下是關於壽險公司的核保與新業務處理之間的相互作用和關係的陳述。選擇包含正確陳述的選項。 (p. 2-3、8-9)<br><span style="color:red;"><strong>✓</strong> </span> (1) 根據定義，核保是對個人或團體准被保險人的風險程度進行評估和分類，並決定接受還是拒絕該風險的過程<br>(2) 對於壽險產品和年金產品而言，死亡風險是准被保險人的生存時間長於統計預期的可能性<br>(3) 從組織的角度來看，新業務處理是核保職能的一部分<br>(4) 不論准被保險人屬於哪個風險組，對於同一保險產品，保險公司對所有的投保人都收取相同的保險費率</li></ol><blockquote><p><strong>學習目標</strong>： 描述技術在新業務處理中的作用。</p></blockquote><ol start="2"><li>Steadfast壽險公司允許壽險投保人用電子方式提交投保單。Steadfast的電腦系統運用規則依次處理所有的常規核保，只將困難的、複雜的投保單交給Steadfast的核保員處理。以上資訊表明，Steadfast處理投保單的電腦系統所運用的技術被稱為____。 (p. 4)<br>(1) 快速核保小組<br>(2) 電子簽名<br>(3) 點擊<br><span style="color:red;"><strong>✓</strong> </span> (4) 異常核保系統</li></ol><blockquote><p><strong>學習目標</strong>： 列舉並描述處理年金投保的基本步驟。</p></blockquote><ol start="3"><li>Cody Jarrell在一家壽險公司的新業務處理部門工作。 Jarrell先生的職責之一是對所有提交給保險人的年金契約進行適配性檢查。適配性檢查的主要目的是確保____。 (p. 5)<br>(1) 使用的年金契約採用了所在司法轄區的正確格式<br>(2) 提交年金契約的業務員具有執照並獲得委託<br><span style="color:red;"><strong>✓</strong> </span> (3) 投保人投保的年金產品適合其需求和財務狀況<br>(4) 投保人選擇最有效益和效率的保費給付計畫</li></ol><blockquote><p><strong>學習目標</strong>： 識別並描述重要的核保工作職位。</p></blockquote><ol start="4"><li>Kyra Haney在一家壽險公司的核保部門工作。她的職責包括制定公司的核保哲學、核保準則和核保流程；控制核保成本和核保品質；負責大型或複雜投保單的核保。以上資訊表明， Haney最有可能的職位是____。 (p. 5、7)<br>(1) 外勤核保員<br><span style="color:red;"><strong>✓</strong> </span> (2) 首席核保員<br>(3) 醫療核保總監<br>(4) 核保經理</li></ol><blockquote><p><strong>學習目標</strong>： 區分保險人的核保哲學和核保準則。</p></blockquote><ol start="5"><li>保險人的核保(<strong>準則 / 哲學</strong>)是核保員遵循的一般標準，它規定了准被保險人可能會被歸入保險人為每一種保險產品所劃分的某種風險等級的界限。這些標準考慮這樣的事實：即那些認為其自身損失的可能性大於平均值的人，比那些認為其自身損失的可能性等於或小於平均值的人會更積極投保的一種傾向，這個概念被稱為(<strong>逆選擇 / 續保性</strong>)。 (p. 7-8)<br><span style="color:red;"><strong>✓</strong> </span> (1) 準則 / 逆選擇<br>(2) 準則 / 續保性<br>(3) 哲學 / 逆選擇<br>(4) 哲學 / 續保性</li></ol><blockquote><p><strong>學習目標</strong>： 解釋核保員是如何運用數位評級系統將准被保險人分配到四個風險組。</p></blockquote><ol start="6"><li>Topmost壽險公司將准被保險人劃分為四個風險組：優良組、標準組、次標準組和拒保組。考慮下列向Topmost提交壽險投保單的准被保險人：<br>- Bettina Behan呈現的預期死亡風險大大低於平均水準。<br>- Huang Lu呈現的預期死亡風險高於平均水準，但是Topmost的核保員仍認為他可保。 從下列選項中選擇正確表明Topmost的核保員最有可能將Behan小姐和Lu先生分配的風險組的選項。<br>(<strong>Behan小姐 Lu先生</strong>) (p. 8-9)<br>(1) 標準組 / 次標準組<br>(2) 標準組 / 拒保組<br><span style="color:red;"><strong>✓</strong> </span> (3) 優良組 / 次標準組<br>(4) 優良組 / 拒保組</li></ol><blockquote><p><strong>學習目標</strong>： 描述核保流程以及核保員對個人保單進行核保時所使用的醫療資訊的主要來源。</p></blockquote><ol start="7"><li><p>Congenial壽險公司的業務員收到了Caleb Hibb和Ketut Gupta的壽險投保單。業務員按標準費率將這兩份投保單提交給Congenial公司。通過審核投保單，Congenial的核保員批准了 Hibb先生的保險，但對他按次標準風險的保險費率收取保費。核保員按標準費率批准了 Gupta小姐的保險，但降低了其保單的保險金額。關於這兩份投保單，正確說法是：Congenial 的核保員____。 (p. 9)<br><span style="color:red;"><strong>✓</strong> </span> (1) 加費承保Hibb先生的投保單和Gupta小姐的投保單<br>(2) 僅加費承保Hibb先生的投保單<br>(3) 僅加費承保Gupta小姐的投保單<br>(4) 對Hibb先生的投保單和Gupta小姐的投保單都沒有加費承保</p></li><li><p>Jin Xiao是一名保險業務員，在從投保人那裡搜集了原始資訊以後，Xiao先生便在投保單的某個部分將其認為可能會影響核保決定的額外資訊報告給保險人。Xiao先生用來報告額外資訊的這部分投保單被稱為____。 (p. 11)<br>(1) 外勤核保手冊<br>(2) 核保要求表<br><span style="color:red;"><strong>✓</strong> </span> (3) 代理人報告<br>(4) 年齡及保額要求表</p></li><li><p>作為外勤核保的一種替代方法，一些保險公司通過電話採訪來搜集核保資訊。這種被稱為遠端核保的過程，通常____。 (p. 12)<br>(1) 免去了投保人完成投保單的必要性<br>(2) 導致自動核准所有以這種方式處理的投保單<br>(3) 要求業務員搜集大部分或全部的核保資訊<br><span style="color:red;"><strong>✓</strong> </span> (4) 比外勤核保提供更完整、更透徹的資訊</p></li><li><p>在作出核保決策之前，保險人有時需要從投保人或准被保險人那裡獲得額外的資訊，如體檢報告、免體檢補充說明或輔助體檢報告。輔助體檢報告的一個顯著特點是____。 (p. 12)<br>(1) 輔助體檢的結果(包括被保險人的身高、體重、血壓、脈搏)是保險契約的一部分<br>(2) 該報告包括從准被保險人主治醫生那裡獲得的特定疾病或健康狀況的詳細資訊<br><span style="color:red;"><strong>✓</strong> </span> (3) 該報告包括准被保險人對其醫療病史問題的回答，並記錄准被保險人的身高、體重、脈搏和血壓<br>(4) 准被保險人完成醫療問卷，並由醫生記錄准被保險人的體檢結果</p></li></ol><blockquote><p><strong>學習目標</strong>： 定義財務核保和個人核保。</p></blockquote><ol start="11"><li>保險公司運用財務核保和個人核保以便於做出核保決策。在評估Letty Mosgrove的壽險投保時，核保員比較了Mosgrove女士現在的收入及其投保的保額。核保員還審核了Mosgrove女 士的機動車輛駕駛記錄。從下列選項中，選擇正確表明Mosgrove女士現在的收入和機動車輛駕駛記錄是屬於財務核保還是個人核保的選項。<br>(<strong>現在的收入 / 機動車輛駕駛紀錄</strong>) (p. 13)<br>(1) 財務核保 / 財務核保<br><span style="color:red;"><strong>✓</strong> </span> (2) 財務核保 / 個人核保<br>(3) 個人核保 / 財務核保<br>(4) 個人核保 / 個人核保</li></ol><blockquote><p><strong>學習目標</strong>： 解釋核保員如何運用數位評級系統將准被保險人分配到四個風險組。</p></blockquote><ol start="12"><li><p>以下是關於數位評級系統的陳述。選擇包含正確陳述的選項。 (p. 13-15)<br>(1) 具有較高數位評級的准被保險人比具有較低數位評級的准被保險人好，因為負數被賦 予給那些在統計上會增加准被保險人死亡風險的因素<br><span style="color:red;"><strong>✓</strong> </span> (2) 個人准被保險人的數位評級被用來確定該准被保險人歸入哪個風險組較為合適<br>(3) 為計算准被保險人的總體死亡風險，保險公司從基數0開始，這是大多數保險公司用來表示標準死亡率風險的數字<br>(4) 只有醫療風險因素被用來計算准被保險人的死亡風險的數字評級；而那些對死亡風險有不利影響的其他風險因素，被賦予 “負” 值 (如–25)，並被稱為積極值。</p></li><li><p>Exemplar壽險公司運用數位評級系統來評估准被保險人呈現的風險。基數為100， 表示標準死亡風險。Exemplar公司的核保員對增加准被保險人死亡風險的因素，賦值+50；對減少該准被保險人死亡風險的因素，賦值–10。以上資訊表明，該准被保險人的整體數字評級為____。 (p. 14)<br>(1) 40<br>(2) 60<br><span style="color:red;"><strong>✓</strong> </span> (3) 140<br>(4) 160</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述核保員如何將數位評級系統運用於保險費率。</p></blockquote><ol start="14"><li>Regal保險公司的核保員正在考慮應向下列兩個次標準風險收取的保險費率：<br>- Stanley Pattinson是個人壽險保單的准被保險人，其呈現的額外死亡風險會隨著年齡 的增加而保持不變或降低。<br>- Marion Pierce是個人壽險保單的准被保險人，糖尿病患者，其呈現的額外死亡風險 會隨著年齡的增加而增加。<br>Regal運用加費表法和固定額外保費法來確定次標準風險的保險費率。從下列選項中，選擇 表明Regal用來決定Pattinson先生和Pierce女士的保險費率的最適當方法的選項。 (p. 9、15-16)<br>(<strong>Pattinson先生 / Pierce女士</strong>)<br>(1) 加費表法 / 固定額外保費法<br>(2) 加費表法 / 加費表法<br>(3) 固定額外保費法 / 固定額外保費法<br><span style="color:red;"><strong>✓</strong> </span> (4) 固定額外保費法 / 加費表法</li></ol><blockquote><p><strong>學習目標</strong>： 解釋核保和其他職能部門之間的關係。</p></blockquote><ol start="15"><li>以下是關於核保運營活動的控制機制的陳述。選擇對核保回饋控制進行描述的選項。 (p. 17-19)<br>(1) 信息技術部門的員工協助核保員開發、維護核保管理系統<br>(2) 精算師根據准被保險人呈現的平均風險，為新保險產品設定精算假設<br>(3) 再保險部門的員工在進行再保險安排時，幫助核保員完善核保準則<br><span style="color:red;"><strong>✓</strong> </span> (4) 理賠部門的員工提供與理賠經驗有關的統計資料，從而使核保員知道理賠情況是高於還是低於預期</li></ol><blockquote><p><strong>學習目標</strong>： 描述團體核保流程，並識別與團體保險有關的風險因素。</p></blockquote><ol start="16"><li>Andrea Snell是Ultra保險公司的團體銷售代表，他準備了一份檔，說明團體保險契約提供的團體壽險保障和契約中團體被保險人權利。這份分發到每個准被保險人的檔，被稱為 ____。 (p. 20)<br><span style="color:red;"><strong>✓</strong> </span> (1) 保險憑證<br>(2) 主投保單<br>(3) 團體保險主契約<br>(4) 團體計畫要求書 (RFP)</li></ol><blockquote><p><strong>學習目標</strong>： 識別並描述影響壽險核保流程的法律法規。</p></blockquote><ol start="17"><li>在某種情況下，核保員必須遵守公平信用報告法案(FCRA)規定的流程。FCRA主要對 ____。 (p. 22)<br>(1) 由私人組織機構搜集的准被保險人的個人資訊的報告和使用進行規範<br>(2) 在壽險核保過程中搜集的准被保險人的個人資訊的報告和使用進行規範<br>(3) 在核保過程中搜集的准被保險人的非公開個人資訊的報告和使用進行規範<br><span style="color:red;"><strong>✓</strong> </span> (4) 准被保險人的消費者資訊的報告和使用進行規範，並確保消費者報告中包含的資訊是準確、相關和最新的</li></ol><hr><h2 id="第-13-章-理賠和年金給付管理-v2">第 13 章 理賠和年金給付管理</h2><blockquote><p><strong>學習目標</strong>： 解釋為什麼有效的理賠管理對於保險公司的成功至關重要。</p></blockquote><ol><li>以下是關於壽險公司有效理賠管理的陳述，其中三項陳述正確，一項陳述錯誤。選出錯誤陳述的選項。 (p. 2-3)<br>(1) 作為與客戶主要的聯繫橋樑，理賠管理在很大程度上影響著客戶的忠誠度和客戶保全<br><span style="color:red;"><strong>✓</strong> </span> (2) 迅速處理索賠是有效理賠管理中最重要的方面<br>(3) 通過減少或杜絕錯誤索賠或騙賠，有效的理賠管理有助於公司控制費用<br>(4) 從理賠管理中獲取的資料可以用來確定承保決策是否正確</li></ol><blockquote><p><strong>學習目標</strong>： 闡述理賠部門的組織機構以及理賠部門員工的各種職權層級。</p></blockquote><ol start="2"><li><p>Duha Zogby 在一家大型壽險公司做理賠分析員不到兩年。她不管理其他員工。如果Zogby女士的工作職責是典型的，那麼她作為理賠分析員的工作職責最可能包括____。 (p. 3-4)<br><span style="color:red;"><strong>✓</strong> </span> (1) 審批未在抗辯期內提出的、200,000美元以下的個人索賠並決定公司對每個賠案的責任<br>(2) 審批在保單抗辯期內提出的、1,000,000美元的死亡保險給付<br>(3) 決定公司在懷疑存在騙賠或不尋常法律問題的賠案中的責任<br>(4) 監督所有產品系列的理賠，比如個人理賠和團體理賠</p></li><li><p>壽險公司的理賠部門會制定指導理賠部門員工處理日常索賠的規章。這些規章(包括及時、成本有效地處理索賠的保證)可以被最佳地描述為公司的____。 (p. 5)<br>(1) 理賠哲學<br><span style="color:red;"><strong>✓</strong> </span> (2) 理賠實務<br>(3) 索賠申請表<br>(4) 索賠申請書</p></li></ol><blockquote><p><strong>學習目標</strong>： 列示並闡述壽險理賠決策流程的基本步驟。</p></blockquote><ol start="4"><li>以下是關於壽險理賠決策流程的陳述。選擇包含正確陳述的選項____。 (p. 6-8)<br><span style="color:red;"><strong>✓</strong> </span> (1) 如果損失發生時保單無效，理賠分析員就應該通知索賠人其索賠被拒<br>(2) 錯誤索賠被認為是索賠人有意使用錯誤資訊來獲得保險給付的一種騙賠<br>(3) 如果被保險人的名字與初始保單中的名字不一致，那麼索賠人就不能獲得保險給付<br>(4) 在團體壽險中，對被撫養配偶或子女的索賠應該以其本人的名義來處理，而不是以被保險人的名義來處理</li></ol><blockquote><p><strong>學習目標</strong>： 定義重大不實告知，並解釋處理壽險保單中存在的重大不實告知的過程。</p></blockquote><ol start="5"><li><p>保單所有人兼被保險人Rena Arkin在其壽險保單的抗辯期內死亡，其受益人對保險金提出索賠。在理賠調查過程中，理賠分析員發現Arkin女士在投保單中聲稱其在一次意外中右腿骨折，但是實際上是左腿骨折。關於該案的理賠決定，保險人最有可能____。 (p. 7-8)<br>(1) 由於投保單中存在重大不實告知而宣佈保單無效，並向受益人支付保險金<br>(2) 由於投保單中存在重大不實告知而宣佈保單無效，並退還已繳保費扣除未償還保單貸款後的餘額<br><span style="color:red;"><strong>✓</strong> </span> (3) 由於Arkin女士投保單中的誤述不是重大不實告知而支付保險金<br>(4) 由於Arkin女士投保單中的誤述不是重大不實告知而退還已繳保費扣除未償還保單貸款後的餘額</p></li><li><p>美國居民Edmund Lemke以自己的生命為標的購買了一份變額壽險保單。保單包括典型的兩年抗辯期。Lemke先生在保單抗辯期內死亡。隨後，其受益人就保單的死亡保險金向保險 公司提出了索賠。Lemke先生死亡時，保單仍然有效且沒有未償還的保單貸款。在審核該賠案時，保險人的理賠調查員發現，Lemke先生的投保單存在一個重大不實告知。在該情形下，保險人應支付____。 (p. 7-9)<br>(1) 0美元<br>(2) 淨退保現金價值<br><span style="color:red;"><strong>✓</strong> </span> (3) 保單的已繳保費<br>(4) 保單保額</p></li></ol><blockquote><p><strong>學習目標</strong>： 識別可以作為被保險人死亡證明和被普遍接受的檔並描述需要額外調查的死亡類型。</p></blockquote><ol start="7"><li>美國居民Irene Connaught是一份保額為250,000美元壽險保單的保單所有人兼被保險人，其丈夫Malachi為第一順位受益人。保單簽發20年後，Irene自然死亡。當Malachi通知保險人 Irene的死亡時，保險人要求他提供證明死亡的檔。如果保險公司遵從行業慣例，這份要求提供的檔最有可能是____。 (p. 9)<br><span style="color:red;"><strong>✓</strong> </span> (1) 由授權官員簽署的死亡證明<br>(2) Malachi填寫的索賠申請表<br>(3) Irene主治醫師簽字的報告<br>(4) 殯儀館經理的證明</li></ol><blockquote><p><strong>學習目標</strong>： 解釋理賠調查對發現騙賠的重要性。</p></blockquote><ol start="8"><li>儘管在大多數情況下核實損失證明都是例行公事，但是當被保險人____時，理賠分析員通常還是會進行深入的調查。 (p. 10)<br>(1) 乘坐商務航班，而飛機在海上墜毀且沒有找到其遺體<br>(2) 在無法解釋的情況下失蹤，索賠人使用法院的推定被保險人死亡的命令而不是死亡證明<br><span style="color:red;"><strong>✓</strong> </span> (3) 在保單簽發國以外的國家死亡<br>(4) 在自殺除外責任期限結束以後自殺身亡</li></ol><blockquote><p><strong>學習目標</strong>： 闡述自殺除外責任條款，並解釋在壽險保單中，除外責任對理賠決策的影響。</p></blockquote><ol start="9"><li>Denise Gamache於2009年7月17日從Bowdoin壽險公司購買了一份終身壽險保單，該保單包含一個典型的兩年期自殺除外責任條款。2011年4月3日，Gamache女士自殺。她死亡時保單沒有未償還的保單貸款。在該情形下，Gamache女士的保單受益人有資格____。 (p. 11)<br>(1) 領取保單的全額死亡給付<br>(2) 僅僅領取保單的淨退保現金價值<br>(3) 領取0美元<br><span style="color:red;"><strong>✓</strong> </span> (4) 僅僅領取保單的已繳保費</li></ol><blockquote><p><strong>學習目標</strong>： 闡述計算和支付保險給付的過程。</p></blockquote><ol start="10"><li><p>Deshi Yip是一份保額為100,000美元的傳統壽險保單的受益人，他對保單保險金提出了索賠。理賠分析員審核了Yip先生的索賠並注意到，保單所有人已經提前支付了200美元的保費並且該保單尚有4,000美元未償還的保單貸款。該貸款累積的利息為50美元。以上資訊表明，Yip先生在該索賠中能夠領取的正確給付金額為____。 (p. 11)<br>(1) 95,950美元<br><span style="color:red;"><strong>✓</strong> </span> (2) 96,150美元<br>(3) 100,000美元<br>(4) 100,250美元</p></li><li><p>一位保險人的理賠分析員對下列壽險理賠進行審核，以決定是否同時支付基本死亡給付和 意外死亡給付：<br>- 37歲的Jayda Basara在保單簽發4年後，在滑雪時撞到一棵樹而死亡。理賠調查發現，Basara女士的死亡系滑雪事故的撞傷直接導致。<br>- 58歲的Ronald Dieter在保單簽發9年後，由於輕度的心臟病發作而在車禍中死亡。理賠調查發現，Dieter女士直接因車禍受傷而死亡。<br>在她們死亡時，Basara女士和Dieter女士都沒有未償還的保單貸款，而且都按期繳付保費。 以上資訊表明，關於基本死亡給付和意外死亡給付，____。 (p. 11-12)<br><span style="color:red;"><strong>✓</strong> </span> (1) Basara女士的受益人和Dieter女士的受益人都可以獲得基本死亡給付和意外死亡給付<br>(2) Basara女士的受益人可以獲得基本死亡給付和意外死亡給付，但是Dieter女士的受益人只能獲得基本死亡給付<br>(3) Dieter女士的受益人可以獲得基本死亡給付和意外死亡給付，但是Basara女士的受益人只能獲得基本死亡給付<br>(4) Dieter女士的受益人和Basara女士的受益人都只能獲得基本死亡給付，而無須向其中任何一人支付意外死亡給付</p></li><li><p>當 Jalen Wasem以其父親的生命為標的向Excelsior壽險公司投保壽險保單時，錯誤地將其父的年齡誤述為48歲，而實際上，他父親的年齡是54。該保單包含典型的年齡誤述條款。Excelsior在處理死亡保險給付索賠時發現了這一誤述。在提出索賠時，該保單沒有未償還 的保單貸款且保費已經支付。在該情形中，Excelsior最可能會____。 (p. 12-13)<br>(1) 使保單無效，並保留已繳保費<br>(2) 使保單無效，並退還已繳保費<br>(3) 按照保單上申明的年齡支付死亡給付<br><span style="color:red;"><strong>✓</strong> </span> (4) 將死亡給付調整到已繳保費按照被保險人的正確年齡可以購買的保額</p></li><li><p>Marian Hale是一位壽險保險金的受領人。Hale女士選擇了一種給付選擇權，即保險人將保 險金存入以她的名義開立的生息帳戶。Hale女士可以在任何時候提取部分或全部保險金。 以上資訊表明，Hale女士選擇的給付選擇權被稱為____。 (p. 13)<br>(1) 固定期間選擇權<br><span style="color:red;"><strong>✓</strong> </span> (2) 留存資產帳戶(RAA)選擇權<br>(3) 固定金額選擇權<br>(4) 利息給付選擇權</p></li></ol><blockquote><p><strong>學習目標</strong>： 闡述分保壽險保單的理賠過程。</p></blockquote><ol start="14"><li>以下是關於分保保單理賠的陳述。選擇包含正確陳述的選項____。 (p. 14-15)<br>(1) 由於再保險人是原保險保單的一方當事人，因此再保險人有權批准或拒絕索賠<br>(2) 當收到分保保單提交的索賠時，直接承保人在向受益人支付保險金之前必須先收到再保險人對分保金額的支付<br><span style="color:red;"><strong>✓</strong> </span> (3) 儘管再保險人可以就理賠決策向直接承保人提出建議，但直接承保人通常沒有義務遵從這些建議<br>(4) 大多數再保險契約都規定，一旦再保險人收到分保保單的索賠申請，就立即通知直接承保人</li></ol><blockquote><p><strong>學習目標</strong>： 闡述影響理賠管理的法律法規。</p></blockquote><ol start="15"><li>以下陳述描述了保險公司的理賠管理部門與其客戶之間的互動。根據美國保險監督官協會<br>(NAIC)的不公正理賠給付實務法案，選擇被視為不公正理賠給付實務的選項____。 (p. 18)<br>(1) 在對一項意外死亡給付索賠進行調查後，理賠分析員Jordana Maloof認為被保險人不是意外死亡，從而決定不予支付保單的意外死亡給付<br>(2) 理賠分析員TitoAmaral雇傭外部調查員來核實一位受益人對壽險保險金索賠的相關資訊<br>(3) 實習分析員Linus Farr在其第一次理賠調查後，錯誤地僅僅向保單受益人支付死亡保險給付而沒有支付意外死亡給付(實際上應該支付的)<br><span style="color:red;"><strong>✓</strong> </span> (4) 理賠分析員CarrieBoswell批准結案一項壽險索賠，其批准的金額遠遠少於保單實際應付的理賠金額</li></ol><blockquote><p><strong>學習目標</strong>： 闡述保險人如何管理年金的死亡給付和年金的定期支付。</p></blockquote><ol start="16"><li><p>以下是關於年金的死亡給付管理的陳述。選擇包含正確陳述的選項____。 (p. 18-19)<br>(1) 保險人通常無需年金契約的受益人在對年金的死亡給付提出索賠時，提供損失證明<br><span style="color:red;"><strong>✓</strong> </span> (2) 延期年金契約的條款規定，如果年金被保險人在規定的年金支付日之前死亡，保險人就要支付規定的死亡給付<br>(3) 年金契約的受益人有責任計算死亡給付的應稅金額並向有關稅務機關報告這一金額<br>(4) 年金契約的死亡給付只能一次性支付給契約受益人</p></li><li><p>常見的年金給付選擇權可以分為非年金化選擇權和年金化選擇權。年金化選擇權的一個實例是____。 (p. 19-20)<br>(1) 固定期間支付<br>(2) 一次性支付<br>(3) 定額支付<br><span style="color:red;"><strong>✓</strong> </span> (4) 聯合及最後生存者終身年金</p></li></ol><hr><h2 id="第-14-章-客戶服務-v2">第 14 章 客戶服務</h2><blockquote><p><strong>學習目標</strong>： 解釋為什麼提供優質的客戶服務對於保險公司十分重要。</p></blockquote><ol><li>以下是關於壽險公司優質客戶服務的陳述，其中有三項陳述正確，一項陳述錯誤。選擇包含錯誤陳述的選項。 (p. 2)<br><span style="color:red;"><strong>✓</strong> </span> (1) 只有直接與外部客戶聯繫的保險公司員工才負責提供客戶服務<br>(2) 優質的客戶服務可以吸引新的客戶，並有助於保險公司留存現有客戶<br>(3) 通過提供優質的客戶服務，保險公司可以潛在地增加盈利<br>(4) 提供優質的客戶服務有助於保險公司在市場上區別於其他競爭者</li></ol><blockquote><p><strong>學習目標</strong>： 定義工作團隊，並解釋客戶聯絡中心的作用。</p></blockquote><ol start="2"><li>Graceful壽險公司的客戶服務員工定期在一起工作，協調其各活動以完成共同目標。這些員工向監督者彙報工作，並且通過不同的管道，如電話、傳真、電子郵件、網路聊天以及傳統信件等，為Graceful公司的個人保險客戶提供服務，使購買個人保險產品的客戶可以就與其保單相關問題和公司溝通。就部門組織結構而言，上述資訊表明，Graceful公司的客戶服務員工很可能被分配到了____。 (p. 3)<br>(1) 成員服務，Graceful公司為其客戶提供客戶聯絡中心<br>(2) 成員服務，Graceful公司為其客戶提供業務處理中心<br><span style="color:red;"><strong>✓</strong> </span> (3) 工作團隊，Graceful公司為其客戶提供客戶聯絡中心<br>(4) 工作團隊，Graceful公司為其客戶提供業務處理中心</li></ol><blockquote><p><strong>學習目標</strong>： 識別客戶服務的工作職責，並解釋客戶服務部門和其他組織職能部門之間的關係。</p></blockquote><ol start="3"><li>Alondra Huerta是Hillside壽險公司的一位高級客戶服務代表，在客戶服務領域已有八年的工作經驗。而Tarik Kumar擔任Hillside公司的客戶服務代表尚不足一年。Hillside公司很有可能將諸如保單退保和複效等更為複雜的客戶服務請求____。 (p. 4)<br>(1) 安排給Huerta女士和Kumar先生<br><span style="color:red;"><strong>✓</strong> </span> (2) 僅安排給Huerta女士<br>(3) 僅安排給Kumar先生<br>(4) 既不安排給 Huerta女士也不安排給Kumar先生</li></ol><blockquote><p><strong>學習目標</strong>： 列舉有效客戶服務的特點，並解釋如何提供有效的客戶服務以促進客戶忠誠和客戶關係管理。</p></blockquote><ol start="4"><li>保險公司提供給客戶的有效服務必須是快速的、周全的、準確的、禮貌的、機密的和便捷的。一般來說，當____時，客戶服務便被認為是周全的。 (p. 6)<br>(1) 及時地為客戶提供服務<br>(2) 僅由獲得授權的員工瞭解資訊和處理業務<br>(3) 讓客戶隨時隨地獲得其需要的服務<br><span style="color:red;"><strong>✓</strong> </span> (4) 客戶的問題或諮詢的每一方面都以令客戶滿意的方式解決</li></ol><blockquote><p><strong>學習目標</strong>： 定義無縫流程，並描述該技術在提供無縫和個性化的客戶服務中所發揮的作用。</p></blockquote><ol start="5"><li><p>保險公司經常通過無縫流程傳遞優質的客戶服務。根據定義，無縫流程是____。 (p. 7)<br><span style="color:red;"><strong>✓</strong> </span> (1) 一個在完成客戶的服務請求時使其不會因提供服務的步驟而感覺不便，甚至不會使其 察覺服務步驟存在的流暢程式<br>(2) 客戶對公司的員工、產品和服務的偏好<br>(3) 為保險公司最有價值的客戶提供其所需要的產品、服務、分銷管道和溝通方式的方案<br>(4) 授權保單所有人在作出常規更改和請求前確認其身份的登錄名和密碼或個人識別碼(PIN)</p></li><li><p>Bruna Pires是Oliveira壽險公司的客戶就其壽險保單給Oliveira公司打電話。一個自動化系統應答了其電話，並根據Pires女士對具體問題的回答將其電話轉接給了最適合的客戶服務代表。這一資訊表明，Oliveira公司使用的自動系統被稱為____。 (p. 8)<br><span style="color:red;"><strong>✓</strong> </span> (1) 技能型路由(SBR)<br>(2) 網路回撥<br>(3) 網上互動<br>(4) 同步流覽</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述滿足客戶請求、處理投訴、客戶保全、追加銷售和交叉銷售保險及年金產品的客 戶服務流程。</p></blockquote><ol start="7"><li><p>以下是關於滿足客戶服務請求的陳述。選擇包含正確陳述的答案選項。 (p. 10-11)<br>(1) 客戶服務代表回復許多服務請求，包括向客戶提供稅務或投資的建議<br>(2) 只要保單所有人提供正確的識別資訊，就不必以書面形式申請更改姓名<br>(3) 孤兒保單通常分配給客戶服務代表，而不分配給持照業務員<br><span style="color:red;"><strong>✓</strong> </span> (4) 所有的受益人更改必須由保單所有人以書面形式提出申請，並且每一位不可撤銷的受益人都要親筆簽名</p></li><li><p>一家保險公司的客戶服務代表Charisse Montague收到了保單所有人要求減少其人壽保單保險責任金額的請求。Montague女士將作出更改所必需的表格寄給了保單所有人。當收到填寫完的表格以後，Montague女士就對該保單作了限制保單給付的批註。Montague女士使用的更改保單所有人保險保障的方法被稱為____。 (p. 11)<br>(1) 保單貸款<br><span style="color:red;"><strong>✓</strong> </span> (2) 保單附約<br>(3) 保單紅利<br>(4) 自動繳費計畫</p></li><li><p>一家保險公司的客戶服務代表Tameeka Royce收到了通知，一位保單所有人希望終止其現有的年金保險契約，並用這筆錢去購買另一家保險公司的人壽保單。在與保單所有人的請求 和售出原始契約的業務員核實之後，Royce女士終止了原始契約，計算了保單的淨退保現金價值，並將這些資金交給了保單所有人。上述資訊表明，Royce女士處理的這一類型的業務被稱為____。 (p. 13)<br>(1) 保全<br>(2) 複效<br><span style="color:red;"><strong>✓</strong> </span> (3) 外部替換<br>(4) 內部替換</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述團體保險產品和個人保險產品的客戶服務流程之間的區別。</p></blockquote><ol start="10"><li>以下是關於團體保險產品的客戶服務的陳述。其中三項陳述正確，一項陳述錯誤。選擇包含錯誤陳述的答案選項。 (p. 17-18)<br>(1) 銷售團體保險產品的保險公司通常專門為團體保險產品建立一個客戶服務部門<br>(2) 當團體保單持有人不再與保險公司續保與其簽訂團體保險契約時，該團體保險計畫便告終止<br><span style="color:red;"><strong>✓</strong> </span> (3) 大多數保險公司都要求團體保險產品由該團體本身管理或由第三方管理<br>(4) 如果團體成員終止雇傭關係或不再是被保團體的合格員工，該團體成員將喪失參加團體保險計畫的資格</li></ol><blockquote><p><strong>學習目標</strong>： 識別和描述客戶服務中促進客戶體驗的常見控制方式。</p></blockquote><ol start="11"><li><p>Verdant人壽保險公司的客戶服務經理經常評估客戶服務水準並開展客戶滿意度調查，以保 證每一個Verdant客戶的事實契機都是積極的、有益的體驗。從以下選項中選擇正確判斷服 務水準和客戶滿意度調查是作為定量績效評估還是定性績效衡量的回答選項。 (p. 19-21)<br>(<strong>服務水準 / 客戶滿意度調查</strong>)<br>(1) 定量 / 定量<br><span style="color:red;"><strong>✓</strong> </span> (2) 定量 / 定性<br>(3) 定性 / 定量<br>(4) 定性 / 定性</p></li><li><p>為了確保及時提供客戶服務，Lambent保險公司設置了在平均一分鐘之內所有打電話者與客戶服務代表接通的目標。該一分鐘的時間限制就是Lambent公司用來評估其____的基準。 (p. 21)<br><span style="color:red;"><strong>✓</strong> </span> (1) 平均回答速度<br>(2) 首次接觸解決問題<br>(3) 周轉時間<br>(4) 放棄率</p></li></ol><hr><h1 id="模擬試題-v2">模擬試題</h1><ol><li><p>Shaw保險公司有一個組織結構圖，該圖顯示了公司內的職權與職責關係。該公司內部的這<br>種正式的權力線被稱為Shaw的____。 (c.1, p.13)<br><span style="color:red;"><strong>✓</strong> </span> (1) 命令鏈<br>(2) 接班人計畫<br>(3) 控股權<br>(4) 職責分離</p></li><li><p>保險公司的許多職能領域在產品開發的綜合業務分析階段都有各自的職責。某一職能領域 審查保險人在產品開發和銷售過程中必須滿足的財務報告要求，該領域也評估新業務將如 何在公司的財務報表中反映。最可能負責這些任務的職能領域是____。 (c.10, p.6)<br>(1) 精算領域<br>(2) 投資領域<br><span style="color:red;"><strong>✓</strong> </span> (3) 會計領域<br>(4) 代理運營領域</p></li><li><p>良好的壽險核保的一個重要概念是逆選擇。根據定義，逆選擇是____。 (c.12, p.7)<br>(1) 以一個高於平均水準的費率或者以調整保單類型或保額的方式來批准投保單的過程<br>(2) 保險人簽發基於投保人的需求和財務狀況並不適合其購買的保險單的一種可能性<br>(3) 保險單在其對保險人盈利之前失效的可能性<br><span style="color:red;"><strong>✓</strong> </span> (4) 那些認為其自身損失的可能性大於平均值的人，比那些認為自身損失的可能性等於或小於平均值的人會更積極投保的一種傾向</p></li><li><p>Lucille Paxton是一份保障其丈夫生命的壽險保單的所有人。其女兒Jodie是該保單的受益 人。當Lucille去世時, Jodie提出了保單索賠, 因為她理所當然地相信Lucille是該保單的被保 險人同時也是保單所有人。Jodie在這種情況下提出的索賠可以被恰當地描述為____。 (c.13, p.6)<br>(1) 有效索賠<br><span style="color:red;"><strong>✓</strong> </span> (2) 錯誤索賠<br>(3) 逆向索賠<br>(4) 欺詐索賠</p></li><li><p>一家保險公司的網站能夠提供關於客戶的有價值的行銷資訊。一家公司網站流量的測量方 式之一是獨立訪問者數量，獨立訪問者數量是指____數量。 (c.9, p.14)<br>(1) 系統要求下載一個單獨的HTML頁面<br>(2) 已查驗或已購買的產品<br><span style="color:red;"><strong>✓</strong> </span> (3) 在一個固定時間區間內至少訪問過網站一次的個人<br>(4) 頁面訪問者用於查看特定網頁的時間(秒或分鐘)</p></li><li><p>當Warren Hunt為獲取其年金資訊而致電Field保險公司時，一個以基於電腦的技術接聽其電 話, 並用錄音問候了Hunt先生, 提示他通過電話按鍵輸入其帳號。Hunt先生選擇了轉接客 戶服務代表(CSR)的選項。於是，Field的自動電話系統利用Hunt先生的帳號為其資訊來 搜索資料庫，隨後，該系統將Hunt先生的資訊發送到一位客戶服務代表的電腦螢幕，同時 Hunt先生接通客戶服務代表的電話。從以下答案選項中，選擇正確判斷應答Hunt先生電話 來訪的電腦電話集成(CTI)的類型和將Hunt先生的電話與其資訊同時轉接至客戶服務代表工作站的電腦電話集成的類型。 (c.5, p.17)<br>(<strong>接聽Hunt先生電話的電腦電話集成 / 將電話和資料發送到客戶服務代表的電腦 電話集成</strong>)<br>(1) 工作流管理系統 / 螢幕彈出<br>(2) 工作流管理系統 / 電子資料交換(EDI)<br><span style="color:red;"><strong>✓</strong> </span> (3) 互動式語音應答(IVR)系統 / 螢幕彈出<br>(4) 互動式語音應答(IVR)系統 / 電子資料交換(EDI)</p></li><li><p>下面段落的括弧裡包含兩對詞語。選擇每組中能夠正確完成該段落的詞語。然後選擇包含你所選擇兩個詞語的選項。<br>大多數保險公司都向客戶服務代表提供腳本、談話要點和其他工具，以便客戶服務代表對 客戶請求都提供不偏不倚的回應。(<strong>腳本/ 談話要點</strong>)是客戶服務代表用自己的話語歸納 的、用以參照的重要項目列表。當客戶服務代表必須提供完整且準確的資訊時, 如法律解 釋, 腳本通常(<strong>是 / 不是</strong>)一種適合的使用工具。 (c.14, p.10)<br>(1) 腳本 / 是<br>(2) 腳本 / 不是<br><span style="color:red;"><strong>✓</strong> </span> (3) 談話要點 / 是<br>(4) 談話要點 / 不是</p></li><li><p>保險產品的開發過程的一個階段是技術設計階段。在保險產品開發的技術設計階段，保險人____。 (c.10, p.5、7)<br><span style="color:red;"><strong>✓</strong> </span> (1) 建立新產品的費率、業務員的傭金率、保單格式、銷售契約、管理原則和核保準則<br>(2) 快速且低成本地評估新產品創意，並鑒別值得進一步調查的那些創意<br>(3) 取得必要的監管批准、設計促銷與培訓材料並研發行銷和管理新產品所必需的資訊系統和程式<br>(4) 在導入產品之前，以觀念測試來衡量新產品創意、新促銷活動或其他新行銷要素的可接受性</p></li><li><p>Abbott壽險公司使用目標行銷策略，即集中其所有的行銷資源向作為信用卡新用戶的年輕 人提供信用人壽保險。該策略已經使Abbott在該特殊市場部分獲得了豐富的專業知識。使 用這種方法的風險在於，Abbott的收益僅來自此單一的市場細分，在此細分市場發生變化 時，Abbott可能遭遇困難。Abbott使用的這種目標行銷策略被稱為____。 (c.9, p.12)<br>(1) 大眾化行銷<br>(2) 差異化行銷<br><span style="color:red;"><strong>✓</strong> </span> (3) 集中營銷<br>(4) 無差異行銷</p></li><li><p>下列是關於美國法定會計實務和公認會計準則(GAAP) 的陳述。選擇包含正確陳述的答案選項。 (c.7, p.7、9)<br>(1) 在多個州經營業務的保險公司僅須滿足其公司總部所在州的法定會計實務。<br>(2) 在美國的保險公司都必須根據法定會計實務編制其年度報告。<br>(3) 一般而言，法定會計實務是比公認會計準則使用的持續經營理念更為不保守的報告方法。<br><span style="color:red;"><strong>✓</strong> </span> (4) 基於法定會計實務的財務報表注重保險人的償付能力，然而基於公認會計準則的財務報表注重保險人的盈利能力及使用標準化定義、估價方法和格式。</p></li><li><p>債券和抵押貸款是保險公司常用於投資的兩種投資類型。這些投資的一個共同特點是，債券和抵押貸款通常____。 (c.8, p.8、14)<br><span style="color:red;"><strong>✓</strong> </span> (1) 都被視為固定收益投資<br>(2) 都被歸於權益證券<br>(3) 都有反映對投資者具有的違約風險的機構評級<br>(4) 由保險人的普通帳戶投資組合中持有的小部分投資組成</p></li><li><p>下面的段落包含一個不完整的陳述。選擇包含完成該陳述詞語的答案選項。 保險人的一個典型投資目標是保持足夠的____，其被定義為保險人的投資收益率與代表客戶利益的保險產品結算利率之間的差額。 (c.8, p.3)<br>(1) 收益<br><span style="color:red;"><strong>✓</strong> </span> (2) 利差<br>(3) 無風險收益率<br>(4) 必要回報率</p></li><li><p>保險人通過公開發行和私募來購買新發行的證券，還通過證券交易所和場外交易(OTC) 市場購買和銷售以前發行的證券。關於這些買賣證券的方法，正確的說法是：____。 (c.8, p.7)<br>(1) 作為私募發行證券比公開發行花費更多的時間和更多的成本<br>(2) 公開發行是保險人和其他大型機構投資者購買新發行證券的一種首選方式<br><span style="color:red;"><strong>✓</strong> </span> (3) 在公開發行中，證券發行者必須將其證券在合適的政府代理機構註冊，比如美國的證券交易委員會(SEC)<br>(4) 場外交易市場是指證券買方和賣方(或者其代理人或經紀人)在某一場所達成交易的市場</p></li><li><p>獨立代理人Ray Beck未與Tally保險公司和其他數家保險公司簽訂代理契約。儘管Tally保險 公司是Beck先生安排業務的主要保險公司，但他沒有義務為Tally提供固定的業務量。當 Beck先生為其他保險人而不是Tally安排業務時，他是作為____履行其職責。 (c.11, p.8)<br><span style="color:red;"><strong>✓</strong> </span> (1) 經紀人<br>(2) 專屬代理人<br>(3) 總代理人<br>(4) 保險經紀自營商</p></li><li><p>美國的一項聯邦法律通過要求金融服務公司提供更多透明度和責任性來保護投資者的利益。這項聯邦法律在美國財政部下設聯邦保險局(FIO)，以便識別那些需要遵循更嚴格標準的保險公司。該法律被稱為____。 (c.6, p.21)<br>(1) 薩班斯—奧克斯利法案<br>(2) 公平信用報告法案(FCRA)<br>(3) 格雷姆—裡奇—比利雷(GLB)法案<br><span style="color:red;"><strong>✓</strong> </span> (4) Dodd-Frank華爾街改革和消費者保護法案</p></li><li><p>保險監管機構和評級機構使用資本與盈餘比率以及保險人財務報告中的其他資訊來評估 保險人的財務狀況。關於資本與盈餘比率，通常正確的說法是：____。 (c.6, p.20)<br>(1) 保險人的資本與盈餘比率越低，其財務狀況就越好<br>(2) 保險監管機構和評級機構使用資本與盈餘比率來衡量保險人對短期債務到期償還的能力<br>(3) 保險監管機構和評級機構使用資本與盈餘比率來衡量保險人的盈利能力而不是其償付能力<br><span style="color:red;"><strong>✓</strong> </span> (4) 保險監管機構和評級機構經常要求保險人在其財務報告中採用權重資本與盈餘比率來解釋保險人暴露的風險</p></li><li><p>核保人有時使用用藥資料庫作為准被保險人資訊的一個來源。就這些資料庫中包含的資訊類型而言，用藥資料庫為保險人提供____。 (c.12, p.13)<br>(1) 保險人用於核保目的而要求准被保險人提供的化驗結果，如血液化學成分<br><span style="color:red;"><strong>✓</strong> </span> (2) 准被保險人的處方史，該處方史能夠表明准被保險人曾經出現過的健康問題及其接受過的藥物治療<br>(3) 准被保險人對病史問題的回答及其體檢結<br>(4) 有關准被保險人的信用、信譽以及綜合背景的資訊</p></li><li><p>以下是關於兩家公司用於保護其網路流覽安全措施的陳述：<br>- Telfair金融保險公司使用一種編碼技術，使得只有擁有必需軟體、經過授權的人員才能對有關資料解碼。<br>- Fern保險公司有一個安全的電腦網路，該網路在網際網路上使用硬體、軟體或兩者結合作為“隧道”，以便只有擁有必需技術的人員才能通過網路訪問資料。<br>有關資訊系統安全措施的類型，以上資訊表明，Telfair使用的安全措施被稱為____。 (c.5, p.14-15)<br>(1) 加密，而Fern使用被稱為防火牆的安全措施<br><span style="color:red;"><strong>✓</strong> </span> (2) 加密，而Fern使用被稱為虛擬私人網路(VPN)的安全措施<br>(3) 入侵偵查軟體，而Fern使用被稱為防火牆的安全措施<br>(4) 入侵偵查軟體，而Fern使用被稱為虛擬私人網路(VPN)的安全措施</p></li><li><p>Bloom壽險公司的經理們使用一種績效評估方法，該方法要求其記錄公司員工的積極和消極的行為事例。記錄包括日期、參與人員和所採取的行動。該資訊表明，Bloom的經理們使用的績效評估方法被稱為____。 (c.4, p.17)<br>(1) 關鍵事件評估法，該方法的優點是如果操作正確其所需的時間很少<br><span style="color:red;"><strong>✓</strong> </span> (2) 關鍵事件評估法，該方法的優點是其提供員工工作績效的具體事例<br>(3) 行為鎖定等級評估(BARS)，該方法的優點是如果操作正確其所需的時間很少<br>(4) 行為鎖定等級評估(BARS)，該方法的優點是其提供員工工作績效的具體事例</p></li><li><p>跨國公司使用的三種員工配置方法是東道國員工配置、母國化員工配置和通過第三國員工配置海外機構。關於跨國經營的這些員工配置方法，一項正確的陳述是____。 (c.4, p.5)<br>(1) 東道國員工配置是指將保險人母國的員工派往海外機構<br>(2) 母國化員工配置在跨國公司中比東道國員工配置的成本更低<br><span style="color:red;"><strong>✓</strong> </span> (3) 東道國員工配置的優勢是其聘用的員工熟悉當地習俗、禮儀和經營方式<br>(4) 辦事處配備第三國員工可以幫助跨國公司實現培訓費用最小化</p></li><li><p>保險公司通常的合規活動包括協調內部審計、監督客戶投訴的妥善處理以及對員工和業務員在合規政策與程式方面的培訓。以下是關於這些活動的陳述。選擇包含正確陳述的答案選項。 (c.3, p.9-11)<br>(1) 公司的內部審計通常是對整個公司而不是公司特定經營領域的檢查。<br>(2) 美國州的保險法要求保險人記錄客戶投訴，但不規定保險人處理客戶投訴的方式。<br>(3) 在一個有效的合規管理方案中，公司的合規政策和程式是獨立於其工作流程，沒有整合到工作流程的設計之中。<br><span style="color:red;"><strong>✓</strong> </span> (4) 因為保險人通常為業務員的行為承擔責任，所以保險人需要花費大量的人力和物力在合規問題上培訓其業務員。</p></li><li><p>Rachel Greer是一份壽險保單的受益人，她在Florian保險公司拒賠其意外死亡給付的索賠後對Florian提起訴訟。為避免上法庭，Florian提出了一個爭議解決替代(ADR)法，該替代法由公正的第三方協調雙方的談判，努力尋求雙方都認同的解決方案。如果Florian和Greer女士不能通過該爭議解決替代法化解爭議，Greer女士仍然有權提起訴訟。在該解決爭議替代法中的公正的第三方在美國通常被稱為____。 (c.3 p.7)<br>(1) 法律總顧問<br>(2) 仲裁人<br><span style="color:red;"><strong>✓</strong> </span> (3) 調解人<br>(4) 合規官</p></li><li><p>保險公司使用指導控制和其他類型的控制機制來監控和改善其業務流程。保險公司通常使用指導控制來____。 (c.2, p.10)<br>(1) 比較既定標準和實際績效或產出<br><span style="color:red;"><strong>✓</strong> </span> (2) 描述公司意欲如何計畫實施業務流程<br>(3) 確定一個業務流程是否應該繼續進行、是否需要採取糾正措施或必須停止<br>(4) 收集關於完成流程的資訊並評估這些資訊，以改善今後的類似活動</p></li><li><p>保險公司的資訊技術(IT)部門負責包括應用軟體在內的各種技術。應用軟體可以被準確地定義為____。 (c.5, p.3)<br>(1) 電腦系統中的設備和機械裝置<br><span style="color:red;"><strong>✓</strong> </span> (2) 幫助用戶執行特定任務或解決特定問題的軟體<br>(3) 協調電腦系統各硬體組成部分活動和功能的軟體<br>(4) 為公司從其現有資料庫和內部管理系統收集資料的中央存貯庫</p></li><li><p>一些保險公司以被稱為戰略業務單位(SBUs)的組織單位組織其業務線。關於戰略業務單位組織的一項正確陳述是：戰略業務單位通常____。 (c.1, p.19-20)<br><span style="color:red;"><strong>✓</strong> </span> (1) 有自己的客戶和競爭者<br>(2) 沿用與母公司相同的戰略目標和策略<br>(3) 不鼓勵員工接觸外部客戶以制定決策<br>(4) 消除了組織結構更為傳統的公司可能出現的重複性支持職能領域</p></li><li><p>下面段落的括弧裡包含兩對詞語。選擇每組中能夠正確完成該段落的詞語。然後選擇包含你所選擇兩個詞語的選項。<br>公司的組織結構可以分為相對集權型或分權型，每種類型的結構都有其優勢。一般而言，正確的說法是：(<strong>集權型 / 分權型</strong>)組織授予初級管理人員更多的制定決策的權力，因此使其能夠更快地對未預期的情況做出反應。(<strong>集權型 / 分權型</strong>)組織更可能使公司不同領域都實行相應一致的公司政策。 (c.1, p.13)<br>(1) 集權型 / 集權型<br>(2) 集權型 / 分權型<br><span style="color:red;"><strong>✓</strong> </span> (3) 分權型 / 集權型<br>(4) 分權型 / 分權型</p></li><li><p>根據Michael Porter提出的價值鏈模型，公司的工作活動可以被劃分為增值活動或支援活 動。以下列出的保險公司領域中，通常被視為增值活動的是____。 (c.1, p.14、16)<br>(1) 資訊技術<br>(2) 法律/合規<br>(3) 會計<br><span style="color:red;"><strong>✓</strong> </span> (4) 客戶服務</p></li><li><p>保險公司使用個人銷售來分銷其產品的四種方式是：領薪銷售代理人、多險種代理人、駐點銷售和職場行銷。有關這些個人銷售方式的一項正確陳述是：____。 (c.11, p.15)<br><span style="color:red;"><strong>✓</strong> </span> (1) 大多數保險公司都通過被稱為團體代表的領薪銷售代理人的方式來處理其團體保險和團體年金銷售<br>(2) 多險種代理人是為幾家不同的保險公司銷售保險產品的獨立代理人<br>(3) 駐點銷售系統使用代理人來銷售特定產品，通常是低保額現金價值的人壽保險，並且在特定地理區域向保單所有人提供服務<br>(4) 職場行銷是在商店、大型購物中心或者其他非保險營業機構產生客戶驅動銷售的方式</p></li><li><p>債券發行人有法律義務在到期日向債券持有人支付一筆固定金額。在債券上規定到期日應付的這筆金額被稱為債券的____。 (c.8, p.9)<br><span style="color:red;"><strong>✓</strong> </span> (1) 面值<br>(2) 票息支付<br>(3) 抵押品<br>(4) 債券贖回條款</p></li><li><p>Jardin公司是一家大型公司，為其員工向Conti人壽與健康保險公司提交了一份團體計畫要 求書(RFP)以尋求團體健康保障計畫。Conti的一位核保員確定Jardin為可接受風險後制定 了一份檔，該檔詳細規範了Conti擬向Jardin提供的保險計畫。Jardin批准了該擬定計劃，Conti 向Jardin簽發了一份團體保險主契約。有關這種情況的一項正確陳述是：____。 (c.12, p.19-20)<br><span style="color:red;"><strong>✓</strong> </span> (1) Conti的核保員最有可能評估的是其整個團體呈現的風險而不是評估其單個團體成員 的資訊<br>(2) Jardin是該團體保險主契約的團體被保險人<br>(3) 核保員制定的詳細說明該准團體保險計畫的檔被稱為保險憑證<br>(4) 團體保險主契約的各方是Jardin、Conti以及受契約保障的Jardin員工</p></li><li><p>以下段落包含一個不完整的陳述。選擇正確完成該陳述的答案選項。<br>許多保險公司都使用電子保險投保單，即允許投保人線上填寫投保單並將投保單直接提交 到公司的新業務處理系統。一些保險人使用被稱為____的技術，即投保人在電子檔中， 點擊加密的、基於網頁的“我同意”或者“我不同意”按鈕。 (c.12, p.4)<br>(1) 雲計算<br>(2) 網路會議<br><span style="color:red;"><strong>✓</strong> </span> (3) 點擊<br>(4) 軟體即服務(SaaS)</p></li><li><p>成本、專業知識、控制和產品特點是保險公司在決定使用哪種分銷體系時考慮的四個因素。<br>以下是關於上述領域中各種分銷管道比較的陳述。選擇包含正確陳述的答案選項。 (c.11, p.21-22)<br><span style="color:red;"><strong>✓</strong> </span> (1) 直接反應分銷管道通常需要大量的前期投資，但直接反應分銷的雇傭成本和培訓成本 通常低於其他分銷管道<br>(2) 財務顧問通常比專業代理人和多險種代理人有更多的銷售經驗以及特定保險產品和公司的專業知識<br>(3) 當保險公司使用專屬代理人體系或反應分銷體系時，其對分銷活動的控制程度相對較低<br>(4) 諸如萬能壽險等複雜的保險產品通常採用直接反應體系或者第三方機構分銷體系，而非通過個人銷售分銷體系進行分銷</p></li><li><p>以下是有關美國保險公司的市場行為檢查的陳述。選擇包含正確陳述的答案選項。 (c.3, p.11-12)<br>(1) 目前大多數市場行為檢查都是對保險人所有非金融業務方面的綜合檢查<br>(2) 市場行為檢查的目的是識別和監督保險人償付能力存在的威脅<br>(3) 美國保險監督官協會(NAIC)的作用之一是實施跨州檢查，因此各州保險署就可以共同擔負市場行為檢查的成本<br><span style="color:red;"><strong>✓</strong> </span> (4) 只要認為檢查有必要，比如當有顧客投訴或法規變化時，州保險監管機構就可以對保險公司進行目標檢查</p></li><li><p>下面段落的括弧裡包含兩對詞語。選擇每組中能夠正確完成該段落的詞語。然後選擇包含你所選擇兩個詞語的選項。<br>Lark人壽保險公司是一家美國的公司，其正在開發一款預期在Y和Z州進行銷售的、新的變額人壽保險產品。為了加快實施的進程，Lark將執行活動分成兩大類：前期職能和後期職 能。(<strong>前期 / 後期</strong>)職能代表在未來某一天才必需的產品管理和服務流程，但是要在產品上市啟動後才可以實施。在產品實施過程中，Lark必須在證券交易委員會註冊該產品，並 從(<strong>證券交易委員會 /Y和Z州的州保險監管部門</strong>)獲得產品的正式批准。 (c.10, p.9-10)<br>(1) 前期 / 證券交易委員會<br>(2) 前期 / Y和Z州的州保險監管部門<br>(3) 後期 / 證券交易委員會<br><span style="color:red;"><strong>✓</strong> </span> (4) 後期 /Y和Z州的州保險監管部門</p></li><li><p>保險公司為其客戶提供通過互聯網與客服代表聯接的方式。一種被稱為網路回撥的技術形式允許客戶____。 (c.14, p.8)<br>(1) 在網站與客服代表“相見”，同步其流覽器，一起搜索網站，並與對方進行即時溝通 交流<br><span style="color:red;"><strong>✓</strong> </span> (2) 點擊網站上的某一圖示並請求客戶服務代表致電客戶<br>(3) 通過網路軟體與客服代表進行溝通，其鍵入的提問會顯示在客服代表的螢幕上，客戶<br>服務代表的回應顯示在客戶螢幕上原始問題的下方<br>(4) 通過電子郵件與客服代表聯繫並在指定時間內收到電子郵件回復，比如24小時以內</p></li><li><p>Barrington金融服務公司採用了一些定量指標來評估客戶服務績效。Barrington所評估的客戶服務的一個部分是，客戶呼入的電話請求在最初的接聽中就被成功完成的比例，即為沒有轉接也無需後續工作。根據定義，該績效指標被稱為____。 (c.14, p.21)<br>(1) 周轉時間<br>(2) 服務水準<br>(3) 平均應答速度<br><span style="color:red;"><strong>✓</strong> </span> (4) 首次接觸解決率</p></li><li><p>Aerie人壽保險公司的理賠分析員接到了一份尚處於其抗辯期的壽險保單的索賠。在進行調查時，理賠分析員發現了投保單中有一個重大不實告知。由於這一發現，Aerie啟動了一個法律程式而使該保險契約因重大不實告知而無效。Aerie尋求的、致該保險契約無效的這個法律程式被稱為____。 (c.13, p.8-9)<br>(1) 交互訴訟<br><span style="color:red;"><strong>✓</strong> </span> (2) 解除契約<br>(3) 保單提交<br>(4) 理賠裁決</p></li><li><p>Noella Curran是以其父親Walter Bailey的生命為保險標的的一份保額為250,000美元終身壽 險保單的受益人，Bailey先生在保單有效期間死亡，Curran女士提起了該保單保險金的索 賠。理賠分析員使用該保單下述資訊來計算給付金額：<br>- 保單貸款餘額 = 2,500美元<br>- 應計保單貸款利息 = 125美元<br>- 積累的保單紅利 = 300美元<br>- 未繳的到期保費 = 500美元<br>- Bailey先生購買的繳清增額保險保障 = 5,000美元<br>上述資訊表明，向Curran女士應支付的給付金額總計為____。 (c.13, p.11-12)<br>(1) 246,575美元<br>(2) 252,075美元<br><span style="color:red;"><strong>✓</strong> </span> (3) 252,175美元<br>(4) 252,425美元</p></li><li><p>壽險業務涉及許多現金流入和現金流出。對於保險人而言，因____而產生一筆現金流入。 (c.6, p.16)<br>(1) 支付營業費用<br>(2) 購買新資產<br>(3) 人壽保險保單所有人的現金退保<br><span style="color:red;"><strong>✓</strong> </span> (4) 外部融資</p></li><li><p>以下是有關績效標準和異常報告的陳述，它們是公司用來衡量其績效的兩個工具。其中， 三個陳述正確，一個陳述錯誤。選擇包含錯誤選項的陳述。 (c.2, p.13、15)<br><span style="color:red;"><strong>✓</strong> </span> (1) 當保險公司使用外部績效標準作為基準時，他們只能用來自其他保險公司的績效標準<br>(2) 公司的管理人員必須為所有流程和行為確立有效的績效標準，以促進公司目標的實現<br>(3) 異常報告可以提供公司運作方面的資訊，這些資訊可以用於調整持續進行業務，也可以作為已完成業務的回饋<br>(4) 公司管理人員通常設立一個可以接受的績效標準的範圍而不是一個具體的績效水準作為績效標準</p></li><li><p>保險公司使用諸如盈利能力分析、銷售分析、費用分析和行銷審計等控制工具來衡量其行銷績效。盈利能力分析是公司用來____最適合的工具。 (c.9, p.16)<br><span style="color:red;"><strong>✓</strong> </span> (1) 比較一個活動產生的銷售額與產生這些銷售額所產生的費用<br>(2) 將行銷成本與特定行銷活動掛鉤，以便於行銷經理確定該活動成本是否與其價值匹配<br>(3) 審查其銷售量來評估當前績效，並將當前績效和前幾年的績效進行比較<br>(4) 在廣泛的基礎上審查行銷目標、戰略、組織結構和人員</p></li><li><p>Solo人壽保險公司的核保員使用基數為100的數值評級系統來計算准被保險人的死亡率風險。在一份最近的壽險投保單中，一位Solo的核保員對準被保險人的超體重賦予+50，而對 其良好的家庭健康史賦予-25。該核保員沒有對準被保險人賦予其他消極值或積極值。該資訊表明，Solo對該准被保險人賦予的總數值評級是____。 (c.12, p.14)<br>(1) 25<br>(2) 75<br><span style="color:red;"><strong>✓</strong> </span> (3) 125<br>(4) 175</p></li><li><p>財務報表是公司在特定日期或指定期間的財務狀況的匯總。列示了公司在特定日期的資產、負債、資本與盈餘的財務報表被稱為____。 (c.6, p.17-18; c.7 p.8)<br>(1) 利潤表<br><span style="color:red;"><strong>✓</strong> </span> (2) 資產負責表<br>(3) 總預算表<br>(4) 所有者權益表</p></li><li><p>下面段落的括弧裡包含兩對詞語。選擇每組中能夠正確完成該段落的詞語。然後選擇包含你所選擇兩個詞語的選項。<br>職前測試很可能對雇主產生有效而又可靠的價值。職前測試的(<strong>有效性 / 可靠性</strong>)是指將測試與工作相關的技能或行為的相關聯程度。雇主用於評估應聘者對特定崗位所需特定技能的掌握程度的職前測試類型被稱為(<strong>能力測試 / 操作測試</strong>)。 (c.4, p.12)<br>(1) 有效性 / 能力測試<br><span style="color:red;"><strong>✓</strong> </span> (2) 有效性 / 操作測試<br>(3) 可靠性 / 能力測試<br>(4) 可靠性 / 操作測試</p></li><li><p>以下是對參與大部分司法轄區都禁止的銷售行為的保險業務員的陳述。選擇對參與被稱為回扣這一不公平銷售行為的業務員最恰當描述的答案選項。 (c.11, p.13-14)<br>(1) Alan Song多次誘導客戶將其年金契約替換為另外的年金契約，以便他能夠從替換中獲得一系列首年傭金<br>(2) Hector Miranda誤述保單的特徵以誘導客戶替代現有的保險保單<br>(3) 在銷售陳述中，Rebecca Duffy使用了尚未經過公司總部批准使用的促銷材料，也沒有正確地陳述保單的條款<br><span style="color:red;"><strong>✓</strong> </span> (4) Donna Clay以現金的形式向一位准保戶提供了誘惑，使其從自己手中購買一份壽險保單。這種誘惑沒有在保單條款中列明，Clay女士也沒有在類似的情形下向所有的投保人都提供這種誘惑</p></li><li><p>在產品開發過程中，保險人通常建立產品設計目標作為綜合業務分析的一個部分。新保險產品的產品設計目標通常規定____。 (c.10, p.5)<br><span style="color:red;"><strong>✓</strong> </span> (1) 產品的基本特徵、產品特點、給付、簽單限制、年齡限制、傭金與保費結構、運營和 行政管理要求<br>(2) 估計產品潛在單位銷售量、收入、費用和利潤<br>(3) 產品的行銷目標和戰略，包括產品將如何定價、促銷和分銷的詳細活動<br>(4) 影響產品銷售的所有環境因素，包括目標市場的特徵、經濟條件、法律法規要求和稅收的考慮</p></li><li><p>債券信用評級是債券評級機構發佈的表示發行債券信用品質的字母等級。有關債券的信用評級，通常正確的說法是：債券信用評級越高，____。 (c.8, p.11-12)<br>(1) 債券的違約風險就越高<br><span style="color:red;"><strong>✓</strong> </span> (2) 債券投資越安全<br>(3) 債券投資越具有投機性<br>(4) 債券的期望收益率就越高</p></li><li><p>出於年度報表的報告目的，美國的人壽保險公司將其資產分為三類：認可資產、非認可資 產和部分認可資產。從下列選項中選擇正確描述典型認可資產和非認可資產的實例。 (<strong>認可資產 非認可資產</strong>) (c.7, p.10)<br>(1) 設備 / 投機性投資<br><span style="color:red;"><strong>✓</strong> </span> (2) 現金 / 設備<br>(3) 投資級債券 / 保險人90天內到期的應收帳款<br>(4) 保險人90天內到期的應收帳款 / 現金</p></li><li><p>根據公司規模及其各自行銷目標，各公司的行銷計畫不盡相同。然而，大多數行銷計畫都包含被稱為戰術/行動方案這個要素，該要素通常包含____。 (c.9, p.5)<br>(1) 計畫目標和建議簡明摘要，包括建議的行動、與這些行動相關的成本以及這些行動的 預期結果<br>(2) 預計費用和收入的時間表，其反映資金如何在行銷組合的各要素之間分配<br><span style="color:red;"><strong>✓</strong> </span> (3) 對即將實施的行銷活動的描述，負責實施行銷活動的人員，以及這些活動預期產生的結果(收入、利潤等)<br>(4) 影響公司行銷運營的內、外部環境因素的評估</p></li><li><p>Joyce Reddy是一份年金的所有人兼年金被保險人，該年金保證在其終身都可以領取年金支 付，並且年金支付至少持續10年，即使她在10年內死亡。Reddy女士指定其兒子Scott作為 該年金的次順位受領人。如果Reddy女士在10年支付期之前死亡，Scott將獲得規定期間剩 餘年份的年金支付。該資訊表明，Reddy女士所購買年金的類型被稱為____。 (c.13, p.20)<br>(1) 終身年金<br>(2) 終身收入退款年金<br>(3) 聯合生存者年金<br><span style="color:red;"><strong>✓</strong> </span> (4) 終身收入固定期間年金</p></li><li><p>四種主要的銀行保險分銷模式分別是純分銷商、戰略聯盟、合資公司和金融控股公司。關於這些分銷模式的一項正確陳述是：____。 (c.11, p.17-18)<br>(1) 純分銷商模式使保險產品完全整合進銀行的整體行銷方案<br>(2) 戰略聯盟模式就所需投資而言對於銀行和保險公司都是一種高風險分銷模式<br><span style="color:red;"><strong>✓</strong> </span> (3) 合資公司模式為創新和分銷保險產品而共同成立一個新的實體，並可為銀行客戶專門設計產品<br>(4) 金融控股公司模式是執行起來花費最少的分銷模式</p></li><li><p>在管理會計中，編制財務行動計畫以説明組織實現其目標的的過程可以被最佳地描述為 ____。 (c.7, p.11; c.2, p.4)<br><span style="color:red;"><strong>✓</strong> </span> (1) 預算編制<br>(2) 會計確認<br>(3) 資金業務<br>(4) 資產/負債管理</p></li><li><p>壽險公司在開展業務的每個方面都面臨著許多種風險。保險人面對市場風險的一個實例是：____。 (c.6, p.12)<br>(1) 保險人因低效率的客戶服務流程而導致業務流失<br>(2) 客戶的退保模式高於保險人的預期<br><span style="color:red;"><strong>✓</strong> </span> (3) 保險人的房地產投資因房地產市場整體下滑而貶值<br>(4) 保險人投資組合中的債券因利率上升而損失市場價值</p></li><li><p>以下是對保險公司使用的資訊技術系統的陳述。選擇包含正確陳述的答案選項。 (c.5, p.6、9-12)<br>(1) 商業分析是用於進行大量的、常規的、重複性的商業交易的程式、軟體、資料庫以及 設備的有機集合。<br><span style="color:red;"><strong>✓</strong> </span> (2) 文檔管理系統(DMS)和內容管理系統(CMS)的主要區別是，文檔管理系統主要 用於儲存和檢索檔，內容管理系統主要用於創建、管理、傳遞和發佈各類電子資訊。<br>(3) 專家系統是組織資料庫中的資料，允許使用者獲取其所需要的資訊，並控制資料庫的 結構、流覽、維護的一組電腦程式。<br>(4) 交易處理系統可以產生向接收者提供資訊的文檔，但不能要求接收者拿出文檔。</p></li><li><p>保險人可以通過為員工和業務員建立行為準則，並就如何以道德和保密的方式處理內部及私人資訊對員工進行培訓來鼓勵組織內部的道德行為。以下是關於這兩種舉措的陳述。選擇包含正確陳述的答案選項。 (c.2, p.5、7-8)<br>(1) 行為準則應該僅包含一般準則，而不是雇員可能會碰到的具體情形<br>(2) 要保持誠信的行為準則，公司不應該在審查和修改行為準則的過程中涉及雇員<br>(3) 內部資訊的一個實例是個人身份資訊(PII)<br><span style="color:red;"><strong>✓</strong> </span> (4) 當員工因合法的商業或法律目的向另一方披露私人資訊時，他們應該將所披露的信息量限定在滿足商業和法律目的所需範圍之內</p></li><li><p>管理的四個職能分別是指導、計畫、控制和組織。根據定義，以最有效率和效益的方式集中協調所需的資源來實現組織目標的過程是管理的____職能。 (c.1, p.11-12)<br>(1) 指導<br>(2) 計畫<br>(3) 控制<br><span style="color:red;"><strong>✓</strong> </span> (4) 組織</p></li><li><p>以下是對保險公司的客戶服務代表Nestor Singh與該保險公司客戶之間互動的陳述。選擇對 Singh先生追加銷售活動描述最佳的選項。 (c.14, p.11、16-17)<br><span style="color:red;"><strong>✓</strong> </span> (1) 當一位保單所有人要更新其長期壽險保單時，Singh先生建議其更換購買包含儲蓄成分的現金價值壽險保單。<br>(2) 在一位客戶購買個人壽險保單後，Singh先生建議該客戶購買為失能事件提供財務保障的失能收入保險保單。<br>(3) 在處理一個萬能壽險保單的退保請求之前，Singh先生建議保單所有人通過降低保單保額來減少未來保費支付金額。<br>(4) Singh先生處理了一個來自變額壽險保單所有人的請求，將現有投資資金從一個投資基金重新分配到另一個投資基金。</p></li><li><p>Pier壽險公司是一家股份制保險公司，收購了Barrett金融公司和Brumby公司，爾後，Pier 壽險公司創立了Roan控股公司，Roan擁有Pier人壽、Barrett金融和Brumby公司。關於在該 情形中控股公司安排和涉及公司控股的描述，正確的說法是：Roan是____。 (c.1, p.24)<br>(1) 逆向控股公司，Pier人壽控制Barrett金融、Brumby公司和Roan控股公司<br><span style="color:red;"><strong>✓</strong> </span> (2) 逆向控股公司，Roan控股公司控制Pier人壽、Barrett金融和Brumby公司<br>(3) 順向控股公司，Pier人壽控制Barrett金融、Brumby公司和Roan控股公司<br>(4) 順向控股公司，Roan控股公司控制Pier人壽、Barrett金融和Brumby公司</p></li><li><p>一位核保員發現由於某准被保險人近期動了心臟手術，所以其預期死亡率高於平均值。雖 然該准被保險人有高於平均值的風險，但是該核保員還是認為其可保。在將准被保險人對 於保險人呈現的風險的分類中，該核保員最有可能將該准被保險人劃分為被稱為____ 的風險組。 (c.12, p.9)<br>(1) 優良組<br>(2) 標準組<br><span style="color:red;"><strong>✓</strong> </span> (3) 次標準組<br>(4) 拒保組</p></li><li><p>保險公司的會計資訊的使用者包括保險公司的內部利益相關者和外部利益相關者。使用保 險公司會計資訊的外部利益相關者的一個實例是____。 (c.7, p.4)<br>(1) 保險人合規工作人員<br>(2) 保險人的分銷管理人員<br>(3) 保險人的董事會成員<br><span style="color:red;"><strong>✓</strong> </span> (4) 保險人的債權人</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> LOMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[LOMA]_280_保險原理_試題</title>
      <link href="/2022/07/02/LOMA-280-%E4%BF%9D%E9%9A%AA%E5%8E%9F%E7%90%86-%E8%A9%A6%E9%A1%8C/"/>
      <url>/2022/07/02/LOMA-280-%E4%BF%9D%E9%9A%AA%E5%8E%9F%E7%90%86-%E8%A9%A6%E9%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>LOMA 280 試題</p><a id="more"></a><h1 id="練習題">練習題</h1><h2 id="第-1-章-風險與保險引論">第 1 章 風險與保險引論</h2><blockquote><p><strong>學習目標</strong>： 區分投機風險與純粹風險。</p></blockquote><ol><li>個人和企業都會面臨兩種風險：投機風險和純粹風險。根據定義，純粹風險是指其可能的結果包括____的風險。<br>( 1 ) 損失、獲利或無盈虧<br><span style="color: red;"><strong>✓</strong> </span>( 2 ) 只有損失或無盈虧<br>( 3 ) 只有損失<br>( 4 ) 只有獲利</li></ol><blockquote><p><strong>學習目標</strong>： 描述管理財務風險的各種方法。</p></blockquote><ol start="2"><li>個人和企業經常使用風險管理作為識別和評估財務風險的一種手段。為了消除或減少某一特定的財務風險，個人至少可以採用以下四種風險管理方法之一：迴避風險、控制風險、轉移風險或承擔風險。<br>從以下選項中，選擇正確描述某人控制財務損失風險的選項。<br><span style="color: red;"><strong>✓</strong></span> ( 1 ) Lauren Knill 堅持所有乘坐其汽車的乘客在乘車期間都要系好安全帶<br>( 2 ) Colton Grey 是一名自主經營的平面造型設計藝術家，他購買了一份失能收入損失保單，該保單在他遭遇完全失能時會為他提供按月的收入給付<br>( 3 ) 由於擔心頸部和背部受到傷害，Franklin Mulongo 在遊樂園從不坐過山車<br>( 4 ) Lisa Huggins 在購買了一台新電腦後，她拒絕了電腦生產商對該台電腦系統所提供的保修</li></ol><blockquote><p><strong>學習目標</strong>： 指出可保風險的五個特徵。</p></blockquote><ol start="3"><li><p>一種風險 (即潛在損失) 要成為可保風險，必須具備某些特徵。 以下是關於各種不同風險的陳述，選擇正確體現可保風險特徵之一的選項。<br>( 1 ) 為了向某人提供保險保證，承保人必須能夠預測該準受保人將會發生的損失<br><span style="color: red;"><strong>✓</strong></span> ( 2 ) 為使潛在損失可保，必須具備偶然性這一要素<br>( 3 ) 只有那些會導致承保人和受保人都遭遇巨災性財務損失的潛在損失才被視為是可保的<br>( 4 ) 對於大多數保險類型而言，可保損失必須在金額上是確定的，但對於何時支付保險金則是不確定的</p></li><li><p>每一份保險單都可以被歸類為定額合約或補償性合約。<br>Nancy Upchurch 是一份壽險保單和一份醫療費用保險單的保單所有人兼受保人。<br>Upchurch女士的壽險保單可被歸類為 ( <strong>補償性合約 / 定額合約</strong> )。<br>她的醫療費用保險單可被歸類為 ( <strong>補償性合約 / 定額合約</strong> )<br>( 1 ) 補償性合約 / 補償性合約<br>( 2 ) 補償性合約 / 定額合約<br><span style="color: red;"><strong>✓</strong></span> ( 3 ) 定額合約 / 補償性合約<br>( 4 ) 定額合約 / 定額合約</p></li><li><p>大數法則指出，通常，對特定事件觀察的次數越多，觀察到的結果就 ( <strong>越有 / 越不</strong> ) 可能接近於該事件發生的真實概率或可能性。<br>利用這一概念，承保人已經能夠編制 ( <strong>生命表 / 發病率表</strong> )，該表可以非常準確地指出一個大規模人群在每一年齡可能死亡的人數。<br><span style="color: red;"><strong>✓</strong></span> ( 1 ) 越有 / 生命表<br>( 2 ) 越有 / 發病率表<br>( 3 ) 越不 / 生命表<br>( 4 ) 越不 / 發病率表</p></li></ol><blockquote><p><strong>學習目標</strong>： 定義逆選擇，並舉出兩個會提高或降低個人遭受損失可能性的因素實例。</p></blockquote><ol start="6"><li>根據定義，從保險公司的立場而言，認為其損失可能性高於平均水平的人，會比其他人在更大程度上尋求保險保障的這種傾向被稱為____。<br>( 1 ) 再保險<br>( 2 ) 投機風險<br><span style="color: red;"><strong>✓</strong></span> ( 3 ) 逆選擇<br>( 4 ) 道德風險因素</li></ol><blockquote><p><strong>學習目標</strong>： 指出準受保人所屬的四種風險級別。</p></blockquote><ol start="7"><li>保險公司通常將那些損失可能性，顯著高於平均水平但仍被認為是可保的準受保人歸類為____。<br>( 1 ) 拒保體<br>( 2 ) 優良體<br>( 3 ) 標準體<br><span style="color: red;"><strong>✓</strong></span> ( 4 ) 次標準體</li></ol><blockquote><p><strong>學習目標</strong>： 定義保險利益，並確定在給定情形中保險利益要求是否得到滿足。</p></blockquote><ol start="8"><li>Doris Crowell 為她自己的生命投保一份壽險保單，並指定其隔壁鄰居 Patrick O’ Neill 作為其保單的受益人，雖然他們並無親戚關係，也不存在除了鄰居以外的其他關係。與此同時， O’ Neill 先生也為 Crowell 女士的生命投保一份壽險保單，並指定自己作為受益人。根據保險利益的相關法律，____。<br>( 1 ) 這兩份投保單中都存在保險利益<br><span style="color: red;"><strong>✓</strong></span> ( 2 ) 保險利益最可能存在於 Crowell 女士的投保單中，而非O’ Neill 先生的投保單中<br>( 3 ) 保險利益最可能存在於 O’ Neill 先生的投保單中，而非Crowell 女士的投保單中<br>( 4 ) 這兩份投保單中都不存在保險利益</li></ol><hr><h2 id="第-2-章-人壽與健康保險業">第 2 章 人壽與健康保險業</h2><blockquote><p><strong>學習目標</strong>： 區分企業的三種組織形式，並解釋保險公司為何必須採取公司的形式。</p></blockquote><ol><li>在大多數國家，保險公司和其他大多數企業都必須採取公司的組織形式。公司與其他形式的企業組織之間的一個區別是，____。<br>( 1 ) 公司不如其他組織形式的企業穩定和持久<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 公司的資產和負債屬於公司自身，而非其所有者<br>( 3 ) 公司的結構可以使其免遭被起訴<br>( 4 ) 只有公司會在其某個主要所有者死亡時就需要解散</li></ol><blockquote><p><strong>學習目標</strong>： 區分股份制保險公司、相互保險公司和互助會。</p></blockquote><ol start="2"><li>Benchmark協會是一個為其會員提供會員福利和保險福利而建立的非營利組織，該協會的會員有著共同的職業背景。 Benchmark的會員隸屬於其所在地的分支機構，並負責選舉分支機構的管理人員，這些分支機構通常被稱為分會，負責定期召開會議。只有分會的會員及其家人才可以享有 Benchmark 的保險， Benchmark 可被最確切地歸類為一種被稱為____的組織。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 互助會<br>( 2 ) 財產/災害(P&amp;C)保險公司<br>( 3 ) 合夥企業<br>( 4 ) 存款機構</li></ol><blockquote><p><strong>學習目標</strong>： 描述金融服務業，並說明保險公司在這一行業內所起的作用。</p></blockquote><ol start="3"><li><p>以下是關於金融機構的陳述。其中三個陳述是正確的，一個陳述是錯誤的。選擇包含錯誤陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 保險公司不能被劃歸為金融機構，因為它們在經濟中並不發揮金融仲介的作用<br>( 2 ) 金融機構通過將資金供應者群體的資金導向資金使用者群體而充當金融仲介<br>( 3 ) 金融機構幫助個人、企業和政府進行儲蓄、借貸、投資以及管理資金<br>( 4 ) 金融機構是指主要擁有諸如股票和債券等金融資產、而非設備和原材料等固定資產的一種企業</p></li><li><p>考慮金融服務業內發生的以下合併：<br>。Oak金融服務公司與 Pine銀行最近進行合併，形成了一個新的金融服務公司。合併發生後，Pine銀行繼續以法人實體存在，而Oak金融服務公司則終止存在。<br>。Emerald金融服務公司購買了 Diamond保險公司的控股全。合併發生後，Emerald金融服務公司和 Diamond保險公司都繼續作為獨立的法人實體而存在。<br>從以下選項中，選擇正確表明每種合併交易屬於兼併還是收購的選項。<br>Oak與Pine的交易、Emerald與Diamond的交易<br>( 1 ) 收購、收購<br>( 2 ) 收購、兼併<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 兼併、收購<br>( 4 ) 兼併、兼併</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述美國的聯邦政府和州政府在保險監管中所扮演的角色。</p></blockquote><ol start="5"><li><p>在美國，麥開雲-佛戈森法案影響著保險業的監管。麥開雲-佛戈森法案的主要影響在於，它____。<br>( 1 ) 確保了保險監管在各州之間的統一性<br>( 2 ) 禁止承保人從事各種被認為是不公平的或是欺騙性的活動<br>( 3 ) 將保險監管權留交聯邦政府，只要各州認定聯邦的監管是充分的<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 將保險監管權留交各州政府，只要美國國會認定各州的監管是充分的</p></li><li><p>在美國，美國保險監督官協會(NAIC)負責制定示範性的法律和法規。NAIC及其所制定的示範性法律和法規的一個特徵是，____。<br>( 1 ) NAIC是由美國聯邦政府建立的一個政府性組織<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) NAIC的職能是促進各州保險監管的統一性<br>( 3 ) 各州必須原樣採用NAIC的示範性法律和法規<br>( 4 ) 各州可以修改示範性法律和法規，但它們必須採用每項示範性法律和法規的某些版本</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出在大多數國家通用的兩種主要保險監管類型。</p></blockquote><ol start="7"><li><span style="color: red;"><strong>✼</strong> </span>所有者權益是公司的資產額與其負債額之間的差額，它代表所有者在公司擁有的經濟利益。相互保險公司的所有者權益包括____。<br>( 1 ) 資本和盈餘<br>( 2 ) 資本而非盈餘<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 盈餘而非資本<br>( 4 ) 既非資本，也非盈餘</li></ol><hr><h2 id="第-3-章-保險合約">第 3 章 保險合約</h2><blockquote><p><strong>學習目標</strong>： ( 1 ) 說明有效合約、無效合約和可撤銷合約之間的區別； ( 2 ) 指出訂立一份有效非要式合約所需滿足的四項一般條件，並描述每項條件在保險合約的訂立過程中如何能夠得到滿足。</p></blockquote><ol><li>Robert Houck 從 Classic金融集團為自己的生命購買了一份壽險保單。Houck先生是在法院已經宣告其精神失常之後購買了該份保單。在此情形中，該份保險合約____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 是無效的<br>( 2 ) 是有效的，並對Classic公司具有法律約束力<br>( 3 ) 只有Houck先生可以撤銷<br>( 4 ) Classic公司或Houck先生都可以撤銷</li></ol><blockquote><p><strong>學習目標</strong>： 區分要式合約與非要式合約、單務合約與雙務合約、等價交換合約與射幸合約、附合合約與協商合約，並識別一份保險合約所屬的合約類型。</p></blockquote><ol start="2"><li>壽險合約是具有法律效力的，因為合約當事人滿足有關協議的實質要求而非形式要求。此外，承保人給付保險金的承諾要以受保人在保單有效期內死亡為條件。這一資訊表明，壽險合約是____。<br>( 1 ) 非要式、等價交換合約<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 非要式、射幸合約<br>( 3 ) 要式、等價交換合約<br>( 4 ) 要式、射幸合約</li></ol><blockquote><p><strong>學習目標</strong>： 指出訂立一份有效非要式壽險合約所需滿足的四項一般條件，並描述每項條件在保險合約的訂立過程中如何能夠得到滿足。</p></blockquote><ol start="3"><li><p><span style="color: red;"><strong>✼</strong> </span>以下是關於訂立一份有效非要式壽險合約所需滿足的一般條件的陳述，選擇包含正確陳述的選項。<br>( 1 ) 為了滿足相互合意的要求。只有承保人必須明確地表明他們願意接受協議條款約束的意向<br>( 2 ) 投保人提交投保單和首期保費並承諾繳付續期保費來作為人壽保險合約的對價<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 要使一份保險合約有效，合約當事人都必須向對方當事人提供或承諾某種有價值之物<br>( 4 ) 簽訂保險合約的合法目的，要求通過提出要約和對要約的承諾而得到滿足</p></li><li><p>以下是關於訂立合約過程中簽約能力的陳述，選擇包含正確陳述的選項。<br>( 1 ) 如果承保人向一個年齡尚未達到允許購買保險年齡的人簽發保單，承保人可以起訴並撤銷該保單<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 獲得相應監管機關的許可或授權作為承保人經營保險業務以後，承保人就具備了簽發保險合約的法律能力<br>( 3 ) 在大多數法律管轄區，要訂立一份有效合約，個人必須首先證明其在法庭上的法律能力<br>( 4 ) 公司通常被認為具有與成年人同樣的簽約能力</p></li></ol><blockquote><p><strong>學習目標</strong>： 區分要式合約與非要式合約、單務合約與雙務合約、等價交換合約與射幸合約、附合合約與協商合約，並識別一份保險合約所屬的合約類型。</p></blockquote><ol start="5"><li>不同類型的合約具有某些特徵。在壽險合約中，只有承保人在簽訂合約時作出法律上可執行的承諾。保險合約的這一特徵使之被認為是一份____。<br>( 1 ) 雙務合約<br>( 2 ) 協商合約<br>( 3 ) 附合合約<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 單務合約</li></ol><hr><h2 id="第-4-章-壽險產品的財務設計">第 4 章 壽險產品的財務設計</h2><blockquote><p><strong>學習目標</strong>： 描述法定責任準備金制度，並說明產品的財務設計如何使得壽險公司能夠滿足其保單責任準備金的要求。</p></blockquote><ol><li><p>在保險業，保單責任準備金代表承保人估計其為____所需的資金額。<br>( 1 ) 累積盈餘資金<br>( 2 ) 直接承保人的風險提供再保險<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 向保單所有人給付未來保險金<br>( 4 ) 向其股東支付股利</p></li><li><p><strong>對於本題，如果選項( 1 )至( 3 )都是正確的，選擇選項( 4 )。否則，選擇正確的那個選項。</strong><br>承保人用來設定壽險保單財務取值的制度通常被稱為法定責任準備金制度。這一制度所基於的前提條件包括____。<br>( 1 ) 應付保險金數額在保險事故發生之前應該是確定的或可以計算的<br>( 2 ) 公司應該事先收取建立保單責任準備金所需的資金，以使承保人擁有足夠的資金來支付所發生的賠款和費用<br>( 3 ) 客戶為一份壽險保單支付的金額應該與保險公司為該保單所承擔的風險大小相適應<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 以上各項</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出並定義壽險產品財務設計中的三個主要要素，並說明每個要素如何影響產品的財務設計。</p></blockquote><ol start="3"><li>對於一個保險產品而言，給付成本是指該產品所有給付的價值。躉繳壽險產品的給付成本可以通過____而計算得到。<br>( 1 ) 將營業費用收費加上每年的可能給付責任，再減去預期投資收益<br>( 2 ) 將公司預期收取的保費總額減去可能的給付責任總額<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 將可能的給付責任總額乘以每種給付將會支付的機率<br>( 4 ) 將可能的給付責任總額除以每種給付將會支付的機率</li></ol><blockquote><p><strong>學習目標</strong>： ( 1 ) 指出並定義壽險產品財務設計中的三個主要要素，並說明每個要素如何影響產品的財務設計； ( 2 ) 說明承保人如何將生命表用於產品的財務設計，並描述死亡率對一組保單的給付成本及保險費率的影響。</p></blockquote><ol start="4"><li>以下是關於生命表中所示死亡率的陳述，選擇包含正確陳述的選項。<br>( 1 ) 一般而言，相同年齡和性別的一組受保人的死亡率越高，保險費率就較低<br>( 2 ) 男性的死亡率通常低於相同年齡女性的死亡率<br>( 3 ) 將吸菸者和非吸煙者的死亡率分別列示的生命表被稱為復合生命表<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 經驗生命表是反應保險公司的受保人實際死亡率的一種生命表</li></ol><blockquote><p><strong>學習目標</strong>： 描述複利計息對投資收益的影響，並計算一筆給定資金所賺取的利息額。</p></blockquote><ol start="5"><li>Dan Ruggiero 借給其姊姊 Ronda Houseman 1,000美元。Ruggiero先生向其姊姊收取10%的年利率，按年複利計息。兩年後，Houseman 女士想要全額償還該筆借款及其應計利息總額。這一資訊表明，Houseman女士應當總共向 Ruggiero 先生支付____。<br>( 1 ) 1,000 美元<br>( 2 ) 1,020 美元<br>( 3 ) 1,200 美元<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 1,210 美元</li></ol><blockquote><p><strong>學習目標</strong>： 指出並定義壽險產品財務設計中的三個主要要素，並說明每個要素如何影響產品的財務設計。</p></blockquote><ol start="6"><li>保險產品設計中的營運費用是指承保人日常經營過程中所發生的費用。承保人的營運費用包括以下除____之外的各項。<br>( 1 ) 稅賦支出<br>( 2 ) 工資支出<br>( 3 ) 辦公費用<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 保險金給付</li></ol><blockquote><p><strong>學習目標</strong>： 說明在壽險產品財務設計中採用保守取值的目的。</p></blockquote><ol start="7"><li>在財務設計中採用保守的取值為承保人提供了風險邊際來抵禦不利的變化。特定壽險產品要素的保守取值通常採取____的形式。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 高於預期的死亡率<br>( 2 ) 高於預期的投資收益<br>( 3 ) 高於預期的營運費用<br>( 4 ) 高於預期的利潤</li></ol><blockquote><p><strong>學習目標</strong>： 定義保險費率，並計算一份給定壽險保單的年繳保費額。</p></blockquote><ol start="8"><li>一份保額為500,000美元的壽險保單的年保險費率被表示為每千美元保障收費4美元。則該保單的年繳保費額是____。<br>( 1 ) 20美元<br>( 2 ) 200美元<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 2,000美元<br>( 4 ) 20,000美元</li></ol><blockquote><p><strong>學習目標</strong>： 說明平準保費制度如何運作。</p></blockquote><ol start="9"><li>在財務設計的平準保費制度中，對平準保費保單所收取的保險費率____。<br>( 1 ) 會隨著受保人年齡的增加而提高<br>( 2 ) 會隨著受保人年齡的增加而降低<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 在保單早期高於支付索賠和費用所需的費率<br>( 4 ) 在保單早期低於支付索賠和費用所需的費率</li></ol><hr><h2 id="第-5-章-定額定期壽險">第 5 章 定額定期壽險</h2><blockquote><p><strong>學習目標</strong>： 指出壽險所能滿足的常見個人需求和企業需求。</p></blockquote><ol><li><p>Colleen Moore 是一份壽險保單的保單所有人兼受保人，該保單指定其32歲的兒子David作為受益人。如果Moore女士在保單的有效期內死亡，而David當時仍然生存，那麼該保單的死亡保險金將支付給____。<br>( 1 ) Moore女士的遺產，而且該筆死亡保險金如果一次性支付，很可能會被視為遺產的應納稅收入<br>( 2 ) Moore女士的遺產，而且該筆死亡保險金如果一次性支付，很可能不被視為遺產的應納稅收入<br>( 3 ) David，而且該筆死亡保險金如果一次性支付，很可能會被視為David的應納稅收入<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) David，而且該筆死亡保險金如果一次性支付，很可能不被視為David的應納稅收入</p></li><li><p>George Remick 制定了一份計劃，該計劃考慮了他死亡時可能擁有的資產和負債額，並考慮了Remick先生如何能最好地保持這些資產，以便能按照自己的意願分配這些資產。根據定義，Remick先生制定的這份計劃被稱為____。<br>( 1 ) 關鍵人物保險計劃<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 遺產計劃<br>( 3 ) 企業延續保險計劃<br>( 4 ) 買賣協議</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述定額定期壽險、遞減定期壽險和遞增定期壽險保單所提供的保障，並說明何時可以增加對定期壽險保障收取的保費。</p></blockquote><ol start="3"><li><p>Harris Anderson購買了一幢新的住房，並從HomeSweetHome抵押貸款公司取得了一筆30年期的抵押貸款。該抵押貸款合約的條款要求Anderson先生購買抵押貸款壽險，並指定HomeSweetHome為該保單的受益人。Anderson先生從Beachside保險公司購買了抵押貸款壽險。以下是關於這一情形的陳述，選擇包含正確陳述的選項。<br>( 1 ) HomeSweetHome抵押貸款公司是Anderson先生所購買的抵押貸款壽險合約的一方當事人<br>( 2 ) Beachside保險公司是Anderson先生所獲取的抵押貸款合約的一方當事人<br>( 3 ) Anderson先生為其抵押貸款壽險保單所繳付的續期保費金額在其30年的抵押貸款期間內很可能會遞減<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) Anderson先生的抵押貸款壽險保單任何時候應付的保險金數額通常都等於其所欠的抵押貸款餘額</p></li><li><p>以下是關於家庭收入保險和信用人壽保險的陳述，選擇包括正確陳述的選項。<br>( 1 ) 家庭收入保險是一種遞增定期壽險計劃<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 家庭收入保險在受保人死於保障期內時，向受益人 (通常是受保人健在的配偶) 按月給付約定的收入保險金<br>( 3 ) 信用人壽保險單中應付的保險金數額通常在整個貸款期間內保持不變<br>( 4 ) 如果被保險借款人在保險期限內死亡，信用人壽保險單的保險金可以支付給貸款人或債權人以外的受益人</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述可續保定期壽險和可轉換定期壽險。</p></blockquote><ol start="5"><li><p>Ana Maria Avila為自己購買了一份保額是100,000美元的15年期可續保定期壽險保險。在這15年期限屆滿時，Avila女士保單中的續保條款很可能授權她可以在規定的限制條件下續保其保險保障，____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 而無需提供可保證明<br>( 2 ) 續保期限為一年，而非另一個15年<br>( 3 ) 但首先要接受一次規定的體檢<br>( 4 ) 續保費率與其原先的15年定期保單的費率相同</p></li><li><p>Edgar Whitefeather是一份五年期定期壽險保單的保單所有人兼受保人，該保單的保額在整個保險期限內都保持不變。Whitefeather先生保單的一個特性賦予其將該定期保單轉換為現金價值壽險保單，而無需提供自己仍是可保風險的證明。這一資訊表明，Whitefeather先生的保險單可被描述為是一份____。<br>( 1 ) 可續保定期壽險保單<br>( 2 ) 遞增定期壽險保單<br>( 3 ) 遞減定期壽險保單<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 可轉換定期壽險保單</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述保費返還 (ROP) 定期壽險保單的運作。</p></blockquote><ol start="7"><li>Kaitlin Miller現年35歲，她從Kumquat保險公司購買了一份保額為250,000美元的30年期保費返還定期 (ROP) 壽險保單。Miller女士每年需要繳付700美元保費。Miller女士按規定繳付了所有保費，並在30年期限屆滿保單終止時仍然生存。這一資訊表明，____。<br>( 1 ) Miller女士的保單在Kumquat保險公司未向任何人進行任何給付的情況下終止<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) Kumquat向Miller女士支付了21,000美元<br>( 3 ) Kumquat向Miller女士保單的受益人支付了250,000美元<br>( 4 ) Kumquat向Miller女士支付了250,000美元</li></ol><hr><h2 id="第-6-章-現金價值壽險與兩全保險">第 6 章 現金價值壽險與兩全保險</h2><blockquote><p><strong>學習目標</strong>： 定義現金價值壽險，並將它與定期壽險相區分。</p></blockquote><ol><li>終身壽險產品和定期壽險產品的不同之處在於它們是否包含儲蓄成份，以及它們為受保人提供的保險保障是終身的還是僅為某一期間。( <strong>定期 / 終身</strong> ) 壽險積累現金價值作為其儲蓄成分。只要保單保持有效，( <strong>定期 / 終身</strong> ) 壽險就會為受保人提供終身保障。<br>( 1 ) 定期/定期<br>( 2 ) 定期/終身<br>( 3 ) 終身/定期<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 終身/終身</li></ol><blockquote><p><strong>學習目標</strong>： 指出終身壽險、修正終身壽險和聯合終身壽險的共同特徵，並描述區分這些終身壽險類型的特徵。</p></blockquote><ol start="2"><li><p>以下是關於限期繳費終身壽險保單與連續繳費終身壽險保單這兩種終身壽險保單的陳述，選擇包含正確陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 限期繳費終身壽險保單的年繳保費高於同樣的連續繳費終身壽險保單的年繳保費<br>( 2 ) 連續繳費終身壽險保單的現金價值積累速度快於同樣的限期繳費終身壽險保單<br>( 3 ) 在限期繳費終身壽險保單中，壽險保障在規定的保費繳付期屆滿時終止<br>( 4 ) 連續繳費終身壽險保單在受保人年滿65歲時被視為保費繳清保單</p></li><li><p>有些承保人會簽發修正保費終身壽險保單。根據大多數修正保費保單中的條款規定，其年繳保費額在一個規定的初始期限 (通常為5年或10年) 後會發生變化。與相同保險金額的連續繳費終身壽險保單相比，修正保費終身壽險保單的初始年繳保費通常____。<br>( 1 ) 更低，且其現金價值的積累更為迅速<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 更低，且其現金價值的積累更為緩慢<br>( 3 ) 更高，且其現金價值的積累更為迅速<br>( 4 ) 更高，且其現金價值的積累更為緩慢</p></li><li><p>Sang-jin Kwon現年42歲，為其某種終身壽險保單繳付平準保費。該保單規定，當Kwon先生年滿60歲時，保險金額將會從300,000美元降至200,000美元，當他年滿70歲時，其保險金額進一步從200,000美元降至100,000美元。從以下選項中，選擇正確指出Kwon先生所購買保單的類型、以及Kwon先生為該保單繳付的年度保費是高於還是低於其為一份終身提供300,000美元保障的連續繳費終身壽險保單所繳付年度保費的選項。( 保單的類型、年度保險費率 )<br>( 1 ) 修正保費保單、低於連續繳費保單<br>( 2 ) 修正保費保單、高於連續繳費保單<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 修正保額保單、低於連續繳費保單<br>( 4 ) 修正保額保單、高於連續繳費保單</p></li><li><p>Doug Cooper購買了一份同時承保他和他的妻子Jennifer的終身壽險保單，用於為他們死後提供繳納遺產稅的資金來源。該保單規定，只有Doug和Jennifer都死亡後，才會給付保險金。這一資訊表明，Doug購買的這種保險單是____。<br>( 1 ) 兩全保險單<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 最後生存者壽險保單<br>( 3 ) 聯合終身壽險保單<br>( 4 ) 家庭保單</p></li></ol><blockquote><p><strong>學習目標</strong>： 根據萬能壽險獨立的保單要素、靈活的保費、保額和死亡給付來說明萬能壽險如何區分於終身壽險。</p></blockquote><ol start="6"><li>關於萬能壽險保單的一個正確描述是，____。<br>( 1 ) 無論保單現金價值與死亡給付的比例大小如何，美國聯邦稅法都把該保單做為壽險產品來對待<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 保單所有人可以在某一限度內決定保險金額、死亡給付額及其為此保障繳付的保費額<br>( 3 ) 保單所有人不可以用保單的現金價值作為保單貸款的擔保品<br>( 4 ) 諸如死亡率收費、利率和費用等保單要素都被綜合在一起，並在保單中表示為一個定期保費金額，承保人必須按此金額繳費以保持保單有效</li></ol><blockquote><p><strong>學習目標</strong>： 根據萬能壽險獨立的保單要素、靈活的保費、保額和死亡給付來說明萬能壽險如何區分於終身壽險。</p></blockquote><ol start="7"><li>以下是關於美國的變額壽險(VL)的陳述，選擇包含正確陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 變額壽險保單的保費和現金價值被投資於一個投資帳戶，承保人將該類帳戶與其普通帳戶分開保持<br>( 2 ) 變額壽險保單所提供的死亡給付在整個保險期限內都保持不變<br>( 3 ) 變額壽險保單向保單所有人提供保證的投資收益和最低現金價值<br>( 4 ) 保險公司單方承擔變額壽險保單的投資風險</li></ol><blockquote><p><strong>學習目標</strong>： 描述變額萬能壽險產品與萬能壽險產品及變額壽險產品共有的特性</p></blockquote><ol start="8"><li>Margaret Reece 從 Patrician人壽保險公司購買了一份變額壽險保單。Reece女士的保單綜合了萬能壽險與變額壽險的特性。Reece女士的變額萬能壽險保單的一個特徵是，____。<br>( 1 ) 保單要素未被分拆列示<br>( 2 ) 保費是固定的<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 保額是靈活的<br>( 4 ) 保單具有靈活的利率，並有最低保證利率</li></ol><blockquote><p><strong>學習目標</strong>： 描述兩全保險的特徵</p></blockquote><ol start="9"><li>兩全保險單與現金價值壽險保單之間的區別在於，只有兩全保單才____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 會給付固定的保險金，而不論受保人的生存至保單的滿期日還是在滿期日之前死亡<br>( 2 ) 具有在整個保險期限內都平準不變的保費<br>( 3 ) 會穩定地積累現金價格<br>( 4 ) 可在美國獲得聯邦所得稅的優惠待遇</li></ol><hr><h2 id="第-7-章-附加利益">第 7 章 附加利益</h2><blockquote><p><strong>學習目標</strong>： 指出並描述壽險保單可能提供的三種附加失能利益。</p></blockquote><ol><li><p>Rusty Shackleford是一份由Mountainview人壽保險公司簽發的終身壽險保單的保單所有人兼受保人。Shackleford先生在一次意外事故中受傷，導致在18個月內無法工作。在Shackleford先生滿足了三個月的等待期之後，Mountainview開始為Shackleford先生的保單繳付續期保費，該保單的現金價值如同Shackleford先生自己在繳付保費一樣繼續增長。這一資訊表明，Shackleford先生的保單中包含一項____。<br>( 1 ) 投保人失能保費豁免利益<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 受保人失能保費豁免利益<br>( 3 ) 增額繳清選擇權利益<br>( 4 ) 失能收入損失利益</p></li><li><p>可被附加到個人壽險保單上的一種利益是失能收入損失利益。關於附加失能收入損失利益的一個正確陳述是，____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 受保人必須完全失能才能領取保險金<br>( 2 ) 承保人在失能剛發生時即開始給付保險金<br>( 3 ) 包含失能收入損失利益的壽險保單中很少會同時包含受保人失能保費豁免利益<br>( 4 ) 失能收入損失利益每月給付的保險金數額是受保人目前收入的一定百分比</p></li></ol><blockquote><p><strong>學習目標</strong>： 說明意外死亡利益附約提供的保障，並舉出常見除外責任的實例。</p></blockquote><ol start="3"><li><p>Rachel Loo，年齡29歲，在其所乘坐的商業班機發生的空難中死亡，航班上所有人都死於此次空難。在Loo女士死亡時，她受一份保額為300,000美元的終身壽險保單的保障，該保單中有一項典型的意外死亡雙倍補償利益附約。這一資訊表明，承保人應負責向Loo女士保單的指定受益人給付____。<br>( 1 ) 0美元<br>( 2 ) 300,000美元<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 600,000美元<br>( 4 ) 900,000美元</p></li><li><p>有一種附加意外利益是意外死亡及全殘(AD&amp;D)利益。AD&amp;D利益通常規定，____。<br>( 1 ) 受保人必須全殘並且無法工作，才能領取保險金<br>( 2 ) 承保人對於同一次意外事故中遭受的傷害既給付意外死亡保險金，又給付全殘保險金<br>( 3 ) 受保人必須遭遇肢體的實際喪失才有資格領取全殘保險金<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 只有當受保人因意外事故喪失任意兩肢或雙目失明時，承保人才會給付全殘保險金</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出三種壽險提前給付利益附約，並描述這些附約之間的區別。</p></blockquote><ol start="5"><li>壽險提前給付利益又稱生前給付利益，它允許保單所有人在符合特定條件的情況下，可以選擇在受保人死亡之前領取保單的全部或部分死亡保險金。三種常見提供的壽險提前給付利益是終末疾病(TI)利益、重大疾病(DD)利益和長期護理(LTC)保險利益。以下是關於這些不同類型壽險提前給付利益的陳述，選擇包含正確陳述的選項。<br>( 1 ) 承保人通常對所有保額的保單都提供壽險提前給付利益的保障<br>( 2 ) 承保人通常對這三種壽險提前給付利益都要另外收取一筆附加保費<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 壽險提前給付利益的支付會相應地減少受保人死亡時向受益人給付的死亡保險金<br>( 4 ) 承保人對於這三種壽險提前給付利益的保險金通常都只提供一次性支付的方式</li></ol><blockquote><p><strong>學習目標</strong>： 描述可將壽險保單的保障擴展至承保多個受保人的三種保險附約。</p></blockquote><ol start="6"><li>Sally Warner是一份終身壽險保單的保單所有人兼受保人，她想要在保單上加貼一份第二受保人附約，以使其企業合夥人Patricia Skelton獲得壽險保障。承保人最可能會根據____來確定該附約所提供保障的保險費率。<br>( 1 ) Warner女士和Skelton女士的綜合風險特徵<br>( 2 ) 僅Warner女士的風險特徵<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 僅Skelton女士的風險特徵<br>( 4 ) 其對所有第二受保人附約收取的一個固定金額</li></ol><blockquote><p><strong>學習目標</strong>： 指出兩種可保性利益附約，並說明它們如何使壽險保單所有人可以購買額外的保險保障。</p></blockquote><ol start="7"><li>Scott Herbermann是一份保額為200,000美元的終身壽險保單的保單所有人兼受保人。該保單中包含一項附加利益附約，該附約授權Herbermann先生可以分別在34歲、37歲和40歲時購買25,000美元增額保險，而無須提供可保證明。這一資訊表明，Herbermann先生的保單中包含的這種附加利益被稱為____。<br>( 1 ) 附加受保人附約<br>( 2 ) 增加繳清選擇權利益<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 保證可保性(GI)利益<br>( 4 ) 信用人壽保險</li></ol><hr><h2 id="第-8-章-個人壽險保單條款">第 8 章 個人壽險保單條款</h2><blockquote><p><strong>學習目標</strong>： 描述保險單中的猶豫期條款。</p></blockquote><ol><li>Ginger Harrison為自己投保了一份保額為250,000美元的個人壽險保單並繳付了首期保費。承保人按投保申請簽發了保單，承保人的代理人於6月15日將保單送交給了Harrison女士。該保單中包含一個典型的10天猶豫期。 Harrison女士在6月22日死於一次交通事故。她從未表示過是想要保留該保單還是將它退還給承保人。在此情形中，指定受益人____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 有權領取250,000美元，因為Harrison女士的保障在10天的猶豫期內是有效的<br>( 2 ) 僅有權領取首期保費的退還，因為Harrison女士尚未通知承保人她是決定保留保單還是退還保單<br>( 3 ) 僅有權領取首期保費的退還，因為Harrison女士的死亡發生在10天的猶豫期內<br>( 4 ) 無權領取任何資金，因為Harrison女士的保障直到10天的猶豫期屆滿之後才會生效</li></ol><blockquote><p><strong>學習目標</strong>： 指出構成壽險保單所有人與承保人之間完整合約的文件。</p></blockquote><ol start="2"><li><span style="color: red;"><strong>✼</strong> </span>完整合約條款的具體措辭會因保單是封閉型合約還是開放型合約而有所不同。以下是關於這兩類合約的陳述，選擇包含正確陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 封閉型合約中的完整合約條款通常規定，完整合約由保單、各項附約、以及投保單副本構成<br>( 2 ) 由於互助承保人簽發的壽險保單是封閉型合約，所以承保人必須在保單上附上互助會的章程和規章制度才能使合約有效<br>( 3 ) 所有個人壽險保單都是開放型合約<br>( 4 ) 開放型合約中的完整合約條款允許以口頭聲明來變更保單的條款</li></ol><blockquote><p><strong>學習目標</strong>： 指出構成壽險保單所有人與承保人之間完整合約的文件。</p></blockquote><ol start="3"><li>以下描述的每種情形都是壽險保單的投保申請中所作的不實告知，承保人在收到保單的死亡索賠之後才發現不實告知。在每個案例中，保險單中都包含一項典型的兩年期不可抗辯條款:<br>● Claire Bodin在其投保單中聲明，她曾在一次慢跑意外事故中遭遇了右腕骨折，而實際上她是左腕骨折。 Bodin女士死於其保單的可抗辯期間內。<br>● Miriam Kauffman在其投保單中聲明，她曾因支氣管炎接受過治療，而實際上她是因癌症而接受過治療。 Kauffman女士在保單簽發三年後死於癌症。<br>● Clayton Stuckey在其投保單中聲明，他曾在2月26日接受過一次常規醫療檢查，而實際上此次就醫是其接受心臟搭橋手術後的一次術後檢查。 Stuckey先生在保單簽發18個月後死亡。<br>就這些情形而言，最有可能正確的說法是，承保人有權以____提交的投保單中的重大不實 告知為由撤銷合約。<br>( 1 ) Bodin女士、Kauffman女士和Stuckey先生<br>( 2 ) 僅Bodin女士<br>( 3 ) 僅Kauffman女士<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 僅Stuckey先生</li></ol><blockquote><p><strong>學習目標</strong>： 運用標準的寬限期條款的規定來確定在給定情況下壽險保單是否因未繳保費而已失效。</p></blockquote><ol start="4"><li>Creighton Madden是一份保額為100,000美元的定期壽險保單的保單所有人兼受保人，該保單中包含一項典型的寬限期條款。該保單的年繳保費為500美元，到期日是每年的9月1日。 Madden先生死於2010年9月14日，當時尚未繳付2010年9月1日到期的續期保費。在Madden 先生死亡時，他已向承保人總共繳付了10,000美元保險費。在此情形中，承保人最有可能向 Madden先生的指定受益人給付的金額是____。<br>( 1 ) 0美元<br>( 2 ) 10,000美元<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 99,500美元<br>( 4 ) 100,000美元</li></ol><blockquote><p><strong>學習目標</strong>： 指出壽險保單可以復效的條件，以及為使保單複效保單所有人必須滿足的條件。</p></blockquote><ol start="5"><li>Antonio Castellano是一份傳統終身壽險保單的保單所有人兼受保人，該保單已在兩年前失效。Castellano先生現在希望恢復這份失效的保單。在其保單失效時，保單中沒有未償還的保單貸款。如果Castellano先生保單中的複效條款屬於典型條款的話，那麼為恢復其保單的效力，Castellano先生必須滿足的條件包括____。<br>( 1 ) 只要在復效條款規定的時間內提出複效申請並提供自己繼續可保的充分證明<br>( 2 ) 只要在復效條款規定的時間內提出複效申請並繳付所有逾期保費及其應計利息<br>( 3 ) 只要提供自己繼續可保的充分證明並繳付所有逾期保費及其應計利息<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 在復效條款規定的時間內提出複效申請、提供自己繼續可保的充分證明並繳付所有逾期保費及其應計利息</li></ol><blockquote><p><strong>學習目標</strong>： 確定承保人在發現壽險保單受保人的年齡或性別誤告時可能會採取的行動。</p></blockquote><ol start="6"><li>Tom Espeland向Mosaic保險公司申請為其母親Joanna投保一份壽險保單。他在投保單上將Joanna的年齡誤告為50歲，而Joanna的真實年齡為53歲。該保單中包含一項典型的年齡誤告條款。 Mosaic在處理該保單的死亡給付索賠時，發現了這一年齡誤告。在此情形中，Mosaic 最有可能會____。<br>( 1 ) 根據投保單中申報的年齡所確定的保額來給付<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 將保單的保額下調至等於已繳保費按照Joanna投保時的真實年齡所能購買到的金額<br>( 3 ) 給予保單受益人領取年齡誤告所致保費差額退還的選擇權，而不是調整保單保額<br>( 4 ) 宣告該保單無效，因為Joanna的年齡在投保單中被不實告知了</li></ol><blockquote><p><strong>學習目標</strong>： 描述保單貸款條款和保單提現條款所規定的權利，並說明保單貸款與商業貸款的區別。</p></blockquote><ol start="7"><li>現金價值壽險保單通常賦予保單所有人從承保人那裡借入資金的權利，但要以保單的現金價值作為貸款的擔保。以下是關於此種保單貸款特徵的陳述，選擇包含正確陳述的選項。<br>( 1 ) 承保人通常不允許保單所有人從萬能壽險保單中藉取保單貸款<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 保單貸款是承保人在保單中最終必須給付款項中的一部分預付款項<br>( 3 ) 保單貸款在保單所有人和承保人之間建立了一種債務人與債權人的關係<br>( 4 ) 保單所有人有權在保額的限度內借取任何金額的保單貸款</li></ol><blockquote><p><strong>學習目標</strong>： 指出並描述現金價值壽險保單中通常包含的不喪失選擇權。</p></blockquote><ol start="8"><li>積累現金價值的壽險保單會對保單所有人提供不喪失選擇權，以下是關於不喪失選擇權的陳述，選擇包含正確陳述的選項。<br>( 1 ) 根據減額繳清保險不喪失選擇權簽發的保障不具有現金價值<br>( 2 ) 保單所有人一旦選擇了展期定期不喪失選擇權，就喪失了撤銷該展期定期保險以及將保單退保以領取剩餘現金價值的權利<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 根據現金支付不喪失選擇權，當保單所有人將保單退保時，承保人可以從保單中所列示的現金退保價值中扣除未償還的保單貸款餘額以及貸款利息<br>( 4 ) 根據減額繳清保險選擇權，原保單中提供的任何附加利益，比如意外死亡利益等，通常在保單以減額繳清保險形式延續時仍會提供</li></ol><blockquote><p><strong>學習目標</strong>： 指出承保人有時在個人壽險保單中規定的除外責任。</p></blockquote><ol start="9"><li>Jutta Kindermann擁有一份保額為250,000美元的壽險保單的保障，該保單中包含一個典型的意外死亡給付附約以及一個典型的兩年期自殺除外責任條款。在該保單簽發三年後，Kindermann女士死亡，死亡原因為自殺。在她死亡時，其保單有效，並且沒有拖欠的保費或保單貸款。在此情形中，承保人最可能有義務向Kindermann女士的保單受益人____。<br>( 1 ) 不給付任何款項，因為Kindermann女士為自殺身亡<br>( 2 ) 僅給付保單已繳保費的退還<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 僅給付基本死亡保險金<br>( 4 ) 既給付基本死亡保險金，又給付意外死亡保險金</li></ol><hr><h2 id="第-9-章-壽險保單的所有權">第 9 章 壽險保單的所有權</h2><ol><li>保險單是承保人與保單所有人之間的一份合約，要受到合約法法則的約束。保險單同時也是一種財產，因而要受到物權法法則的約束。在法律術語中，財產可被分為不動產和動產，也可被分為有形財產和無形財產。就這些分類而言，保險單可被正確歸類為____。<br>( 1 ) 有形不動產<br>( 2 ) 有形動產<br>( 3 ) 無形不動產<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 無形動產</li></ol><blockquote><p><strong>學習目標</strong>： 區分第一順位受益人與次順位受益人，以及可撤銷受益人與不可撤銷受益人。</p></blockquote><ol start="2"><li><p>Lindsay Inthachak是一份終身壽險保單的保單所有人兼受保人。Lindsay指定她的丈夫Stephen作為自己死後領取保險金的人，並指定他們的女兒Lily在Stephen先於自己死亡的情況下領取 保險金。在此情形中，Stephen是一種被稱為____的保單受益人。<br>( 1 ) 次順位受益人<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 第一順位受益人<br>( 3 ) 第二順位受益人<br>( 4 ) 後繼受益人</p></li><li><p><span style="color: red;"><strong>✼</strong> </span>以下是關於指定可撤銷受益人和不可撤銷受益人的陳述，選擇包含正確陳述的選項。<br>( 1 ) 如果保單所有人只有經受益人本人同意以後，才有權變更受益人指定，那麼這種受益人指定方式就被稱為是可撤銷的<br>( 2 ) 絕大多數壽險保單的受益人都是不可撤銷受益人<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 在受保人生存期間，可撤銷受益人對壽險保單的權益被稱為領取保險金的“預期”<br>( 4 ) 如果保單所有人在受保人生存期間可以不受限制地變更受益人指定，那麼這種受益人指定方式就被稱為是不可撤銷的</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出分紅壽險保單中最為常見的保單紅利選擇權，並描述每種選擇權的特點。</p></blockquote><ol start="4"><li><p>分紅保單是保單所有人通過領取保單紅利而分享保險公司可分配盈餘的一種保險單。非分紅保單是保單所有人無權分享保險公司可分配盈餘的一種保險單。以下是關於分紅壽險保單和非分紅壽險保單的陳述，選擇包含正確陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 儘管保單紅利並不保證支付，但大多數承保人都會對那些預期在長期內保持有效的分紅壽險保單定期支付紅利<br>( 2 ) 通常，分紅保單的費率低於同樣的非分紅 保單的費率<br>( 3 ) 在釐定非分紅保單的費率時，承保人通常對於死亡率、投資收益和費用採用的假設要比同樣的分紅保單更保守<br>( 4 ) 保單紅利不被視為分紅保單所有人在一個保單年度內已繳保費的部分返還</p></li><li><p>分紅保單是保單所有人通過領取保單紅利而分享保險公司可分配盈餘的一種保險單。以下是關於這些保單紅利的陳述，選擇包含正確陳述的選項。<br>( 1 ) 每年應支付的保單紅利會在承保人的核保部門進行風險評估的過程中加以確定<br>( 2 ) 通常，分紅壽險保單的紅利金額會隨著保單年限的增加而顯著減少<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 某些壽險保單的條款規定，保單必須生效至少滿兩年後，才會支付保單紅利<br>( 4 ) 分紅壽險保單的投保人通常在投保過程中就要選定一種紅利選擇權，並且一旦選定之後，在保險期限內就不可進行變更。</p></li><li><p>分紅壽險保單的所有人可以採取多種不同的方式來領取保單紅利，這些領取方式被稱為紅利選擇權。根據某種紅利選擇權，承保人將保單紅利用於繳付續期保費。根據定義，這種紅利選擇權被稱為____。<br>( 1 ) 累積生息選擇權<br>( 2 ) 自動紅利選擇權<br>( 3 ) 現金紅利選擇權<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 抵減保費紅利選擇權</p></li><li><p><span style="color: red;"><strong>✼</strong> </span>當Craig Alred為自己購買一份分紅終身壽險保單時，他選擇了現金紅利選擇權。在該保單生效滿五年後，Alred先生要求將紅利選擇權變更為增額繳清保險紅利選擇權。就這一情形而言，正確的說法是，____。<br>( 1 ) 根據這種新的紅利選擇權簽發的任何增額繳清保險都是保額等於原保單現金價值的一年期定期保險<br>( 2 ) 對根據這種新的紅利選擇權簽發的任何增額繳清保險收取的保費中包括彌補承保人費用開支的金額<br>( 3 ) 承保人會要求Alred先生在變更為這種新的紅利選擇權之前提供符合要求的可保證明<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 根據這種新的紅利選擇權簽發的任何增額繳清保險將是終身壽險，其保額為紅利在Alred先生的到達年齡時所能購買到的金額</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出壽險保單所有權轉讓的方式。</p></blockquote><ol start="8"><li><p>壽險保單的轉讓可以採取以下兩種方式之一:絕對轉讓或抵押轉讓。就抵押轉讓而言，正確的說法是，受讓人的權利____。<br>( 1 ) 包括賦予保單所有人的全部所有權<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 僅限於那些與保單的貨幣價值直接相關的所有權<br>( 3 ) 是永久的，而非暫時的<br>( 4 ) 僅限於選定一種保險金給付選擇權的權利</p></li><li><p>Tim Parnell在他女兒Samantha三歲生日後不久，以Samantha為受保人購買了一份保額為50,000美元的終身壽險保單。該保單包含一項典型的所有權變更條款。當Samantha年滿23歲時，Tim採用批單法將該保單的所有權轉讓給了Samantha。關於在此情形中採用批單法進行保單所有權的轉讓，最有可能正確的說法是，____。<br>( 1 ) Tim必須與Samantha簽訂一份獨立於壽險保單存在的轉讓協議<br>( 2 ) Tim必須以抵押轉讓的形式將壽險保單轉讓給Samantha<br>( 3 ) 承保人必須簽發一份指定Samantha為新的保單所有人的新壽險保單<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) Tim必須以書面的形式通知承保人所有權的變更</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出給定情形下在受保人死亡後有權領取壽險保單保險金的人。</p></blockquote><ol start="10"><li><span style="color: red;"><strong>✼</strong> </span>Ian Muldoon是一份保額為150,000美元的壽險保單的保單所有人，保單的受保人是他的妻子Sarah。該保單指定Sarah的母親Hannah為第一順位受益人，並指定Sarah的哥哥Joseph為次順位受益人。當Sarah死亡時，Ian、Hannah和Joseph都已先於她死亡。這一資訊表明，該保單的保險金應該支付給____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) Ian的遺產<br>( 2 ) Sarah的遺產<br>( 3 ) Hannah的遺產<br>( 4 ) Joseph的遺產</li></ol><blockquote><p><strong>學習目標</strong>： 描述同時死亡法案中的一般規定，並說明當保單中包含一項生存條款時，該規定會如何受到影響。</p></blockquote><ol start="11"><li><p>Sharon Rickett是一份壽險保單的保單所有人兼受保人，該保單指定她的丈夫Brandon為第一順位受益人，並指定他們的女兒Abigail為次順位受益人。 Sharon和Brandon都在一次車禍中喪生，而且無法確定他們死亡的先後順序。 Sharon的保單沒有規定共同災難。如果Rickett一家所在的州已頒布實施典型的同時死亡法案，並且Abigail在其父母死亡時仍然生存，那麼Sharon的保單保險金最有可能____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 支付給Abigail<br>( 2 ) 支付給Sharon的遺產<br>( 3 ) 支付給Brandon的遺產<br>( 4 ) 不會向任何人支付，因為Sharon和Brandon同時死亡</p></li><li><p>有些壽險保單包含一項條款，規定受益人要獲得領取保險金的資格，必須比受保人多生存一段約定的時間。根據這種條款，如果受益人在受保人死後生存的時間沒有達到這個約定的期限，那麼保險金將視同受益人先於受保人死亡的情形來處理。這樣，保險金就更有可能按照保單所有人的意願進行分配。根據定義，這種條款被稱為____。<br>( 1 ) 可撤銷權條款<br>( 2 ) 後繼受益人條款<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 生存條款<br>( 4 ) 關鍵人物條款</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出給定情形下在受保人死亡後有權領取壽險保單保險金的人。</p></blockquote><ol start="13"><li>根據許多國家的法律，如果受益人非法且蓄意地殺害了受保人，那麼其領取保險金的資格將( <strong>會 / 不會</strong> )被剝奪。如果購買保單的目的就是意圖從受保人的死亡中獲利，那麼該壽險合 約就會被視為( <strong>無效 / 有效</strong> )。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 )會 / 無效<br>( 2 )會 / 有效<br>( 3 )不會 / 無效<br>( 4 )不會 / 有效</li></ol><blockquote><p><strong>學習目標</strong>： 計算一份給定的壽險保單在受保人死亡後應給付的保險金。</p></blockquote><ol start="14"><li>Nathan Katogir是一份保額為100,000美元的分紅終身壽險的保單所有人兼受保人，該保單還有一份保額為100,000美元的意外死亡利益附約。 Katogir先生1,150美元的年繳保費在6月21日到期。6月30日，Katogir先生在一次車禍中喪生。在他死亡時，他尚未繳付其保單逾期的保費。另外，在他死亡時，他的保單中有4,500美元的累積保單紅利及利息留存於承保人處，還有2,000美元未償還的保單貸款。這一資訊表明，應向Katogir先生保單的受益人給付的死亡保險金總額是____。<br>( 1 ) 96,850美元<br>( 2 ) 101,350美元<br>( 3 ) 196,850美元<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 201,350美元</li></ol><blockquote><p><strong>學習目標</strong>： 指出壽險保單中通常包含的保險金給付選擇權，並描述每種選擇權的特點。</p></blockquote><ol start="15"><li>除了一次性給付保險金的方式外，保險公司還向保單所有人和受益人提供幾種領取壽險保單保險金的備選方式，這些備選方式被稱為保險金給付選擇權。就這些保險金給付選擇權而言，正確的說法是，____。<br>( 1 ) 終身年金收入選擇權通常會導致其每次給付的金額高於固定金額選擇權或固定期間選擇權下的每次給付額<br>( 2 ) 選擇利息選擇權的保單所有人不能對受款人提取保險金的權利加以限制<br>( 3 ) 根據固定期間選擇權，受款人通常有權在給付期內只提取一部分資金<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 根據固定金額選擇權，保險公司按約定的金額進行等額分期給付，直到保單的保險金及其所產生的利息付訖為止</li></ol><hr><h2 id="第-10-章-年金">第 10 章 年金</h2><blockquote><p><strong>學習目標</strong>： 定義年金合約、年金受保人、受款人、滿期日 和給付期間這些術語。</p></blockquote><ol><li><p>根據定義，其壽命被用於確定年金合約應付保險金數額的人被稱為____。<br>( 1 ) 受款人<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 年金受保人<br>( 3 ) 合約所有人<br>( 4 ) 年金對價</p></li><li><p>Ravi Patel在2010年2月1日購買了一份年金。根據年金合約的條款，承保人將在2030年2月1日開始按年給付的收入保險金。就該合約的滿期日和年金間隔期而言，正確的說法是，Patel先生的合約的滿期日為____。<br>( 1 ) 2010年2月1日，且該合約的年金間隔期為一年<br>( 2 ) 2010年2月1日，且該合約的年金間隔期為二十年<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 2030年2月1日，且該合約的年金間隔期為一年<br>( 4 ) 2030年2月1日，且該合約的年金間隔期為二十年</p></li></ol><blockquote><p><strong>學習目標</strong>： 區別即期年金合約與延期年金合約、躉繳保費年金合約與浮動保費年金合約、定額年金合約和變額年金合約。</p></blockquote><ol start="3"><li><p>年金合約可被歸類為即期年金或延期年金。自合約簽發日起超過一個年金間隔期之後才開始提供定期收入保險金的年金合約是( <strong>即期 / 延期</strong> )年金。對於這類年金合約，自合約所有人購買延期年金之日起，到給付期間開始之日為止的這段時間被稱為年金合約的( <strong>年金領取 / 累積</strong> )期間。<br>( 1 )即期 / 年金領取<br>( 2 )即期 / 累積<br>( 3 )延期 / 年金領取<br><span style="color: red;"><strong>✓</strong> </span> ( 4 )延期 / 累積</p></li><li><p>David Hoddeson現年58歲，從其父親的遺產中繼承了300,000美元。Hoddeson先生將這筆繼承財產全部作為一次性繳清的保費，購買了一份年金合約，該年金合約將從Hoddeson先生65歲生日時開始按月提供定期收入保險金。這一資訊表明，Hoddeson先生購買的是一份____。<br>( 1 ) 浮動保費延期年金<br>( 2 ) 浮動保費即期年金<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 躉繳保費延期年金<br>( 4 ) 躉繳保費即期年金</p></li><li><p>變額年金是一種其累積價值的金額和定期收入保險金的數額，都會隨一種或一種以上特定投資基金的業績而波動的年金。以下是關於變額年金的陳述，選擇包含正確陳述的選項。<br>( 1 ) 簽發變額年金的承保人必須保證合約的累積價值不會遭遇本金的虧損並且至少會賺取一個保證的最低利率。<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 美國的聯邦法律將變額年金作為有價證券來對待，必須遵循聯邦證券法<br>( 3 ) 一旦變額年金的合約所有人將保費在多個子賬戶間進行配置後，就不能變更未來保費所要投資的子賬戶<br>( 4 ) 如果變額年金的合約所有人將保費在多個子賬戶間進行配置後，通常就不能變更在特定子賬戶中配置的資金比例</p></li><li><p>承保人簽發的兩種混合型年金產品是權益指數化年金(EIA)和市場價值調整(MVA)年金。就這些混合型年金而言，正確的說法是，____。<br>( 1 ) EIA 通常被歸類為變額年金<br>( 2 ) EIA 不提供任何保證<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) MVA年金 允許合約所有人在合約中規定的某些時間轉移或提取已存的保費，以賺取當期的市場利率<br>( 4 ) MVA年金 要求合約所有人在整個合約期內被“鎖定”在固定收益上</p></li></ol><blockquote><p><strong>學習目標</strong>： 說明個人年金合約中包含的標準合約條款。</p></blockquote><ol start="7"><li>有一種個人年金合約條款允許保單所有人在收到合約後的一個約定期間(通常為10到30天)內審視其保單，在此期限內，合約所有人有權撤銷合約，並如數收回已繳付的首期保費。這種個人年金合約條款被稱為____。<br>( 1 ) 不可抗辯條款<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 猶豫期條款<br>( 3 ) 完整合約條款<br>( 4 ) 紅利條款</li></ol><blockquote><p><strong>學習目標</strong>： 描述某些變額年金合約中包含的保證利益。</p></blockquote><ol start="8"><li>有些變額年金合約保證，在累積期間內，即使子賬戶的投資業績不佳，已向合約繳付金額的一定百分比仍可供每年提現。這種保證利益被稱為____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 最低保證提現利益(GMWB)<br>( 2 ) 最低保證死亡利益(GMDB)<br>( 3 ) 最低保證收入利益(GMIB)<br>( 4 ) 最低保證累積利益(GMAB)</li></ol><blockquote><p><strong>學習目標</strong>： 說明年金合約所有人通常繳付的費用。</p></blockquote><ol start="9"><li>Antoine Fargo從Habersham保險公司購買了一份變額年金合約。該合約規定，每次Fargo先生從該產品中提取資金時，Habersham都要按照提現額的一定百分比收取一筆費用，這一百分比會隨著時間的推移而降低，最終，Fargo先生提取資金時無須支付費用。根據定義，這種費用被稱為____。<br>( 1 ) 或有遞延銷售費用(CDSC)，它被視為一種前端收費<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 或有遞延銷售費用(CDSC)，它被視為一種後期附加費用<br>( 3 ) 死亡率和費用風險(M&amp;E)收費，它被視為一種前端收費<br>( 4 ) 死亡率和費用風險(M&amp;E)收費，它被視為一種後期附加費用</li></ol><blockquote><p><strong>學習目標</strong>： 指出並區分年金合約中提供的給付選擇權類型。</p></blockquote><ol start="10"><li>Greta Anderson是一份償還式終身年金的合約所有人、年金受保人及受款人，她為該年金一次性躉繳了75,000美元保費。該年金在Greta生存期間內每年提供5,000美元的收入保險金。Greta在此收入保險金給付開始五年後死亡，在她死亡時，她已經總計領取了25,000美元的定期收入保險金。在此情形中，Greta的年金合約中指定的次順位受款人有權領取____。<br>( 1 ) 0美元<br>( 2 ) 5,000美元的一次性給付<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 50,000美元<br>( 4 ) 75,000美元</li></ol><blockquote><p><strong>學習目標</strong>： 列示影響年金定期收入保險金數額的因素，並描述每種因素的影響。</p></blockquote><ol start="11"><li>對於所有類型的終身年金，定期收入保險金給付的次數都要取決於死亡率經驗以及給付的頻率和給付期間的總長度。當其他所有因素都相同時，通常正確的說法是，年金受保人的預期壽命越短，____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 每次定期收入保險金的數額就越大<br>( 2 ) 每次定期收入保險金的數額就越小<br>( 3 ) 承保人預期給付次數的就越多<br>( 4 ) 年金合約規定的利率就越低</li></ol><blockquote><p><strong>學習目標</strong>： 描述不同法律管轄區域對於年金的兩種所得稅優惠政策，並比較傳統IRA和 羅斯IRA享受的所得稅政策。</p></blockquote><ol start="12"><li>在美國，個人退休儲蓄計劃(IRA)的稅收待遇因其屬於傳統IRA還是羅斯IRA而有所不同。以下陳述中正確的是，____。<br>( 1 ) 傳統IRA 的繳費不可從當期應納稅收入中扣除<br>( 2 ) 傳統IRA 投資收益都在免稅的基礎上進行累積和支付<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 如果個人年齡未滿59.5歲時就從羅斯IRA中提取資金，聯邦稅法通常會徵收懲罰性的稅賦<br>( 4 ) 羅斯IRA 對年度繳費沒有限制</li></ol><hr><h2 id="第-11-章-團險保險原理">第 11 章 團險保險原理</h2><blockquote><p><strong>學習目標</strong>： 指出團體保險合約的當事人，並區別分擔型團體保險計劃與非分擔型團體保險計劃。</p></blockquote><ol><li><p>團體保險主合約的當事人是____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 僅團體保單持有人和承保人<br>( 2 ) 僅團體保單持有人和團體受保人<br>( 3 ) 僅承保人和團體受保人<br>( 4 ) 承保人、團體保單持有人和團體受保人</p></li><li><p>以下是關於團體保險合約的陳述，選擇包含正確陳述的選項。<br>( 1 ) 如果團體保單持有人負責繳付團體保障的全部保費，那麼該團體保險計劃就是一個分擔型計劃<br>( 2 ) 每個團體成員都必須獲得團體主合約的一份單獨文本<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 團體壽險保單中承保的每個團體成員都有權指定在其死後領取保險金的受益人<br>( 4 ) 團體保單持有人不需要向每位團體成員都提供一份保險憑證或描述團體保險計劃的一份單獨福利手冊</p></li><li><p>保險合約是一種必須按照合約法的原則而訂立的非要式合約。因此，要訂立一份有效的團體保險合約，必須滿足某些要求。以下是關於這些要求的陳述，選擇包含正確陳述的選項。<br>( 1 ) 承保人與團體保險合約所承保的團體受保人必須對合約條款相互合意。<br>( 2 ) 團體保險的準受保人與團體保單持有人都必須具備簽約能力才能簽訂一份團體保險合約。<br>( 3 ) 團體保單持有人必須證明對團體受保人具備保險利益，以使合約出於合法目的而訂立。<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 團體保單持有人與承保人必須交換法律上充分的對價以使合約有效。</p></li></ol><blockquote><p><strong>學習目標</strong>： 描述觀察期和在職工作要求的運作。</p></blockquote><ol start="4"><li>Rafael Montero於2010年6月5日接受了Beehive公司的一份工作，並於2010年6月10日實際開始為Beehive工作。Beehive對其僱員既提供非分擔型團體壽險，也提供分擔型團體健康保險。Beehive的員工福利計劃規定了一個典型的30天觀察期和31天的准入期。這一資訊表明，Montero先生的團體壽險保障將於____。<br>( 1 ) 2010年6月10日生效，並且他將在6月10日起算的31天期間內有資格註冊團體健康險保障<br>( 2 ) 2010年6月10日生效，並且他將在7月10日起算的31天期間內有資格註冊團體健康險保障<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 2010年7月10日生效，並且他將在7月10日起算的31天期間內有資格註冊團體健康險保障<br>( 4 ) 2010年7月10日生效，並且他將在8月10日起算的31天期間內有資格註冊團體健康險保障</li></ol><blockquote><p><strong>學習目標</strong>： 比較團體核保與個人核保，並指出團體核保人所要考慮的風險特徵。</p></blockquote><ol start="5"><li>以下團體都向Palmino金融公司投保團體壽險保障。 Palmino的團體核保准則是大多數承保人都採用的典型準則。以下某個團體可能不符合獲得團體保險保障的資格，選擇描述這一團體的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) RBG協會是一個已退休人員的小型團體，這些人純粹是為了以合理費率獲得團體壽險保障的目的而組合在一起的一個團體<br>( 2 ) 在美國，Milltown工會致力於增進其會員的福利、利益和權利<br>( 3 ) Prism公司是一個會計師同業組織，為其會員提供繼續教育課程和有組織的旅行機會，並致力於為會員提供自願的團體險保障<br>( 4 ) CB&amp;C協會是一個由同處於建築行業的若干小雇主的合格僱員及兩個工會的會員組成的團體</li></ol><blockquote><p><strong>學習目標</strong>： 指出常見的可保團體類型。</p></blockquote><ol start="6"><li>團體核保人在評估一個團體是否為可保風險時要考慮團體的許多特定特徵。會使雇主-僱員團體有資格獲得團體保險保障的一個因素是，如果____。<br>( 1 ) 雇主計劃不承擔團體保險的任何保費<br>( 2 ) 雇主預期會面臨其成員的過度頻繁變動<br>( 3 ) 團體在任何時候至少都要保持對團體保險計劃25%的參保率<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 有足夠的新成員定期地加入團體從而使該團體的規模和年齡結構保持穩定</li></ol><blockquote><p><strong>學習目標</strong>： 描述團體壽險保單中給付表的目的和運用。</p></blockquote><ol start="7"><li>團體壽險保單中通常包含一張表格，該表格確定了保單為每一位受保人所提供的壽險保障金額。例如，該表格可能為所有的合格僱員提供相當於其一年工資額的壽險保障金額；在其他的此類表格中，壽險保障金額可能會根據僱員是高管、經理或非管理層員工而相應不同。根據定義，這種表格被稱為____。<br>( 1 ) 混合費率表<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 利益表<br>( 3 ) 自行管理團體計劃表<br>( 4 ) 經驗退費表</li></ol><blockquote><p><strong>學習目標</strong>： 說明承保人用來計算團體險保費的方法。</p></blockquote><ol start="8"><li><p>Celestial金融服務公司正在與以下兩個潛在客戶協議團體壽險保障：<br>● Spiral公司是一個新成立的組織，僱傭有九名僱員。<br>● Galaxy公司正在為其1,500名僱員尋求壽險保障，Galaxy目前受保於另一家保險公司。<br>就計算這兩家公司的團體保險保障的費率所採用的方法而言，最有可能正確的說法是，Celestial金融服務公司會____。<br>( 1 ) 對Spiral公司和Galaxy公司都採用手冊費率法<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 對Spiral公司採用手冊費率法，對Galaxy公司採用經驗費率法<br>( 3 ) 對Spiral公司和Galaxy公司都採用經驗費率法<br>( 4 ) 對Spiral公司採用經驗費率法，對Galaxy公司採用手冊費率法</p></li><li><p>Fencepost公司為其每個合格僱員提供保額為50,000美元的非分擔型團體壽險保障。該保障目前每月的費率是每千美元保障額為0.50美元。二月份，Fencepost有100名合格僱員。三月一日，Fencepost又僱傭了五名新的僱員，他們立刻就有資格獲得團體壽險保障。在整個三月份期間，Fencepost的僱員數量保持不變。這一資訊表明，三月份應繳付的保費金額為____。<br>( 1 ) 25美元<br>( 2 ) 125美元<br>( 3 ) 2,500美元<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 2,625美元</p></li></ol><hr><h2 id="第-12-章-團體人壽保險與團體退休計劃">第 12 章 團體人壽保險與團體退休計劃</h2><blockquote><p><strong>學習目標</strong>： 指出並描述團體壽險保單中包含的典型條款，並將這些條款與個人壽險保單 中包含的類似條款相比較。</p></blockquote><ol><li><p>團體壽險保單中通常包含許多標準條款，其中有許多都類似於個人壽險保單中所出現的條款。以下是關於團體壽險保單中通常出現的條款的陳述，選擇包含正確陳述的選項。<br>( 1 ) 團體壽險保單中的不可抗辯條款禁止承保人在不抗辯團體保險主合約有效性的情況下，對團體成員個人的保障進行抗辯。<br>( 2 ) 有些團體壽險保單中包含一項轉換權，它允許因某些原因而終止保障的被保險成員將其團體壽險保障轉換為一份個人壽險保單，但必須提供其自身的可保證明。<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 團體壽險保單中通常包含年齡誤告條款，但通常不包含性別誤告條款。<br>( 4 ) 團體保險單中的寬限期條款規定，如果保單因未繳保費而中止，那麼團體保單持有人在法律上沒有義務為寬限期內所提供的保障繳付保費。</p></li><li><p>團體壽險保單的被保險團體成員不能指定團體保單持有人作為保單的受益人，除非該保單是____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 團體債權人壽險保單<br>( 2 ) 單雇主團體保單<br>( 3 ) 多雇主團體保單<br>( 4 ) 工會團體保單</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出團體定期壽險計劃、團體意外死亡和全殘計劃、團體現金價值保險計劃以及團體債權人壽險計劃的特徵。</p></blockquote><ol start="3"><li><p>團體壽險保單的一種類型是按年續保定期保險(YRT)計劃。就團體YRT計劃而言，正確的說法是，____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 承保人通常有權在每年續保時變動團體YRT保險計劃的費率<br>( 2 ) 團體壽險保單中幾乎沒有YRT保險計劃<br>( 3 ) 當每年進行YRT保險保障的續保時，團體受保人需要提供可保證明<br>( 4 ) 團體YRT保險計劃積累現金價值</p></li><li><p>Julia Gallagher受其雇主所提供的團體壽險計劃的保障。該團體保險單提供125,000美元保額的團體定期壽險，50,000美元的團體意外死亡及全殘保險，以及25,000美元保額的差旅意外保險。如果Gallagher女士死於為其雇主出差途中所遭遇的一次意外事故，那麼她的受益人將有權領取____的保險金。<br>( 1 ) 0美元<br>( 2 ) 75,000美元<br>( 3 ) 125,000美元<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 200,000美元</p></li><li><p>最為常見的一種團體現金價值壽險計劃是團體繳清計劃，團體繳清計劃綜合了繳清終身壽險和減額定期壽險的特點。就僱員和雇主為此類團體繳清計劃分擔繳付的保費而言，正確的說法是，僱員繳付的保費通常用於購買____。<br>( 1 ) 繳清終身壽險和遞減定期壽險<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 僅繳清終身壽險<br>( 3 ) 僅遞減定期壽險<br>( 4 ) 既非繳清終身壽險，也非遞減定期壽險</p></li><li><p>有些承保人提供團體萬能壽險(UL)計劃和/或團體變額萬能壽險(VUL)計劃。就這兩類團體計劃而言，正確的說法是，____。<br>( 1 ) 在團體UL計劃中，雇主負責繳付保單的一部分保費<br>( 2 ) 在團體UL計劃中，僱員不能選擇其所希望繳付的保費額<br>( 3 ) 在團體VUL計劃中，雇主負責繳付保單的全部保費<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 團體VUL計劃的參加者有權選擇不同的子賬戶來投資其現金價值</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出團體退休計劃的組成要素，並描述計劃書中所包含的條款類型。</p></blockquote><ol start="7"><li><p>退休計劃的一個組成要素是一份詳細的法律協議，它確立由雇主發起的一項退休計劃的存在，並規定計劃各方的權利和義務。這個組成要素還會描述一些其他事項，比如計劃所承保的個人、計劃所提供的給付和計劃的籌資方法等。這個組成要素被稱為____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 計劃書<br>( 2 ) 資金運用方式<br>( 3 ) 計劃發起者<br>( 4 ) 計劃管理者</p></li><li><p>退休計劃的給付公式描述了退休計劃發起者對計劃參加者所負財務責任的計算方法。有一種 給付公式可以使計劃發起者事先確知每年為該計劃提供資金將會發生多少成本。這種給付公式最可能是____。<br>( 1 ) 常用於養老金計劃的確定給付公式<br>( 2 ) 常用於儲蓄計劃的確定給付公式<br>( 3 ) 常用於養老金計劃的確定繳費公式<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 常用於儲蓄計劃的確定繳費公式</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出並描述由雇主發起的退休計劃的四種常見類型。</p></blockquote><ol start="9"><li><p>在美國，由雇主發起的兩種退休計劃分別是401(K)計劃和股票激勵計劃。就這兩種退休計劃而言，正確的說法是，在____。<br>( 1 ) 401(K)計劃中，僱員對計劃的繳費額作為其當期的應納稅所得<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 401(K)計劃中，僱員必須簽訂一份工資扣減協議，允許雇主從僱員的工資中扣減僱員的計劃繳費額<br>( 3 ) 股票激勵計劃中，繳費取決於公司的利潤<br>( 4 ) 股票激勵計劃中，退休資產以計劃參加者的名義積累，並且該計劃還承諾提供按月的退休收入保險金</p></li><li><p>在美國，雇主有時會為僱員建立一種被稱為利潤分享計劃的退休儲蓄計劃。典型的利潤分享計劃的一個特徵是，____。<br>( 1 ) 雇主的繳費額每年都會變動，但雇主每年必須向計劃繳付一筆最低保費<br>( 2 ) 該計劃保證對僱員提供約定的按月退休收入保險金<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 雇主每年的繳費額取決於其當年的利潤<br>( 4 ) 僱員不允許向此類計劃繳費</p></li><li><p>在美國，老年、遺屬、殘疾與健康保險(OASDHI)法案或社會保障(Social Security)向符合條件的居民提供退休收入。在加拿大，加拿大養老金計劃(CPP)或魁北克養老金計劃(QPP)提供退休給付。就這些計劃是否強制要求被保障的僱員及其雇主繳費而言，正確的說法是，____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 社會保障計劃、CPP和QPP都要求強制繳費<br>( 2 ) 只有社會保障計劃要求強制繳費<br>( 3 ) 只有CPP和QPP要求強制繳費<br>( 4 ) 社會保障計劃、CPP和QPP都不要求強制繳費</p></li></ol><hr><h2 id="第-13-章-健康保險">第 13 章 健康保險</h2><blockquote><p><strong>學習目標</strong>： 指出基本醫療費用保障的一些常見類型，並描述每種保障所提供的給付。</p></blockquote><ol><li><p>大額醫療費用保障規定了屬於其保障範圍的不同類型的治療費、醫療用品費和醫療服務費，同樣也規定了不屬於其保障範圍的此類費用。從以下選項中，選擇正確指出通常包含在大額醫療費用保障中的一種醫療費用以及通常被排除在大額醫療費用保障範圍之外的一種醫療費用的選項。<br><strong>包含在保障範圍之內 / 排除在保障範圍之外</strong></p><p>( 1 ) 麻醉和輸氧 / 手術用品和服務<br>( 2 ) 選擇性的整容手術 / 兒童免疫<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 醫院對半私人病房的食宿待遇收取的費用  / 常規牙齒治理<br>( 4 ) 常規眼科檢查和視力矯正 / 語言障礙矯正</p></li><li><p>在其大額醫療費用保單中，Nova保險公司規定，對各項特定醫療服務的最高給付金額為特定地理區域內的醫療服務提供者通常對此類服務所收取費用額的90%。這一資訊表明，Nova根據一項特定醫療服務的____來確定對該項服務的最高給付金額。<br>( 1 ) 手冊費率<br>( 2 ) 混合費率<br>( 3 ) 既得受領權要求<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 慣常合理(UCR)費用</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出大額醫療費用保單中費用分擔特徵的目的，並舉出常見費用分擔方法的實例。</p></blockquote><ol start="3"><li>Ademe Bekele享有一份綜合大額醫療保單的保障，保單規定了700美元的日曆年度自付額、15%的共同保險規定，以及5,000美元的最高自負額條款。2010年3月份，Bekele先生因肺炎治療而住院四天，在住院期間，Bekele先生髮生12,500美元承保範圍內的醫療費用。如果 Bekele先生在2010年期間沒有發生過其他的醫療費用，那麼他在2010年的自負醫療費用總計為____。<br>( 1 ) 700美元<br>( 2 ) 1,770美元<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 2,470美元<br>( 4 ) 5,000美元</li></ol><blockquote><p><strong>學習目標</strong>： 指出並描述基本醫療費用保障和大額醫療費用保障之外的其他醫療費用保障的常見類型。</p></blockquote><ol start="4"><li><p>美國的大多數受保人都受到某種管理式醫療計劃的保障。雖然存在幾種管理式醫療計劃，但其中大多數都具有一些共同的特徵。其中一個共同特徵就是，管理式醫療計劃通常____。<br>( 1 ) 都將全部財務風險轉移給承保人而非醫療服務提供者<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 都要求計劃成員除繳付保費之外，還要在接受醫療服務時向醫療服務提供者支付一筆共付額<br>( 3 ) 都會按月調整計劃成員繳付的保費額，以反映計劃成員利用醫療服務的次數<br>( 4 ) 都將廣泛的預防保健計劃排除在保障範圍之外，這些預防保健計劃包括妊娠期保健和胎兒保健、常規體檢、普查計劃等</p></li><li><p>美國聯邦政府通過一項被稱為聯邦健康保險計劃的聯邦政府計劃提供某些醫療費用給付。聯邦健康保險計劃____提供醫療費用給付。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 向年滿65歲的老人和符合條件的失能人士<br>( 2 ) 僅向年滿65歲的老人<br>( 3 ) 僅向符合條件的失能人士<br>( 4 ) 美國的所有人，不論年齡大小或失能與否</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出將失能收入損失保障劃分為短期保障或長期保障所使用的分類標準。</p></blockquote><ol start="6"><li>根據給付期間的長短，個人失能收入損失保單所提供的保障可被歸類為短期保障或長期保障。例如，大多數短期個人失能收入損失保障提供的最長給付期間在( <strong>13至26週 / 一至五年</strong> )之間。長期個人失能收入損失保障對於因疾病導致的失能提供的最長給付期間通常可以 延展( <strong>一年 / 至受保人年滿65歲時為止</strong> )。<br>( 1 ) 13至26週 / 一年<br>( 2 ) 13至26週 / 至受保人年滿65歲時為止<br>( 3 ) 一至五年 / 一年<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 一至五年 / 至受保人年滿65歲時為止</li></ol><blockquote><p><strong>學習目標</strong>： 指出失能收入損失保險單中普遍包含的完全失能的各種定義，並區分這些定義。</p></blockquote><ol start="7"><li><p>Joel Cohen的失能收入損失保單中包含一個完全失能的“目前通用”定義，大多數失能收入損失保單中都會包含該種定義。根據其保單的規定，在受保人失能持續滿兩年後，該保單對完全失能的定義將發生變動。這一資訊表明，如果Cohen先生遭遇失能，那麼在是失能的初始兩年期間屆滿時，只有當他的失能____，他才會被視為完全失能。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 使其不能從事以其所受教育、培訓或經驗理應勝任的任何職業時<br>( 2 ) 使其無法履行其原職業的必要職責時<br>( 3 ) 使其無法履行任何職業的必要職責時<br>( 4 ) 使其賺取的收入低於其失能前所賺取的收入時</p></li><li><p>以下是關於失能收入損失保障的陳述，選擇包含正確陳述的選項。<br>( 1 ) 一般而言，失能收入損失保障所提供的給付金額傾向於全額替代個人失能前的收入。<br>( 2 ) 大多數失能收入損失保障旨在從受保人失能的第一天起就提供給付。<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 推定失能是指一旦出現即會導致受保人自動被視為完全失能的一種約定狀況。<br>( 4 ) 失能收入給付金額通常應設定得足夠低，以使失能受保人的收入和生活水平大幅降低</p></li></ol><blockquote><p><strong>學習目標</strong>： 指出並描述失能收入損失保險單中可能包含的某些附加利益。</p></blockquote><ol start="9"><li>Nancy Tong購買了一份個人失能收入損失保單，該保單規定了一個固定的給付金額。該保單中包含一種附加利益，授權受保人根據其收入的增加而相應地提高給付金額，而不需要提供可保證明。這一資訊表明，Tong女士的失能收入損失保單中包含一項被稱為____的附加利益。<br>( 1 ) 最低保證收入利益(GMIB)<br>( 2 ) 生活費用調整(COLA)利益<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 加保選擇權利益<br>( 4 ) 部分失能利益</li></ol><blockquote><p><strong>學習目標</strong>： 描述長期護理保險單的給付啟動條件。</p></blockquote><ol start="10"><li><strong>對於本題，如果選項( 1 )至( 3 )都是正確的，選擇選項( 4 )。否則，選擇正確的那個選項。</strong><br>只有當受保人無人幫助就無法履行至少規定數量的日常生活活動(ADL)或者存在嚴重的認知障礙時，長期護理保險金通常才會予以給付。關於日常生活活動，正確的說法是，被視為日常生活活動的活動包括____。<br>( 1 ) 進食<br>( 2 ) 洗澡<br>( 3 ) 更衣<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 以上各項</li></ol><blockquote><p><strong>學習目標</strong>： 描述承保人用來給付長期護理保險金的方法。</p></blockquote><ol start="11"><li>有些長期護理(LTC)保單規定，承保人以一個約定的每日最高給付額為限，對受保人每天實際發生的、承保範圍內的長期護理費用給予補償。例如，如果受保人入住一家養老院每天實際花費100美元，而保單提供一個125美元的每日給付額，那麼受保人每天將獲得100美元的給付額，即為養老院護理髮生的實際成本。在此情形中，此類LTC保單中所包含的計算LTC給付額的方法被稱為____。<br>( 1 ) 給付啟動條件法<br>( 2 ) 定額給付法<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 補償法<br>( 4 ) 隨同法</li></ol><hr><h2 id="第-14-章-健康險保單">第 14 章 健康險保單</h2><blockquote><p><strong>學習目標</strong>： 指出並描述個人健康險保單中通常包含的條款。</p></blockquote><ol><li>有一項個人健康險保單條款限定了對承保人的理賠決策持有異議的索賠人有權為領取自認為應得的保險金而起訴承保人的時間期限。根據定義，這一條款被稱為____。<br>( 1 ) 索賠條款<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 訴訟條款<br>( 3 ) 停損條款<br>( 4 ) 超額保險條款</li></ol><blockquote><p><strong>學習目標</strong>： 描述承保人在個人健康保險產品的財務設計中所要考慮的因素。</p></blockquote><ol start="2"><li><p>對於本題，選擇包含能正確完成以下段落中空格A和B的詞語的選項。<br>對個人健康保險投保單的核保著重於確定準受保人所代表的發病率風險程度。會影響準受保 人所表現出的發病率風險程度的一個因素是，準受保人是男性還是女性。一般而言，女性會比同齡男性經歷 <strong><strong>A</strong></strong> 發病率。因此，為女性提供健康保險保障的成本一般 <strong><strong>B</strong></strong> 為同齡男性提供健康保險保障的成本。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 更高的 / 高於<br>( 2 ) 更高的 / 低於<br>( 3 ) 更低的 / 高於<br>( 4 ) 更低的 / 低於</p></li><li><p>許多法律轄區都要求承保人的賠付率必須至少達到一個規定的最低比例。一組保單的賠付率通常表示為____的百分比。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 承保人對該組保單支付的保險金佔該組保單保費額<br>( 2 ) 承保人在寬限期內收到的保費額佔保費總額<br>( 3 ) 承保人以保費返還形式支付的保費佔保費總額<br>( 4 ) 承保人因為保單失效而損失的保費佔保費總額</p></li></ol><blockquote><p><strong>學習目標</strong>： 計算當受保人同時受保於兩份都包含協調給付(COB)條款的團體健康險保單時，應給付的保險金數額。</p></blockquote><ol start="4"><li><p>Rachel Culpepper享有兩份團體醫療費用計劃的保障，一份計劃由其雇主提供，另一份計劃由其丈夫的雇主提供。兩份計劃都規定了500美元的自付額和20%的共保比例要求。兩份計劃中都包含一項協調給付(COB)條款，但兩份計劃中都未包含不重複給付條款。Culpepper女士的第一計劃是由其雇主提供的計劃。在當前日曆年度期間，Culpepper女士發生了5,600美元的准許醫療費用。這一資訊表明，Culpepper女士有權從其丈夫的計劃中領取的保險金數額是____。<br>( 1 ) 1,020美元<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 1,520美元<br>( 3 ) 3,580美元<br>( 4 ) 4,080美元</p></li><li><p>Damon Utsey和Andrea Utsey是一對夫妻，他們有一個小女兒Abigail。倆人都有一份全職的工作，他們的雇主都為僱員及其配偶和受撫養人提供團體醫療費用保障，兩個團體計劃中都包含協調給付(COB)條款，並且都規定用生日規則法來確定受撫養人所享有的兩個計劃中哪個計劃是第一給付提供者。Utsey一家人的生日如下所示:<br>● Damon的生日是1970年10月9日<br>● Andrea的生日是1972年4月20日<br>● Abigail的生日是2004年10月15日<br>在此情形中，最有可能會被視為Abigail的給付第一提供者的計劃是由____。<br>( 1 ) Damon的雇主提供的計劃，因為Damon比Andrea年長<br>( 2 ) Damon的雇主提供的計劃，因為他的生日要比Andrea的生日更接近Abigail的生日<br>( 3 ) Damon的雇主提供的計劃，因為他們一家三口人中有兩個人的生日都與Damon的生日處在同一個月<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) Andrea的雇主提供的計劃，因為她的生日比Damon的生日在一年中所處的位置更早</p></li></ol><blockquote><p><strong>學習目標</strong>： 區別完全保險型計劃與完全自保型計劃。</p></blockquote><ol start="6"><li>以下是關於採用基金籌付機制來承擔團體保險計劃的理賠成本及管理費用的方法的陳述，選擇包含正確陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 大多數團體長期失能收入損失保險計劃都是完全保險型計劃<br>( 2 ) 在完全保險型團體保險計劃中，團體保單持有人承擔全部賠付的風險和責任<br>( 3 ) 在完全保險型團體保險計劃中，如果所有提起的索賠金額超過了承保人所收取的保費總額，承保人必須向團體保單持有人退還差額部分<br>( 4 ) 大多數團體長期護理保險計劃都是完全自保型計劃</li></ol><blockquote><p><strong>學習目標</strong>： 描述完全自保型團體健康保險計劃的運作，包括對停損保險和計劃管理的利用。</p></blockquote><ol start="7"><li>Skyline公司通過一項完全自保型計劃來為其僱員提供團體醫療費用和失能收入損失保險保障。Skyline購買了停損保障來保護自己免遭在一年之內經歷幾起特大醫療費用索賠的風險。根據該停損保障的條款規定，只有當Skyline在合約年度內承擔的索賠總額超過100萬美元時，承保人才會負責對雇主進行賠付。這一資訊表明，Skyline購買的這種停損保障被稱為____。<br>( 1 ) 特定停損保障<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 累計停損保障<br>( 3 ) 個案停損保障<br>( 4 ) 續薪保障</li></ol><hr><h1 id="模擬試題">模擬試題</h1><ol><li><p>保險監管的一個主要關注點是確保保險公司公平、道德地開展業務。例如，許多國家都通過法律來禁止承保人從事不公平的交易行為。根據定義，這種保險監管被稱為____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 市場行為監管<br>( 2 ) 償付能力監管<br>( 3 ) 謹慎性監管<br>( 4 ) 安全性監管</p></li><li><p>一種風險(即潛在損失)要成為可保風險，必須具備某些特徵。以下是關於可保風險特徵的陳述，選擇包含正確陳述的選項。<br>( 1 ) 唯一可保的風險類型是投機風險<br>( 2 ) 純粹風險不可保，因為它存在獲利的可能性<br>( 3 ) 為使潛在損失可保，必須具備偶然性這一要素<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 對於大多數保險類型而言，為使潛在損失可保，損失必須在時間和金額上都是可確定的</p></li><li><p>一份合約必須依託於交換法律上充分的對價。當Jacques Renard從Prescott人壽保險公司購買一份壽險保單時，Prescott通過承諾在Renard先生死於保單有效期內時給付保險金，從而提供了法律上充分的對價。Renard先生通過向Prescott提交____來為其壽險合約提供法律上充分的對價。<br>( 1 ) 僅投保單<br>( 2 ) 僅首期保費<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 投保單和首期保費<br>( 4 ) 首期保費和之後的續期保費</p></li><li><p>變額萬能壽險(VUL)綜合了變額壽險與萬能壽險的特性。變額萬能壽險保單的一個典型特性是，____。<br>( 1 ) 它們保証投資收益和現金價值<br>( 2 ) 它們不被視為有價證券，因為承保人承擔VUL保單的投資風險<br>( 3 ) 承保人將VUL保單的現金價值置於其普通賬戶中<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 保單所有人可以選擇死亡給付是保持不變，還是隨著子賬戶投資收益的變動而變動</p></li><li><p>根據定義，根據壽險保單的某種保險金給付選擇權領取保險金的個人或實體被稱為____。<br>( 1 ) 轉讓人<br>( 2 ) 受讓人<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 受款人<br>( 4 ) 優先受益人</p></li><li><p>Liza Nagel是一份保額為200,000美元的壽險保單的保單所有人兼受保人。Nagel女士死於保單有效期內，受益人提交了保險金索賠申請。理賠員利用以下資訊來計算應付的保險金數額:<br>● 350美元已宣告而尚未支付的保單紅利<br>● 600美元留存於承保人處的累積保單紅利<br>● 10,000美元增額繳清保險<br>● 650美元的到期未繳保費<br>● 5,000美元的未償還保單貸款<br>這一資訊表明，應對Nagel女士的壽險保單給付的保險金總額是____。<br>( 1 ) 183,400美元<br>( 2 ) 194,700美元<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 205,300美元<br>( 4 ) 214,100美元</p></li><li><p>Westcott健康保險公司正在確定對以下兩個投保團體健康保險的團體收取的首期保險費率：<br>● Camelot公司是一家擁有超過10,000名僱員的大公司，這些僱員都有資格獲得團體健康 保險保障。Camlot在過去五年中都由另一家健康保險公司承保。<br>● Pixie公司是一家擁有10名員工的小公司，這些員工都有資格獲得團體健康保險保障。Pixie在過去兩年中都由另一家健康保險公司承保。<br>從以下選項中，選擇正確指出Westcott最可能會用來計算這兩個團體首期保險費率的方法的選項。<br><strong>Camelot / Pixie</strong><br>( 1 ) 手冊費率法 / 手冊費率法<br>( 2 ) 手冊費率法 / 經驗費率法<br>( 3 ) 混合費率法 / 經驗費率法<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 經驗費率法 / 手冊費率法</p></li><li><p>Calypso公司為其符合條件的僱員提供團體壽險保障。該團體保險的保費按月繳付。在某個月期間，有八名新僱員註冊參加了Calypso的團體壽險計劃，但沒有被保險的僱員離職。就被保險團體成員的這一增加對Calypso每月繳付的保費數額和保險費率的影響而言，正確的說法是，每月的保費數額____。<br>( 1 ) 提高，並且每千元保障的保險費率也會提高<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 提高，但是每千元保障的保險費率不變<br>( 3 ) 不變，並且每千元保障的保險費率也不會變<br>( 4 ) 不變，但是每千元保障的保險費率會提高</p></li><li><p>Banyan公司為其符合資格要求的僱員發起建立了一個確定繳費計劃。此項計劃的既得受領權要求和其他條款都在計劃書中加以規定。僱員參加計劃是自願的。以下是關於Banyan公司此項計劃的陳述，選擇包含正確陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) Banyan採用確定繳費計劃的一個好處是，它可以事先確知每年為該計劃提供資金所需發生的成本。<br>( 2 ) Banyan採用確定繳費計劃表明，計劃參加者將來領取的給付金額在其退休前就可事先確定。<br>( 3 ) Banyan的計劃書中的既得受領權要求規定了僱員為獲得參加計劃的資格而必須滿足的要求。<br>( 4 ) 僱員自願參加Banyan的計劃這一事實表明，所有合格的團體成員都會自動被註冊為計劃參加者。</p></li><li><p>Fauna公司採用自保方式為其僱員提供醫療費用保障。Fauna從Luray保險公司購買了一份保險，該保險對Fauna承擔的健康保險理賠責任設定了一個最高資金限額。保險合約規定，只有當Fauna在12個月內承擔的賠付總額達到500,000美元時，Luray才會開始對Fauna進行賠付。Fauna從Luray購買的這種保險保障被稱為____。<br>( 1 ) 特定停損保障<br>( 2 ) 全額補償保障<br>( 3 ) 個案停損保障<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 累計停損保障</p></li><li><p>Crescent保險公司向現年16歲的Drew Fleming出售了一份壽險保單。Drew居住的法律轄區允許購買壽險的最小年齡為18歲。就Crescent與Drew之間的合約是否具有法律效力而言，正確的說法是，該合約最有可能____。<br>( 1 ) 對Crescent而言是可撤銷的，並且Crescent隨時可以撤銷該合約<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 對Drew而言是可撤銷的，並且Drew在年滿18歲之前或者年滿18歲之後的一段合理時間內都可以撤銷該合約<br>( 3 ) 對Drew而言是可撤銷的，但Drew只有在年滿18歲之後才可以撤銷該合約<br>( 4 ) 是無效的，Crescent和Drew都不可以撤銷該合約</p></li><li><p>當今的金融服務業以單一金融機構能夠滿足其客戶對銀行、保險和有價證券等多種需求這一趨勢為特徵。這種趨勢通常被稱為____。<br>( 1 ) 隨同性<br>( 2 ) 註冊成立<br>( 3 ) 全球化<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 混業</p></li><li><p>現金價值壽險不同於定期壽險的一個特徵是，諸如終身壽險保單的現金價值壽險保單通常。<br>( 1 ) 以一個低於相應定期壽險保單費率的費率來提供保障<br>( 2 ) 以一個隨著受保人年齡增長而逐年增加的費率來提供保障，而定期壽險保單的費率在整個保險期限內保持不變<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 在保險保障之外還提供儲蓄成分，而定期壽險保單只提供保險保障<br>( 4 ) 只有當受保人死於保單規定的期限內時才會給付死亡保險金，而定期壽險保單為受保人提供終身保障，只要保單保持有效</p></li><li><p>個人健康險保單通常包含一項條款，該條款限定了對承保人的理賠決策持有異議的索賠人有權為領取自認為應得的保險金而起訴承保人的時間期限。這項個人健康險保單條款被稱為____。<br>( 1 ) 停損條款<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 訴訟條款<br>( 3 ) 索賠條款<br>( 4 ) 轉換條款</p></li><li><p>Sylvie Hyde是一份終身壽險保單的保單所有人兼受保人，該保單包含一項典型的配偶及子女保險附約。Sylvie的配偶Van以及他們的三個子女都受該附約的保障。關於配偶及子女保險附約的一個正確陳述是，____。<br>( 1 ) Van享有的保險保障也是終身壽險保障<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 每個子女享有的保險保障都是定期壽險，在他們到達規定的年齡時將會終止<br>( 3 ) 如果Sylvie在該保險附約簽發日之後又有新出生或領養的子女增至附約中，該附約的保費將會增加<br>( 4 ) 該附約的保費隨著Van和子女們的年齡增長而增加</p></li><li><p>根據定義，變額壽險(VL)是現金價值壽險的一種形式，____。<br>( 1 ) 其保費和死亡給付的金額在整個保險期限內都是固定的<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 其保費是固定的，但死亡給付的金額在整個保險期限內可能變動<br>( 3 ) 其保費是浮動的，且死亡給付的金額在整個保險期限內可能變動<br>( 4 ) 其保費是浮動的，但死亡給付的金額在整個保險期限內是固定的</p></li><li><p>以下是關於平准保費制度的陳述，選擇包含正確陳述的選項。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 根據平准保費制度，承保人利用來自保單早期的保費資金加上投資收益，來幫助支付保單後期數量遞增的死亡索賠。<br>( 2 ) 承保人不能基於受保人的年齡而提高平准保費保單的費率，但他們可以在一組平准保費保單的給付成本提高時相應提高費率。<br>( 3 ) 平准保費制度允許個人購買一系列一年期定期壽險保單，並且每個保障年度繳付相同的保費額，而不是隨著受保人年齡的增長每年繳付遞增的保費。<br>( 4 ) 承保人會隨著一組平准保費保單所承保受保人的年齡增長而提高費率，以便有足夠的資金來支付每年遞增的死亡索賠數量。</p></li><li><p>在美國，聯邦健康保險計劃是一項為符合資格的個人提供醫療費用給付的聯邦政府計劃。關於這項計劃的一個正確陳述是，它____。<br>( 1 ) 承保註冊者的全部醫療費用，而且無需註冊者分擔繳費<br>( 2 ) 只為低收入的個人提供醫療費用給付<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 只為年滿65歲的老人和某些失能人士提供醫療費用給付<br>( 4 ) 禁止享有該項計劃的人購買補充性的保障</p></li><li><p>Teresa Fahey享有兩份團體醫療費用計劃的保障，每份計劃都規定了250美元的日曆年度自付額和20%的共保比例要求。兩份計劃中都包含一項典型的協調給付(COB)條款，但該條款都不是不重複給付條款。Fahey女士在上年度住院期間發生了10,000美元的准許醫療費用，這是她在該年度發生的全部醫療費用。被指定作為其第一計劃的計劃支付了該計劃下的全部應付金額。在此情形中，被指定作為第二計劃的計劃應支付的保險金數額是____。<br>( 1 ) 0美元<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 2,200美元<br>( 3 ) 5,600美元<br>( 4 ) 7,800美元</p></li><li><p>以下段落中的括號裡有兩組詞語，確定每組中能正確完成該段落的詞語，然後選擇包含你所選擇的兩個詞語的選項。<br>自選醫療服務(POS)計劃是一種管理式醫療計劃，它允許計劃成員在接受服務時可選擇尋求網絡內或網絡外的醫療服務。POS計劃對於從網絡外醫療服務提供者獲得的醫療服務提供 的保障水平( <strong>低於 / 相同於</strong> )從網絡內醫療服務提供者獲得的醫療服務提供的保障水平。計 劃成員通常必須選擇一個[ <strong>第三方管理人(TPA) / 基礎醫療提供者(PCP)</strong> ]，由其負責協 調成員從計劃網絡內醫療提供者處獲得醫療保健及治療。<br>( 1 ) 低於 / 第三方管理人(TPA)<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 低於 / 基礎醫療提供者(PCP)<br>( 3 ) 相同於 / 第三方管理人(TPA)<br>( 4 ) 相同於 / 基礎醫療提供者(PCP)</p></li><li><p>大額醫療費用保險單通常會規定保單所承保以及不承保的醫療服務和治療。美國的大額醫療 費用保單通常承保由____所引起的醫療費用。<br>( 1 ) 受保人在服兵役期間發生的、或由戰爭行為引起的疾病或傷害的治療<br>( 2 ) 常規牙齒治理和常規眼科檢查<br>( 3 ) 其他組織承擔費用的治療<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 諸如兒童免疫、定期普查和診斷檢驗等預防性服務</p></li><li><p>Langdon公司為其僱員提供一種退休儲蓄計劃，該計劃完全由來自Langdon利潤的現金繳費來 提供資金。Langdon的繳費額每年都會根據公司利潤的變動而變動。儘管該計劃以計劃參加者的名義積累退休資產，但它並不承諾提供按月的退休收入保險金。這一資訊表明，根據定義，Langdon發起設立的這種退休儲蓄計劃被稱為____。<br>( 1 ) 儲蓄計劃<br>( 2 ) 股票激勵計劃<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 利潤分享計劃<br>( 4 ) Riester養老金</p></li><li><p>Fernbank公司購買了一份團體壽險合約，該合約中包含一個典型的兩年抗辯期間。在合約簽發四年後，Fernbank公司的一名新僱員Kenny Dowd為有資格享有該團體保障而填寫了一份醫療問卷，他在問卷中對有關自己健康狀況的問題作了重大不實告知。 Dowd先生在其保障生效九個月後死亡，保險公司在Dowd先生的受益人提出死亡保險金索賠申請時發現了這些重大不實告知。在此情形中，合約中的不可抗辯條款規定，承保人____。<br>( 1 ) 可以基於Dowd先生的重大不實告知來抗辯Fernbank公司團體主合約的有效性<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 可以基於重大不實告知來抗辯Dowd先生保障的有效性<br>( 3 ) 不能抗辯團體主合約或Dowd先生保障的有效性，因為抗辯期間已經屆滿<br>( 4 ) 不能抗辯Dowd先生保障的有效性，但是它可以調整應付的死亡保險金數額，以反映Dowd先生在投保時的真實可保性</p></li><li><p>Bernadette Russo受其雇主Bainbridge公司所提供的團體壽險計劃的保障。Bainbridge的保單為她提供125,000美元保額的團體定期壽險、125,000美元的團體意外死亡及全殘(AD&amp;D)保險，以及50,000美元保額的差旅意外保險。當Russo女士死於度假旅行期間所遭遇的一次車禍時，她仍受到Bainbridge公司的團體保單的保障，那麼應該向Russo女士的受益人給付的保險金為____。<br>( 1 ) 125,000美元<br>( 2 ) 175,000美元<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 250,000美元<br>( 4 ) 300,000美元</p></li><li><p>Sheila Donahue以其丈夫Burt為受保人購買了一份壽險保單，並指定他們的女兒Naomi為該保單的受益人。承保人對於第三方保單的保險利益要求所採用的核保准則與大多數承保人所採用的準則相同。在此情形中，承保人在簽發保單之前，最有可能會要求____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) Sheila和Naomi都要對Burt的生命具有保險利益，而且，根據大多數法律轄區的法律規定，他們與Burt的關係足以對其生命產生保險利益<br>( 2 ) Sheila和Naomi都要對Burt的生命具有保險利益，而且，根據大多數法律轄區的法律規定，他們與Burt的關係不足以對其生命產生保險利益<br>( 3 ) 僅Sheila對Burt的生命具有保險利益，而且，根據大多數法律轄區的法律規定，她與Burt的關係足以對其生命產生保險利益<br>( 4 ) 僅Naomi對Burt的生命具有保險利益，而且，根據大多數法律轄區的法律規定，她與Burt的關係不足以對其生命產生保險利益</p></li><li><p>影響年金定期收入保險金數額的四個主要因素是所投資的本金額、累積期間、代表著投資收益的利率，以及定期收入保險金給付的次數和給付時點。就這些因素之間的關係而言，假設其他所有因素都相同，正確的說法是，年金合約累積期間的延長通常會導致____。<br>( 1 ) 定期收入給付次數的減少<br>( 2 ) 投資收益額的下降<br>( 3 ) 約定利率的提高<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 每次定期收入保險金的提高</p></li><li><p>當Kayla Miller為自己購買了一份保額為500,000美元的定期壽險保單時，她指定自己的兒子Jeremy為保單唯一的受益人，並選擇了一項保險金給付選擇權。根據該項給付選擇權，Jeremy將分十年按月領取保險金，每月的給付金額取決於保險金的數額、保險金所適用的利率以及Miller女士所選擇的給付期間的長度。這一資訊表明，Miller女士為其保單所選擇的保險金給付選擇權是____。<br>( 1 ) 利息選擇權<br>( 2 ) 終身年金收入選擇權<br>( 3 ) 固定金額選擇權<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 固定期間選擇權</p></li><li><p>Colin Munro在為自己投保一份保額為200,000美元的壽險保單時繳付了2,500美元的首期保費。承保人簽發的保單中包含一個典型的兩年自殺除外期間以及一項意外死亡雙倍補償利益附約。在保單簽發九個月後，Munro先生跳橋自殺。在Munro先生死亡時，他尚未繳付第二期保費。在此情形中，承保人最有可能負責對保單受益人給付____。<br>( 1 ) 0美元<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 2,500美元<br>( 3 ) 200,000美元<br>( 4 ) 400,000美元</p></li><li><p>根據是合約一方當事人還是雙方當事人作出法律上可執行的承諾，雙方之間的合約可被歸類為雙務合約或單務合約。合約還可以進一步被歸類為協商合約或附合合約，這取決於雙方當事人是基於平等的地位來確定合約的條款及條件，還是雙方當事人之間毫無協商、合約完全由一方當事人擬定而由另一方當事人接受。就這些合約分類而言，壽險保單可被歸類為____。<br>( 1 ) 雙務協商合約<br>( 2 ) 雙務附合合約<br>( 3 ) 單務協商合約<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 單務附合合約</p></li><li><p>個人壽險保單中的完整合約條款的具體措辭會因保單是封閉型合約還是開放型合約而有所不同。就合約的類型以及構成完整合約的文件而言，大多數個人壽險保單都是____。<br>( 1 ) 開放型合約，完整合約由保單、各項附約以及保險公司的規章文件構成<br>( 2 ) 開放型合約，完整合約由保單、各項附約以及投保單副本構成<br>( 3 ) 封閉型合約，完整合約由保單、各項附約以及保險公司的規章文件構成<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 封閉型合約，完整合約由保單、各項附約以及投保單副本構成</p></li><li><p>當Paul Larue為自己購買一份保單時，他在投保單上將自己的年齡填報為35歲，而其實他的真實年齡為40歲。該保單包含一項典型的年齡誤告條款。保單簽發15年之後，Larue先生死亡，保單的受益人提出了保險金索賠申請。承保人在處理該項索賠時發現了Larue先生投保單中的年齡誤告。在此情形中，承保人最有可能採取的行動是，____。<br>( 1 ) 按照保單中約定的保額全額給付，而不要求受益人繳付任何費用<br>( 2 ) 按照保單中約定的保額全額給付，但前提條件是受益人首先要支付Larue先生的實繳保費與按照其40歲年齡計算的應繳保費之間的差額<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 將保單的保額調整為按Larue先生的真實年齡、實繳保費所能購買的金額<br>( 4 ) 拒絕賠付</p></li><li><p>個人壽險保單的一項常見附加利益是受保人失能保費豁免(WP)利益。根據WP利益，承保人在受保人完全失能期間放棄向其收取到期保費的權利。關於現金價值壽險保單中所包含的WP利益的一個正確陳述是，____。<br>( 1 ) WP利益是針對第三方保單而設計的，此類保單的保單所有人並非受保人<br>( 2 ) 在保險公司豁免保費期間，現金價值不會增加<br>( 3 ) 保險公司一收到受保人完全失能的證據，就會立刻豁免保費的繳付，並沒有等待期的規定<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 根據WP利益而得以豁免的保費實際上是由保險公司繳付了</p></li><li><p>終身壽險保單的繳費期限長短直接影響保單要求的保費數額以及保單現金價值的積累速度。與相同保額的限期繳費終身壽險保單相比，連續繳費終身壽險保單通常具有( <strong>更低 / 更高</strong> ) 的年度保費，並且現金價值的積累更為( <strong>緩慢 / 迅速</strong> )。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 )更低 / 緩慢<br>( 2 )更低 / 快速<br>( 3 )更高 / 緩慢<br>( 4 )更高 / 快速</p></li><li><p>股份制保險公司的基本會計等式由承保人的資產、負債、資本和盈餘構成。就會計等式中的資本和盈餘這一部分而言，正確的說法是，股份制保險公司的____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 )資本 代表公司的所有者投資於公司的資金額<br>( 2 )資本 代表公司的資產超過其負債的金額<br>( 3 )盈餘 代表公司將其從客戶那裡收到的資金進行投資所賺得的資金額<br>( 4 )盈餘 代表公司所擁有的有價值之物</p></li><li><p>Calvin Ludlow現年40歲，購買了一份年金，該年金將在他年滿50歲時開始給付年度收入保險金。Ludlow先生是該合約的年金受保人。該年金提供15年的保險金給付，不論Ludlow先生在此期間生存或死亡。收入保險金給付在這15年期限屆滿時將會停止，即使到時Ludlow先生仍然生存。關於Ludlow先生的年金的一個正確陳述是，它____。<br>( 1 ) 有一個10年的給付期間<br>( 2 ) 有一個15年的年金間隔期<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 是一份延期年金<br>( 4 ) 是一份固定期間終身年金</p></li><li><p>羅斯IRA(個人退休儲蓄計劃)是個人在美國可以建立的一種退休儲蓄計劃。就羅斯IRA的聯邦稅收待遇而言，正確的說法是，____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 對於羅斯IRA的投資收益進行符合規定的提現是免稅的<br>( 2 ) 個人每年可向羅斯IRA繳入的資金額不受限制<br>( 3 ) 個人向羅斯IRA的繳費額可以從其當期的應納稅收入中扣除<br>( 4 ) 羅斯IRA的投資收益應在賺取當年納稅</p></li><li><p>Sanjay Reddy享有一份保額為200,000美元的定期壽險保單的保障，該保單中包含一份意外死亡雙倍補償利益附約，該項附約包含典型的除外責任和限制。保單簽發10年後，當保單仍然處於有效期間時，Reddy先生有一次站在一條繁忙街道的拐角處等待人行道信號燈變換時突發心髒病。片刻之後，他被一輛汽車撞倒，但傷情並不嚴重。Reddy先生被緊急送往醫院，在醫院待了三天後，由於心髒病的並發症而死亡。在受益人提出保險金索賠申請後，承保人通過目擊證人能夠確認，Reddy先生在被汽車撞倒之前已經遭遇了心髒病發作。在此情形中，應付的死亡保險金總額最有可能是____。<br>( 1 ) 100,000美元<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 200,000美元<br>( 3 ) 400,000美元<br>( 4 ) 600,000美元</p></li><li><p>以下是關於團體保險核保人在評估一個團體是否屬於可保風險時所要考慮的風險特徵的陳述，選擇包含正確陳述的選項。<br>( 1 ) 如果一個團體中不斷有年輕的新成員加入，那麼該團體的年齡結構和損失率就不如一個許多年都沒有年輕新成員加入的團體來得穩定。<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 一般而言，團體的規模越大，該團體的經驗損失率就越可能接近其預測的損失率。<br>( 3 ) 無論所承保的團體類型是什麼，團體核保准則都要求團體保單持有人至少要承擔團體保險的一部分保費。<br>( 4 ) 承保人對雇主-僱員團體的核保要求要比協會團體更為嚴格，因為單個團體成員的逆選擇在雇主-僱員團體中更有可能發生。</p></li><li><p>Fiona Beck購買了一份終身壽險保單，該保單中包含一項典型的複效條款和一項抗辯期為兩年的不可抗辯條款。Beck女士在繳付了八年保費之後，任其保單失效。保單失效一年後，Beck女士通過滿足復效條款中所規定的條件而使其保單的效力得以恢復。就復效後保單的可抗辯性而言，正確的說法是，Beck女士復效後的保單____。<br>( 1 ) 不可抗辯，因為原保單中規定的抗辯期間已經屆滿<br>( 2 ) 絕不會變得不可抗辯，因為複效後的保單不包含不可抗辯條款<br>( 3 ) 自保單複效之日起的兩年內可抗辯，但是只能基於其原投保單中的重大不實告知而提出抗辯<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 自保單複效之日起的兩年內可抗辯，但是只能基於其複效申請中的重大不實告知而提出抗辯</p></li><li><p>Todd Swenson是一份保額為300,000美元的終身壽險保單的保單所有人。他每年的續期保費金額為1,200美元。當Swenson先生的保單因未繳續期保費而失效時，該保單的減額繳清保險不喪失選擇權開始生效。保單失效時的淨現金退保價值為15,000美元。在此情形下應用不喪失選擇權時，承保人最有可能____。<br>( 1 ) 一次性向Swenson先生給付15,000美元<br>( 2 ) 通過以保單的現金價值為抵押提供1,200美元的貸款來為Swenson先生自動墊付逾期保費<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 將這15,000美元作為躉繳純保費來購買一份保額低於300,000美元的終身壽險保單<br>( 4 ) 將這15,000美元作為躉繳純保費來購買一份保額為300,000美元的終身壽險保單</p></li><li><p>Cassandra Hirsch是一份10年期可續保定期壽險保單的保單所有人兼受保人，該保單中包含一項典型的續保條款。在第10個保單週年日時，續保條款最有可能授權Hirsch女士將其保單按照____來續保下一個10年期限。<br>( 1 ) 低於原保單所提供的保額以及更低的費率<br>( 2 ) 與原保單相同的保額以及相同的費率<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 與原保單相同的保額以及更高的費率<br>( 4 ) 高於原保單所提供的保額以及更高的費率</p></li><li><p>萬能壽險保單的一個鮮明特徵是，____。<br>( 1 ) 保單所有人可以在保單生效滿一個約定的期限後，要求增加保單的保額，但不能減少 保單的保額<br>( 2 ) 保單對於每年對現金價值支付的利率不作保證<br>( 3 ) 保單所有人在購買保單時可以決定其將繳付的續期保費金額，但續期保費金額在整個保險期限內保持不變<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 承保人每年從保單現金價值中扣減的死亡率費用會隨著受保人年齡的增長而提高</p></li><li><p>當年金合約所有人從年金中提取資金時，承保人可以收取一種後期附加費用，這種費用在變 額年金中被稱為或有遞延銷售費用(CDSC)。關於這種費用的形式以及費用金額是否隨著時間的推移而變動，正確的說法是，後期附加費用/CDSC被表示為____。<br>( 1 ) 一個固定金額，費用金額通常隨著時間的推移而逐漸遞減<br>( 2 ) 一個固定金額，費用金額通常隨著時間的推移保持不變<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 提現額的一個百分比，該比例通常隨著時間的推移而逐漸遞減<br>( 4 ) 提現額的一個百分比，該比例通常隨著時間的推移保持不變</p></li><li><p>信用人壽保險用以承保借款人和信用卡持卡者所欠貸款或賬戶透支的金額。信用人壽保險的一個特徵是，____。<br>( 1 ) 只要受保人繼續繳付保費，保單通常為受保人終生提供保障<br>( 2 ) 由貸款人繳付全部保費額，而無需信用人壽保險所承保的借款人分擔任何保費<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 如果被保險借款人死於保單有效期內，保險金總是直接支付給債權人<br>( 4 ) 無論未償還貸款餘額如何變動，有效的壽險保障金額在整個貸款期間內始終保持不變</p></li><li><p>在人壽保險產品的財務設計過程中，保險公司會將產品所有可能的給付乘以每種給付會被支付的預期概率。這一計算得到的結果是壽險產品的____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 給付成本<br>( 2 ) 可分配盈餘<br>( 3 ) 保單準備金<br>( 4 ) 累積價值</p></li><li><p>以下是關於承保人在 壽險產品財務設計中所採用的生命表的陳述，選擇包含正確陳述的選項。<br>( 1 ) 特定壽險產品要素的保守取值通常採取低於預期的死亡率的形式。<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 經驗生命表是根據保險公司自己的記錄編制而成的一種生命表，反映其受保人的實際死亡率。<br>( 3 ) 大多數生命表都是不分性別的生命表，並不分別列示男性和女性的死亡率。<br>( 4 ) 生命表並非只被編制用於某個特定的國家，因為不同國家人們的預期壽命和死亡率並無顯著的差異。</p></li><li><p>Jasper壽險公司將其準受保人歸入以下四個風險級別之一：標準體、優良體、次標準體和拒 保體。Jasper的核保人確定，準受保人Morteza Samad呈現出既不顯著高於也不顯著低於平均水平的損失可能性。這一資訊表明，Jasper將Samad先生歸入了一種被稱為____的風險級別。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 標準體<br>( 2 ) 優良體<br>( 3 ) 次標準體<br>( 4 ) 拒保體</p></li><li><p>Zuni投資公司成立的目的是運作一種投資工具，該投資工具募集投資者的資金並將這些資金用於購買各種股票、債券和其他有價證券。這一資訊表明，Zuni是一種被稱為____的金融機構。<br>( 1 ) 存款機構<br>( 2 ) 金融公司<br>( 3 ) 互助會<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 共同基金公司</p></li><li><p>Lloyd Belanger是一位美國居民，他為自己購買了一份壽險保單，並指定他的妻子Carol為第一順位受益人。幾年後，Lloyd和Carol雙雙死於一次車禍，而且無法確定兩人死亡的先後順序。他們所在州實施的同時死亡法案規定了承保人如何給付保險金。假設Lloyd的保單中沒有包含與同時死亡法案相衝突的條款，那麼保險金____。<br>( 1 ) 應該視同Lloyd先於Carol死亡來進行給付<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) 應該視同Carol先於死亡Lloyd來進行給付<br>( 3 ) 應該視同Carol未涉及該次意外事故來進行給付<br>( 4 ) 不應該給付，因為Lloyd和Carol同時死亡</p></li><li><p>Abraham Kern是一份分紅終身壽險保單的保單所有人兼受保人，該保單中規定了抵減保費紅利選擇權。Kern先生每年為其保障繳付1,500美元的保費。在上個保險年度，承保人對Kern先生的保單宣告了300美元的紅利。就這一保單紅利的影響而言，正確的說法是，____。<br>( 1 ) Kern先生保單的保額增加300美元<br><span style="color: red;"><strong>✓</strong> </span> ( 2 ) Kern先生對於下年度的續期保費只需繳付1,200美元<br>( 3 ) 承保人用該保單紅利為Kern先生購買一年期定期壽險<br>( 4 ) 該筆紅利被留存於承保人處，因為它低於Kern先生的年繳保費額</p></li><li><p>Vera Sund是一份未成年人壽險保單的保單所有人，該保單的受保人是她6歲的女兒Lily。 Vera 的丈夫Troy是該保單的第一順位受益人。根據該保單的條款規定，當Lily年滿18歲時，該保單的所有權和控制權將被轉移給她。該保單中包含一項典型的投保人失能保費豁免附約。根據這一附約的條款規定，承保人將放棄其收取保單續期保費的權利，前提條件是____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) Vera死亡或完全失能，但承保人僅豁免保費至Lily年滿18歲為止<br>( 2 ) Vera死亡或完全失能，即使Lily年滿18歲之後，承保人仍會繼續豁免保費<br>( 3 ) Troy死亡或完全失能，但承保人僅豁免保費至Lily年滿18歲為止<br>( 4 ) Troy死亡或完全失能，即使Lily年滿18歲之後，承保人仍會繼續豁免保費</p></li><li><p>當Ben Spano和Rachel Spano獲得一筆期限為30年、金額為310,000美元的抵押貸款來購買住房時，他們也購買了一份保額為310,000美元的聯合抵押貸款壽險保單。Ben在保單簽發10年後死亡。這一資訊表明，一旦Ben死亡，該保單的保險金最有可能____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 支付給Rachel，金額低於310,000美元<br>( 2 ) 支付給Rachel，金額等於310,000美元<br>( 3 ) 支付給抵押貸款的貸款人，金額低於310,000美元<br>( 4 ) 不會支付，因為保險金要在Ben和Rachel都死亡後才會支付</p></li><li><p>承保人進行了下述計算，來確定一份保額為100,000美元、費率為5美元的壽險保單的年繳保費額:<br><strong>5.00美元×100=500美元</strong><br>這一計算式中的數字100代表該保單的____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 保障單位<br>( 2 ) 精算假設<br>( 3 ) 補償給付<br>( 4 ) 表定死亡率</p></li><li><p>當核保人評估個人健康保險的投保單時，他們要考慮若干因素以確定準受保人所表現的發病率風險程度。其中四個主要的因素分別是個人的性別、年齡、健康狀況和工作經歷。關於這些發病率因素的一個正確陳述是，____。<br>( 1 ) 男性通常比同齡女性的發病率更高<br>( 2 ) 疾病的平均持續時間通常會隨著年齡的增長而縮短<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 個人未來的健康狀況會受到其過去和現在所患疾病或所受傷害的強烈影響<br>( 4 ) 具有穩定工作經歷的人通常比只有臨時工作經歷或其工作記錄中有著多次跳槽經歷的人表現出更高程度的發病率風險</p></li><li><p>當Natalie koch在三月份首次有資格獲得其雇主的團體壽險保障時，她拒絕參加該計劃。當她日後決定再要參加該計劃時，她必須等到11月份才能註冊，因為符合資格的僱員在該月份期間無需提供可保證明即可參加計劃。Koch女士無需提供可保證明即可參加其雇主計劃的這個11月份期間通常被稱為____。<br>( 1 ) 觀察期<br>( 2 ) 免責期<br>( 3 ) 准入期<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 開放註冊期</p></li><li><p>大多數失能收入損失保單都使用一個兩部分的完全失能定義。完全失能的目前通用定義規定，在失能開始後的一個約定期間(通常為二至五年)屆滿後，只有當____時，才會被視為完全失能。<br>( 1 ) 受保人的失能被歸類為推定失能<br>( 2 ) 受保人的失能使其不能履行任何 職業的職責<br>( 3 ) 受保人的失能使其不能履行其原職業的必要職責<br><span style="color: red;"><strong>✓</strong> </span> ( 4 ) 受保人的失能使其不能從事以其所受教育、培訓或經驗理應勝任的任何職業</p></li><li><p>合併是指金融服務機構在本行業內或跨行業的合併，它使得金融服務業每個部分傳統金融機 構的數量( <strong>減少 / 增加</strong> )。金融服務業的合併主要通過兼併和收購來實現。當兩家公司發生( <strong>兼併 / 收購</strong> )交易時，兩家公司在該交易之後都作為獨立的法人實體繼續存在。<br>( 1 )減少 / 兼併<br><span style="color: red;"><strong>✓</strong> </span> ( 2 )減少 / 收購<br>( 3 )增加 / 兼併<br>( 4 )增加 / 收購</p></li><li><p>Willow人壽保險公司與Copley保險公司之間訂有一份再保險協議，根據這一協議，Willow將其已簽發保單的部分風險轉移給Copley。 Willow在這一再保險協議中的角色是____。<br>( 1 ) 再承保人<br>( 2 ) 計劃管理者<br><span style="color: red;"><strong>✓</strong> </span> ( 3 ) 原承保人(直接承保人)<br>( 4 ) 金融控股公司</p></li><li><p>長期護理保單中包含一些要求，這些要求規定了受保人為獲得領取長期護理保險金的資格而必須滿足的條件。根據定義，這些要求被稱為____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 給付啟動條件<br>( 2 ) 起付點<br>( 3 ) 概括式指定<br>( 4 ) 實質風險因素</p></li><li><p>Madelyn Berg正在編制一份計劃，該計劃考慮她去世時可能擁有的資產和負債額，並考慮如何盡量保持這些資產，以便按照其意願分配這些資產。遺囑和壽險保障計劃是該計劃的重要組成部分。根據定義，Berg女士正在編制的這種計劃被稱為____。<br><span style="color: red;"><strong>✓</strong> </span> ( 1 ) 遺產計劃<br>( 2 ) 財務模型<br>( 3 ) 資金運用方式<br>( 4 ) 遺屬壽險計劃</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> LOMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[LOMA]_280_保險原理</title>
      <link href="/2022/06/28/LOMA-280-%E4%BF%9D%E9%9A%AA%E5%8E%9F%E7%90%86/"/>
      <url>/2022/06/28/LOMA-280-%E4%BF%9D%E9%9A%AA%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>LOMA 280 筆記</p><a id="more"></a><h1 id="第一部分：保險基本原理">第一部分：保險基本原理</h1><h2 id="第-1-章-風險與保險引論-v2">第 1 章 風險與保險引論</h2><p><code>風險</code>：即 指盈利或損失的結果超出預期的機會或可能性。</p><h3 id="一、-風險的概念">一、 風險的概念</h3><p><code>投機風險</code>：涉及損失、獲利或無盈虧三種可能的結果。<br><span style="color: orange;"><strong>✓</strong> </span> <code>純粹風險</code>：不存在獲利的可能性，只有損失或無盈虧，如：疾病或受傷。<br>只有純粹風險，才是唯一可保的風險類型。</p><h3 id="二、-風險的管理">二、 風險的管理</h3><p><code>風險管理</code>：是 個人或企業對其所面臨的風險進行識別、評估並採取措施，或減少這些風險對其產生不利影響的過程。</p><ul><li><h4 id="管理財務風險的四種常見方法：">管理財務風險的四種常見方法：</h4><ol><li><code>迴避風險</code>：一概迴避風險。<br>如：通過不乘坐飛機而迴避空難。</li><li><code>控制風險</code>：通過採取一些預防或降低潛在損失的措施來努力控制風險。<br>如：不吸菸來降低罹患癌症。</li><li><span style="color: orange;"><strong>✓</strong> </span> <code>轉移風險</code>：將風險轉移給另一方。<br>如：擔保人，當債務人不還款時，擔保人需負還款責任。<br>轉移風險最常見的方法就是 <strong>購買保險保障</strong>。</li><li><code>承擔風險</code>：承擔與風險相關的所有財務責任。<br>承擔風險也可能是一種無意識的決定，如果沒有迴避、控制、轉移等方法對風險加以管理，事實上就已經承擔面臨的風險。</li></ol></li></ul><h3 id="三、-保險">三、 保險</h3><p><code>保險</code>，是個人和企業最廣泛使用的風險管理方法。<br><code>承保人</code>：承擔風險並承諾在損失發生時支付保險金的公司。<br><code>保險金 (保單利益)</code>：是保險公司依據保險單，同意在約定的損失發生時，支付的一筆約定金額。<br><code>保險單 (保險合約)</code>：是一份包含承保人與保單所有人之間所達成協議條件的書面文件。<br><code>保費</code>：承保人因承諾在約定的損失發生時支付保險金，而收取的一筆約定金額。</p><ul><li><h4 id="購買保險單可以保障三類風險：">購買保險單可以保障三類風險：</h4><ol><li><p><code>人身風險</code>：是與個人的死亡、疾病、傷害和老無所養相關的經濟損失風險。<br><code>人壽與健康保險公司</code>：是簽發並銷售承保人身風險的產品的公司。<br><code>個人保險單</code>：指定個人的生命或健康為保險標的而簽發的保單。<br><code>團體保險單</code>：承保一個特定人群的生命或健康而簽發的保單。</p></li><li><p><code>財產損毀風險</code>：指因個人財產的損失或毀壞而導致經濟損失的風險。</p></li><li><p><code>責任風險</code>：指某人由於侵害了他人的人身或財產安全要承擔法律責任而導致經濟損失的風險。<br>財產保險 和 責任保險 又稱為 <code>財產與災害保險</code>，通常都在一張保單中一起銷售。如：汽車保險。<br><code>財產/災害(P&amp;C)保險公司</code>：簽發並出售承保財產損失風險和責任風險保單的承保人。</p></li></ol></li><li><h4 id="人壽與健康保險產品的類型：">人壽與健康保險產品的類型：</h4><table><thead><tr><th>產品</th><th>說明</th></tr></thead><tbody><tr><td><code>人壽保險</code></td><td>當指定個人死亡時即支付保險金的保險。</td></tr><tr><td><code>年金合約</code></td><td>承保人與合約持有人之間的一種合法有效的書面協議，<br>其中承保人賦予指定的某人獲得一系列定期收入保險金的權利，<br>以換取一筆或一系列的保費收入</td></tr><tr><td><code>健康保險</code></td><td>防範因疾病、傷害或殘疾所致財務損失風險的保險。</td></tr></tbody></table></li><li><h4 id="保單訂立與履行過程中涉及的主體：">保單訂立與履行過程中涉及的主體：</h4><p><code>投保人</code>：是指申請保險單的個人或企業。<br><code>保單所有人</code>：保單一旦簽發，持有保單的個人或企業。<br><code>受保人</code>：是指其生命、健康或財產受到保單保障的人。<br><code>第三方保單</code>：是指個人或企業以他人的生命為保險標的而購買的保單。(保單所有人 與 受保人 並非同一人)。<br><code>受益人</code>：是由壽險保單所有人指定領取其保單保險金的個人或實體。<br><code>索賠</code>：根據保單條款提出的保險金給付請求。</p></li></ul><h3 id="四、-通過保險來管理風險">四、 通過保險來管理風險</h3><ul><li><h4 id="一-可保風險的特徵"><strong>(一) 可保風險的特徵</strong></h4><p><code>偶然發生的</code>、<code>可確定的</code>、<code>重大的</code>、<code>可預測的</code>、<code>非巨災性的</code></p><ol><li><p><strong>損失必須是 <code>偶然發生的</code></strong><br>損失必須是由不可預見的事件或受保人的非故意行為所引起。 如：重病。</p></li><li><p><strong>損失必須是 <code>可確定的</code></strong><br>承保人必須能夠確定 <code>何時</code> 支付保險金以及支付 <code>多少</code> 保險金。<br><code>補償性合約</code>：根據保險事故發生所導致的實際經濟損失額，來確定應支付保險金數額的一種保險單。(健康保單)<br><code>定額合約</code>：規定了承保損失發生時承保人應支付的保險金數額，而不論實際發生的損失金額是多少。(壽險保單)</p></li><li><p><strong>損失必須是 <code>重大的</code></strong><br>較大的損失才被認為是可保的。</p></li><li><p><strong>損失概率必須是 <code>可預測的</code></strong><br><code>大數法則</code>：通常，對特定事件觀察的次數越多，觀察結果就越可能接近於該事件發生的真實 <code>概率</code> 或可能性。<br><code>生命表</code>：即列示一個大規模人群，在每一年齡可能死亡的人數的表格。<br><code>死亡率</code>：即特定人群在特定期間內的死亡發生率。<br><code>發病率表</code>：按年齡列明了特定人群的疾病和意外的發生率。</p></li><li><p><strong>損失對於承保人而言必須是 <code>非巨災性的</code></strong><br>如果一次損失事故的發生可能導致或造成承保人的巨災性財務損失，那麼這種潛在損失便被認為是不可保的。<br>為了防範巨災損失的可能性，並確保損失的發生互相獨立，承保人需要分散其所選擇承保的風險。<br>通過購買再保險，承保人也可以降低其遭受巨災損失的可能性。<br><code>再保險</code>：<code>原承保人 (直接承保人)</code> 或分出公司的保險公司，從另一家被稱為 <code>再承保人</code> 或分入公司的保險公司購買的保險，<br>以轉移原承保人所簽發保險單的全部或部分風險。</p></li></ol></li><li><h4 id="二-保險核保"><strong>(二) 保險核保</strong></h4><p>當承保人收到投保申請時，必須評估其一旦簽發保單將會承擔的風險程度。<br><code>核保 (風險選擇)</code>：對準受保人的風險程度進行識別並加以分類的過程。<br><code>核保人</code>：負責對準受保人的風險程度進行評估的保險公司員工。<br><code>逆選擇 (不利選擇)</code>：認為其損失可能性高於平均水平的人，在更大程度上尋求保險保障。</p><ul><li><p><strong>核保由兩個主要階段構成：</strong></p><ol><li><p><strong>識別風險</strong><br><code>實質風險因素</code>：是指可能會增大損失機率的實質性特徵。如，具有心臟病史的人。<br><code>道德風險因素</code>：是當投保人或準受保人的聲譽、財務狀況、犯罪記錄顯示其在保險交易中可能有不誠實行為時存在的一種特徵。</p></li><li><p><strong>劃分風險</strong><br><code>風險級別</code>：相似風險水平的一組受保人的集合。對處於不同風險級別的人收取不同的費率。<br><code>核保準則</code>：即承保人將準受保人歸入適當的風險級別時所遵循的一般規則。</p></li></ol></li><li><p><strong>分為四個風險級別：</strong></p><ul><li><code>標準體</code>：其損失可能性不顯著高於平均水平的準受保人。對其收取 <code>標準費率</code>。</li><li><code>優良體</code>：其損失可能性顯著低於平均水平的準受保人。對其收取 <code>優惠費率</code>。</li><li><code>次標準體 (特殊風險)</code>：其損失可能性顯著高於平均水平，但仍被認為是可保的準受保人。對其收取高於標準費率的 <code>次標準費率</code> 或 <code>特殊費率</code>。</li><li><code>拒保體</code>：由被認為其代表的風險太高，以致承保人不能承保的準受保人構成。</li></ul></li></ul></li><li><h4 id="三-保險利益要求"><strong>(三) 保險利益要求</strong></h4><p>許多國家的法律要求，保單所有人在保單簽發時，要對所保的風險具有保險利益。<br><code>保險利益</code>：意味著，保險事故發生，保單所有人必須有遭受真實損失或傷害的可能。</p><p>法律允許保單所有人兼受保人指定任何人作為 <code>受益人</code>。<br>但大多數的核保準則，都要求受益人在壽險保單簽發時 <code>對受保人的生命具有保險利益</code>。<br>要滿足保險利益要求，必須證明 <code>對受保人的繼續生存具有經濟利益</code>。</p><p>保險利益要求，必須在壽險保單 <code>簽發前</code> 得到滿足。<br>因此，受益人領取壽險保單的保險金時，並不需要提供保險利益的證明。</p></li></ul><hr><h2 id="第-2-章-人壽與健康保險業-v2">第 2 章 人壽與健康保險業</h2><p><code>利潤</code>：銷售產品或提供服務，所獲得的資金或<code>收入</code>，減去為生產產品或提供服務所發生的<code>成本</code>後的差額。</p><h3 id="一、-保險公司的組織形式">一、 保險公司的組織形式</h3><ul><li><h4 id="一-企業的組織類型"><strong>(一) 企業的組織類型</strong></h4><ul><li><strong>企業通常按照以下三種形式之一來組建：</strong><ul><li><p><strong><code>個人獨資企業</code></strong><br>由一個人擁有並經營的企業。<br>企業所有者享有企業的全部利潤，並對企業的全部債務承擔無限責任。</p></li><li><p><strong><code>合夥企業</code></strong><br>由兩個或兩個以上的個人(合夥人)所擁有的企業。<br>合夥人共享企業的利潤，通常每個人都對企業的全部債務負有無限責任。</p></li><li><p><span style="color: orange;"><strong>✓</strong> </span> <strong><code>公司</code></strong><br>是由政府機構批准、並通過註冊成立的程序而組建的，與其所有者相分離的一種法律實體。<br>保險公司和大部分其他主要企業，都是以公司的形式來組建的。</p><ul><li><strong>公司具有兩個重要特徵，使其區別於獨資企業和合夥企業。</strong><ol><li><strong>與所有者相分離的法律實體</strong><br>公司可以起訴或被起訴、簽訂合約，可以擁有財產。<br>公司的資產和負債屬於公司所有，而不屬於其所有者。<br><code>資產</code>：是一家公司所擁有的有價值之物。<br><code>負債</code>：是一個公司的債務或未來義務。</li><li><strong>即使某個所有者或全部所有者都死亡，公司依然可以存續</strong><br>此一特徵，提供了一種穩定性和持久性要素。<br>許多國家的法律都規定，保險公司應採取公司的形式來運作。</li></ol></li></ul></li></ul></li></ul></li><li><h4 id="二-保險公司的組織類型"><strong>(二) 保險公司的組織類型</strong></h4><ul><li><strong>承保人的組織形式包括：</strong><ul><li><p><code>股份制保險公司</code><br>大多數屬於此類。<br>所有權被劃分為以 <code>股份</code> 或股票為單位的公司。<br><code>股東</code>：是持有一家公司股票的個人或組織。<br>按照股份制公司組建的承保人就被稱為 <code>股份制保險公司</code>。<br>公司的股東，選舉出一組個人，被稱為 <code>董事會</code>，負責監督公司的經營管理。<br>如果企業是營利的，公司股東就可以不時地獲得 <code>股東紅利</code>。</p></li><li><p><code>相互保險公司</code><br>是指所有權歸其<code>保單所有人</code>的一種保險公司，由保單所有人選舉出公司的董事會。<br>由於沒有股東，所以<code>不支付股東紅利</code>。<br>公司會不時地將部份經營利潤以 <code>保單紅利</code> 的形式分配給保單所有人。</p></li><li><p><code>互助會</code><br>是僅為其<code>會員</code>的福利而營運的一種非營利組織，為其會員提供會員福利和保險福利。<br>這類組織的會員通常有著<code>共同的種族、宗教信仰或職業背景</code>。<br>如果互助會對投保人簽發保單，投保人就自動成為分會的會員。<br>為了簽發保單，互助會必須採取<code>代表制</code>的治理形式，即會員必須選舉互助會的管理人員，負責管理互助會的保險和其他經營。</p></li></ul></li></ul></li></ul><h3 id="二、-作為金融機構的保險公司">二、 作為金融機構的保險公司</h3><p><code>金融機構</code>：是指主要擁有諸如股票和債券等金融資產，而非設備和原材料等固定資產的一種企業。<br><code>金融服務業</code>：是由各種金融機構組成的行業，旨在幫助個人、企業和政府進行儲蓄、借貸、投資以及管理資金。</p><ul><li><p><strong>除了保險公司，金融機構還包括：</strong></p><ul><li><p><strong>存款機構</strong><br>接受來自個人、企業和政府機構的存款並向他們發放貸款。<br>如：商業銀行、儲蓄信貸協會、信用合作社。</p></li><li><p><strong>金融公司</strong><br>專門從事對個人或企業發放短期和中期貸款業務。</p></li><li><p><strong>證券公司</strong><br>專門從事證券的買賣。<br><code>有價證券</code>：是代表在一個企業所擁有的所有權權益的憑證(如：股票)或者代表企業、政府或機構所欠債務的憑證(如：債券)。</p></li><li><p><strong>共同基金公司</strong><br>運作共同基金。<br><code>共同基金</code>：是一種募集投資者的資金，並將這些資金用於購買各種股票、債券和其他有價證券的投資工具。</p></li></ul></li><li><h4 id="一-金融仲介"><strong>(一) 金融仲介</strong></h4><p><code>金融仲介</code>：是從個人、企業及政府這一群體 (資金供應者) 處集聚資金並將這些資金導向其他群體 (資金使用者) 的一種組織。<br>在將資金從供應者轉移至使用者的過程中，金融仲介為自己賺取收入。<br>作為金融仲介，保險公司從其客戶為購買保險而繳付的保費中，拿出相當大的一部分資金投資於其他企業或行業。<br>保險公司的投資為這些企業提供了經營和擴張所需的資金。</p></li><li><h4 id="二-金融服務業的演進"><strong>(二) 金融服務業的演進</strong></h4><ul><li><strong>三大趨勢：</strong><ol><li><p><code>混業</code><br>長期以來，金融服務業都被劃分為不同的部分，主要是出於不同國家的監管需要。<br>如：銀行提供銀行業務、證券公司和共同基金公司負責投資、保險公司簽發並銷售保險產品。<br>但是，現在的金融服務業以 <code>混業</code> 為特徵，即單一金融機構能夠滿足其客戶對銀行、保險、有價證券多種需求的一種趨勢。<br><code>控股公司</code>，又稱母公司，指擁有並控制另一家或幾家公司的公司。被控制的公司稱為子公司。<br><code>關聯公司</code>，處於同一控股公司控制之下的各家子公司。<br>金融控股公司體系中的關聯關係，允許各公司互相銷售對方的產品。如：保險公司根據銀行的要求來設計並簽發產品以供銀行銷售。</p></li><li><p><code>合併</code><br>指金融服務機構在本行業內或跨行業的合併。主要通過兼併和收購來實現。<br><code>兼併</code>，是將兩家公司的資產與負債合併入一家公司的一種交易。其中一家公司繼續以法人實體存在，另一家公司則<code>終止存在</code>。<br><code>收購</code>，是指一家公司購買另一家原本獨立公司的控股權益的交易，此交易之後，兩家公司都作為獨立的法人實體<code>繼續存在</code>。</p></li><li><p><code>全球化</code><br>金融機構在一個全球化的環境中運營。正在逐漸將其客戶群體擴展至全球範圍。</p></li></ol></li></ul></li></ul><h3 id="三、-政府在保險中的作用">三、 政府在保險中的作用</h3><p>政府都會對保險公司進行監管以保障公眾利益。<br>除了充當監管者，政府通常還提供社會保險計畫，通過税收的方式來調節消費和儲蓄。</p><ul><li><h4 id="一-保險監管"><strong>(一) 保險監管</strong></h4><p><code>聯邦制</code>：由聯邦政府與許多更低層級的政府(如：州政府、省政府)共同分享統治權力，包括監管保險的權力。<br><code>註冊地</code>：公司註冊成立所在的法律管轄區域。<br><code>授權憑證</code>(經營許可證)：授權承保人在相應法律管轄區域內經營保險業務並銷售保險產品。<br><code>麥開雲-佛戈森法案</code>：只要美國國會認定各州的監管是充分的，即可將保險監管權留交各州政府。因此州政府擁有監管保險的主要權力。<br><code>州保險法</code>：每個州都有自己的保險立法，用於規範本州的保險。<br><code>州保險署</code>：每個州都設有一個行政管理機構，負責確保在本州經營的保險公司遵守相關的監管規定。每個州保險署都由一個 <code>保險監督官</code>(保險主管人、保險管理人) 來領導。<br><code>美國保險監督官協會</code>(NAIC)：由美國各州的保險監督官組成的一個非政府組織。主要職責是通過制定示範性的法律和法規為各州保險監管的指南，從而促進各州保險監管的統一性。各州不一定要原樣照搬示範法律和法規，可以選擇修改示範法律，或是根本就不採用這些示範法律。</p><ul><li><strong>保險監管有兩個主要關注點</strong><ul><li><h5 id="償付能力監管"><strong>償付能力監管</strong></h5><p>確保保險公司有償付能力。<br>資產 = 負債 + 所有者權益<br><code>所有者權益</code>：所有者在公司中擁有的的經濟利益，等於公司的資產額與負債之差。<br><code>資本</code>：公司的所有者通常以購買公司股票的形式而投資於承保人。<br><code>盈餘</code>：公司的剩餘所有者權益，或者是資產超過其負債及資本的金額。<br>對於<code>股份制保險公司</code>而言，所有者權益 由 <code>資本</code> 與 <code>盈餘</code> 構成。<br>而 <code>相互承保人</code> 不發行股票，沒有資本部分，全部由 <code>盈餘</code> 構成。<br><code>年度報告</code>：政府制定了一些方法來監管在其法律轄區內經營的保險公司的財務狀況。通過審查會計報告來監管保險公司的財務狀況。</p></li><li><h5 id="市場行為監管"><strong>市場行為監管</strong></h5><p><code>市場行為法</code>：禁止承保人從事各種被認為是不公平的或是欺騙性的活動。</p></li></ul></li></ul></li><li><h4 id="二-社會保險計劃"><strong>(二) 社會保險計劃</strong></h4><p><code>社會保險計劃</code>：根據法律建立並由政府管理的一種社會福利計劃，為全民提供收入保障。<br>社會保險可以提供現金給付來替代由於年老、殘疾、死亡、工傷和失業所造成的收入損失。<br>保險公司不能提供與社會保險計劃重複的產品。</p></li><li><h4 id="三-稅收"><strong>(三) 稅收</strong></h4><p>許多政府都運用稅收作為實現社會和經濟目標的手段。通過調節稅收，政府可以以某種方式來影響人們採取行為或克制其行為。</p></li></ul><hr><h2 id="第-3-章-保險合約-v2">第 3 章 保險合約</h2><p><code>合約</code>：是在雙方或多方當事人之間達成的、具有法律約束力的協議。合約具有法律約束力，當事人有義務履行簽訂合約時所作的承諾。<br><code>有效合約</code>：符合法律規定的所有條件而具有法律約束力的合約。<br><code>無效合約</code>：由於不符合訂立有效合約的一項或多項法定條件因而自始不發生法律效力的合約。<br><code>可撤銷合約</code>：一方當事人有權規避其合約義務、但另一方當事人要受合約條款約束的合約。</p><p><code>要式合約 (簽章合約)</code>：只有合約當事人滿足有關協議的特定形式要求才能生效的一種合約。<br><span style="color: orange;"><strong>✓</strong> </span> <code>非要式合約</code>：因合約當事人已經滿足了有關協議的實質要求而非形式要求而具有法律效力的一種合約。(人壽保險)</p><h3 id="一、非要式合約的條件">一、非要式合約的條件</h3><ul><li><strong>非要式合約必須滿足以下四個條件</strong><ul><li><h4 id="一-相互合意"><strong>(一) 相互合意</strong></h4><p><code>相互合意</code>：即就協議條款已達成共識。(要約按其所要求的條件得到了承諾。)<br><code>要約</code>：希望與他人訂立一份有效合約的意思表示。發出要約的一方為要約人，接受要約的一方為受約人。<br><code>承諾</code>：受約人完全同意接受要約條件。</p></li><li><h4 id="二-法律上充分的對價"><strong>(二) 法律上充分的對價</strong></h4><p><code>對價</code>：合約的各方當事人都必須向對方當事人提供或承諾某種有價值之物。所交換的對價必須在法律上是充分的。<br>只要對價對合約當事人而言具有某種價值，法律上就是充分的。<br>投保人提交<code>投保單</code>和<code>首期保費</code>作為人壽保險合約的對價<br><code>首期保費</code>：為保險單繳付的第一期保費。投保人提供這一對價，為了換取承保人在保單約定的情況發生時支付保險金的承諾。<br>如果首期保費未繳付，合約就不會成立。<br><code>續期保費</code>：首期保費之後應繳付的保費，它們是保單持續有效的條件，而非保單的對價。</p></li><li><h4 id="三-合法的目的"><strong>(三) 合法的目的</strong></h4><p>任何合約都不允許出於非法或者違背公眾利益的目的而簽訂，合約必須出於合法目的而簽訂才有效。</p></li><li><h4 id="四-簽約能力"><strong>(四) 簽約能力</strong></h4><p><code>簽約能力</code>：合約所有當事人都必須具有簽訂合約的法律能力。</p><ul><li><h5 id="個人的簽約能力">個人的簽約能力</h5><p><strong>具有有限簽約能力的人：</strong><br>(1) <code>未成年人</code>：指未達到法定成人年齡的個人。大多數法定年齡是18歲。<br>一般而言，未成年人可以撤銷其所簽訂的合約。<br>未成年人通常可以在達到法定成人年齡之前或達到法定成人年齡之後的一段合理時間內撤銷合約。<br>只要投保人繼續繳付保費，保險公司就必須提供所承諾的保險保障，而未成年人則可以起訴撤銷保單，保險公司必須返還未成年人已繳付的保費。</p><p>(2) <code>心智能力</code>，心智不全者的簽約能力在下述情況下會受到影響：</p><ul><li>法院宣告該人患有精神病或精神失常，所簽訂的合約，無效。</li><li>該人心智受到損害，但法院尚未宣告其患有精神病或精神失常，所簽訂的合約，可撤銷。</li></ul></li><li><h5 id="公司的簽約能力">公司的簽約能力</h5><p>公司通常被認為具有與心智健全的成年人一樣的簽約能力。<br>未經許可或授權作為承保人的公司不具有簽發保險合約的法律能力。所簽發的保單，為可撤銷。</p></li></ul></li></ul></li></ul><h3 id="二、合約的類型">二、合約的類型</h3><ul><li><h4 id="一-雙務合約與單務合約"><strong>(一) 雙務合約與單務合約</strong></h4><p><code>雙務合約</code>：簽約時雙方當事人都作出了法律上可執行的承諾的一種合約。<br><span style="color: orange;"><strong>✓</strong> </span> <code>單務合約</code>：只有一方當事人在簽訂合約時作出法律上可執行的承諾的一種合約。承保人承諾提供保險保障，以換取約定的保費收入。只要保費繼續繳付，承保人的合約承諾就要受到法律約束。保單的購買者並沒有對保費的繳付作出承諾，因此法律上不能強制繳付保費。</p><p><code>等價交換合約</code>：合約雙方當事人事先約定所要交換價值的一種合約。<br><span style="color: orange;"><strong>✓</strong> </span> <code>射幸合約</code>：只合約的一方當事人向另一方當事人提供對價，以換取某種有條件承諾的一種合約。(人壽保單)<br><span style="color: orange;"><strong>✓</strong> </span> <code>有條件承諾</code>：只有在約定的不確定事件發生時才會履行既定行為的一種承諾。</p><p><code>協商合約</code>：當事人雙方基於平等的地位來確定合約條款及條件的一種合約。<br><span style="color: orange;"><strong>✓</strong> </span> <code>附合合約</code>：由一方當事人擬定、另一方當事人必須完全接受或拒絕的一種合約，合約當事人之間沒有任何協商的餘地。</p></li><li><p><strong>保單的類型特徵：</strong><br><code>非要式合約</code>、<code>單務合約</code>、<code>射幸合約</code>、<code>附合合約</code>。</p></li></ul><hr><h2 id="第-4-章-壽險產品的財務設計-v2">第 4 章 壽險產品的財務設計</h2><p><code>財務設計</code>：由壽險產品中對各定量因素設計的一套假設值組成。包含一個產品不同方面的取值，最重要的產品要素：<code>保單所有人的繳費</code>、<code>保險金的給付</code>、<code>投資收益</code>和<code>公司營運費用</code>。<br><code>精算</code>：確保產品在財務上穩健。收入 &gt; 支出。<br><code>財務模型</code>：基於電腦來模擬真實財務過程運作的一種數學模型。產生對未來可能財務值的預測。<br><code>精算假設</code>：在財務設計中所使用的預設值。</p><h3 id="一、-法定責任準備金制度">一、 法定責任準備金制度</h3><p><code>法定責任準備金制度</code>：承保人用來設定壽險產品財務值的制度。<br><code>保單責任準備金(法定責任準備金)</code>：法律要求承保人建立保單責任準備金，代表承保人估計其為支付未來保險金所需資金額的<code>負債</code>。</p><ul><li><strong>法定責任準備金制度建立在以下假設基礎上：</strong><ul><li>應付保險金數額在保險事故發生之前，應該是確定的或可以計算的。</li><li>公司應該事先收取建立保單責任準備金所需的資金，以使承保人擁有足夠的資金來支付所發生的賠款和費用。</li><li>客戶為一份壽險保單支付的金額，應該與保險公司為該保單所承擔的風險大小相適應。</li></ul></li></ul><h3 id="二、產品財務設計的要素">二、產品財務設計的要素</h3><ul><li><strong>壽險產品財務設計中主要要素包含：</strong><ul><li><h4 id="一-給付成本-保險成本"><strong>(一) <code>給付成本 (保險成本)</code></strong></h4><p>指一個產品的所有給付的價值。<br>承保人通過將一個產品所有可能的給付，乘以每種給付會被支付的預期概率，來計算該產品的預期給付成本。<br><code>保單組</code>：指對相同年齡、相同性別，並處於同一風險級別的受保人簽發的一組保單。<br><code>表定死亡率</code>：生命表中所列示的死亡率。<br><code>經驗生命表</code>：根據保險公司自己的紀錄編制而成的一種生命表，反映其受保人的實際死亡率。</p></li><li><h4 id="二-投資收益"><strong>(二) <code>投資收益</code></strong></h4><p>承保人將其從客戶處收取的資金進行投資所賺得的金額。</p><ol><li><p>投資如何創造收益<br>許多投資都以利息收入的形式賺取收益。<br><code>利息</code>：為使用資金而支付的金額。<br><code>本金</code>：初始投資、貸出或借入的一筆資金。<br><code>單利</code>：只按初始本金額計算的一種利息。<br><code>複利計息</code>：基於本金和已累積的利息來計算利息額的方法。<br><code>複利</code>：按本金和已累積利息計算的利息。<br><code>回報率</code>：為本金一定百分比的投資收益。</p></li><li><p>投資收益如何影響財務設計<br>為了給付保險，承保人要使用(1)從客戶處收取的保費和其他收費、(2)投資收益。<br>投資收益越多，承保人需要向客戶收取的費用就越少。</p></li></ol></li><li><h4 id="三-營運費用"><strong>(三) <code>營運費用</code></strong></h4><p>即承保人日常經營過程中所發生的費用。<br><code>失效率</code>：在一個特定期間(如：一年)的期初時有效的一組特定保單中，到期末時因受保人死亡之外的原因，而終止的保單數所佔的比例。</p></li><li><h4 id="四-財務設計中的保守取值"><strong>(四) <code>財務設計中的保守取值</code></strong></h4><p>財務設計中包含了對保單所有人的繳費、死亡率、保險金給付、公司營運費用和投資收益的預測值。<br>預測值本身是不確定的。<br>由於承保人面臨著財務結果超出預期的風險，所以必須確保所持有的資金額超過某一額度。</p><ul><li><strong>特定壽險產品要素的保守取值通常採取以下形式</strong><ul><li>高於預期的死亡率</li><li>低於預期的投資收益</li><li>高於預期的營運費用</li></ul></li></ul></li><li><h4 id="五-保險費率"><strong>(五) <code>保險費率</code></strong></h4><p><code>保險費率</code>：承保人對每單位保險保障所收取的金額。<br>精算師確保保險費率和保單其他收費的：</p><ul><li>充足性：充足的保險費率應該足夠高，以使承保人擁有足夠的資金來給付保險金並支付營運費用。</li><li>公平性：相似風險程度的受保人應該被收取相近的費率。</li><li>合理性：承保人的費率太高，潛在的客戶就可能轉而從提供更地費率的競爭者那裡購買保單。</li></ul></li></ul></li></ul><h3 id="三、平準保費制度">三、平準保費制度</h3><p><code>平準保費制度</code>：是一種允許保單所有人在保單有效期內，每年繳付等額保費的壽險保費制度。<br>在保單早期，平準保費保單的保險費率高於支付索賠和費用所需的費率。<br>承保人利用來自保單早期的保費資金加上投資收益，來幫助支付保單後期數量遞增的死亡索賠。</p><hr><h1 id="第二部分：個人壽險">第二部分：個人壽險</h1><h2 id="第-5-章-定額定期壽險-v2">第 5 章 定額定期壽險</h2><h3 id="一、壽險所能滿足的需求">一、壽險所能滿足的需求</h3><p>人壽保險在受保人死亡後提供一筆保險金給付。</p><ul><li><h4 id="一-個人需求"><strong>(一) 個人需求</strong></h4><ol><li><p>遺屬撫養<br>人壽保險能夠為家庭成員提供資金支持，直至他們獲得新的收入來源或逐步適應以較低的收入水平而生活為止。<br>壽險保單的保險金被一次性支付給指定的受益人，該筆保險金通常不被視為受益人的應納稅收入。<br>保單受益人無須為其領取的死亡保險金繳納個人所得稅。</p></li><li><p>遺產規劃<br><code>遺產</code>：某人在死亡時所擁有的累積資產，被稱為此人的遺產。<br><code>遺囑</code>：指示某人死後其財產如何進行分配的一份法律文件。<br>如果在生前沒有立下有效的遺囑，則根據法律來確定其財產如何進行分配。<br><code>遺產計劃</code>：該計劃考慮此人去世時可能擁有的資產和負債額並如何盡量保持這些資產，以便按照其意願分配這些資產。<br>遺囑是遺產計劃的一個組成部分。</p></li><li><p>債務與善終費用<br>個人的債務並不會隨著死亡而消除。這些債務必須在死者的遺產分配給繼承人之前進行償還。<br>如果死者的遺產計劃中包含壽險保單的話，那麼保險金就可以用來償還那些身後的債務。</p></li></ol></li><li><h4 id="二-企業需求"><strong>(二) 企業需求</strong></h4><ol><li>企業延續保險計劃<br><code>企業延續保險計劃</code>：使企業的業主在其自身或其他對企業而言重要的人物死亡時，能夠保持企業持續經營的一種保險計劃。<br><code>關鍵人物</code>：是指其持續參與企業對企業的成功是必需的、而其死亡將給企業造成巨大財務損失的任何個人或僱員。<br><code>關鍵人物壽險 (關鍵僱員壽險)</code>：指企業以關鍵人物作為受保人而購買的個人壽險。<br><code>買賣協議</code>：是甲乙兩方之間達成的一種協議。<ul><li>該協議規定：<ul><li>(1) 甲方同意在乙方死亡以後，購買乙方在一家企業中所擁有的權益。</li><li>(2) 乙方同意在自己死亡以後，將其在企業中所擁有的遺產利益出售給甲方。</li></ul></li></ul></li><li>員工福利<br>很多企業，都把為員工提供壽險作為一項員工福利。</li></ol></li></ul><h3 id="二、定期壽險">二、定期壽險</h3><p>所有的壽險保單，都會在受保人死於保單有效期內時，提供保險金給付。<br>不同種類壽險保單的特性和成本是不同的。</p><ul><li><h4 id="一-定期壽險產品的特徵"><strong>(一) 定期壽險產品的特徵</strong></h4><p><code>定期壽險</code>：只有當受保人在保單約定的期間內死亡，才提供死亡保險金的一種壽險。<br><code>保險期限</code>：壽險保單約定的期間。</p><ul><li><strong>保險金僅在如下條件滿足時才會支付：</strong><ul><li>(1) 受保人在保險<code>期限內</code>死亡。</li><li>(2) 受保人死亡時保單仍<code>有效</code>。</li></ul></li></ul><p><code>保單周年日</code>：通常是指保單中保障生效的周年日。<br>保單並非是在受保人達到約定年齡的那一天就終止，而是在最接近受保人65歲生日的保單週年日，或緊隨65歲生日之後的保單週年日當天終止，具體取決於保單的條款規定。</p></li><li><h4 id="二-定期壽險保障計劃"><strong>(二) 定期壽險保障計劃</strong></h4><ol><li><p>定額定期壽險<br><code>定額定期壽險</code>：又稱 平准保額定期壽險 或 保證平准保費定期壽險。<br>即所提供的<code>保險金</code>，在整個保險期限內保持不變的一種定期壽險。<br>應繳付的首期保費和每期續期<code>保費</code>，在約定的整個保險期限內都保持不變。</p></li><li><p>遞減定期壽險<br><code>遞減定期壽險</code>：所提供的保險金給付在整個保障期間內不斷減少。<br>通常設定一個初始保額，該保額隨後會根據保單規定的某些方法，而逐年遞減。<br>每期應繳付的續期保費金額，通常在整個保險期限內保持不變。<br>對於第一年的保額與定額定期壽險的保額相同的遞減定期壽險，續期保費低於定額定期壽險。</p></li></ol><ul><li><strong>三種常見的遞減定期壽險計劃：</strong><ul><li><p><code>抵押貸款壽險 (抵押貸款償還保險)</code>：是一種遞減定期壽險計劃，旨在提供與抵押貸款遞減的未償還餘額相當的給付金額。<br>保單的給付金額在任何時候，通常都等於借款人當時所欠的抵押貸款金額。<br><code>聯合抵押貸款壽險</code>：該聯合保單提供與抵押貸款壽險保單完全相同的給付，但是承保兩個受保人的生命。如果一個受保人在保單有效期內死亡，那麼保險公司，就必須向保單的受益人給付保險金，通常是另一個健在的受保人。</p></li><li><p><code>信用人壽保險</code>：旨在當借款人，在貸款還清之前死亡時，用保險金來支付未償還貸款餘額的定期壽險。<br>此類信用貸款的期限不得超過10年。</p></li><li><p><code>家庭收入保險</code>：是當受保人在保障期內死亡時，對其受益人按月提供約定的收入給付額的一種遞減定期壽險計劃。<br>按月收入給付會一直持續到購買保單時所約定的期限屆滿時為止。<br>如果受保人在保險期限內死亡，則按月給付的期限至少會達到合約規定的最低年數。<br>家庭收入保險經常作為現金價值壽險保單的一個保單附約來簽發。<br><code>保單附約</code>：又稱批單，是對保險單進行的修改，並成為保險合約的一個組成部分，用以增加或限制合約應付的保險金。<br>保單附約與保險合約的其他部分，具有同等的法律效力，通常被用來提供某種類型的補充給付或提高保單的死亡保險金<br><code>家庭收入保單</code>：帶有家庭收入保險附約的現金價值壽險保單。</p></li></ul></li></ul><ol start="3"><li>遞增定期壽險<br><code>遞增定期壽險</code>：提供的死亡保險金從某一數額開始，並在保險期限內依特定金額或比例按規定的時間間隔增加。<br>遞增定期壽險通常作為壽險保單的附約來購買，並且只適用於在特定時期滿足特定需求。<br>遞增定期壽險的保費，通常隨保障金額的提高而提高。</li></ol></li><li><h4 id="三-定期壽險保障的特性"><strong>(三) 定期壽險保障的特性</strong></h4><p>定期壽險保單在約定的保險期限屆滿時即告終止。若保單所有人想繼續享有保險保障，則必須再投保一份新保單。<br>但是，新的保單必須經過核保。</p><ol><li><p>可續保定期壽險<br><code>可續保定期壽險</code>：是一種定期壽險保單，賦予保單所有人在約定的期限屆滿時，無需提供可保證明，即可選擇繼續享有保障的權利。<br><code>可保證明</code>：是受保人仍屬於可保風險的證據。<br><code>續保條款</code>：保單中賦予受保人，無需提供可保證明，即可繼續享有保障權利的條款。<br>很多可續保定期壽險保單，都對保單所有人的續保權利作出了限制。<br><strong>最常見的限制包括：</strong></p><ul><li>(1) 受保人只能在規定的年齡之前進行續保。</li><li>(2) 規定最多可續保的次數。(這類限制的目的，主要是為了使逆選擇最小化)</li></ul><p>當保單所有人將定期壽險保單進行續保時，保單的費率會有所提高，因為受保人的年齡相比保單簽發時已有增長。續保費率取決於受保人的到達年齡。<br><code>到達年齡</code>：即受保人在續保日已達到的實際年齡。<br><code>按年續保定期(YRT)壽險 (年度續保定期(ART)壽險)</code>：YRT保單的可續保年限通常為10至30年，視受保人的年齡而定。但是，隨著受保人的年齡增長，YRT保障的續期保費會比相應的5年期或10年期定期保單的保費貴得多。</p></li><li><p>可轉換定期壽險<br><code>可轉換定期壽險</code>：賦予保單所有人，將定期保單轉換成現金價值壽險保單的權利。<br><code>轉換權</code>：它允許保單所有人，將定期保單轉換為現金價值保單，而無須提供受保人是可保風險的證明<br><code>到達年齡轉換</code>：現金價值保單的費率，根據保單轉換時受保人的到達年齡來計算。<br><code>簽約年齡轉換</code>：轉換後，現金價值壽險保單的費率，將按照原定期保單簽發時受保人的年齡來計算。</p></li><li><p>保費返還定期壽險<br><code>保費返還(ROP)定期壽險</code>：這是定期壽險的一種形式，如果受保人在保險期限內死亡，它提供死亡保險金。如果受保人在保險期限內未死亡，則承諾返還保費。</p></li></ol></li></ul><hr><h2 id="第-6-章-現金價值壽險與兩全保險-v2">第 6 章 現金價值壽險與兩全保險</h2><p><code>現金價值壽險 (長期壽險)</code>：具有儲蓄成分的壽險產品。<br><code>現金價值</code>：為受保人提供終身保險保障，並且提供儲蓄的成分。</p><ul><li><strong>現金價值壽險具有兩個特性：</strong><ul><li>現金價值壽險為受保人提供<code>終身保障</code>，只要保單保持有效。</li><li>現金價值壽險既提供保險保障，又具有<code>儲蓄成分</code>，在受保人生存期間，保單所有人可以用這些儲蓄價值來滿足其財務上的需求。</li></ul></li></ul><h3 id="一、終身壽險">一、終身壽險</h3><p><code>終身壽險</code>：是一種提供終身保險保障的現金價值人壽保險，通常按照一個不隨受保人年齡增長而增加的平準費率，來收取保費。<br><code>保單貸款</code>：保單所有人可以直接從保險公司獲得貸款。<br><code>現金退保價值 (退保價值、退保利益)</code>：保單所有人在退保時有權領取的現金價值數額。</p><ul><li><h4 id="一-繳費期間"><strong>(一) 繳費期間</strong></h4><p><strong>大多數終身壽險保單都可被歸為以下兩類之一:</strong></p><ul><li>(1) 連續繳費保單</li><li>(2) 限期繳費保單</li></ul><ol><li><p>連續繳費終身壽險保單<br><code>連續繳費終身壽險保單 (純粹壽險保單、普通壽險保單)</code>：根據這種保單的規定，保費在受保人生存時均應繳付。</p></li><li><p>限期繳費終身壽險保單<br><code>限期繳費終身壽險保單</code>：應當在一個規定期間屆滿，或者受保人死亡(以兩者中先發生者為準)之前繳付保費的一種終身壽險保單。許多限期繳費保單都會規定一個繳費年限<br><code>繳清保單</code>：如果受保人在繳費期限屆滿時依然存活，則保費可以停止繳付，但是保險保障依然持續。無需再繳納保費，而繼續提供保障的壽險保單。</p></li></ol><p><code>躉繳保費終身壽險保單</code>：要求一次性繳清保費的一種限期繳費終身壽險保單。<br>躉繳保費要比大多數限期繳費保單的保費高得多，並且躉繳保費保單中立刻就會具有高額的現金價值。</p></li><li><h4 id="二-修正終身壽險"><strong>(二) 修正終身壽險</strong></h4><ul><li><strong>有些承保人也會提供以下兩種終身壽險保單：</strong><ul><li>(1) 規定繳付的<code>保費</code>額在保險期限內的某個時點會發生變化的保單。</li><li>(2) 保障的<code>保額</code>在保險期限內會發生變化的保單。</li></ul></li></ul><ol><li><p>修正保費<br><code>修正保費終身壽險保單</code>：其年度保費額，在規定的初始期限(通常為5年或10年)後，會發生變化的一種終身壽險保單。<br>修正保費保單的初始年繳保費，低於類似的連續繳費保單的年繳保費。<br>在規定的初始期限之後，修正保費保單的年繳保費會調高至一個金額，這個金額，略高於常規的(非修正的)保費，<br>在隨後的保單有效期間內，保費會一直維持在這個提高後的金額上。<br><code>分級保費保單</code>：要求設立三個或三個以上等級的年繳保費額，這些保費等級會在特定的時點(比如每隔三年)提高一次，當達到最高保費等級時，將以此作為剩餘保單期限內的平准保費。</p></li><li><p>修正保額<br><code>修正保額保單</code>：是在受保人達到規定年齡時，或在規定期限的期末，所提供的保險金額，將按約定的百分比或金額減少的一種終身壽險保單。<br>年繳保費要低於具有相同初始保額的連續繳費終身壽險保單。</p></li></ol></li><li><h4 id="三-多受保人的終身壽險"><strong>(三) 多受保人的終身壽險</strong></h4><ol><li><p>聯合終身壽險<br><code>聯合終身壽險</code>：除了以同一份保單承保兩個人之外，具有與個人終身壽險相同的特徵和給付。<br>首亡即付壽險，因為一旦其中任何一個受保人死亡，保險公司就要向受益人給付死亡保險金，受益人通常是另一個健在的受保人，並且保單的保障即告終止。<br>聯合終身壽險保單，通常會規定從任一受保人死亡之時起算的一個特定期間(多為60天或90天)，在這一期間內，健在的受保人可以購買一份具有相同保額的個人終身壽險保單，而無須提供可保證明。</p></li><li><p>最後生存者壽險<br><code>最後生存者壽險</code>：又稱雙人死亡即付壽險或遺屬壽險，是聯合終身壽險的一種變形，只有在保單所承保的兩個受保人都死亡後，才會支付保險金。</p></li><li><p>家庭保單<br><code>家庭保單</code>：它是對主受保人的配偶及子女，提供定期壽險保障的一種終身壽險保單。<br>對受保人的配偶和子女提供的定期保險保額，是受保人終身壽險保額的一個比例，通常是1/4或1/5。</p></li></ol></li></ul><h3 id="二、萬能壽險">二、萬能壽險</h3><p><code>萬能(UL)壽險</code>：是現金價值壽險的一種形式，其特點是靈活的保費、保額、死亡給付金額，以及將保單拆分為三大要素。<br>保費、保額、死亡給付以及終身壽險保單的現金價值，在保單簽發時就已經確定。</p><ul><li><h4 id="一-保單要素的拆分"><strong>(一) 保單要素的拆分</strong></h4><ul><li>(1) 承保人所收取的死亡率費用。</li><li>(2) 承保人對保單現金價值結算的利率。</li><li>(3) 承保人所收取的費用。</li></ul><ol><li>死亡率收費<br>承保人定期從萬能壽險保單的現金價值中，扣除死亡率收費。<br>死亡率收費，是承保人為彌補簽發保單時，所承擔的風險而需要的資金額。<br><code>退保手續費</code>：<br><code>失效</code>：<br><code>浮動保費萬能壽險</code>：<br><code>固定保費萬能壽險</code>：</li></ol></li></ul><h3 id="三、變額壽險">三、變額壽險</h3><p><code>變額(VL)壽險</code>：是現金價值壽險的一種形式，其<code>保費是固定</code>的，但死亡給付和其他價值，都可能隨保單所有人選擇的投資子帳戶的投資業績而變動。<br><code>子帳戶</code>：是變額壽險保單所有人或變額年金合約所有人，將其已繳付的保費及其保單已累積的現金價值，分配至其中的一種備選投資組合。<br><code>獨立帳戶</code>：是承保人將之與普通帳戶分開保持的一種投資帳戶，用以分離並幫助管理其置於變額產品的資金。<br><code>普通帳戶</code>：是一種未作劃分的投資帳戶，承保人在其中持有資金，以支持其對保證型保險產品(如終身壽險和其他非變額產品)給付保險金的合約責任。</p><p><code>變額萬能(VUL)壽險</code>：<br><code>兩全保險</code>：<br><code>滿期日</code>：</p><hr><ul><li><h2 id="第-7-章-附加利益-v2">第 7 章 附加利益</h2><code>受保人失能保費豁免(WP)利益</code>：<br><code>投保人失能保費豁免利益</code>：<br><code>未成年人保單</code>：<br><code>失能收入損失利益</code>：<br><code>意外死亡利益</code>：<br><code>意外死亡及全殘(AD&amp;D)利益</code>：<br><code>壽險提前利益</code>：<br><code>終末疾病(TI)利益</code>：<br><code>重大疾病(DD)利益</code>：<br><code>長期護理(LTC)保險利益</code>：<br><code>配偶保險附約</code>：<br><code>子女保險附約</code>：<br><code>配偶及子女保險附約</code>：<br><code>第二受保人附約</code>：<br><code>保證可保性(GI)利益</code>：<br><code>增額繳清選擇權利益</code>：</li></ul><hr><h1 id="第三部分：個人壽險保單條款與所有權">第三部分：個人壽險保單條款與所有權</h1><ul><li><h2 id="第-8-章-個人壽險保單條款-v2">第 8 章 個人壽險保單條款</h2><code>猶豫期條款</code>：<br><code>完整合約條款</code>：<br><code>封閉型合約</code>：<br><code>開放型合約</code>：<br><code>不可抗辯條款</code>：<br><code>不實告知</code>：<br><code>重大不實告知</code>：<br><code>蓄意不實告知</code>：<br><code>寬限期條款</code>：<br><code>復效條款</code>：<br><code>復效</code>：<br><code>年齡或性別誤告條款</code>：<br><code>保單貸款條款</code>：<br><code>保單提現條款</code>：<br><code>不喪失條款</code>：<br><code>自動不喪失利益</code>：<br><code>現金支付不喪失選擇權</code>：<br><code>淨現金退保價值</code>：<br><code>減額繳清保險不喪失選擇權</code>：<br><code>展期定期保險不喪失選擇權</code>：<br><code>保費自動墊繳(APL)選擇權</code>：<br><code>除外責任</code>：<br><code>自殺除外條款</code>：</li></ul><hr><ul><li><h2 id="第-9-章-壽險保單的所有權-v2">第 9 章 壽險保單的所有權</h2><code>財產</code>：<br><code>不動產</code>：<br><code>動產</code>：<br><code>有形財產</code>：<br><code>無形財產</code>：<br><code>財產所有權</code>：<br><code>概括式指定</code>：<br><code>第一順位受益人</code>：<br><code>次順位受益人</code>：<br><code>撤銷權</code>：<br><code>可撤銷受益人</code>：<br><code>不可撤銷受益人</code>：<br><code>既得利益</code>：<br><code>保費繳付方式</code>：<br><code>分紅保單</code>：<br><code>非分紅保單</code>：<br><code>可分配盈餘</code>：<br><code>保單紅利</code>：<br><code>紅利選擇權</code>：<br><code>自動紅利選擇權</code>：<br><code>現金紅利選擇權</code>：<br><code>保費抵減紅利選擇權</code>：<br><code>保費貸款償還紅利選擇權</code>：<br><code>累積升息紅利選擇權</code>：<br><code>增額繳清保險紅利選擇權</code>：<br><code>增額定期保險紅利選擇權</code>：<br><code>轉讓協議</code>：<br><code>轉讓人</code>：<br><code>受讓人</code>：<br><code>絕對轉讓</code>：<br><code>抵押轉讓</code>：<br><code>轉讓條款</code>：<br><code>優先受益人條款</code>：<br><code>同時死亡法案</code>：<br><code>生存條款</code>：<br><code>保險金給付選擇權</code>：<br><code>保險金給付選擇權條款</code>：<br><code>受款人</code>：<br><code>次順位受款人</code>：<br><code>利息選擇權</code>：<br><code>固定期間選擇權</code>：<br><code>固定金額選擇權</code>：<br><code>終身年金收入選擇權</code>：<br><code>終身年金</code>：</li></ul><hr><h1 id="第四部分：年金">第四部分：年金</h1><ul><li><h2 id="第-10-章-年金-v2">第 10 章 年金</h2><code>年金</code>：<br><code>合約所有人</code>：<br><code>受款人</code>：<br><code>次順位受款人</code>：<br><code>年金受保人</code>：<br><code>滿期日</code>：<br><code>給付期間</code>：<br><code>年金間隔期</code>：<br><code>即期年金</code>：<br><code>延期年金</code>：<br><code>累積期間</code>：<br><code>累積價值</code>：<br><code>躉繳保費年金</code>：<br><code>躉繳保費即期年金(SPIA)合約</code>：<br><code>躉繳保費延期年金(SPDA)合約</code>：<br><code>浮動保費年金</code>：<br><code>定額年金</code>：<br><code>權益指數化年金(EIA)</code>：<br><code>市場價值調整(MVA)年金</code>：<br><code>變額年金</code>：<br><code>固定利率子帳戶</code>：<br><code>提現條款</code>：<br><code>提現手續費</code>：<br><code>退保價值</code>：<br><code>退保手續費</code>：<br><code>死亡利益</code>：<br><code>最低保證死亡利益(GMDB)</code>：<br><code>最低保證提現利益(GMWB)</code>：<br><code>最低保證收入利益(GMIB)</code>：<br><code>最低保證累積利益(GMAB)</code>：<br><code>前端收費</code>：<br><code>後端收費</code>：<br><code>定期費用</code>：<br><code>服務費</code>：<br><code>死亡率和費用風險(M&amp;E)收費</code>：<br><code>投資管理費</code>：<br><code>年金給付選擇權條款</code>：<br><code>年金給付選擇權</code>：<br><code>給付期年金</code>：<br><code>一次性支付</code>：<br><code>固定期間選擇權</code>：<br><code>固定期間年金</code>：<br><code>固定期間</code>：<br><code>固定金額選擇權</code>：<br><code>固定金額年金</code>：<br><code>純粹終身年金</code>：<br><code>聯合及最後生存者終身年金</code>：<br><code>固定期間終身年金</code>：<br><code>償還式終身年金</code>：<br><code>個人退休儲蓄計劃(IRA)</code>：<br><code>個人退休年金</code>：<br><code>傳統IRA</code>：<br><code>羅斯IRA</code>：</li></ul><hr><h1 id="第五部分：團險壽險與團體退休計劃">第五部分：團險壽險與團體退休計劃</h1><ul><li><h2 id="第-11-章-團險保險原理-v2">第 11 章 團險保險原理</h2><code>團體保險</code>：<br><code>團體保險主合約</code>：<br><code>團體受保人</code>：<br><code>非分擔型計劃</code>：<br><code>分擔型計劃</code>：<br><code>保險憑證</code>：<br><code>憑證持有人</code>：<br><code>在職工作條款</code>：<br><code>觀察期</code>：<br><code>準入期</code>：<br><code>開放註冊期</code>：<br><code>利益表</code>：<br><code>手冊費率法</code>：<br><code>經驗費率法</code>：<br><code>混合費率法</code>：<br><code>自行管理團體計劃</code>：<br><code>承保人代管團體計劃</code>：</li></ul><hr><h2 id="第-12-章-團體人壽保險與團體退休計劃-v2">第 12 章 團體人壽保險與團體退休計劃</h2><h3 id="一、團體人壽保險">一、團體人壽保險</h3><ul><li><h4 id="一-團體壽險保單條款"><strong>(一) 團體壽險保單條款</strong></h4><ol><li>寬限期條款</li><li>不可抗辯條款<br>該條款限定了保險公司可以以團體保險投保單中的告知，來抗辯團體保險主合約有效性的期間。<br>可以抗辯合約的期間限定為自保險合約簽發之日起的<code>兩年內</code>。</li><li>受益人指定</li><li>隨同性條款<br><code>隨同性條款</code>：允許團體受保人，在其保障因某些原因而終止時，繼續享有團體計劃的保障，通常無需提供可保證明。<br><code>隨同保障</code>：當被保險的僱員離開團體後，仍能繼續享有的團體保險保障。繼續享有的保障通常是定期壽險保障。<br><code>轉換權</code>：<br><code>團體債權人壽險</code>：<br><code>計劃發起者</code>：<br><code>計劃參加者</code>：<br><code>計劃書</code>：<br><code>既得受領權</code>：<br><code>給付公式</code>：<br><code>確定給付公式</code>：<br><code>確定給付計劃</code>：<br><code>確定繳費公式</code>：<br><code>確定繳費計劃</code>：<br><code>計劃管理者</code>：<br><code>資金運用方式</code>：<br><code>養老金</code>：<br><code>儲蓄計劃</code>：<br><code>401(K)計劃</code>：<br><code>利潤分享計劃</code>：<br><code>股票激勵計劃</code>：<br><code>社會保障</code>：</li></ol></li></ul><hr><h1 id="第六部分：健康保險">第六部分：健康保險</h1><h2 id="第-13-章-健康保險-v2">第 13 章 健康保險</h2><h3 id="一、醫療費用保障">一、醫療費用保障</h3><p><code>醫療費用保障</code>：為受保人治療疾病和傷害所發生的費用提供給付。</p><ul><li><h4 id="一-傳統醫療費用保險"><strong>(一) 傳統醫療費用保險</strong></h4><p><code>補償給付</code>：根據受保人財務損失的實際金額提供的合約給付。</p><ul><li><strong>傳統醫療費用保險提供三種類型的保障：</strong><ol><li><p><code>基本醫療費用保障</code>：</p><ul><li><strong>為以下每一類型的醫療 費用提供分項給付：</strong><ul><li><code>醫院費用</code>：包括對住院病人和門診病人接受的包括食宿、藥品、化驗等在內的特定醫院服務收取的費用，及其他在醫院期間發生的相關費用。</li><li><code>手術費用</code>：包括對住院手術和門診手術操作所收取的費用。</li><li><code>醫生費用</code>：包括醫生在醫院內外出診相關的收費。</li></ul></li></ul><p><code>全額補償保障</code>：即承保人對受保人的合格醫療費用，開始進行補償之前，並不要求受保人首先承擔自負額。</p></li><li><p><code>大額醫療費用保障</code>：</p><ul><li><strong>大額醫療費用保障為以下醫療費用提供大額給付：</strong><ul><li>(1) 基本的醫院費用、手術費用和醫生費用</li><li>(2) 與疾病或傷害相關的附加醫療服務</li><li>(3) 預防保健</li></ul></li><li><strong>大額醫療費用保障通常有以下兩種存在形式：</strong><ul><li><code>附加大額醫療保單</code>：是與一份相關的基本醫療費用保險單聯合簽發的一種保險單。經常為基本計劃所不保的費用提供給付。</li><li><code>綜合大額醫療保單</code>：是將附加大額醫療保單，及其相關的基本醫療費用保單所提供的保障，綜合在一起的一種醫療費用保險單。</li></ul></li></ul><p><code>所承保的費用</code>：包括承擔許多不同類型的治療費、醫療用品費和醫療服務費。</p><ul><li><strong>所承保的醫療服務和治療通常，包括以下部分或全部醫療費用：</strong><ul><li>醫院對半私人病房的食宿待遇收取的費用</li><li>醫院對住院期間的各種收費，例如化驗、X光透視、藥品和手術室的使用 - 手術用品和服務</li><li>麻醉和輸氧</li><li>體檢、職業病和語言障礙矯正</li><li>外科醫生和內科醫生的服務</li><li>註冊護士的服務</li><li>特定的門診服務，如化驗費、X光透視和處方藥品</li><li>預防性服務，如兒童免疫和定期普查和診斷檢驗</li></ul></li></ul><p><code>給付金額</code>：與所有健康險保單一樣，大額醫療保單只對 <em><strong>准許費用</strong></em> 提供給付，<br><code>准許費用</code>：指受保人發生的、屬於保單承保範圍的那些費用。</p><p><code>慣常合理(UCR)費用</code>：指特定地理區域內的醫療服務提供者，對各項特定醫療服務，通常收取的費用額。如果受保人索賠的金額等於或低於其所接受治療的最高給付金額，那麼承保人將同意支付全部的索賠金額。如果索賠金額超過了最高給付金額，那麼承保人只承擔相當於最高給付的那部分費用，受保人要負責承擔超過最高給付金額的那部分費用。</p><p><code>費用分擔規定</code>：在大多數大額醫療費用保單中，准許費用都要受費用分擔或成本共攤規定的限制，這些規定旨在鼓勵受保人控制其醫療費用額。費用分擔規定最為常見的兩種形式是 <code>自付額</code> 和 <code>共同保險</code>。</p><p><code>自付額</code>：通常是在承保人根據醫療費用保單開始進行任何給付之前，受保人必須對准許醫療費用自負的一個固定金額。<br><code>日歷年度自付額</code>：即適用於受保人在給定日曆年度內，發生的所有准許費用總額的一個自付額。</p><p><code>共同保險</code>：該條款通常要求受保人在承擔自付額之後，還必須承擔剩餘的全部準許費用的一個規定百分比。</p><p><code>最高自負額條款</code>：又稱止損條款。當受保人已承擔規定的自負額，從而滿足了自付額和共同保險要求後，保單將對受保人的准許醫療費用提供百分之百的補償。</p><p><code>除外責任</code>：大額醫療費用保單，通常將由以下治療引起的任何醫療費用都排除在保障範圍之外：</p><ul><li>除意外傷害或其他醫療原因所導致的、必需的矯正手術之外的<code>整容手術</code></li><li>受保人在<code>服兵役</code>期間發生的、或由<code>戰爭引起</code>的疾病或傷害的治療</li><li>故意<code>自殘</code>所致傷害的治療</li><li>政府機構<code>免費提供</code>的或<code>由其他組織支付費用</code>的治療</li><li><code>常規牙齒治理</code>、<code>常規眼科檢查</code>和視力矯正</li></ul></li><li><p>其他醫療費用保障：<br><code>牙科費用保障</code>：為常規牙科檢查、牙病預防、治療齲齒以及牙齒與口腔疾病所需的醫療程序提供給付。<br><code>處方藥費保障</code>：對憑醫生處方購買的、非櫃檯供應的各種藥品的購買提供給付。<br><code>眼科醫療保障</code>：對受保人因接受眼科檢查和視力矯正而發生的費用提供給付。</p></li></ol></li></ul></li><li><h4 id="二-管理式醫療計劃"><strong>(二) 管理式醫療計劃</strong></h4><p><code>管理式醫療</code>：是將醫療服務的籌資和提供，整合於一個系統之內，並由該系統來管理醫療服務的使用和成本的一種方法。<br><code>管理式醫療計劃</code>：是將醫療服務的籌資和管理，與向已註冊參加該計劃的一組個人，提供醫療服務整合在一起的一種計劃。</p><ol><li><p>管理醫療服務的獲取<br><code>網絡</code>：是指已經與特定的管理式醫療計劃簽約，以便為計劃成員提供醫療保健服務的一組醫生、醫院及輔助醫療服務提供者。<br><code>基礎醫療提供者(PCP)</code>：又被稱為基礎保健醫生，他們是醫療服務提供者網絡的成員，負責協調計劃成員的醫療保健及治療。<br><code>醫療保健組織(HMO)</code>：是一種醫療保健的籌資和提供系統，它為特定地理區域範圍內的保險計劃成員(經常被稱為保險註冊者)，提供綜合的醫療服務。<br><code>首選醫療提供者組織(PPO)</code>：是一種醫療給付安排，它鼓勵計劃成員首選網絡內的醫療服務提供者，但也對網絡外醫療服務者提供的服務給予某種最低保障。<br><code>自選醫療服務(POS)計劃</code>：是一種綜合了HMO和PPO特徵的管理式醫療計劃。</p></li><li><p>管理醫療服務的成本<br>通過要求計劃成員和醫療服務提供者分攤醫療服務的成本，以尋求對醫療服務成本的管理。<br><code>共付額</code>：當接受網絡內醫療服務提供者所提供的醫療服務時，計劃成員通常要向醫療服務提供者，支付一筆特定的固定金額。</p></li></ol></li><li><h4 id="三-政府發起的醫療費用保障"><strong>(三) 政府發起的醫療費用保障</strong></h4><p>在許多國家，政府或公共機構都為公民提供核心醫療服務的綜合醫療費用保障，包括醫院醫療和醫生服務。<br><code>聯邦健康保險計劃</code>：是一項聯邦政府計劃，為<code>年滿65歲</code>的老人和某些<code>失能人士</code>提供醫療費用給付。<br><code>州級醫療輔助計劃</code>：是美國聯邦與各州的一項聯合計劃，為<code>低收入人群</code>和某些<code>老齡</code>及<code>失能</code>的個人，提供基本醫療費用及養老院的保障。</p></li></ul><h3 id="二、失能收入損失保障">二、失能收入損失保障</h3><p><code>失能收入損失保障</code>：</p><ul><li><h4 id="一-失能收入損失保險的類型"><strong>(一) 失能收入損失保險的類型</strong></h4><code>給付期間</code>：<br><code>短期個人失能收入損失保障</code>：<br><code>長期個人失能收入損失保障</code>：<br><code>短期團體失能收入損失保障</code>：<br><code>長期團體失能收入損失保障</code>：</li><li><h4 id="二-完全失能的定義"><strong>(二) 完全失能的定義</strong></h4><code>完全失能</code>：<br><code>推定失能</code>：</li><li><h4 id="三-免責期"><strong>(三) 免責期</strong></h4><code>免責期</code>：</li><li><h4 id="四-給付金額"><strong>(四) 給付金額</strong></h4></li><li><h4 id="五-附加失能利益"><strong>(五) 附加失能利益</strong></h4><code>部分失能</code>：<br><code>加保選擇權利益</code>：<br><code>生活費用調整(COLA)利益</code>：</li><li><h4 id="六-除外責任"><strong>(六) 除外責任</strong></h4></li><li><h4 id="七-特種失能保障"><strong>(七) 特種失能保障</strong></h4><code>關鍵人物失能保障</code>：<br><code>失能收購協定保障</code>：</li></ul><h3 id="三、長期護理保障">三、長期護理保障</h3><p><code>長期護理保障</code>：</p><ul><li><h4 id="一-給付啟動條件"><strong>(一) 給付啟動條件</strong></h4><code>給付啟動條件</code>：<br><code>日常生活活動(ADL)</code>：<br><code>認知障礙</code>：</li><li><h4 id="二-長期護理給付"><strong>(二) 長期護理給付</strong></h4><code>每日給付額</code>：<br><code>定額給付法</code>：<br><code>補償法</code>：<br><code>通貨膨漲保護條款</code>：</li></ul><hr><h2 id="第-14-章-健康險保單-v2">第 14 章 健康險保單</h2><h3 id="一、個人健康險保單">一、個人健康險保單</h3><ul><li><h4 id="一-個人健康險保單條款"><strong>(一) 個人健康險保單條款</strong></h4><ol><li>寬限期條款<br>允許保單所有人，在保費到期日後的一個約定的期限內繳付續期保費。</li><li>不可抗辯條款<br>它對承保人有權以投保單中的重大不實告知為由，而撤銷保單的時間期限作出了限制。<br>大多數個人醫療費用保單中包含的不可抗辯條款都規定，在保單生效已滿一個特定期間(通常是二或三年)後，承保人就不得以投保單中的重大不實告知為由，來抗辯保單，除非這種不實告知是欺詐性的。</li><li>索賠條款<br>規定受保人要向承保人及時通知損失情況的義務，也規定承保人要向受保人迅速賠付保險金的義務。</li><li>訴訟條款<br><code>訴訟條款</code>：該條款限定了對承保人的理賠決策持有異議的索賠人，有權為領取自認為應得的保險金，而起訴承保人的時間期限。</li><li>超額保險條款<br><code>超額保險條款</code>：該條款規定，如果受保人擁有超額保障，保單應付的保險金將會減少。<br><code>超額受保人</code>：是指有權領取超過其治療所發生實際成本的醫療費用保險金的個人，或者在失能期間，有權領取的收入保險金高於其正常工作所得收入的個人。</li><li>體檢條款<br><code>體檢條款</code>：該條款規定，承保人有權要求已提出索賠的受保人接受體檢，體檢醫生由承保人選定，相關費用也由承保人承擔。這種體檢，使得承保人能夠證實失能收入損失索賠的有效性。</li></ol></li><li><h4 id="二-個人健康保險核保"><strong>(二) 個人健康保險核保</strong></h4>對個人健康保險投保單進行核保的目的，主要在於確定準受保人所代表的發病率風險程度。<ul><li><strong>其中主要的影 響因素包括以下幾種：</strong><ul><li>年齡：發病率通常隨著年齡的增長而提高。</li><li>健康狀況：個人的健康史和目前的健康狀況，都是確定發病率風險的重要因素。</li><li>性別：女性通常比同齡男性的發病率更高。</li><li>職業：個人的職業會影響其發病率風險。</li><li>業餘愛好：從事某些運動和愛好，可能會增加個人受傷或患病的可能性。</li><li>工作經歷：準受保人的工作經歷，對於失能收入損失保障尤其重要。在其工作記錄中有著多次跳槽經歷的人或者只有臨時工作經歷的人，可能是一個高風險體。</li><li>生活習慣與生活方式：個人的生活習慣和生活方式可能會導致其遭受意外傷害或患病的風險增加。</li></ul></li></ul></li><li><h4 id="三-個人健康保險產品的財務設計"><strong>(三) 個人健康保險產品的財務設計</strong></h4><code>理賠成本</code>：承保人預計為提供其健康險保單中所承諾的給付將發生的成本。<br><code>賠付率</code>：指承保人對一組保單<code>支付的保險金</code>，與之從這組保單收到的<code>保費</code>額之比。</li></ul><h3 id="二、團體健康險保單">二、團體健康險保單</h3><ul><li><h4 id="一-團體健康險保單條款"><strong>(一) 團體健康險保單條款</strong></h4><ol><li><p>協調給付條款<br><code>協調給付(COB)條款</code>：旨在防止同時享有多份團體醫療費用保單保障的被保險成員，領取超過其實際所發生醫療費用的保險金數額。<br><code>準許費用</code>：是指受保人發生的、且為其團體醫療費用保險計劃所承保的慣常合理費用。<br><code>不重複給付條款</code>：是一種協調給付條款，它規定：如果該條款包含在第二提供者的計劃中，且如果第一計劃給付的金額，與第二計劃假設作為第一計劃時應給付的金額之間存在差額，則該條款便將第二計劃應給付的金額限定為此差額。</p></li><li><p>轉換條款<br><code>轉換條款</code>：給予即將脫離團體的被保險成員，無須提供可保證明，即可購買個人醫療費用保單的有限權利。</p></li></ol></li><li><h4 id="二-團體健康保險核保"><strong>(二) 團體健康保險核保</strong></h4><p>核保人需要評估一個準被保險團體的預期發病率，<br>發病率反映許多因素，比如團體成員工作所屬的行業、團體成員的年齡分佈、團體成員的性別分佈等。</p></li><li><h4 id="三-基金籌付機制"><strong>(三) 基金籌付機制</strong></h4><p><code>基金籌付機制</code>：承擔團體保險計劃的理賠成本及管理費用的方法。</p><ol><li>完全保險型計劃<br><code>完全保險型計劃</code>：即由團體保單持有人，定期向保險公司繳付保費，而由保險公司承擔全部賠付責任。</li><li>完全自保型計劃<br><code>完全自保型計劃</code>：又稱完全自籌型計劃，即由團體保單持有人(通常即雇主)，完全承擔全部賠付及相關費用責任的一種團體保險計劃。<br><code>自保</code>：是個人或企業承擔與特定風險相關的損失財務責任的一種風險管理技術。<br><code>續薪計劃</code>：通常自被保險僱員因患病，或受傷害而未上班的第一天起，就開始按其全額薪金提供保險金，並持續一個約定的期間。<br><code>停損保險</code>：這種保險使得雇主能夠，為其承擔的健康保險理賠責任，設定一個最高資金限額。<ul><li><strong>停損保障有幾種形式，可供選擇：</strong><ul><li><code>個案停損保障 (特定停損保障)</code>：當雇主在規定時期內，對其任一僱員支付的索賠總額超過一個約定的金額時，承保人就負責向雇主支付賠款。<br><code>個人自付額 (特定自付額)</code>：是指在停損保險中，對於任一僱員在規定期間內發生的索賠總額，在停損承保人補償僱主之前，必須由雇主承擔的索賠金額。</li><li><code>累計停損保障</code>：當雇主在規定時期之內，承擔的索賠總額超過約定金額時，停損承保人就開始對雇主進行賠付<br><code>起付點 (累計自付額)</code>：是指當停損承保人開始對雇主賠付之前，雇主在規定的時期內，必須承擔的索賠總額。<br><code>管理服務專項(ASO)合約</code>：雇主由一個外部組織，為計劃提供部分或全部管理服務，將產生更高的成本效益。<br><code>第三方管理人(TPA)</code>：是指保險公司以外的，為團體福利計劃的發起者，提供管理服務的一種組織。</li></ul></li></ul></li></ol></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> LOMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_JavaScrip大全</title>
      <link href="/2022/06/11/%E9%80%9F%E6%9F%A5%E8%A1%A8-JavaScrip%E5%A4%A7%E5%85%A8/"/>
      <url>/2022/06/11/%E9%80%9F%E6%9F%A5%E8%A1%A8-JavaScrip%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>歐萊禮 JavaScript大全(第六版)</p><a id="more"></a><h1 id="章節目錄">章節目錄</h1><table><thead><tr><th>目錄</th><th></th></tr></thead><tbody><tr><td><a href="#JavaScript%E6%A6%82%E8%BF%B0">JavaScript概述</a></td><td><a href="#%E6%A0%B8%E5%BF%83JavaScript">第一部 核心JavaScript</a>、<br><a href="#%E5%AE%A2%E6%88%B6%E7%AB%AFJavaScript">第二部 客戶端JavaScript</a>、<br><a href="#%E6%A0%B8%E5%BF%83JavaScript%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99">第三部 核心JavaScript參考資料</a>、<br><a href="#%E5%AE%A2%E6%88%B6%E7%AB%AFJavaScript%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99">第四部 客戶端JavaScript參考資料</a></td></tr></tbody></table><ul><li><h2 id="第一部-核心JavaScript"><a href="#%E6%A0%B8%E5%BF%83JavaScript">第一部 核心JavaScript</a></h2><table><thead><tr><th>目錄</th><th></th></tr></thead><tbody><tr><td><a href="#%E8%AA%9E%E5%BD%99%E7%B5%90%E6%A7%8B">語彙結構</a></td><td><a href="#%E5%AD%97%E5%85%83%E9%9B%86">字元集</a>、<a href="#%E8%A8%BB%E8%A7%A3">註解</a>、<a href="#%E5%AD%97%E9%9D%A2%E5%80%BC">字面值</a>、<a href="#%E8%AD%98%E5%88%A5%E5%AD%97%E5%92%8C%E4%BF%9D%E7%95%99%E5%AD%97">識別字和保留字</a>、<a href="#%E9%9D%9E%E5%BF%85%E9%A0%88%E7%9A%84%E5%88%86%E8%99%9F">非必須的分號</a></td></tr><tr><td><a href="#%E8%A1%8C%E5%88%A5%E3%80%81%E5%80%BC%E8%88%87%E8%AE%8A%E6%95%B8">行別、值與變數</a></td><td></td></tr><tr><td><a href="#%E9%81%8B%E7%AE%97%E5%BC%8F%E8%88%87%E9%81%8B%E7%AE%97%E5%AD%90">運算式與運算子</a></td><td></td></tr><tr><td><a href="#%E8%BF%B0%E5%8F%A5">述句</a></td><td></td></tr><tr><td><a href="#%E7%89%A9%E4%BB%B6">物件</a></td><td></td></tr><tr><td><a href="#%E9%99%A3%E5%88%97">陣列</a></td><td></td></tr><tr><td><a href="#%E5%87%BD%E5%BC%8F">函式</a></td><td></td></tr><tr><td><a href="#%E9%A1%9E%E5%88%A5%E8%88%87%E6%A8%A1%E7%B5%84">類別與模組</a></td><td></td></tr><tr><td><a href="#%E4%BD%BF%E7%94%A8%E6%AD%A3%E8%A6%8F%E9%81%8B%E7%AE%97%E5%BC%8F%E7%9A%84%E7%AF%84%E5%BC%8F%E6%AF%94%E5%B0%8D">使用正規運算式的範式比對</a></td><td></td></tr><tr><td><a href="#JavaScript%E5%AD%90%E9%9B%86%E8%88%87%E6%93%B4%E5%85%85">JavaScript子集與擴充</a></td><td></td></tr><tr><td><a href="#%E4%BC%BA%E6%9C%8D%E7%AB%AFJavaScript">伺服端JavaScript</a></td><td></td></tr></tbody></table></li><li><h2 id="第二部-客戶端JavaScript"><a href="#%E5%AE%A2%E6%88%B6%E7%AB%AFJavaScript">第二部 客戶端JavaScript</a></h2><table><thead><tr><th>目錄</th><th></th></tr></thead><tbody><tr><td><a href="#Web%E7%80%8F%E8%A6%BD%E5%99%A8%E4%B8%AD%E7%9A%84JavaScript">Web瀏覽器中的JavaScript</a></td><td></td></tr><tr><td><a href="#Window%E7%89%A9%E4%BB%B6">Window物件</a></td><td></td></tr><tr><td><a href="#%E4%BD%BF%E7%94%A8JavaScript%E6%93%8D%E4%BD%9C%E6%96%87%E4%BB%B6">使用JavaScript操作文件</a></td><td></td></tr><tr><td><a href="#%E4%BD%BF%E7%94%A8JavaScript%E6%93%8D%E4%BD%9CCSS">使用JavaScript操作CSS</a></td><td></td></tr><tr><td><a href="#%E4%BA%8B%E4%BB%B6%E8%99%95%E7%90%86">事件處理</a></td><td></td></tr><tr><td><a href="#%E4%BD%BF%E7%94%A8JavaScript%E6%93%8D%E4%BD%9CHTTP">使用JavaScript操作HTTP</a></td><td></td></tr><tr><td><a href="#jQuery%E7%A8%8B%E5%BC%8F%E5%BA%AB">jQuery程式庫</a></td><td></td></tr><tr><td><a href="#%E5%AE%A2%E6%88%B6%E7%AB%AF%E5%84%B2%E5%AD%98%E5%8D%80">客戶端儲存區</a></td><td></td></tr><tr><td><a href="#%E4%BD%BF%E7%94%A8JavaScript%E6%93%8D%E4%BD%9C%E5%AA%92%E9%AB%94%E8%88%87%E5%9C%96%E5%BD%A2">使用JavaScript操作媒體與圖形</a></td><td></td></tr><tr><td><a href="#HTML5_API">HTML5_API</a></td><td></td></tr></tbody></table></li></ul><h1 id="JavaScript概述">JavaScript概述</h1><p>JavaScript 是 Web 的程式語言。<br>今日絕大多數的網站都使用 JavaScript，所有現代瀏覽器，都具備 JavaScript 直譯器。</p><p>JavaScript：是高階的、動態的 (dynamic)、無型別 (untyped) 直譯語言，適合物件導向 (object-oriented)，以及 functional (函式型) 程式設計。</p><p>JavaScript的語言衍生自 <code>Java</code>，<br>它的 first-class (一般) 函式來自於 <code>Scheme</code>，<br>基於原型 (prototype-based) 的繼承方式則來自 <code>self</code>。</p><ul><li><h2 id="核心-JavaScript">核心 JavaScript</h2><code>語彙結構</code>，解釋 JavaScript 註解、分號與Unicode 字元集這類東西。<br><code>行別、值與變數</code>，解釋 JavaScript 變數與可以指定給變數的值。<br><code>運算式與運算子</code>，運算式是 JavaScript 中的片語，可被估算進而產生一個值。<br><code>述句</code>，以分號結尾的行。<br><code>物件</code>，「名稱/值」對組的群集，或是「字串」對應至「值」的 map(映射)。<br><code>陣列</code>，「索引/值」對應的群集。<br><code>函式</code>，是具有名稱與參數的 JavaScript 程式碼區塊，只要定義過一次，就可以重複調用。<br><code>類別與模組</code>，涵蓋 JavaScript 物件導向程式設計的細節。<br><code>使用正規運算式的範式比對</code>，解釋正規運算式的文法，並演示如何使用這些「regexps」進行文字的範式比對。<br><code>JavaScript子集與擴充</code>，涵蓋核心 JavaScript 的子集與擴充。<br><code>伺服端JavaScript</code>，介紹兩種在 web 瀏覽器之外使用 JavaScript 的方式。</li><li><h2 id="客戶端-JavaScript">客戶端 JavaScript</h2><code>Web瀏覽器中的JavaScript</code>，詳細解釋如何讓 JavaScript 在 web 瀏覽器中運作。<br><code>Window物件</code>，解釋在 web 瀏覽器下使用 JavaScript 的技巧，並涵蓋一些客戶端 JavaScript 重要的全域函式。<br><code>使用JavaScript操作文件</code>，使用 JavaScript 操作 HTML 文件內容。<br><code>使用JavaScript操作CSS</code>，說明 JavaScript 如何操作定義 (網頁內容) 呈現方式的 CSS 樣式。<br><code>事件處理</code>，解釋如何定義與註冊事件處理器，以及當事件發生時，瀏覽器如何調用它們。<br><code>使用JavaScript操作HTTP</code>，解釋如何使用 JavaScript 操控 HTTP 請求，屬於一種網路API。<br><code>jQuery程式庫</code>，jQuery 定義了一組聰明且易用的API來操作文件的內容、呈現方式與行為。<br><code>客戶端儲存區</code>，描述儲存資料的機制，說明如何將資料 (或甚至一整個應用程式)存在客戶端，供未來的瀏覽工作階段使用。<br><code>使用JavaScript操作媒體與圖形</code>，介紹可在 HTML <code>&lt;canvas&gt;</code> 標記中繪製任何徒刑的客戶端API。<br><code>HTML5_API</code>，分類介紹由 HTML5 指定或者與其緊密相關的 web apps API。</li></ul><h1 id="核心JavaScript">核心JavaScript</h1><h1 id="客戶端JavaScript">客戶端JavaScript</h1>  <div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_hugo</title>
      <link href="/2022/05/28/link-hugo/"/>
      <url>/2022/05/28/link-hugo/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="入門-v9">入門</h1><ul><li><h2 id="快速開始">快速開始</h2><ul><li><h3 id="第-1-步-安裝-Hugo">第 1 步 安裝 Hugo</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">brew install hugo</span><br></pre></td></tr></table></figure><p>驗證新安裝</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hugo version</span><br></pre></td></tr></table></figure></li><li><h3 id="第-2-步-創建新站點">第 2 步 創建新站點</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hugo new site siteName</span><br></pre></td></tr></table></figure><p>以上將在名為 <code>siteName</code>。</p></li><li><h3 id="第-3-步-添加主題">第 3 步 添加主題</h3><p><a href="https://themes.gohugo.io/">相關主題列表</a><br>首先，從GitHub 下載主題並將其添加到您網站的themes目錄中：</p><p><small>以<a href="https://themes.gohugo.io/themes/gohugo-theme-ananke/">Ananke</a>主題為例</small></p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> siteName</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke</span><br></pre></td></tr></table></figure><p>然後，將主題添加到站點配置中：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> theme = \<span class="string">&#x27;ananke\&#x27;</span> &gt;&gt; config.toml</span><br></pre></td></tr></table></figure></li><li><h3 id="第-4-步-添加一些內容">第 4 步 添加一些內容</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hugo new posts/my-first-post.md</span><br></pre></td></tr></table></figure><p>新建內容文字如下：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: <span class="string">&quot;My First Post&quot;</span></span><br><span class="line">date: 2019-03-26T08:47:11+01:00</span><br><span class="line">draft: <span class="literal">true</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><h3 id="第-5-步-啟動-Hugo-服務器">第 5 步 啟動 Hugo 服務器</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hugo server -D</span><br></pre></td></tr></table></figure><p>預設server站點為 <a href="http://localhost:1313/">http://localhost:1313/</a></p></li><li><h3 id="第-6-步-自定義主題">第 6 步 自定義主題</h3><p>在發布之前，需要進行一些調整</p><ul><li><h4 id="站點配置">站點配置</h4>將 config.toml 開啟<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">baseURL = <span class="string">&#x27;http://example.org/&#x27;</span></span><br><span class="line">languageCode = <span class="string">&#x27;en-us&#x27;</span></span><br><span class="line">title = <span class="string">&#x27;My New Hugo Site&#x27;</span></span><br><span class="line">theme = <span class="string">&#x27;ananke&#x27;</span></span><br></pre></td></tr></table></figure>更改title為個人網站名稱。</li></ul></li><li><h3 id="第-7-步-建構靜態頁面">第 7 步 建構靜態頁面</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hugo -D</span><br></pre></td></tr></table></figure><p>默認情況下，會產生在<code>./public/</code>目錄中。</p></li></ul></li><li><h2 id="資料夾結構說明">資料夾結構說明</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── archetypes</span><br><span class="line">├── content</span><br><span class="line">├── data</span><br><span class="line">├── layouts</span><br><span class="line">├── static</span><br><span class="line">├── themes</span><br><span class="line">└── config.toml</span><br></pre></td></tr></table></figure><ul><li><h3 id="archetypes">archetypes</h3><p>放文章模板文件的地方，當你 new 一個新的 content files 時，會根據這邊的模板產生 markdown 文件，例如 archetypes/default.md，若你 new 的文章頂層資料夾名稱 (top level path) 對應不到模板時，會使用 <a href="http://default.md">default.md</a> 作為模板生成文件。</p></li><li><h3 id="content">content</h3><p>所有 new 出來的文章都會放在這；<br>如果你想要把文章個別分不同的 setion (top level path)，<br>例如 drafts（草稿）、posts（已發布文章），可透過新增文章指令，指定的不同頂層路徑，生成文件到不同資料夾中。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hugo new drafts/my-drafts.md <span class="comment"># 新增一份草稿</span></span><br></pre></td></tr></table></figure><p>補充說明: 此例你必須透過定義 <a href="http://drafts.md">drafts.md</a> 模板內容 draft: true，<br>讓生成 草稿文件 真的是 草稿狀態，<br>否則文件一樣會是已發布狀態。</p></li><li><h3 id="data">data</h3><p>可以把一些資料集放在這，支援格式有 YAML, JSON, 或是 TOML；<br>換句話說，這可以當作你的資料庫使用，例如你的網站是專門介紹咖啡的，<br>你有一組每個縣市最好喝的咖啡清單，就可以在這邊創建：</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;taipei_no_1&quot;</span>: <span class="string">&quot;鐵定好喝咖啡店&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;taichung_no_1&quot;</span>: <span class="string">&quot;1976 咖啡館&quot;</span>,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="layouts">layouts</h3><p>靜態網站的 .html 文件都會放在這，但你 new 的專案一開始會是空的，主要都是由佈景建構 layouts。</p></li><li><h3 id="static">static</h3><p>靜態資源檔案，例如圖片、js、css 等會放在這邊。</p></li><li><h3 id="themes">themes</h3><p>放各種佈景的地方，如果不常換來換去的話，底下只會放一種佈景，<br>你可以建置一個 sandbox，透過 --theme 參數去切換嘗試各種不同佈景，在本地跑起來看看他們的樣子。</p></li><li><h3 id="config-toml">config.toml</h3><p>網站 environments 配置檔，所有網站建置參數都可在此設置。</p></li></ul></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div><ul><li><h2 id="參考資源：">參考資源：</h2><ul><li><a href="https://gohugo.io/">Hugo 官網</a></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> hugo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_React-Router</title>
      <link href="/2022/04/27/%E7%AD%86%E8%A8%98-React-Router/"/>
      <url>/2022/04/27/%E7%AD%86%E8%A8%98-React-Router/</url>
      
        <content type="html"><![CDATA[<p><small>Version: 2021/11 v6.0.0</small></p><a id="more"></a><h2 id="React-Router-v6簡介">React Router v6簡介</h2><p>React Router 於 2021年底發佈了 v6 的穩定版，<br>由於v6含有大量 Hook，需依賴於 React v16.8以上版本。</p><h2 id="安裝-v2">安裝</h2>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install react-router-dom@6</span><br></pre></td></tr></table></figure><hr><h2 id="主要組件">主要組件</h2><ul><li><h3 id="路由器設置">路由器設置</h3><ul><li><h4 id="BrowserRouter">BrowserRouter</h4>使用常規URL路徑，<br>如 <code>https://reactrouter.com/docs/en/v6</code>。<br>切換url時會發送 request 到 server端，<br>server端必須有對應的response(在server端設定)。<br>一般來說，在SPA(單頁應用)中，除了API 以外的 request，<br>server 都應回傳 index.html。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; BrowserRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="HashRouter">HashRouter</h4>使用當前位置，頁面路徑會加上『＃』，<br>如 <code>https://reactrouter.com/#/docs/en/v6</code>。<br>換url時不會發送request。僅在前端置換頁面。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; HashRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;HashRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/HashRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="路由匹配">路由匹配</h3><ul><li><h4 id="Route">Route</h4><p>用來定義路徑與component的關係。<br>有兩個主要參數：<code>path</code>、<code>element</code>。</p><ul><li><code>path</code>：設定對應路徑。</li><li><code>element</code>：欲渲染的 component。</li></ul><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;Route path=<span class="string">&quot;/about&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">About</span> /&gt;</span></span> &#125;&gt;</span><br></pre></td></tr></table></figure></li><li><h4 id="Routes">Routes</h4><p>為 舊版的 <code>Switch</code> 組件的升級版。<br>Routes 會查看所有 <code>&lt;Route&gt;</code> 元素，找到與目前路徑匹配的子項目。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;Routes&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;/&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">Dashboard</span> /&gt;</span></span> &#125;&gt;</span><br><span class="line">    &lt;Route path=<span class="string">&quot;messages&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">DashboardMessages</span> /&gt;</span></span> &#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">&quot;tasks&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">DashboardTasks</span> /&gt;</span></span> &#125; /&gt;</span><br><span class="line">    &lt;Navigate to=<span class="string">&quot;/about&quot;</span> replace=<span class="string">&quot;&#123; true &#125;&quot;</span>&gt;   <span class="comment">// 重導向</span></span><br><span class="line">  &lt;/Route&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;/about&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">AboutPage</span> /&gt;</span></span> &#125; /&gt;</span><br><span class="line">&lt;/Routes&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="導航">導航</h3><ul><li><h4 id="Link">Link</h4>用於創建連結導向，<code>&lt;Link&gt;</code>會生成 <code>&lt;a&gt;</code> 元素。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;Link to=<span class="string">&quot;/product&quot;</span>&gt; 商品頁 &lt;/Link&gt;</span><br></pre></td></tr></table></figure></li><li><h4 id="NavLink">NavLink</h4>Link 的加強版，當路徑與<code>NavLink</code>對應時，會附帶一個 active 表示頁面正在作用中的參數。<br>方便製作 active 效果。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;NavLink</span><br><span class="line">  to=<span class="string">&quot;/messages&quot;</span></span><br><span class="line">  className=&#123;</span><br><span class="line">    (&#123; isActive &#125;) =&gt; isActive ? <span class="string">&#x27;active&#x27;</span> : <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="應用範例">應用範例</h2><ul><li><h3 id="一般路由">一般路由</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> ReactDOM <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BrowserRouter,</span><br><span class="line">  Link,</span><br><span class="line">  Routes,</span><br><span class="line">  Route</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;nav&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/&quot;</span>&gt;home&lt;/Link&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product&quot;</span>&gt;product&lt;/Link&gt;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">      &lt;Routes&gt;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Home</span> /&gt;</span></span>&#125; /&gt;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/product&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Product</span> /&gt;</span></span>&#125; /&gt;</span><br><span class="line">      &lt;/Routes&gt;</span><br><span class="line">    &lt;/&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h3 id="巢狀路由">巢狀路由</h3>使用<code>Outlet</code><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> ReactDOM <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BrowserRouter,</span><br><span class="line">  Link,</span><br><span class="line">  Routes,</span><br><span class="line">  Route</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;nav&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product&quot;</span>&gt;productIndex&lt;/Link&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product/add&quot;</span>&gt;productAdd&lt;/Link&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product/edit&quot;</span>&gt;productEdit&lt;/Link&gt;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">      &lt;Routes&gt;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/product&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Product</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">          &lt;Route index element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Index</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">          &lt;Route path=<span class="string">&quot;add&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Add</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">          &lt;Route path=<span class="string">&quot;edit&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Edit</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">        &lt;/Route&gt;</span><br><span class="line">      &lt;/Routes&gt;</span><br><span class="line">    &lt;/&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;h1&gt;Product&lt;/h1&gt;</span><br><span class="line">      &lt;Outlet /&gt;</span><br><span class="line">    &lt;/&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="常用-Hook">常用 Hook</h2><ul><li><h3 id="useLocation"><code>useLocation</code></h3><p>會返回一個location Object物件，<br>包含 pathname, search, hash, key, state 等資訊。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useLocation &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line">&lt;Link to=&#123;&#123;</span><br><span class="line">  pathname: <span class="string">&quot;/settings&quot;</span>,</span><br><span class="line">  state: &#123;</span><br><span class="line">    fromNavBar: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#125;&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> location = useLocation();</span><br><span class="line"><span class="built_in">console</span>.log(location);</span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//  &quot;pathname&quot;: &quot;/settings&quot;,</span></span><br><span class="line"><span class="comment">//  &quot;state&quot;: &#123;</span></span><br><span class="line"><span class="comment">//    &quot;fromNavBar&quot;: true</span></span><br><span class="line"><span class="comment">//  &#125;,</span></span><br><span class="line"><span class="comment">//  &quot;search&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="comment">//  &quot;hash&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="comment">//  ...</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure></li><li><h3 id="useNavigate"><code>useNavigate</code></h3><p>取代了 useHistory，第一個參數可以是路由或是數字，代表前往或是前進後退的頁數。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> navigate = useNavigate();</span><br><span class="line"></span><br><span class="line">navigate(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">navigate(-<span class="number">1</span>);</span><br><span class="line">navigate(<span class="string">&#x27;/success&#x27;</span>, &#123; <span class="attr">replace</span>: <span class="literal">true</span> &#125;);</span><br></pre></td></tr></table></figure></li><li><h3 id="useParams"><code>useParams</code></h3><p>取得URL中的參數。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line">&lt;Link to=<span class="string">&quot;/Product/123&quot;</span>&gt;</span><br><span class="line">&lt;Router&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;/Product/:id&quot;</span> component=&#123; <span class="xml"><span class="tag">&lt;<span class="name">Product</span> /&gt;</span></span> &#125;&gt;</span><br><span class="line">&lt;/Router&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; id &#125; = useParams();</span><br></pre></td></tr></table></figure></li><li><h3 id="useRoutes"><code>useRoutes</code></h3><p>功能等同於 <code>&lt;Routes&gt;</code>，可用來製作 Router config。<br>後面介紹Router config 用法。</p></li></ul><hr><h2 id="Router-config-用法">Router config 用法</h2>  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; BrowserRouter, useRoutes &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    element: <span class="xml"><span class="tag">&lt;<span class="name">Dashboard</span> /&gt;</span></span>,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;messages&quot;</span>,</span><br><span class="line">        element: <span class="xml"><span class="tag">&lt;<span class="name">DashboardMessages</span> /&gt;</span></span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">path</span>: <span class="string">&quot;tasks&quot;</span>, <span class="attr">element</span>: <span class="xml"><span class="tag">&lt;<span class="name">DashboardTasks</span> /&gt;</span></span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&quot;team&quot;</span>, <span class="attr">element</span>: <span class="xml"><span class="tag">&lt;<span class="name">AboutPage</span> /&gt;</span></span> &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RenderRoutes</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> element = useRoutes(routes);</span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    ...</span><br><span class="line">    &lt;RenderRoutes /&gt;</span><br><span class="line">    ...</span><br><span class="line">  )</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h2 id="參考來源">參考來源</h2><ul><li><a href="https://ithelp.ithome.com.tw/articles/10282773">React Router v6 和 v5 有哪些地方不同?</a></li><li><a href="https://reactrouter.com/">React Router v6 官網</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_CSS大全</title>
      <link href="/2022/04/24/%E9%80%9F%E6%9F%A5%E8%A1%A8-css%E5%A4%A7%E5%85%A8/"/>
      <url>/2022/04/24/%E9%80%9F%E6%9F%A5%E8%A1%A8-css%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>各種常用 CSS語法 速查表</p><a id="more"></a><ul><li><p><a href="https://github.com/meyerweb/csstdg4figs">範例程式碼</a></p></li><li><h2 id="章節目錄-v2">章節目錄</h2><table><thead><tr><th>目錄</th><th></th></tr></thead><tbody><tr><td><a href="#CSS%E8%88%87%E6%96%87%E4%BB%B6">CSS與文件</a></td><td><a href="#%E5%85%83%E7%B4%A0">元素</a>、<a href="#%E9%80%A3%E7%B5%90CSS%E8%88%87HTML">連結CSS與HTML</a>、<a href="#%E6%A8%A3%E5%BC%8F%E8%A1%A8%E5%85%A7%E5%AE%B9">樣式表內容</a>、<a href="#%E5%AA%92%E9%AB%94%E6%9F%A5%E8%A9%A2">媒體查詢</a>、<a href="#%E7%89%B9%E6%80%A7%E6%9F%A5%E8%A9%A2">特性查詢</a>、<a href="#%E5%B0%8F%E7%B5%90">小結</a></td></tr><tr><td><a href="#%E9%81%B8%E6%93%87%E5%99%A8">選擇器</a></td><td></td></tr><tr><td><a href="#%E6%AC%8A%E9%87%8D%E8%88%87%E8%81%AF%E7%B4%9A">權重與聯級</a></td><td></td></tr><tr><td><a href="#%E6%95%B8%E5%80%BC%E8%88%87%E5%96%AE%E4%BD%8D">數值與單位</a></td><td></td></tr><tr><td><a href="#%E5%AD%97%E5%9E%8B">字型</a></td><td></td></tr><tr><td><a href="#%E6%96%87%E5%AD%97%E5%B1%AC%E6%80%A7">文字屬性</a></td><td></td></tr><tr><td><a href="#%E5%9F%BA%E6%9C%AC%E8%A6%96%E8%A6%BA%E6%A0%BC%E5%BC%8F">基本視覺格式</a></td><td></td></tr><tr><td><a href="#%E5%85%A7%E8%B7%9D%E3%80%81%E9%82%8A%E6%A1%86%E3%80%81%E8%BC%AA%E5%BB%93%E8%88%87%E9%82%8A%E7%95%8C%E7%AF%84%E5%9C%8D">內距、邊框、輪廓與邊界範圍</a></td><td></td></tr><tr><td><a href="#%E8%89%B2%E5%BD%A9%E3%80%81%E8%83%8C%E6%99%AF%E8%88%87%E6%BC%B8%E5%B1%A4">色彩、背景與漸層</a></td><td></td></tr><tr><td><a href="#%E6%B5%AE%E5%8B%95%E8%88%87%E5%BD%A2%E7%8B%80">浮動與形狀</a></td><td></td></tr><tr><td><a href="#%E5%AE%9A%E4%BD%8D">定位</a></td><td></td></tr><tr><td><a href="#Flexbox%E6%8E%92%E7%89%88">Flexbox排版</a></td><td></td></tr><tr><td><a href="#%E7%B6%B2%E6%A0%BC%E6%8E%92%E7%89%88">網格排版</a></td><td></td></tr><tr><td><a href="#CSS%E8%A1%A8%E6%A0%BC%E6%8E%92%E7%89%88">CSS表格排版</a></td><td></td></tr><tr><td><a href="#%E5%88%97%E8%A1%A8%E8%88%87%E7%94%9F%E6%88%90%E5%85%A7%E5%AE%B9">列表與生成內容</a></td><td></td></tr><tr><td><a href="#%E8%BD%89%E6%8F%9B">轉換</a></td><td></td></tr><tr><td><a href="#%E8%BD%89%E5%A0%B4">轉場</a></td><td></td></tr><tr><td><a href="#%E5%8B%95%E7%95%AB">動畫</a></td><td></td></tr><tr><td><a href="#%E6%BF%BE%E9%8F%A1%E3%80%81%E6%B7%B7%E5%90%88%E3%80%81%E8%A3%81%E5%88%87%E8%88%87%E9%81%AE%E7%BD%A9">濾鏡、混合、裁切與遮罩</a></td><td></td></tr><tr><td><a href="#%E5%AA%92%E9%AB%94%E7%9B%B8%E4%BE%9D%E6%A8%A3%E5%BC%8F">媒體相依樣式</a></td><td></td></tr><tr><td><a href="#%E9%99%84%E9%8C%84A">附錄A - 可動畫屬性</a></td><td></td></tr><tr><td><a href="#%E9%99%84%E9%8C%84B">附錄B - 基本屬性參考手冊</a></td><td></td></tr><tr><td><a href="#%E9%99%84%E9%8C%84C">附錄C - 色彩值對照表</a></td><td></td></tr></tbody></table></li><li><h2 id="語法慣例">語法慣例</h2><table><thead><tr><th>語法</th><th>說明</th></tr></thead><tbody><tr><td><code>X | Y</code></td><td>只允許 X、Y 其中一個值。</td></tr><tr><td><code>X || Y</code></td><td>表示能夠使用 X、Y 或 同時使用兩個值，不限順序。(X、Y、XY、YX)。</td></tr><tr><td><code>X &amp;&amp; Y</code></td><td>X、Y都必須出現，不限順序。(XY、YX)。</td></tr><tr><td><code>[...]</code></td><td>數組。</td></tr></tbody></table><table><thead><tr><th>修飾子</th><th>說明</th></tr></thead><tbody><tr><td>星號 <code>(*)</code></td><td>可以重複出現 0次以上。</td></tr><tr><td>加號 <code>(+)</code></td><td>可以重複出現 1次以上。</td></tr><tr><td>井字號 <code>(#)</code></td><td>可以重複出現 1次以上，並用逗號分隔。</td></tr><tr><td>問號 <code>(?)</code></td><td>選填數值。</td></tr><tr><td>驚嘆號 <code>(!)</code></td><td>必要值，至少出現 1次。</td></tr><tr><td>花括號 <code>(&#123;M, N&#125;)</code></td><td>必須重複出現 M ~ N 次。</td></tr></tbody></table></li><li><h2 id="CSS與文件">CSS與文件</h2><p>階層式樣式表 (Cascading Style Sheet，CSS)。</p><ul><li><h3 id="元素">元素</h3><p>「元素」(Element) 是文件結構的基礎。</p><ul><li><h4 id="置換與非置換元素">置換與非置換元素</h4><ul><li><h5 id="置換元素">置換元素</h5>元素的內容(Content) 會被置換成某些文章內容外的東西的元素，<ul><li>e.g. <code>&lt;img&gt;</code>元素的內容會被文件外部的影像檔案取代。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;howdy.gif&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>e.g. <code>&lt;input&gt;</code>也是置換元素，置換後的內容依據型別的不同可以是選擇鈕(radio button)、複選框(checkbox)或文件輸入框(text input box)。</li></ul></li><li><h5 id="非置換元素">非置換元素</h5>表示使用者代理(user agent，通常是指瀏覽器)會直接以元素本身產生元素的內容，呈現在某個方框(box)當中。</li></ul></li><li><h4 id="元素顯示角色">元素顯示角色</h4><ul><li><h5 id="區塊級元素">區塊級元素</h5>會產生一個(預設會)填滿父元素內容區塊且無法與其他元素並排的元素方框(element box)，<br>會在元素方框的前後產生「斷行」(break)，置換元素通常都不是區塊級元素。<ul><li>e.g. <code>&lt;p&gt;</code> 、<code>&lt;div&gt;</code></li></ul></li><li><h5 id="行內級元素">行內級元素</h5>會在文字所在文字行產生元素方框，不會破壞該行的流向(flow)，<br>在HTML中，區塊級元素不能放置在行內級元素之內，CSS則沒有限制不同顯示角色間的關係。<ul><li>e.g.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;display: inline;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">em</span> <span class="attr">style</span>=<span class="string">&quot;display: block;&quot;</span>&gt;</span>an inline element<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li><li><h3 id="連結CSS與HTML">連結CSS與HTML</h3><ul><li><h4 id="link-標記">link 標記</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sheet1.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;all&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS透過link標記將樣式表(stylesheet)連結到文件，稱為「外部樣式表」。<br>link標記必須直接放在head元素內，瀏覽器會找尋並載入樣式表，使用其中定義的樣式呈現HTML文件。</p><ul><li><h5 id="屬性-attribute">屬性 (attribute)</h5><ul><li><code>rel</code>，表示「關係」(relation)，e.g. stylesheet。</li><li><code>type</code>屬性，表示使用link標記載入的資料類型，e.g. text/css。能夠讓瀏覽器知道樣式表是CSS樣式表，也決定了瀏覽器對載入的資料的處理方式。</li><li><code>href</code>屬性，是樣式表的URL。</li><li><code>media</code>屬性，是一個以上的媒體描述子 (media descriptor)，代表了特定的媒體類型以及該媒體的特性，媒體描述子之間以逗號區隔。e.g. 可以指定針對螢幕(screen)與投影機(projection)媒體使用的樣式表。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;visual-sheet.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen, projection&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="替代樣式表-alternate-stylesheet">替代樣式表 (alternate stylesheet)</h5><p>將rel屬性設為 <code>alternate stylesheet</code>，<br>如此一來，就只有在使用者選擇採用時，才會使用替代樣式表的樣式。<br>在瀏覽器具有替代樣式表功能時，使用link元素的 <code>title</code> 屬性值，產生替代樣式表的列表。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sheet1.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Default&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;bigtext.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Big Text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;zany.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Crazy colors!&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用者可以選擇自己想用的樣式，瀏覽器就會從原先標記為「Default」的樣式表，<br>切換到使用者選擇的樣式表(實際上是CSS復興 <code>早期採用的做法</code>)。</p><blockquote><p>在2016年末期，Firefox等大多數以Gecko為基礎的瀏覽器及Opera都提供了替代樣式表的功能，Webkit家族則完全不支援替代樣式表。</p></blockquote><p>也可以將幾個替代樣式表設為 <code>相同</code> 的title值，多個替代樣式表視為一組，<br>讓使用者針對螢幕與列印選擇不同的呈現方式。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sheet1.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Default&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;print-sheet1.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Default&quot;</span> <span class="attr">media</span>=<span class="string">&quot;print&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;bigtext.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Big Text&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;print-bigtext.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Big Text&quot;</span> <span class="attr">media</span>=<span class="string">&quot;print&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果使用者從替代樣式表選單中選取「Big Text」，<br>那麼在螢幕(screen)媒體會使用 <code>bigtext.css</code>，<br><code>print-bigtext.css</code> 則會用於印刷(print)媒體，<br><code>sheet1.css</code> 與 <code>print-sheet1.css</code> 則不會用在任何媒體。</p><p>如果rel值是 <code>stylesheet</code> 的link元素指定了 <code>title</code> 屬性，<br>就會將該樣式表指定為「優先樣式表」(preferred stylesheet)，<br>表示該樣式表比替代樣式表有更高的優先權。<br>如果同時指定多個優先樣式表，<code>只會採用其中一個</code> 樣式表，忽略其他的樣式表。<br>這種情況沒有辦法判斷會採用哪一種樣式表。</p> <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sheet1.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Default Layout&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sheet2.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Default Text Sizes&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sheet3.css&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Default Colors&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>沒有指定title屬性的樣式表則稱為「永續樣式表」(persistent stylesheet)，<br>必定會在顯示文件時使用。</p></li></ul></li><li><h4 id="style-元素">style 元素</h4><p>type屬性是 <code>&quot;text/css&quot;</code>。<br>用 <code>&lt;style type=&quot;text/css&quot;&gt;</code> 開頭，<code>&lt;/style&gt;</code>標記結尾，style元素也可以搭配media屬性。<br>稱為『<code>內嵌樣式表</code>』，直接內嵌在文件當中。</p></li><li><h4 id="import-指令">@import 指令</h4><p>與 <code>link</code> 類似的 <code>@import</code> 指令：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(sheet2.css);</span><br></pre></td></tr></table></figure><p><code>@import</code> 和 <code>link</code> 同樣用來指示瀏覽器載入外部樣式表，<br>主要差異在於語法與命令出現的位置。<br><code>@import</code> 出現在 style 內，必須放在其他CSS規則之前。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="keyword">@import</span> url(styles.css); <span class="comment">/* @import 最先出現 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>: gray;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>每個 <code>@import</code> 指令指向的樣式表都會被載入使用，<br>使用 <code>@import</code> 時無法標示是否為替代樣式表。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(sheet2.css);</span><br><span class="line"><span class="keyword">@import</span> url(blueworld.css);</span><br><span class="line"><span class="keyword">@import</span> url(zany.css);</span><br></pre></td></tr></table></figure><p>與 <code>link</code> 一樣是能夠透過媒體描述子限定樣式表適用的媒體類型：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(sheet2.css) all;</span><br><span class="line"><span class="keyword">@import</span> url(blueworld.css) screen;</span><br><span class="line"><span class="keyword">@import</span> url(zany.css) projection, print;</span><br></pre></td></tr></table></figure><p>可以如以下的方式，在樣式表中包含其他的外部樣式表：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="attribute">http</span>://example.org/library/layout.css);</span><br><span class="line"><span class="keyword">@import</span> url(basic-text.css);</span><br><span class="line"><span class="keyword">@import</span> url(printer.css) print;</span><br><span class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">color</span>: red;&#125;</span><br><span class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>: blue;&#125;</span><br></pre></td></tr></table></figure><p>CSS要求 <code>@import</code> 指令必須要出現在樣式表的其他規則之前，<br>會忽略所有出現在樣式規則 (例如 <code>body &#123;color: red;&#125;</code>) 之後的 <code>@import</code> 指令。</p><blockquote><p>舊版的 <code>Internet Explorer for Windows</code> 不會忽略任何 <code>@import</code> 指令，<br>會載入出現在其他規則之後的 <code>@import</code> 指令。</p></blockquote></li><li><h4 id="HTTP-連結">HTTP 連結</h4><p>建立 CSS 與文件的連結還有其他幾種較不為人知的方式：透過 HTTP 標頭 (HTTP header) 也可以連結兩者。</p><p>在 Apache 伺服器上可以在 <code>.htaccess</code> 檔案中加入 CSS 檔案的連結，達成這樣的效果，<br>例如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Header add Link <span class="string">&quot;&lt;/ui/testing.css&gt;;rel=stylesheet;type=text/css&quot;</span></span><br></pre></td></tr></table></figure><p>這會讓支援這個功能的瀏覽器將參考到的樣式表連結到經由 <code>.htaccess</code> 控管而提供的文件，<br>瀏覽器會將樣式表視同連結樣式表，另一種也許更有效率的作法是在伺服器的 <code>httpd.conf</code> 檔案中加入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;Directory /path/to/ /public/html/directory&gt;</span><br><span class="line">Header add Link <span class="string">&quot;&lt;/ui/testing.css&gt;;rel=stylesheet;type=text/css&quot;</span></span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>唯一的差別是宣告連結關係的位置。</p></li><li><h4 id="行內樣式">行內樣式</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: gray; background: yellow;&quot;</span>&gt;</span>The most wonderful of all breakfast foods ...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>除了那些出現在 <code>body</code> 外部的標記 (如 <code>head</code> 或 <code>title</code> 等) 之外，<br>幾乎所有的 <code>HTML標記</code> 都能夠使用 style屬性。</p><p>style屬性裡不能使用 <code>@import</code> 指令，只有能夠出現在樣式規則大括號中的部分，才能夠作為 style 的屬性值。</p><p>一般不建議使用 <code>inline style</code>，一旦把樣式放到 inline，就失去許多 CSS 的優點：集中管理、一致的定義。</p></li></ul></li><li><h3 id="樣式表內容">樣式表內容</h3><ul><li><h4 id="標記">標記</h4><p><strong>樣式表裡不能出現任何標記</strong>，<br>因為歷史因素，HTML註解標記是唯一一個能夠出現在 style元素內的標記。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">  &lt;!-- </span><br><span class="line"><span class="css">  <span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>: naroon;&#125;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">body</span> &#123;<span class="attribute">background</span>: yellow;&#125;</span></span><br><span class="line">   --&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="規則結構">規則結構</h4><p>每個規則分為兩個基本成份：<code>選擇器 (selector)</code> 與 <code>宣告區塊 (declaration block)</code>。<br><code>選擇器</code>，決定了文件內會受到影響的部分。<br><code>宣告區塊</code>，由一個以上的宣告組成，每個宣告是由 CSS屬性加上屬性值組成。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="廠商字首">廠商字首</h4><p>是用來讓瀏覽器廠商標記實驗中或私有的 CSS屬性 與數值等。</p><ul><li>常見的廠商字首<table><thead><tr><th>字首</th><th>廠商</th></tr></thead><tbody><tr><td><code>-epub-</code></td><td>國際數位出版論壇 (International Digital Publishing Forum) 的 ePub 格式</td></tr><tr><td><code>-moz-</code></td><td>以 Mozilla 為基礎的瀏覽器 (如 Firefox)</td></tr><tr><td><code>-ms-</code></td><td>微軟的 Internet Explorer</td></tr><tr><td><code>-o-</code></td><td>以 Opera 為基礎的瀏覽器</td></tr><tr><td><code>-webkit-</code></td><td>以 Webkit 為基礎的瀏覽器 (如 Safari 與 Chrome)</td></tr></tbody></table></li></ul><p>到了2016年底，隨著瀏覽器實作慢慢移除了舊有的字首特性與數值，廠商字首也越來越少見了。</p></li><li><h4 id="空白處理">空白處理</h4></li><li><h4 id="CSS註解">CSS註解</h4></li></ul></li><li><h3 id="媒體查詢">媒體查詢</h3><ul><li><h4 id="使用方法">使用方法</h4></li><li><h4 id="簡單媒體查詢">簡單媒體查詢</h4></li><li><h4 id="媒體類型">媒體類型</h4></li><li><h4 id="媒體描述子">媒體描述子</h4></li><li><h4 id="媒體特性描述子與值">媒體特性描述子與值</h4></li></ul></li><li><h3 id="特性查詢">特性查詢</h3></li><li><h3 id="小結">小結</h3></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_SASS/SCSS</title>
      <link href="/2022/04/01/%E7%AD%86%E8%A8%98-SASS-SCSS/"/>
      <url>/2022/04/01/%E7%AD%86%E8%A8%98-SASS-SCSS/</url>
      
        <content type="html"><![CDATA[<style>  .d-flex {    display: flex;  }  .d-flex .col {    flex: 1;  }  .d-flex .d-flex-item {    margin: 0 5px;  }  .flex-direction-column {    flex-direction: column;  }  .arrow {    color:#aaa;  }  .arrow.down {    transform: rotate(90deg);  }</style><p><small>Releases v3.6.3 (2019/11/4)</small></p><p>是一種CSS預處理器，需要另外編譯成CSS，瀏覽器才看得懂。<br>Sass 是一款強化CSS 的輔助工具，<br>它在CSS 語法的基礎上增加了變數(variables)、嵌套(nesting)、混合(mixins)、導入(inline imports) 等高級功能。</p><a id="more"></a><h2 id="CSS-功能拓展">CSS 功能拓展</h2><ul><li><h3 id="嵌套規則">嵌套規則</h3><p>Sass 允許 CSS樣式使用嵌套方式。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00ff00</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">97%</span>;</span><br><span class="line">  <span class="selector-class">.redbox</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00ff00</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">97%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">p</span> <span class="selector-class">.redbox</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; &#123;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">  + <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  ~ &#123;</span><br><span class="line">    <span class="selector-tag">span</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span> + <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> ~ <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="父選擇器">父選擇器 <code>&amp;</code></h3><p>在嵌套CSS 規則時，有時也需要直接使用嵌套外層的父選擇器。<br>可以用 <code>&amp;</code> 代表嵌套規則外層的父選擇器。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123; <span class="attribute">text-decoration</span>: underline; &#125;</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-class">.firefox</span> &amp; &#123; <span class="attribute">font-weight</span>: normal; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.firefox</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="屬性嵌套">屬性嵌套</h3><p>有些CSS 屬性遵循相同的命名空間(namespace)，<br>比如 font-family, font-size, font-weight 都以 font 作為屬性的命名空間。<br>為了便於管理這樣的屬性，同時也為了避免了重複輸入，Sass 允許將屬性嵌套在命名空間中。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.funky</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: &#123;</span><br><span class="line">    family: fantasy;</span><br><span class="line">    size: <span class="number">30em</span>;</span><br><span class="line">    weight: bold;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.funky</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: fantasy;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="註釋">註釋</h2><ul><li>Sass 支持標準的CSS，<br>單行註釋 以<code>//</code>開頭。<br>多行註釋 以 <code>/*</code> 開頭， <code>*/</code> 結尾，多行註釋。<br>多行註釋 會完整保留至編譯後的CSS文件中，<br>單行註釋 則會在壓縮模式編譯後，從CSS中去除。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="comment">/* This comment is</span></span><br><span class="line"><span class="comment">* several lines long.</span></span><br><span class="line"><span class="comment">* since it uses the CSS comment syntax,</span></span><br><span class="line"><span class="comment">* it will appear in the CSS output. */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">color</span>: black; &#125;</span><br><span class="line"><span class="comment">// These comments are only one line long each.</span></span><br><span class="line"><span class="comment">// They won&#x27;t appear in the CSS output,</span></span><br><span class="line"><span class="comment">// since they use the single-line comment syntax.</span></span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">color</span>: green; &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$version</span>: <span class="string">&quot;1.2.3&quot;</span>;</span><br><span class="line"><span class="comment">/*! This comment will be included even in compressed mode. */</span></span><br><span class="line"><span class="comment">/*! This CSS is generated by My Snazzy Framework version #&#123;$version&#125;. */</span></span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="comment">/* This comment is</span></span><br><span class="line"><span class="comment">* several lines long.</span></span><br><span class="line"><span class="comment">* since it uses the CSS comment syntax,</span></span><br><span class="line"><span class="comment">* it will appear in the CSS output. */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">color</span>: black; &#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">color</span>: green; &#125;</span><br><span class="line"><span class="comment">/*! This comment will be included even in compressed mode. */</span></span><br><span class="line"><span class="comment">/*! This CSS is generated by My Snazzy Framework version 1.2.3. */</span></span><br></pre></td></tr></table></figure></li></ul>但在壓縮模式編譯後的CSS中，也會移除多行註釋，若想保留，可以 <code>/*!</code> 作為多行註釋 開頭，<br>通常用於添加版權信息。也可在註釋中輸出變數值(插值語句)。 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">color</span>: black; &#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">color</span>: green; &#125;</span><br><span class="line"><span class="comment">/*! This comment will be included even in compressed mode. */</span></span><br><span class="line"><span class="comment">/*! This CSS is generated by My Snazzy Framework version 1.2.3. */</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="變數">變數</h2><ul><li>Sass變數，以 <code>$</code> 開頭，可以在任何地方聲明。<br>變數可以減少重複、進行複雜的運算。</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$base-color</span>: <span class="number">#c6538c</span>;</span><br><span class="line"><span class="variable">$border-dark</span>: rgba(<span class="variable">$base-color</span>, <span class="number">0.88</span>);</span><br><span class="line"><span class="selector-class">.alert</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$border-dark</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.alert</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">198</span>, <span class="number">83</span>, <span class="number">140</span>, <span class="number">0.88</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="默認值">默認值</h3><ul><li>當變數賦值時，如果該變數已經有一個值，舊值將被覆蓋。<br>Sass 提供了 <code>!default</code> 標誌。僅當該變數未定義或其值為 <code>null</code> ，才使用新值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$content</span>: <span class="string">&quot;First content&quot;</span>;</span><br><span class="line"><span class="variable">$content</span>: <span class="string">&quot;Second content?&quot;</span> !default;</span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;First content&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>使用規則： <code>!default</code> 加載模塊時可以配置定義的變數。<br>要加載帶有配置的模塊，請編寫 <code>@use &lt;url&gt; with (&lt;variable&gt;: &lt;value&gt;)</code> ，<br>配置的值將覆蓋變數的默認值。<br>只能配置在樣式表頂層編寫的帶有 <code>!default</code> 標誌的變數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _library.scss</span></span><br><span class="line"><span class="variable">$border-radius</span>: <span class="number">0.25rem</span> !default;</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$border-radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;library&#x27;</span> with (</span><br><span class="line">  <span class="variable">$border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.1rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="作用域-區域變數、全域變數">作用域(區域變數、全域變數)</h3><ul><li><p>當區域變數與全域變數同名時，不受全域變數影響。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$variable</span>: global value;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="variable">$variable</span>: local value;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  value: local value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  value: global value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用規則： <code>!global</code>，始終配置全域變數，不受區域變數影響</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$variable</span>: first global value;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="variable">$variable</span>: second global value !global;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  value: second global value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  value: second global value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用規則： 條件式宣告</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$dark-theme</span>: true !default;</span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#f8bbd0</span> !default;</span><br><span class="line"><span class="variable">$accent-color</span>: <span class="number">#6a1b9a</span> !default;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@if</span> <span class="variable">$dark-theme</span> &#123;</span><br><span class="line">  <span class="variable">$primary-color</span>: darken(<span class="variable">$primary-color</span>, <span class="number">60%</span>);</span><br><span class="line">  <span class="variable">$accent-color</span>: lighten(<span class="variable">$accent-color</span>, <span class="number">60%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$primary-color</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$accent-color</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#750c30</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f5ebfc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="插值">插值</h2><ul><li>使用 <code>#&#123;&#125;</code> 插值語句可以在選擇器或屬性名中使用變數。<br>使用 <code>#&#123;&#125;</code> 可以避免Sass 運行運算表達式，直接編譯CSS。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$name</span>: <span class="string">&#x27;.foo&#x27;</span>;</span><br><span class="line"><span class="variable">$attr</span>: border;</span><br><span class="line"><span class="selector-tag">p</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">  #&#123;<span class="variable">$attr</span>&#125;-<span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.foo</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="variable">$font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="variable">$line-height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">font</span>: #&#123;<span class="variable">$font-size</span>&#125;/#&#123;<span class="variable">$line-height</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> corner-icon(<span class="variable">$name</span>, <span class="variable">$top-or-bottom</span>, <span class="variable">$left-or-right</span>) &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: url(<span class="string">&quot;/icons/#&#123;$name&#125;.svg&quot;</span>);</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    #&#123;<span class="variable">$top-or-bottom</span>&#125;: <span class="number">0</span>;</span><br><span class="line">    #&#123;<span class="variable">$left-or-right</span>&#125;: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> corner-icon(<span class="string">&quot;mail&quot;</span>, top, left);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.icon-mail</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/icons/mail.svg&quot;</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>注入未引用的字符串中。再動態生成名稱(例如：動畫)時，特別有用。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> inline-animation(<span class="variable">$duration</span>) &#123;</span><br><span class="line">  <span class="variable">$name</span>: inline-#&#123;unique-id()&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@keyframes</span> #&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">    <span class="keyword">@content</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">animation-name</span>: <span class="variable">$name</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="variable">$duration</span>;</span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pulse</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> inline-animation(<span class="number">2s</span>) &#123;</span><br><span class="line">    from &#123; <span class="attribute">background-color</span>: yellow &#125;</span><br><span class="line">    to &#123; background-color: red &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.pulse</span> &#123;</span><br><span class="line">  <span class="attribute">animation-name</span>: inline-u368htqnd;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> inline-u368htqnd &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="規則">@規則</h2><ul><li><h3 id="use"><code>@use</code></h3><p>以模塊方式，從其他Sass樣式表中加載 mixins、函數或變數，並將來自多個樣式表的CSS組合在一起。<br>以這種方式加載的任何樣式都將在編譯CSS中，僅包含一次，無論被加載多少次。</p><ul><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// foundation/_code.scss</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">25em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// foundation/_lists.scss</span></span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  &amp; &amp; &#123;</span><br><span class="line">    <span class="attribute">padding</span>: &#123;</span><br><span class="line">      bottom: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;foundation/code&#x27;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;foundation/lists&#x27;</span>;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">25em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> <span class="selector-tag">ol</span> &#123;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="加載成員">加載成員</h4><p>使用命名空間方式呼叫模塊中的 變數、函數和mixins。<br>默認情況下，命名空間為URL最後的檔名。</p><ul><li><p><code>&lt;namespace&gt;.&lt;variable&gt;</code></p></li><li><p><code>&lt;namespace&gt;.&lt;function&gt;</code></p></li><li><p><code>@include &lt;namespace&gt;.&lt;mixin&gt;()</code></p></li><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/_corners.scss</span></span><br><span class="line"><span class="variable">$radius</span>: <span class="number">3px</span>;</span><br><span class="line"><span class="keyword">@mixin</span> rounded &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;src/corners&quot;</span>;</span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> corners.rounded;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> + corners.<span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="自訂命名空間">自訂命名空間</h5><p><code>@use &quot;&lt;url&gt;&quot; as &lt;namespace&gt;</code></p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/_corners.scss</span></span><br><span class="line"><span class="variable">$radius</span>: <span class="number">3px</span>;</span><br><span class="line"><span class="keyword">@mixin</span> rounded &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;src/corners&quot;</span> as c;</span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> c.rounded;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> + c.<span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="私有屬性">私有屬性</h5><p>若不希望定義的所有屬性都在樣式表之外可用。<br><code>-</code> 可以通過開頭的名稱來輕鬆定義私有屬性。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/_corners.scss</span></span><br><span class="line"><span class="variable">$-radius</span>: <span class="number">3px</span>;</span><br><span class="line"><span class="keyword">@mixin</span> rounded &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$-radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;src/corners&quot;</span>;</span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> corners.rounded;</span><br><span class="line">  <span class="comment">// This is an error! $-radius isn&#x27;t visible outside of `_corners.scss`.</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> + corners.<span class="variable">$-radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="配置模塊">配置模塊</h4><p><code>!default</code> 樣式表可以使用標誌 定義變數以使其可配置。<br>要加載帶有配置的模塊，請編寫 <code>@use &lt;url&gt; with (&lt;variable&gt;:&lt;value&gt;, &lt;variable&gt;:&lt;value&gt;)</code>。<br>配置的值將覆蓋變數的默認值。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _library.scss</span></span><br><span class="line"><span class="variable">$black</span>: <span class="number">#000</span> !default;</span><br><span class="line"><span class="variable">$border-radius</span>: <span class="number">0.25rem</span> !default;</span><br><span class="line"><span class="variable">$box-shadow</span>: <span class="number">0</span> <span class="number">0.5rem</span> <span class="number">1rem</span> rgba(<span class="variable">$black</span>, <span class="number">0.15</span>) !default;</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$border-radius</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="variable">$box-shadow</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;library&#x27;</span> with (</span><br><span class="line">  <span class="variable">$black</span>: <span class="number">#222</span>,</span><br><span class="line">  <span class="variable">$border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.1rem</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="built_in">rgba</span>(<span class="number">34</span>, <span class="number">34</span>, <span class="number">34</span>, <span class="number">0.15</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="import"><code>@import</code></h3><p>能夠導入 Sass 和 CSS 樣式表。<br>Sass 團隊不鼓勵繼續使用該 <code>@import</code> 規則。<br>將在接下來的幾年中逐步淘汰。<br>請以 <code>@use</code> 取代。</p><blockquote><p><code>@import</code> 有以下問題：<br>@import 是全局的，必須為其添加前綴以避免命名衝突。<br>每個樣式表都會執行，造成編譯時間太久。<br>若同時載入同一份樣式表，都會被編譯，早成資源浪費。<br>沒有私有屬性。</p></blockquote><ul><li>可使用逗點載入多個樣式。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;foundation/code&#x27;</span>, <span class="string">&#x27;foundation/lists&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li>檔名開頭為<code>_</code>，僅用於導入而不會自行編譯。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _lists.scss</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;lists&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li>可嵌套於樣式中 (使用 <code>mixin</code> 會是更好的選擇)<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="selector-class">.theme-sample</span> &#123;</span><br><span class="line">  <span class="keyword">@import</span> <span class="string">&quot;theme&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="mixin、-include"><code>@mixin</code>、<code>@include</code></h3><p>定義可以在整個樣式表中重複使用的樣式。</p><ul><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> reset-list &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> horizontal-list &#123;</span><br><span class="line">  <span class="keyword">@include</span> reset-list;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: &#123;</span><br><span class="line">      left: -<span class="number">2px</span>;</span><br><span class="line">      <span class="attribute">right</span>: <span class="number">2em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> horizontal-list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="參數">參數</h4><p>但是必須傳入相同數量參數。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> rtl(<span class="variable">$property</span>, <span class="variable">$ltr-value</span>, <span class="variable">$rtl-value</span>) &#123;</span><br><span class="line">  #&#123;<span class="variable">$property</span>&#125;: <span class="variable">$ltr-value</span>;</span><br><span class="line">  <span class="selector-attr">[dir=rtl]</span> &amp; &#123;</span><br><span class="line">    #&#123;<span class="variable">$property</span>&#125;: <span class="variable">$rtl-value</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> rtl(float, left, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[dir=rtl]</span> <span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="可選參數">可選參數</h4><p>可以通過定義一個默認值來使參數成為可選參數。<br>如果該參數未傳遞，則將使用該默認值。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> replace-text(<span class="variable">$image</span>, <span class="variable">$x</span>: <span class="number">50%</span>, <span class="variable">$y</span>: <span class="number">50%</span>) &#123;</span><br><span class="line">  <span class="attribute">text-indent</span>: -<span class="number">99999em</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">background</span>: &#123;</span><br><span class="line">    image: <span class="variable">$image</span>;</span><br><span class="line">    repeat: no-repeat;</span><br><span class="line">    <span class="attribute">position</span>: <span class="variable">$x</span> <span class="variable">$y</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mail-icon</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> replace-text(url(<span class="string">&quot;/images/mail.svg&quot;</span>), <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.mail-icon</span> &#123;</span><br><span class="line">  <span class="attribute">text-indent</span>: -<span class="number">99999em</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/images/mail.svg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="關鍵字參數">關鍵字參數</h4><p>可以明確指定傳遞的參數名稱，避免參數順序問題。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> square(<span class="variable">$size</span>, <span class="variable">$radius</span>: <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$radius</span> != <span class="number">0</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> square(<span class="number">100px</span>, <span class="variable">$radius</span>: <span class="number">4px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="任意參數">任意參數</h4><p>能夠接受任意數量的參數，最後一個參數以<code>...</code>結尾。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> order(<span class="variable">$height</span>, <span class="variable">$selectors</span>...) &#123;</span><br><span class="line">  <span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">0</span> to length(<span class="variable">$selectors</span>) &#123;</span><br><span class="line">    #&#123;nth($selectors, $i + <span class="number">1</span>)&#125; &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">height</span>: <span class="variable">$height</span>;</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="variable">$i</span> * <span class="variable">$height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> order(<span class="number">150px</span>, <span class="string">&quot;input.name&quot;</span>, <span class="string">&quot;input.address&quot;</span>, <span class="string">&quot;input.zip&quot;</span>);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-class">.name</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-class">.address</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-class">.zip</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="內容塊">內容塊</h4><p>除了參數之外，mixin 還可以接受整個樣式塊，或內容塊。<br>注入並取代 <code>@content</code> 的位置。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> <span class="attribute">hover</span> &#123;</span><br><span class="line">  &amp;<span class="selector-pseudo">:not</span>([disabled])<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="keyword">@content</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  <span class="keyword">@include</span> <span class="attribute">hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.button</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[disabled]</span>)<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>一個 mixin 可以包含多個 <code>@content</code>，內容塊將分別包含在每個 <code>@content</code>。</li><li>mixin 可以將參數傳遞給它的內容塊。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> media(<span class="variable">$types</span>...) &#123;</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$type</span> in <span class="variable">$types</span> &#123;</span><br><span class="line">    <span class="keyword">@media</span> #&#123;<span class="variable">$type</span>&#125; &#123;</span><br><span class="line">      <span class="keyword">@content</span>(<span class="variable">$type</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> media(screen, print) using (<span class="variable">$type</span>) &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="keyword">@if</span> <span class="variable">$type</span> == print &#123;</span><br><span class="line">      <span class="attribute">font-family</span>: Calluna;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@media</span> screen &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> print &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: Calluna;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="縮寫">縮寫</h4><p><code>@mixin</code> 可縮寫為 <code>=</code><br><code>@include</code> 可縮寫為 <code>+</code><br>雖然語法簡潔，但語意讓人難懂。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line">=reset-list &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">=horizontal-list &#123;</span><br><span class="line">  +reset-list;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: &#123;</span><br><span class="line">      left: -<span class="number">2px</span></span><br><span class="line">      right: <span class="number">2em</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">nav ul &#123;</span><br><span class="line">  +horizontal-list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="function"><code>@function</code></h3><p>定義自定義函數，以處理複雜運算。<br>回調使用 <code>@retrun</code>。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@function</span> pow(<span class="variable">$base</span>, <span class="variable">$exponent</span>) &#123;</span><br><span class="line">  <span class="variable">$result</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">@for</span> $_ from <span class="number">1</span> through <span class="variable">$exponent</span> &#123;</span><br><span class="line">    <span class="variable">$result</span>: <span class="variable">$result</span> * <span class="variable">$base</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-left</span>: pow(<span class="number">4</span>, <span class="number">3</span>) * <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">64px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="可選參數-v2">可選參數</h4>可以通過定義一個默認值來使參數成為可選參數。<br>如果該參數未傳遞，則將使用該默認值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@function</span> invert(<span class="variable">$color</span>, <span class="variable">$amount</span>: <span class="number">100%</span>) &#123;</span><br><span class="line">  <span class="variable">$inverse</span>: change-color(<span class="variable">$color</span>, <span class="variable">$hue</span>: hue(<span class="variable">$color</span>) + <span class="number">180</span>);</span><br><span class="line">  <span class="keyword">@return</span> mix(<span class="variable">$inverse</span>, <span class="variable">$color</span>, <span class="variable">$amount</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#036</span>;</span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: invert(<span class="variable">$primary-color</span>, <span class="number">80%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#523314</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="關鍵字參數-v2">關鍵字參數</h4>可以明確指定傳遞的參數名稱，避免參數順序問題。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#036</span>;</span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$primary-color</span>;</span><br><span class="line">  <span class="attribute">color</span>: scale-color(<span class="variable">$primary-color</span>, <span class="variable">$lightness</span>: +<span class="number">40%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#036</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0a85ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="任意參數-v2">任意參數</h4>能夠接受任意數量的參數，最後一個參數以<code>...</code>結尾。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@function</span> sum(<span class="variable">$numbers</span>...) &#123;</span><br><span class="line">  <span class="variable">$sum</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$number</span> in <span class="variable">$numbers</span> &#123;</span><br><span class="line">    <span class="variable">$sum</span>: <span class="variable">$sum</span> + <span class="variable">$number</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$sum</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.micro</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: sum(<span class="number">50px</span>, <span class="number">30px</span>, <span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.micro</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">180px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="return"><code>@return</code></h4>只允許在<code>@function</code>中出現。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@function</span> str-insert(<span class="variable">$string</span>, <span class="variable">$insert</span>, <span class="variable">$index</span>) &#123;</span><br><span class="line">  <span class="comment">// Avoid making new strings if we don&#x27;t need to.</span></span><br><span class="line">  <span class="keyword">@if</span> string.length(<span class="variable">$string</span>) == <span class="number">0</span> &#123;</span><br><span class="line">    <span class="keyword">@return</span> <span class="variable">$insert</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$before</span>: string.slice(<span class="variable">$string</span>, <span class="number">0</span>, <span class="variable">$index</span>);</span><br><span class="line">  <span class="variable">$after</span>: string.slice(<span class="variable">$string</span>, <span class="variable">$index</span>);</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$before</span> + <span class="variable">$insert</span> + <span class="variable">$after</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="extend"><code>@extend</code></h3><p>允許選擇器上，相互繼承樣式。<br>設計頁面時，經常會出現一個類應該具有另一個類的所有樣式以及自己的特定樣式。<br>例如：<code>BEM方法</code> 中的修飾符類。(在預設樣式上，增加了特殊樣式。)<br>但這會造成HTML混亂，容易因忘記包含這兩個類而出錯，並且可能會將非語意樣式問題帶入標籤中。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;error error--serious&quot;</span>&gt;</span></span><br><span class="line">  Oh no! You&#x27;ve been hacked!</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@extend</code>規則解決了此類問題。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line"></span><br><span class="line">  &amp;--serious &#123;</span><br><span class="line">    <span class="keyword">@extend</span> .error;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error</span>, <span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>當一個類<code>@extend</code>另一個類時，所有類都會進行相同配置。</p><ul><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.error</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .error;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.error--serious</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="optional-聲明"><code>!optional</code> 聲明</h4><p>如果<code>@extend</code>找不到對應的擴展樣式，將會報錯。<br><code>!optional</code> 可讓<code>@extend</code>報錯時，不生成選擇器。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-class">.important</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .notice !optional;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="佔位符選擇器">佔位符選擇器</h4><p>有時想編寫僅用於extend的樣式規則，不包含在 CSS 輸出中。在此情況下，可以使用佔位符選擇器 <code>%</code>。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line">%<span class="selector-tag">strong</span>-alert &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> %strong-alert;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="Mixins-or-Extends">Mixins or Extends</h4><p><code>@mixins</code> 與 <code>@extends</code> 兩者的概念蠻相近的，由於兩者都可以拿來做相同樣式的包裝，所以兩者的使用時機很容易讓人搞混。<br>由於 <code>@extends</code> 會智能統一擴展的樣式，生成混合後的樣式表，並修剪重複性的樣式。<br>處理重用性高的樣式時，建議採用 <code>@extends</code>。<br>處理需要帶參數而動態生成的樣式時，建議採用 <code>@mixins</code>。</p></li></ul></li><li><h3 id="error"><code>@error</code></h3><p>導致編譯失敗並顯示錯誤消息。<br>在編寫帶有參數的<code>@mixins</code>或<code>@function</code>時，<br>通常為確保參數的類型和格式是預期的，若不是，<br>則需要通知用戶並將 <code>@mixins</code>或<code>@function</code> 停止運行。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> reflexive-position(<span class="variable">$property</span>, <span class="variable">$value</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$property</span> != left <span class="keyword">and</span> <span class="variable">$property</span> != right &#123;</span><br><span class="line">    <span class="keyword">@error</span> <span class="string">&quot;Property #&#123;$property&#125; must be either left or right.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$left-value</span>: if(<span class="variable">$property</span> == right, initial, <span class="variable">$value</span>);</span><br><span class="line">  <span class="variable">$right-value</span>: if(<span class="variable">$property</span> == right, <span class="variable">$value</span>, initial);</span><br><span class="line"></span><br><span class="line">  <span class="attribute">left</span>: <span class="variable">$left-value</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="variable">$right-value</span>;</span><br><span class="line">  <span class="selector-attr">[dir=rtl]</span> &amp; &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="variable">$right-value</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="variable">$left-value</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> reflexive-position(top, <span class="number">12px</span>);</span><br><span class="line">  <span class="comment">//       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span><br><span class="line">  <span class="comment">// Error: Property top must be either left or right.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="warn"><code>@warn</code></h3><p>與 <code>@error</code> 用法相同，<br>差異在於，不停止編譯的情況下打印警告。</p></li><li><h3 id="debug"><code>@debug</code></h3><p>有時在開發樣式表時查看 變數 或 表達式 的值很有用。<br>與 <code>console</code> 雷同，能打印出運算後的值。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> inset-divider-offset(<span class="variable">$offset</span>, <span class="variable">$padding</span>) &#123;</span><br><span class="line">  <span class="variable">$divider-offset</span>: (<span class="number">2</span> * <span class="variable">$padding</span>) + <span class="variable">$offset</span>;</span><br><span class="line">  <span class="keyword">@debug</span> <span class="string">&quot;divider offset: #&#123;$divider-offset&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="variable">$divider-offset</span>;</span><br><span class="line">  <span class="attribute">width</span>: calc(<span class="number">100%</span> - #&#123;<span class="variable">$divider-offset</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="at-root"><code>@at-root</code></h3><p>將其中的樣式放在CSS 文檔的根目錄中，而不是使用正常的嵌套。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">@at-root</span> &#123;</span><br><span class="line">    <span class="selector-class">.child1</span> &#123; ... &#125;</span><br><span class="line">    <span class="selector-class">.child2</span> &#123; ... &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.step-child</span> &#123; ... &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.parent</span> &#123; ... &#125;</span><br><span class="line"><span class="selector-class">.child1</span> &#123; ... &#125;</span><br><span class="line"><span class="selector-class">.child2</span> &#123; ... &#125;</span><br><span class="line"><span class="selector-class">.parent</span> <span class="selector-class">.step-child</span> &#123; ... &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="控制指令">控制指令</h3><ul><li><h4 id="if、-else"><code>@if</code>、<code>@else</code></h4>可以控制區塊內的樣式是否編譯，表達式返回 <code>true</code>，才會編譯進CSS。<br>在SCSS中，假值只有 <code>false</code> 和 <code>null</code>。<br>其他的都認定為真值 ( <code>空值</code> 、 <code>空陣列</code> 、 <code>0</code> 都算真值)。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> avatar(<span class="variable">$size</span>, <span class="variable">$circle</span>: false) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$circle</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="variable">$size</span> / <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.square-av</span> &#123; <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: false); &#125;</span><br><span class="line"><span class="selector-class">.circle-av</span> &#123; <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: true); &#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.square-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.circle-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="else"><code>@else</code></h5><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$light-background</span>: <span class="number">#f2ece4</span>;</span><br><span class="line"><span class="variable">$light-text</span>: <span class="number">#036</span>;</span><br><span class="line"><span class="variable">$dark-background</span>: <span class="number">#6b717f</span>;</span><br><span class="line"><span class="variable">$dark-text</span>: <span class="number">#d2e1dd</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> theme-colors(<span class="variable">$light-theme</span>: true) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$light-theme</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$light-background</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$light-text</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$dark-background</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$dark-text</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> theme-colors(<span class="variable">$light-theme</span>: true);</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-class">.dark</span> &amp; &#123;</span><br><span class="line">    <span class="keyword">@include</span> theme-colors(<span class="variable">$light-theme</span>: false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f2ece4</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#036</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.dark</span> <span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#6b717f</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#d2e1dd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="else-if"><code>@else if</code></h5><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> triangle(<span class="variable">$size</span>, <span class="variable">$color</span>, <span class="variable">$direction</span>) &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">border-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="variable">$size</span> / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$direction</span> == up &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> if <span class="variable">$direction</span> == right &#123;</span><br><span class="line">    <span class="attribute">border-left-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> if <span class="variable">$direction</span> == down &#123;</span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> if <span class="variable">$direction</span> == left &#123;</span><br><span class="line">    <span class="attribute">border-right-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">    <span class="keyword">@error</span> <span class="string">&quot;Unknown direction #&#123;$direction&#125;.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> triangle(<span class="number">5px</span>, black, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">2.5px</span>;</span><br><span class="line">  <span class="attribute">border-left-color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="each"><code>@each</code></h4>可以輕鬆的為列表的每個元素或map中的每個元素生成樣式或評估代碼。<br>對於一些重複樣式非常有用。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$sizes</span>: <span class="number">40px</span>, <span class="number">50px</span>, <span class="number">80px</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$size</span> in <span class="variable">$sizes</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$size</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.icon-40px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-50px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-80px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="Map">Map</h5>可以透過 <code>@each</code> 迭代印出每個 鍵(key)/值(value) 對。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$icons</span>: (<span class="string">&quot;eye&quot;</span>: <span class="string">&quot;\f112&quot;</span>, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;\f12e&quot;</span>, <span class="string">&quot;stop&quot;</span>: <span class="string">&quot;\f12f&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$glyph</span> in <span class="variable">$icons</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125;:before &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="variable">$glyph</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"><span class="selector-class">.icon-eye</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-start</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-stop</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="解構">解構</h5>通過 <code>@each</code> 自動將變數分配給內部列表中的每個值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$icons</span>:</span><br><span class="line">  <span class="string">&quot;eye&quot;</span> <span class="string">&quot;\f112&quot;</span> <span class="number">12px</span>,</span><br><span class="line">  <span class="string">&quot;start&quot;</span> <span class="string">&quot;\f12e&quot;</span> <span class="number">16px</span>,</span><br><span class="line">  <span class="string">&quot;stop&quot;</span> <span class="string">&quot;\f12f&quot;</span> <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$glyph</span>, <span class="variable">$size</span> in <span class="variable">$icons</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125;:before &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="variable">$glyph</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"><span class="selector-class">.icon-eye</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-start</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-stop</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="for"><code>@for</code></h4>有兩種寫法：<br><code>@for $i from 1 to 10</code>，迴圈會從 <code>1~9</code> ，<code>不含10</code>。<br><code>@for $i from 1 through 10</code>，迴圈會從 <code>1~10</code> 。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$base-color</span>: <span class="number">#036</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">1</span> through <span class="number">3</span> &#123;</span><br><span class="line">  <span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>n + #&#123;$i&#125;) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lighten(<span class="variable">$base-color</span>, <span class="variable">$i</span> * <span class="number">5%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>n + <span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#004080</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>n + <span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#004d99</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>n + <span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#0059b3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="while"><code>@while</code></h4>當寫入的規則為 <code>true</code> 時，會持續迴圈，直到規則回傳 <code>false</code>。<br>請小心別造成無限迴圈…。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$i</span>: <span class="number">6</span>;</span><br><span class="line"><span class="variable">$end</span> : -<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@while</span> <span class="variable">$i</span> &gt; <span class="variable">$end</span> &#123;</span><br><span class="line">  <span class="selector-class">.item-</span>#&#123;<span class="variable">$i</span>&#125; &#123; <span class="attribute">width</span>: <span class="number">2px</span> * <span class="variable">$i</span>; &#125;</span><br><span class="line">  <span class="variable">$i</span>: <span class="variable">$i</span> - <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.item-6</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-4</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-0</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="類型">類型</h2><ul><li><h3 id="Numbers"><code>Numbers</code></h3><p>Sass的數字有兩個組成成分：數字、單位。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">100</span>;</span><br><span class="line"><span class="keyword">@debug</span> <span class="number">0.8</span>;</span><br><span class="line"><span class="keyword">@debug</span> <span class="number">16px</span>;</span><br></pre></td></tr></table></figure></li><li><h4 id="單位">單位</h4>Sass 對單位計算提供強大的支持。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">4px</span> * <span class="number">6px</span>; <span class="comment">// 24px*px (read &quot;square pixels&quot;)</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">5px</span>, <span class="number">2s</span>); <span class="comment">// 2.5px/s (read &quot;pixels per second&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.125px*deg/s*em (read &quot;pixel-degrees per second-em&quot;)</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">5px</span> * math.div(math.div(<span class="number">30deg</span>, <span class="number">2s</span>), <span class="number">24em</span>); </span><br><span class="line"></span><br><span class="line"><span class="variable">$degrees-per-second</span>: math.div(<span class="number">20deg</span>, <span class="number">1s</span>);</span><br><span class="line"><span class="keyword">@debug</span> <span class="variable">$degrees-per-second</span>; <span class="comment">// 20deg/s</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">1</span>, <span class="variable">$degrees-per-second</span>); <span class="comment">// 0.05s/deg</span></span><br></pre></td></tr></table></figure></li></ul>Sass 會自動兼容單位之間的轉換，但不支援不兼容的單位，Sass會報錯。<br>e.g. 尺寸單位 與 時間單位。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// CSS defines one inch as 96 pixels.</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1in</span> + <span class="number">6px</span>; <span class="comment">// 102px or 1.0625in</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1in</span> + <span class="number">1s</span>;</span><br><span class="line"><span class="comment">//     ^^^^^^^^</span></span><br><span class="line"><span class="comment">// Error: Incompatible units s and in.</span></span><br></pre></td></tr></table></figure></li></ul>當變數欲計算時，<code>#&#123;$number&#125;px</code>，會被認定為字串，無法計算。<br>請使用以下方式：<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">$number = 10px;</span><br><span class="line"><span class="variable">$number</span> * 1px;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="精確">精確</h4>Sass 數字支持小數點後10位的精度。<ul><li>只有小數點後10位數字，會編譯在CSS中。</li><li>如果兩個數字在小數點後10位皆相同，則兩者會被判定相等。</li><li>如果一個數字與整數的距離小於 0.0000000001 整數，則會被認定為整數。</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">0.012345678912345</span>; <span class="comment">// 0.0123456789</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">0.01234567891</span> == <span class="number">0.01234567899</span>; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1.00000000009</span>; <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">0.99999999991</span>; <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Strings"><code>Strings</code></h3><p>Sass支持兩種內部結構：帶引號的字符串、不帶引號的字符串(標識符)。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// SASS 提供了函數可進行轉換</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> string.unquote(<span class="string">&quot;.widget:hover&quot;</span>); <span class="comment">// .widget:hover  (移除引號)</span></span><br><span class="line"><span class="keyword">@debug</span> string.quote(bold); <span class="comment">// &quot;bold&quot;  (加上引號)</span></span><br></pre></td></tr></table></figure></li><li><h4 id="跳脫">跳脫</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="string">&quot;\&quot;&quot;</span>; <span class="comment">// &#x27;&quot;&#x27;</span></span><br><span class="line"><span class="keyword">@debug</span> \.widget; <span class="comment">// \.widget</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="字符串索引">字符串索引</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Neue&quot;</span>); <span class="comment">// 11</span></span><br><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Roboto Mono&quot;</span>, -<span class="number">4</span>); <span class="comment">// &quot;Mono&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Colors"><code>Colors</code></h3><p>包含 十六進制代碼(<code>#f2ece4</code> 或 <code>#b37399aa</code>)、<br>CSS顏色名稱(<code>blue</code>、<code>red</code>)<br>或函數(<code>rgb()</code>、<code>rgba()</code>、<code>hsl()</code>、<code>hsla()</code>)。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">#f2ece4</span>; <span class="comment">// #f2ece4</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">#b37399</span>aa; <span class="comment">// rgba(179, 115, 153, 67%)</span></span><br><span class="line"><span class="keyword">@debug</span> midnightblue; <span class="comment">// #191970</span></span><br><span class="line"><span class="keyword">@debug</span> rgb(<span class="number">204</span>, <span class="number">102</span>, <span class="number">153</span>); <span class="comment">// #c69</span></span><br><span class="line"><span class="keyword">@debug</span> rgba(<span class="number">107</span>, <span class="number">113</span>, <span class="number">127</span>, <span class="number">0.8</span>); <span class="comment">// rgba(107, 113, 127, 0.8)</span></span><br><span class="line"><span class="keyword">@debug</span> hsl(<span class="number">228</span>, <span class="number">7%</span>, <span class="number">86%</span>); <span class="comment">// #dadbdf</span></span><br><span class="line"><span class="keyword">@debug</span> hsla(<span class="number">20</span>, <span class="number">20%</span>, <span class="number">85%</span>, <span class="number">0.7</span>); <span class="comment">// rgb(225, 215, 210, 0.7)</span></span><br></pre></td></tr></table></figure></li></ul><p>SCSS支持許多有用的 顏色函數，可用於將顏色混合或調整色調、飽和度或亮度來創建新顏色。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> scale-color(<span class="variable">$venus</span>, <span class="variable">$lightness</span>: +<span class="number">15%</span>); <span class="comment">// #a893a8</span></span><br><span class="line"><span class="keyword">@debug</span> mix(<span class="variable">$venus</span>, midnightblue); <span class="comment">// #594d85</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="Lists"><code>Lists</code></h3><p>Lists 包含一系列的值，不需要特殊的括號。<br>可以用逗點(,)、空格。</p><ul><li><h4 id="使用Lists">使用Lists</h4><ul><li><h5 id="索引">索引</h5>索引從1起算。<br>索引1代表第一個元素，索引-1代表倒數第一個元素。</li><li><h5 id="取得元素">取得元素</h5>可以使用 <code>list.nth($list, $n)</code> 函數獲取索引處的元素。<br><code>$list</code>：Lists 本身。<br><code>$n</code>： 想抓取的元素的索引。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.nth(<span class="number">10px</span> <span class="number">12px</span> <span class="number">16px</span>, <span class="number">2</span>); <span class="comment">// 12px</span></span><br><span class="line"><span class="keyword">@debug</span> list.nth([line1, line2, line3], -<span class="number">1</span>); <span class="comment">// line3</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="遞迴">遞迴</h5><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$sizes</span>: <span class="number">40px</span>, <span class="number">50px</span>, <span class="number">80px</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$size</span> in <span class="variable">$sizes</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$size</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.icon-40px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-50px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-80px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="添加">添加</h5>使用 <code>list.append($list, $val)</code> 函數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> append(<span class="number">10px</span> <span class="number">12px</span> <span class="number">16px</span>, <span class="number">25px</span>); <span class="comment">// 10px 12px 16px 25px</span></span><br><span class="line"><span class="keyword">@debug</span> append([col1-line1], col1-line2); <span class="comment">// [col1-line1, col1-line2]</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="查找元素索引">查找元素索引</h4><p>檢查一個元素是否在列表中或找到索引，<br>使用 <code>list.index($list, $value)</code> 函數。<br>如果該值不在list中，則 <code>list.index()</code> 返回 null。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, <span class="number">1px</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, solid); <span class="comment">// 2</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, dashed); <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:list&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$valid-sides</span>: top, bottom, left, right;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> attach(<span class="variable">$side</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="keyword">not</span> list.index(<span class="variable">$valid-sides</span>, <span class="variable">$side</span>) &#123;</span><br><span class="line">    <span class="keyword">@error</span> <span class="string">&quot;#&#123;$side&#125; is not a valid side. Expected one of #&#123;$valid-sides&#125;.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="不變性">不變性</h4><p>Sass的列表函數都會返回新的list而不是修改原始列表。<br>但仍然可以通過將新列表分配給同一變數，隨時間更新狀態。<br>通常在函數和mixin中使用，以將一堆值收集到列表中。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:list&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$prefixes-by-browser</span>: (<span class="string">&quot;firefox&quot;</span>: moz, <span class="string">&quot;safari&quot;</span>: webkit, <span class="string">&quot;ie&quot;</span>: ms);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@function</span> prefixes-for-browsers(<span class="variable">$browsers</span>) &#123;</span><br><span class="line">  <span class="variable">$prefixes</span>: ();</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$browser</span> in <span class="variable">$browsers</span> &#123;</span><br><span class="line">    <span class="variable">$prefixes</span>: list.append(<span class="variable">$prefixes</span>, map.get(<span class="variable">$prefixes-by-browser</span>, <span class="variable">$browser</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$prefixes</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> prefixes-for-browsers(<span class="string">&quot;firefox&quot;</span> <span class="string">&quot;ie&quot;</span>); <span class="comment">// moz ms</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="參數列表">參數列表</h5><p>當聲明一個接受任意參數的 mixin 或 函數時，<br>得到的值是一個特殊列表，稱為 <code>參數列表</code>。<br>當用戶傳遞了關鍵字參數，則可以通過將參數列表傳遞給 <code>meta.keywords()</code>函數來將它們映射。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:meta&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> syntax-colors(<span class="variable">$args</span>...) &#123;</span><br><span class="line">  <span class="keyword">@debug</span> meta.keywords(<span class="variable">$args</span>);</span><br><span class="line">  <span class="comment">// (string: #080, comment: #800, variable: #60b)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$color</span> in meta.keywords(<span class="variable">$args</span>) &#123;</span><br><span class="line">    pre <span class="selector-tag">span</span><span class="selector-class">.stx-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> syntax-colors(</span><br><span class="line">  <span class="variable">$string</span>: <span class="number">#080</span>,</span><br><span class="line">  <span class="variable">$comment</span>: <span class="number">#800</span>,</span><br><span class="line">  <span class="variable">$variable</span>: <span class="number">#60b</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line">pre <span class="selector-tag">span</span><span class="selector-class">.stx-string</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#080</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pre <span class="selector-tag">span</span><span class="selector-class">.stx-comment</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#800</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pre <span class="selector-tag">span</span><span class="selector-class">.stx-variable</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#60b</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Maps"><code>Maps</code></h3><p>Sass中的映射包含鍵和值對，並且可以通過對應的<code>key</code>輕鬆查找<code>value</code>。<br><code>key</code>必須是唯一的，與Lists不同，Maps必須用括號括起來。<br>Maps 允許將任何Sass值當作key。</p><ul><li><h4 id="查找值">查找值</h4><code>map.get($map, $key)</code> 函數，會返回對應的值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;medium&quot;</span>); <span class="comment">// 500</span></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;extra-bold&quot;</span>); <span class="comment">// nul</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="遞迴-v2">遞迴</h4>使用 <code>@each</code>，key 跟 value 會被分配給對應的變數，因此可以輕鬆的使用它們。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$icons</span>: (<span class="string">&quot;eye&quot;</span>: <span class="string">&quot;\f112&quot;</span>, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;\f12e&quot;</span>, <span class="string">&quot;stop&quot;</span>: <span class="string">&quot;\f12f&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$glyph</span> in <span class="variable">$icons</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125;:before &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="variable">$glyph</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"><span class="selector-class">.icon-eye</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-start</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-stop</span>:before &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="新增-修改">新增/修改</h4><code>map.set($map, $key, $value)</code> 函數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$font-weights</span>, <span class="string">&quot;extra-bold&quot;</span>, <span class="number">900</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 700, &quot;extra-bold&quot;: 900)</span></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$font-weights</span>, <span class="string">&quot;bold&quot;</span>, <span class="number">900</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 900)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="合併">合併</h4><code>map.merge($map1, $map2)</code>。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$light-weights</span>: (<span class="string">&quot;lightest&quot;</span>: <span class="number">100</span>, <span class="string">&quot;light&quot;</span>: <span class="number">300</span>);</span><br><span class="line"><span class="variable">$heavy-weights</span>: (<span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$light-weights</span>, <span class="variable">$heavy-weights</span>);</span><br><span class="line"><span class="comment">// (&quot;lightest&quot;: 100, &quot;light&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure></li></ul>若兩個Maps具有相同的 <code>key</code>，則在合併中會使用第二個Maps的 <code>value</code>。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$weights</span>: (<span class="string">&quot;light&quot;</span>: <span class="number">300</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$weights</span>, (<span class="string">&quot;medium&quot;</span>: <span class="number">700</span>));</span><br><span class="line"><span class="comment">// (&quot;light&quot;: 300, &quot;medium&quot;: 700)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="不變性-v2">不變性</h4>與<code>Lists</code>一樣，<br>Sass的列表函數都會返回新的Maps而不是修改原始Maps。<br>但仍然可以通過將新Maps分配給同一變數，隨時間更新狀態。<br>通常在函數和mixin中使用，以將一堆值收集到列表中。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$prefixes-by-browser</span>: (<span class="string">&quot;firefox&quot;</span>: moz, <span class="string">&quot;safari&quot;</span>: webkit, <span class="string">&quot;ie&quot;</span>: ms);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> add-browser-prefix(<span class="variable">$browser</span>, <span class="variable">$prefix</span>) &#123;</span><br><span class="line">  <span class="variable">$prefixes-by-browser</span>: map.merge(<span class="variable">$prefixes-by-browser</span>, (<span class="variable">$browser</span>: <span class="variable">$prefix</span>)) !global;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> add-browser-prefix(<span class="string">&quot;opera&quot;</span>, o);</span><br><span class="line"><span class="keyword">@debug</span> <span class="variable">$prefixes-by-browser</span>;</span><br><span class="line"><span class="comment">// (&quot;firefox&quot;: moz, &quot;safari&quot;: webkit, &quot;ie&quot;: ms, &quot;opera&quot;: o)</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Boolean"><code>Boolean</code></h3><p>Boolean 是邏輯<code>true</code>和<code>false</code>。<br>falsey 值只包含 <code>null</code> 與 <code>false</code>，其餘都是 truthy。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:math&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1px</span> == <span class="number">2px</span>; <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1px</span> == <span class="number">1px</span>; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">10px</span> &lt; <span class="number">3px</span>; <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> math.comparable(<span class="number">100px</span>, <span class="number">3in</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h4 id="運算">運算</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> true <span class="keyword">and</span> true; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> true <span class="keyword">and</span> false; <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> true <span class="keyword">or</span> false; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> false <span class="keyword">or</span> false; <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> <span class="keyword">not</span> true; <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="keyword">not</span> false; <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="使用">使用</h4>通常與 <code>@if</code> 一起使用。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> avatar(<span class="variable">$size</span>, <span class="variable">$circle</span>: false) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$circle</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="variable">$size</span> / <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.square-av</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: false);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.circle-av</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.square-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.circle-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="三元運算式">三元運算式</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@debug</span> if(true, <span class="number">10px</span>, <span class="number">30px</span>); <span class="comment">// 10px</span></span><br><span class="line"><span class="keyword">@debug</span> if(false, <span class="number">10px</span>, <span class="number">30px</span>); <span class="comment">// 30px</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="null"><code>null</code></h3><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Roboto&quot;</span>); <span class="comment">// null</span></span><br><span class="line"><span class="keyword">@debug</span> map.get((<span class="string">&quot;large&quot;</span>: <span class="number">20px</span>), <span class="string">&quot;small&quot;</span>); <span class="comment">// null</span></span><br><span class="line"><span class="keyword">@debug</span> &amp;; <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li><li><h4 id="省略">省略</h4>若屬性列表中含有null，則會部份省略。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$fonts</span>: (<span class="string">&quot;serif&quot;</span>: <span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;monospace&quot;</span>: <span class="string">&quot;Consolas&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">18px</span> bold map-get(<span class="variable">$fonts</span>, <span class="string">&quot;sans&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">18px</span> bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>若屬性值為 <code>null</code>，則生成的CSS將會全部省略。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$fonts</span>: (<span class="string">&quot;serif&quot;</span>: <span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;monospace&quot;</span>: <span class="string">&quot;Consolas&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: &#123;</span><br><span class="line">    size: <span class="number">18px</span>;</span><br><span class="line">    weight: bold;</span><br><span class="line">    family: map-get(<span class="variable">$fonts</span>, <span class="string">&quot;sans&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="falsey">falsey</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> app-background(<span class="variable">$color</span>) &#123;</span><br><span class="line">  #&#123;if(&amp;, &#x27;&amp;.app-background&#x27;, &#x27;.app-background&#x27;)&#125; &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$color</span>;</span><br><span class="line">    <span class="attribute">color</span>: rgba(<span class="number">#fff</span>, <span class="number">0.75</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> app-background(<span class="number">#036</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> app-background(<span class="number">#c6538c</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.app-background</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#036</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span><span class="selector-class">.app-background</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#c6538c</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Calculations-計算"><code>Calculations</code>(計算)</h3><p><code>計算</code> 是 Sass表示 <code>calc()</code>函數的方式，以及類似的函數，如 <code>clamp()</code>、<code>min()</code>和<code>max()</code>。<br>Sass將盡可能簡化這些，使它們相互結合。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> calc(<span class="number">400px</span> + <span class="number">10%</span>); <span class="comment">// calc(400px + 10%)</span></span><br><span class="line"><span class="keyword">@debug</span> calc(<span class="number">400px</span> / <span class="number">2</span>); <span class="comment">// 200px</span></span><br><span class="line"><span class="keyword">@debug</span> min(<span class="number">100px</span>, calc(<span class="number">1rem</span> + <span class="number">10%</span>)); <span class="comment">// min(100px, 1rem + 10%)</span></span><br></pre></td></tr></table></figure><p>在 <code>計算</code> 中可以使用 sass變數、sass函數。<br>也可在 <code>計算</code> 中使用插值，但這樣做會讓括號中的任何內容都不會被簡化或類型檢查，<br>與其寫 <code>calc(10px + #&#123;$var&#125;)</code>，不如寫 <code>calc(10px + $var)</code>。</p><ul><li><h4 id="運用">運用</h4>不能將<code>計算</code>與正常的Sass運算一起使用。只需將他們包覆在<code>calc()</code>表達式中。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$width</span>: calc(<span class="number">100%</span> + <span class="number">10px</span>);</span><br><span class="line"><span class="keyword">@debug</span> <span class="variable">$width</span> * <span class="number">2</span>; <span class="comment">// Error!</span></span><br><span class="line"><span class="keyword">@debug</span> calc(<span class="variable">$width</span> * <span class="number">2</span>); <span class="comment">// calc((100% + 10px) * 2);</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="min-和-max"><code>min()</code> 和 <code>max()</code></h4>CSS添加了對 <code>Values and Units Level 4</code> 的支持 <code>min()</code> 和 <code>max()</code> 函數，<br>但Sass早在此之前就支援 <code>min()</code> 和 <code>max()</code> 函數，<br>所以Sass會自動調適使用CSS函數或使用Sass函數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$padding</span>: <span class="number">12px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="comment">// Since these max() calls are valid calculation expressions, they&#x27;re</span></span><br><span class="line">  <span class="comment">// parsed as calculations.</span></span><br><span class="line">  <span class="attribute">padding-left</span>: max(<span class="variable">$padding</span>, env(safe-area-inset-left));</span><br><span class="line">  <span class="attribute">padding-right</span>: max(<span class="variable">$padding</span>, env(safe-area-inset-right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="comment">// Since these use the SassScript-only modulo operator, they&#x27;re parsed as</span></span><br><span class="line">  <span class="comment">// SassScript function calls.</span></span><br><span class="line">  <span class="attribute">padding-left</span>: max(<span class="variable">$padding</span> % <span class="number">10</span>, <span class="number">20px</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: max(<span class="variable">$padding</span> % <span class="number">10</span>, <span class="number">20px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="built_in">max</span>(<span class="number">12px</span>, <span class="built_in">env</span>(safe-area-inset-left));</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="built_in">max</span>(<span class="number">12px</span>, <span class="built_in">env</span>(safe-area-inset-right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Function"><code>Function</code></h3></li></ul><p>不能直接將 <code>Function</code> 寫為值，<br>但可以將 <code>Function</code> 的名稱傳遞給 <code>meta.get-function()</code> 函數，將其作為值獲取。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:list&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:meta&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// Return a copy of $list with all elements for which $condition returns `true`</span></span><br><span class="line"><span class="comment">/// removed.</span></span><br><span class="line"><span class="keyword">@function</span> remove-where(<span class="variable">$list</span>, <span class="variable">$condition</span>) &#123;</span><br><span class="line">  <span class="variable">$new-list</span>: ();</span><br><span class="line">  <span class="variable">$separator</span>: list.separator(<span class="variable">$list</span>);</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$element</span> in <span class="variable">$list</span> &#123;</span><br><span class="line">    <span class="keyword">@if</span> <span class="keyword">not</span> meta.call(<span class="variable">$condition</span>, <span class="variable">$element</span>) &#123;</span><br><span class="line">      <span class="variable">$new-list</span>: list.append(<span class="variable">$new-list</span>, <span class="variable">$element</span>, <span class="variable">$separator</span>: <span class="variable">$separator</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$new-list</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fonts</span>: Tahoma, Geneva, <span class="string">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, sans-serif;</span><br><span class="line"></span><br><span class="line"><span class="attribute">content</span> &#123;</span><br><span class="line">  <span class="keyword">@function</span> contains-helvetica(<span class="variable">$string</span>) &#123;</span><br><span class="line">    <span class="keyword">@return</span> string.index(<span class="variable">$string</span>, <span class="string">&quot;Helvetica&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">font-family</span>: remove-where(<span class="variable">$fonts</span>, meta.get-function(<span class="string">&quot;contains-helvetica&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Tahoma, Geneva, Arial, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="高階用法-內置模塊">高階用法 - 內置模塊</h2><ul><li><h3 id="sass-color"><code>sass:color</code></h3><ul><li><h4 id="顏色設置">顏色設置</h4><ul><li><h5 id="創建RGB色">創建RGB色</h5><code>R: red(紅色)</code>、<code>G: green(綠色)</code>、<code>B: blue(藍色)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgb(red, green, blue)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgb(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="創建RGBA色">創建RGBA色</h5><code>R: red(紅色)</code>、<code>G: green(綠色)</code>、<code>B: blue(藍色)</code>、<code>A: alpha(透明)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgba(red, green, blue, alpha)</span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br></pre></td></tr></table></figure></li><li><h5 id="創建hsl色">創建hsl色</h5><code>H: hue(色相)</code>、<code>S: saturation(飽和度)</code>、<code>L: lightness(亮度)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsl(hue, saturation, lightness)</span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsl(<span class="number">120</span>, <span class="number">100%</span>, <span class="number">50%</span>); <span class="comment">// 綠色</span></span><br><span class="line">hsl(<span class="number">120</span>, <span class="number">100%</span>, <span class="number">75%</span>); <span class="comment">// 淺綠色</span></span><br><span class="line">hsl(<span class="number">120</span>, <span class="number">100%</span>, <span class="number">25%</span>); <span class="comment">// 深綠色</span></span><br><span class="line">hsl(<span class="number">120</span>, <span class="number">60%</span>, <span class="number">70%</span>); <span class="comment">// 柔和的綠色</span></span><br></pre></td></tr></table></figure></li><li><h5 id="創建hsla色">創建hsla色</h5><code>H: hue(色相)</code>、<code>S: saturation(飽和度)</code>、<code>L: lightness(亮度)</code>、<code>A: alpha(透明)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsla(hue, saturation, lightness, alpha)</span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsla(<span class="number">120</span>, <span class="number">100%</span>, <span class="number">50%</span>, <span class="number">0.3</span>); <span class="comment">// 綠色帶有透明度</span></span><br><span class="line">hsla(<span class="number">120</span>, <span class="number">100%</span>, <span class="number">75%</span>, <span class="number">0.3</span>); <span class="comment">// 淺綠色帶有透明度</span></span><br></pre></td></tr></table></figure></li><li><h5 id="返回灰色">返回灰色</h5>將一個顏色變成灰色，相當於<code>desaturate(color, 100%)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.grayscale</span>($color)</span><br><span class="line">grayscale($color) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.grayscale(<span class="number">#6b717f</span>); <span class="comment">// #757575</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.grayscale(<span class="number">#d2e1dd</span>); <span class="comment">// #dadada</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.grayscale(<span class="number">#036</span>); <span class="comment">// #333333</span></span><br></pre></td></tr></table></figure></li><li><h5 id="返回補色">返回補色</h5>返回一個補色，相當於 <code>adjust-hue($color, 180deg)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.complement</span>($color)</span><br><span class="line">complement($color) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hue 222deg becomes 42deg.</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.complement(<span class="number">#6b717f</span>); <span class="comment">// #7f796b</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 164deg becomes 344deg.</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.complement(<span class="number">#d2e1dd</span>); <span class="comment">// #e1d2d6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 210deg becomes 30deg.</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.complement(<span class="number">#036</span>); <span class="comment">// #663300</span></span><br></pre></td></tr></table></figure></li><li><h5 id="返回對比色">返回對比色</h5>返回一個對比色，紅、綠、藍色值倒過來，而透明度不變。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.invert</span>($color, $weight: <span class="number">100%</span>)</span><br><span class="line">invert($color, $weight: <span class="number">100%</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.invert(<span class="number">#b37399</span>); <span class="comment">// #4c8c66</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.invert(black); <span class="comment">// white</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.invert(<span class="number">#550e0c</span>, <span class="number">20%</span>); <span class="comment">// #663b3a</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="顏色獲取">顏色獲取</h4><ul><li><h5 id="獲取紅色值">獲取紅色值</h5>從一個顏色中獲取其中紅色值 (0~255)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.red</span>($color)</span><br><span class="line">red($color) <span class="comment">//=&gt; number   </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.red(<span class="number">#e1d7d2</span>); <span class="comment">// 225</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.red(white); <span class="comment">// 255</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.red(black); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></li><li><h5 id="獲取綠色值">獲取綠色值</h5>從一個顏色中獲取其中綠色值 (0~255)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.green</span>($color)</span><br><span class="line">green($color) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.green(<span class="number">#e1d7d2</span>); <span class="comment">// 215</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.green(white); <span class="comment">// 255</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.green(black); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></li><li><h5 id="獲取藍色值">獲取藍色值</h5>從一個顏色中獲取其中藍色值 (0~255)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.blue</span>($color)</span><br><span class="line">blue($color) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.blue(<span class="number">#e1d7d2</span>); <span class="comment">// 210</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.blue(white); <span class="comment">// 255</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.blue(black); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></li><li><h5 id="獲取色調">獲取色調</h5>返回顏色在 HSL 色值中的角度值 (0deg - 255deg)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.hue</span>($color)</span><br><span class="line">hue($color) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.hue(<span class="number">#e1d7d2</span>); <span class="comment">// 20deg</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.hue(<span class="number">#f2ece4</span>); <span class="comment">// 34.2857142857deg</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.hue(<span class="number">#dadbdf</span>); <span class="comment">// 228deg</span></span><br></pre></td></tr></table></figure></li><li><h5 id="獲取飽和度">獲取飽和度</h5>獲取一個顏色的飽和度值 (0% - 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">saturation(color)</span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">saturation(#<span class="number">7</span>fffd4); <span class="comment">// 100%</span></span><br></pre></td></tr></table></figure></li><li><h5 id="獲取亮度">獲取亮度</h5>獲取一個顏色的亮度值 (0% - 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">lightness(color)</span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">lightness(#<span class="number">7</span>fffd4); <span class="comment">// 74.9%</span></span><br></pre></td></tr></table></figure></li><li><h5 id="獲取alpha通道">獲取alpha通道</h5>獲取一個顏色的alpha通道值 (0 - 1)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">alpha($color)</span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.alpha(<span class="number">#e1d7d2</span>); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></li><li><h5 id="獲取opacity">獲取opacity</h5>獲取一個顏色的透明度值 (0 - 1)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">opacity</span>($color) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.opacity(rgb(<span class="number">210</span>, <span class="number">225</span>, <span class="number">221</span>, <span class="number">0.4</span>)); <span class="comment">// 0.4</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="顏色操作">顏色操作</h4><ul><li><h5 id="混合">混合</h5>把兩種顏色混合起來。<br><code>$weight</code> 參數必須是 0% 到 100%。<br>默認 <code>$weight</code> 為 50%，表明新顏色各取50% <code>color1</code> 和 <code>color2</code>的色值相加。<br>如果 <code>$weight</code> 為 25%，那表明新顏色為25% <code>color1</code> 和 75% <code>color2</code>的色值相加。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.mix</span>($color1, $color2, $weight: <span class="number">50%</span>)</span><br><span class="line">mix($color1, $color2, $weight: <span class="number">50%</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.mix(<span class="number">#036</span>, <span class="number">#d2e1dd</span>); <span class="comment">// #698aa2</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.mix(<span class="number">#036</span>, <span class="number">#d2e1dd</span>, <span class="number">75%</span>); <span class="comment">// #355f84</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.mix(<span class="number">#036</span>, <span class="number">#d2e1dd</span>, <span class="number">25%</span>); <span class="comment">// #9eb6bf</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.mix(rgba(<span class="number">242</span>, <span class="number">236</span>, <span class="number">228</span>, <span class="number">0.5</span>), <span class="number">#6b717f</span>); <span class="comment">// rgba(141, 144, 152, 0.75)</span></span><br></pre></td></tr></table></figure></li><li><h5 id="改變色相">改變色相</h5>增加或減少 <code>$color</code> 的色相值 (-360deg ~ 360deg)，創建一個新的顏色。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">adjust-hue($color, $degrees) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hue 222deg becomes 282deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#6b717f</span>, <span class="number">60deg</span>); <span class="comment">// #796b7f</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 164deg becomes 104deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#d2e1dd</span>, -<span class="number">60deg</span>); <span class="comment">// #d6e1d2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 210deg becomes 255deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#036</span>, <span class="number">45</span>); <span class="comment">// #1a0066</span></span><br></pre></td></tr></table></figure></li><li><h4 id="增加或減少-color的色調">增加或減少$color的色調</h4><code>$hue</code> 必須介於 (-360deg ~ 360deg)之間的數字，才能添加$color的色調。<br>可以是無單位。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">adjust-hue($color, $degrees) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hue 222deg becomes 282deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#6b717f</span>, <span class="number">60deg</span>); <span class="comment">// #796b7f</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 164deg becomes 104deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#d2e1dd</span>, -<span class="number">60deg</span>); <span class="comment">// #d6e1d2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 210deg becomes 255deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#036</span>, <span class="number">45</span>); <span class="comment">// #1a0066</span></span><br></pre></td></tr></table></figure></li><li><h4 id="按固定量增加或減少-color">按固定量增加或減少$color</h4><code>$color</code> 按固定量增加或減少的一項或多項屬性。<br>將每個關鍵字參數傳遞到顏色的相應屬性中，並返回調整後的顏色。<br>所有可選參數必須是數字，必須是無單位介於<code>-255</code>到<code>255</code>之間。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.adjust</span>($color,</span><br><span class="line">$red: null, $green: null, $blue: null,</span><br><span class="line">$hue: null, $saturation: null, $lightness: null,</span><br><span class="line">$whiteness: null, $blackness: null,</span><br><span class="line">$alpha: null)</span><br><span class="line"></span><br><span class="line">adjust-<span class="attribute">color</span>(...) <span class="comment">//=&gt; color</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.adjust(<span class="number">#6b717f</span>, <span class="variable">$red</span>: <span class="number">15</span>); <span class="comment">// #7a717f</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.adjust(<span class="number">#d2e1dd</span>, <span class="variable">$red</span>: -<span class="number">10</span>, <span class="variable">$blue</span>: <span class="number">10</span>); <span class="comment">// #c8e1e7</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.adjust(<span class="number">#998099</span>, <span class="variable">$lightness</span>: -<span class="number">30%</span>, <span class="variable">$alpha</span>: -<span class="number">0.4</span>); <span class="comment">// rgba(71, 57, 71, 0.6)</span></span><br></pre></td></tr></table></figure></li><li><h4 id="替換-v2">替換</h4>將顏色的一個或多個屬性設置為新值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.change</span>($color,</span><br><span class="line">  $red: null, $green: null, $blue: null,</span><br><span class="line">  $hue: null, $saturation: null, $lightness: null,</span><br><span class="line">  $whiteness: null, $blackness: null,</span><br><span class="line">  $alpha: null)</span><br><span class="line">change-<span class="attribute">color</span>(...) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.change(<span class="number">#6b717f</span>, <span class="variable">$red</span>: <span class="number">100</span>); <span class="comment">// #64717f</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.change(<span class="number">#d2e1dd</span>, <span class="variable">$red</span>: <span class="number">100</span>, <span class="variable">$blue</span>: <span class="number">50</span>); <span class="comment">// #64e132</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.change(<span class="number">#998099</span>, <span class="variable">$lightness</span>: <span class="number">30%</span>, <span class="variable">$alpha</span>: <span class="number">0.5</span>); <span class="comment">// rgba(85, 68, 85, 0.5)</span></span><br></pre></td></tr></table></figure></li><li><h4 id="調深">調深</h4>使 <code>$color</code> 顏色更深，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">darken($color, $amount) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Lightness 92% becomes 72%.</span></span><br><span class="line"><span class="keyword">@debug</span> darken(<span class="number">#b37399</span>, <span class="number">20%</span>); <span class="comment">// #7c4465</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 85% becomes 45%.</span></span><br><span class="line"><span class="keyword">@debug</span> darken(<span class="number">#f2ece4</span>, <span class="number">40%</span>); <span class="comment">// #b08b5a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 20% becomes 0%.</span></span><br><span class="line"><span class="keyword">@debug</span> darken(<span class="number">#036</span>, <span class="number">30%</span>); <span class="comment">// black</span></span><br></pre></td></tr></table></figure></li><li><h4 id="調淺">調淺</h4>使 <code>$color</code> 顏色更淺，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">lighten($color, $amount) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Lightness 46% becomes 66%.</span></span><br><span class="line"><span class="keyword">@debug</span> lighten(<span class="number">#6b717f</span>, <span class="number">20%</span>); <span class="comment">// #a1a5af</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 20% becomes 80%.</span></span><br><span class="line"><span class="keyword">@debug</span> lighten(<span class="number">#036</span>, <span class="number">60%</span>); <span class="comment">// #99ccff</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 85% becomes 100%.</span></span><br><span class="line"><span class="keyword">@debug</span> lighten(<span class="number">#e1d7d2</span>, <span class="number">30%</span>); <span class="comment">// white</span></span><br></pre></td></tr></table></figure></li><li><h4 id="增加飽和度">增加飽和度</h4>使 <code>$color</code> 飽和度更高，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">saturate($color, $amount) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Saturation 50% becomes 70%.</span></span><br><span class="line"><span class="keyword">@debug</span> saturate(<span class="number">#c69</span>, <span class="number">20%</span>); <span class="comment">// #e05299</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 35% becomes 85%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#f2ece4</span>, <span class="number">50%</span>); <span class="comment">// #ebebeb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 80% becomes 100%.</span></span><br><span class="line"><span class="keyword">@debug</span> saturate(<span class="number">#0e4982</span>, <span class="number">30%</span>);  <span class="comment">// #004990</span></span><br></pre></td></tr></table></figure></li><li><h4 id="降低飽和度">降低飽和度</h4>使 <code>$color</code> 飽和度降低，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">desaturate($color, $amount) <span class="comment">//=&gt; color  </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Saturation 100% becomes 80%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#036</span>, <span class="number">20%</span>); <span class="comment">// #0a335c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 35% becomes 15%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#f2ece4</span>, <span class="number">20%</span>); <span class="comment">// #eeebe8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 20% becomes 0%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#d2e1dd</span>, <span class="number">30%</span>); <span class="comment">// #dadada</span></span><br></pre></td></tr></table></figure></li><li><h4 id="流暢地縮放一個或多個屬性">流暢地縮放一個或多個屬性</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.scale</span>($color,</span><br><span class="line">  $red: null, $green: null, $blue: null,</span><br><span class="line">  $saturation: null, $lightness: null,</span><br><span class="line">  $whiteness: null, $blackness: null,</span><br><span class="line">  $alpha: null)</span><br><span class="line">scale-<span class="attribute">color</span>(...) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.scale(<span class="number">#6b717f</span>, <span class="variable">$red</span>: <span class="number">15%</span>); <span class="comment">// #81717f</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.scale(<span class="number">#d2e1dd</span>, <span class="variable">$lightness</span>: -<span class="number">10%</span>, <span class="variable">$saturation</span>: <span class="number">10%</span>); <span class="comment">// #b3d4cb</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.scale(<span class="number">#998099</span>, <span class="variable">$alpha</span>: -<span class="number">40%</span>); <span class="comment">// rgba(153, 128, 153, 0.6)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="變更透明">變更透明</h4>將 <code>$color</code> 變更透明。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">transparentize($color, $amount)</span><br><span class="line">fade-out($color, $amount) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> transparentize(rgba(<span class="number">#6b717f</span>, <span class="number">0.5</span>), <span class="number">0.2</span>);  <span class="comment">// rgba(107, 113, 127, 0.3)</span></span><br><span class="line"><span class="keyword">@debug</span> fade-out(rgba(<span class="number">#e1d7d2</span>, <span class="number">0.5</span>), <span class="number">0.4</span>);  <span class="comment">// rgba(225, 215, 210, 0.1)</span></span><br><span class="line"><span class="keyword">@debug</span> transparentize(rgba(<span class="number">#036</span>, <span class="number">0.3</span>), <span class="number">0.3</span>);  <span class="comment">// rgba(0, 51, 102, 0)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="返回HWB-色調-黑度">返回HWB(色調)黑度</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.blackness</span>($color) <span class="comment">//=&gt; number  </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.blackness(<span class="number">#e1d7d2</span>); <span class="comment">// 11.7647058824%</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.blackness(white); <span class="comment">// 0%</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.blackness(black); <span class="comment">// 100%</span></span><br></pre></td></tr></table></figure></li><li><h4 id="返回HWB-色調-白度">返回HWB(色調)白度</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.whiteness</span>($color) <span class="comment">//=&gt; number  </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.whiteness(<span class="number">#e1d7d2</span>); <span class="comment">// 82.3529411765%</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.whiteness(white); <span class="comment">// 100%</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="attribute">color</span>.whiteness(black); <span class="comment">// 0%</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="sass-list"><code>sass:list</code></h3><ul><li><h4 id="新增">新增</h4>將單個值 <code>$val</code> 添加到列表尾端。<br><code>$separator</code> 為分隔符，默認會自動偵測，可指定 <code>逗號(comma)</code> 或 <code>空格(space)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.append</span>($list, $val, $separator: auto)</span><br><span class="line">append($list, $val, $separator: auto) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.append(<span class="number">10px</span> <span class="number">20px</span>, <span class="number">30px</span>); <span class="comment">// 10px 20px 30px</span></span><br><span class="line"><span class="keyword">@debug</span> list.append((blue, red), green); <span class="comment">// blue, red, green</span></span><br><span class="line"><span class="keyword">@debug</span> list.append(<span class="number">10px</span> <span class="number">20px</span>, <span class="number">30px</span> <span class="number">40px</span>); <span class="comment">// 10px 20px (30px 40px)</span></span><br><span class="line"><span class="keyword">@debug</span> list.append(<span class="number">10px</span>, <span class="number">20px</span>, <span class="variable">$separator</span>: comma); <span class="comment">// 10px, 20px</span></span><br><span class="line"><span class="keyword">@debug</span> list.append((blue, red), green, <span class="variable">$separator</span>: space); <span class="comment">// blue red green</span></span><br></pre></td></tr></table></figure></li><li><h4 id="查找">查找</h4>返回列表中 <code>$value</code> 所在的索引值。<br>沒找到，則返回 <code>null</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.index</span>($list, $value)</span><br><span class="line">index($list, $value) <span class="comment">//=&gt; number | null </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, <span class="number">1px</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, solid); <span class="comment">// 2</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, dashed); <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li><li><h4 id="是否有中括號">是否有中括號</h4>判斷列表中是否有中括號<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.is-bracketed</span>($list)</span><br><span class="line">is-bracketed($list) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.is-bracketed(<span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> list.is-bracketed([<span class="number">1px</span>, <span class="number">2px</span>, <span class="number">3px</span>]); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h4 id="合併-v2">合併</h4>合併兩列表，將 <code>$list2</code> 添加到 <code>$list1</code> 尾端。<br><code>$separator</code> 是分隔符，默認會自動偵測，可指定 <code>逗號(comma)</code> 或 <code>空格(space)</code>。<br><code>$bracketed</code> 默認會自動偵測是否有中括號，可以設置 <code>true</code> 或 <code>false</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.join</span>($list1, $list2, $separator: auto, $bracketed: auto)</span><br><span class="line">join($list1, $list2, $separator: auto, $bracketed: auto) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span> <span class="number">20px</span>, <span class="number">30px</span> <span class="number">40px</span>); <span class="comment">// 10px 20px 30px 40px</span></span><br><span class="line"><span class="keyword">@debug</span> list.join((blue, red), (<span class="number">#abc</span>, <span class="number">#def</span>)); <span class="comment">// blue, red, #abc, #def</span></span><br><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span>, <span class="number">20px</span>); <span class="comment">// 10px 20px</span></span><br><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span>, <span class="number">20px</span>, <span class="variable">$separator</span>: comma); <span class="comment">// 10px, 20px</span></span><br><span class="line"><span class="keyword">@debug</span> list.join((blue, red), (<span class="number">#abc</span>, <span class="number">#def</span>), <span class="variable">$separator</span>: space); <span class="comment">// blue red #abc #def</span></span><br><span class="line"><span class="keyword">@debug</span> list.join([<span class="number">10px</span>], <span class="number">20px</span>); <span class="comment">// [10px 20px]</span></span><br><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span>, <span class="number">20px</span>, <span class="variable">$bracketed</span>: true); <span class="comment">// [10px 20px]</span></span><br></pre></td></tr></table></figure></li><li><h4 id="長度">長度</h4>返回 <code>$list</code> 的長度。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.length</span>($list)</span><br><span class="line">length($list) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.length(<span class="number">10px</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> list.length(<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>); <span class="comment">// 3</span></span><br><span class="line"><span class="keyword">@debug</span> list.length((<span class="attribute">width</span>: <span class="number">10px</span>, <span class="attribute">height</span>: <span class="number">20px</span>)); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure></li><li><h4 id="分隔符類型">分隔符類型</h4>返回列表的分隔符類型，可以是 <code>空格(space)</code> 或 <code>逗號(comma)</code>。<br>若 <code>$list</code> 沒有分隔符，則返回 <code>space</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.separator</span>($list)</span><br><span class="line">list-separator($list) <span class="comment">//=&gt; unquoted string </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.separator(<span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span>); <span class="comment">// space</span></span><br><span class="line"><span class="keyword">@debug</span> list.separator(<span class="number">1px</span>, <span class="number">2px</span>, <span class="number">3px</span>); <span class="comment">// comma</span></span><br><span class="line"><span class="keyword">@debug</span> list.separator(<span class="string">&#x27;Helvetica&#x27;</span>); <span class="comment">// space</span></span><br><span class="line"><span class="keyword">@debug</span> list.separator(()); <span class="comment">// space</span></span><br></pre></td></tr></table></figure></li><li><h4 id="取得index的值">取得index的值</h4>返回索引處的值。<br>索引從1起算。<br>若 <code>$n</code> 為負數，則從尾端開始計算。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.nth</span>($list, $n)</span><br><span class="line">nth($list, $n) </span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.nth(<span class="number">10px</span> <span class="number">12px</span> <span class="number">16px</span>, <span class="number">2</span>); <span class="comment">// 12px</span></span><br><span class="line"><span class="keyword">@debug</span> list.nth([line1, line2, line3], -<span class="number">1</span>); <span class="comment">// line3</span></span><br></pre></td></tr></table></figure></li><li><h4 id="設置index的值">設置index的值</h4>返回替換 <code>$n</code> 處的值後的lists。<br>索引從1起算。<br>若 <code>$n</code> 為負數，則從尾端開始計算。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.set-nth</span>($list, $n, $value)</span><br><span class="line">set-nth($list, $n, $value) <span class="comment">//=&gt; list</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.set-nth(<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>, <span class="number">1</span>, <span class="number">2em</span>); <span class="comment">// 2em 20px 30px</span></span><br><span class="line"><span class="keyword">@debug</span> list.set-nth(<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>, -<span class="number">1</span>, <span class="number">8em</span>); <span class="comment">// 10px, 20px, 8em</span></span><br><span class="line"><span class="keyword">@debug</span> list.set-nth((Helvetica, Arial, sans-serif), <span class="number">3</span>, Roboto); <span class="comment">// Helvetica, Arial, Roboto</span></span><br></pre></td></tr></table></figure></li><li><h4 id="依相同索引產生新維度列表">依相同索引產生新維度列表</h4>將多個列表按照相同索引值為一組，重新組成一個新的多維度列表。<br>返回與列表中最短的列表一樣長的 lists。<br>主列表以逗號分隔，子列表以空格分隔。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.zip</span>($lists...)</span><br><span class="line">zip($lists...) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.zip(<span class="number">10px</span> <span class="number">50px</span> <span class="number">100px</span>, short mid long); <span class="comment">// 10px short, 50px mid, 100px long</span></span><br><span class="line"><span class="keyword">@debug</span> list.zip(<span class="number">10px</span> <span class="number">50px</span> <span class="number">100px</span>, short mid); <span class="comment">// 10px short, 50px mid</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="sass-map"><code>sass:map</code></h3><ul><li><h4 id="取值">取值</h4><p>返回map中key對應的value，如果沒有對應的key，則返回null。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">map<span class="selector-class">.get</span>($map, $key, $keys...)</span><br><span class="line">map-get($map, $key, $keys...) </span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;medium&quot;</span>); <span class="comment">// 500</span></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;extra-bold&quot;</span>); <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li><li><h4 id="是否有key">是否有key</h4><p>判斷 map 是否有對應的key，返回 Boolean。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">map<span class="selector-class">.has-key</span>($map, $key, $keys...)</span><br><span class="line">map-has-key($map, $key, $keys...) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.has-key(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> map.has-key(<span class="variable">$font-weights</span>, <span class="string">&quot;bolder&quot;</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><h4 id="所有key">所有key</h4><p>返回所有鍵。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">map<span class="selector-class">.keys</span>($map)</span><br><span class="line">map-keys($map) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.keys(<span class="variable">$font-weights</span>); <span class="comment">// &quot;regular&quot;, &quot;medium&quot;, &quot;bold&quot;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="所有value">所有value</h4><p>返回所有值。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">map<span class="selector-class">.values</span>($map)</span><br><span class="line">map-values($map) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"><span class="keyword">@debug</span> map.values(<span class="variable">$font-weights</span>); <span class="comment">// 400, 500, 700</span></span><br></pre></td></tr></table></figure></li><li><h4 id="變更">變更</h4><p>如果有找到 <code>$key</code>，將 <code>$value</code> 設置為新的值。<br>若沒找到，則返回原本的資料</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">map<span class="selector-class">.set</span>($map, $key, $value)</span><br><span class="line">map<span class="selector-class">.set</span>($map, $keys..., $key, $value) <span class="comment">//=&gt; map </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>, <span class="number">300</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure>巢狀嵌套設定<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$fonts</span>: (</span><br><span class="line">  <span class="string">&quot;Helvetica&quot;</span>: (</span><br><span class="line">    <span class="string">&quot;weights&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;regular&quot;</span>: <span class="number">400</span>,</span><br><span class="line">      <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>,</span><br><span class="line">      <span class="string">&quot;bold&quot;</span>: <span class="number">700</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$fonts</span>, <span class="string">&quot;Helvetica&quot;</span>, <span class="string">&quot;weights&quot;</span>, <span class="string">&quot;regular&quot;</span>, <span class="number">300</span>);</span><br><span class="line"><span class="comment">// (</span></span><br><span class="line"><span class="comment">//   &quot;Helvetica&quot;: (</span></span><br><span class="line"><span class="comment">//     &quot;weights&quot;: (</span></span><br><span class="line"><span class="comment">//       &quot;regular&quot;: 300,</span></span><br><span class="line"><span class="comment">//       &quot;medium&quot;: 500,</span></span><br><span class="line"><span class="comment">//       &quot;bold&quot;: 700</span></span><br><span class="line"><span class="comment">//     )</span></span><br><span class="line"><span class="comment">//   )</span></span><br><span class="line"><span class="comment">// )</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="合併-v3">合併</h4><p>合併兩個以上的map，形成一個新的 map，<br>將 <code>map2</code> 新增到 <code>map1</code> 的尾部。<br>如果兩者有相同的 key，則 <code>map1</code> 優先。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">map<span class="selector-class">.merge</span>($map1, $map2)</span><br><span class="line">map-merge($map1, $map2)</span><br><span class="line">map<span class="selector-class">.merge</span>($map1, $keys..., $map2)</span><br><span class="line">map-merge($map1, $keys..., $map2) <span class="comment">//=&gt; map </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$light-weights</span>: (<span class="string">&quot;lightest&quot;</span>: <span class="number">100</span>, <span class="string">&quot;light&quot;</span>: <span class="number">300</span>);</span><br><span class="line"><span class="variable">$heavy-weights</span>: (<span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$light-weights</span>, <span class="variable">$heavy-weights</span>);</span><br><span class="line"><span class="comment">// (&quot;lightest&quot;: 100, &quot;light&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$fonts</span>: (</span><br><span class="line">  <span class="string">&quot;Helvetica&quot;</span>: (</span><br><span class="line">    <span class="string">&quot;weights&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;lightest&quot;</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="string">&quot;light&quot;</span>: <span class="number">300</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"><span class="variable">$heavy-weights</span>: (<span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$fonts</span>, <span class="string">&quot;Helvetica&quot;</span>, <span class="string">&quot;weights&quot;</span>, <span class="variable">$heavy-weights</span>);</span><br><span class="line"><span class="comment">// (</span></span><br><span class="line"><span class="comment">//   &quot;Helvetica&quot;: (</span></span><br><span class="line"><span class="comment">//     &quot;weights&quot;: (</span></span><br><span class="line"><span class="comment">//       &quot;lightest&quot;: 100,</span></span><br><span class="line"><span class="comment">//       &quot;light&quot;: 300,</span></span><br><span class="line"><span class="comment">//       &quot;medium&quot;: 500,</span></span><br><span class="line"><span class="comment">//       &quot;bold&quot;: 700</span></span><br><span class="line"><span class="comment">//     )</span></span><br><span class="line"><span class="comment">//   )</span></span><br><span class="line"><span class="comment">// )</span></span><br></pre></td></tr></table></figure></li><li><h4 id="移除">移除</h4><p>移除 map 中的 <code>$key</code>。<br>若沒有找到，則忽略。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">map<span class="selector-class">.remove</span>($map, $keys...)</span><br><span class="line">map-remove($map, $keys...) <span class="comment">//=&gt; map </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.remove(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>); <span class="comment">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br><span class="line"><span class="keyword">@debug</span> map.remove(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>, <span class="string">&quot;bold&quot;</span>); <span class="comment">// (&quot;medium&quot;: 500)</span></span><br><span class="line"><span class="keyword">@debug</span> map.remove(<span class="variable">$font-weights</span>, <span class="string">&quot;bolder&quot;</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="sass-math"><code>sass:math</code></h3><ul><li><h4 id="判斷是否有相同的單位">判斷是否有相同的單位</h4>返回 <code>$number1</code> 是否與 <code>$number2</code> 有相同的單位。<br>若為 <code>true</code>，則 <code>$number1</code> 與 <code>$number2</code> 可以安全地進行 加法、減法和比較。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.compatible</span>($number1, $number2)</span><br><span class="line">comparable($number1, $number2) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.compatible(<span class="number">2px</span>, <span class="number">1px</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> math.compatible(<span class="number">100px</span>, <span class="number">3em</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> math.compatible(<span class="number">10cm</span>, <span class="number">3mm</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h4 id="判斷是否沒有單位">判斷是否沒有單位</h4>返回 <code>$number</code> 是否沒有單位<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.is-unitless</span>($number)</span><br><span class="line">unitless($number) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.is-unitless(<span class="number">100</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> math.is-unitless(<span class="number">100px</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><h4 id="絕對值">絕對值</h4>返回絕對值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.abs</span>($number)</span><br><span class="line">abs($number) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.abs(<span class="number">10px</span>); <span class="comment">// 10px</span></span><br><span class="line"><span class="keyword">@debug</span> math.abs(-<span class="number">10px</span>); <span class="comment">// 10px</span></span><br></pre></td></tr></table></figure></li><li><h4 id="向上取整">向上取整</h4>向上取得整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.ceil</span>($number)</span><br><span class="line">ceil($number) <span class="comment">//=&gt; number  </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.ceil(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.ceil(<span class="number">4.2</span>); <span class="comment">// 5</span></span><br><span class="line"><span class="keyword">@debug</span> math.ceil(<span class="number">4.9</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></li><li><h4 id="向下取整">向下取整</h4>向下取得整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.floor</span>($number)</span><br><span class="line">floor($number) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.floor(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.floor(<span class="number">4.2</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.floor(<span class="number">4.9</span>); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure></li><li><h4 id="最大值">最大值</h4>返回最大值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.max</span>($number...)</span><br><span class="line">max($number...) <span class="comment">//=&gt; number</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.max(<span class="number">1px</span>, <span class="number">4px</span>); <span class="comment">// 4px</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$widths</span>: <span class="number">50px</span>, <span class="number">30px</span>, <span class="number">100px</span>;</span><br><span class="line"><span class="keyword">@debug</span> math.max(<span class="variable">$widths</span>...); <span class="comment">// 100px</span></span><br></pre></td></tr></table></figure></li><li><h4 id="最小值">最小值</h4>返回最小值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.min</span>($number...)</span><br><span class="line">min($number...) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.min(<span class="number">1px</span>, <span class="number">4px</span>); <span class="comment">// 1px</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$widths</span>: <span class="number">50px</span>, <span class="number">30px</span>, <span class="number">100px</span>;</span><br><span class="line"><span class="keyword">@debug</span> math.min(<span class="variable">$widths</span>...); <span class="comment">// 30px</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="除">除</h4>返回 <code>$number1</code> 除以 <code>$number2</code> 的結果<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.div</span>($number1, $number2) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">1</span>, <span class="number">2</span>); <span class="comment">// 0.5</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">100px</span>, <span class="number">5px</span>); <span class="comment">// 20</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">100px</span>, <span class="number">5</span>); <span class="comment">// 20px</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">100px</span>, <span class="number">5s</span>); <span class="comment">// 20px/s</span></span><br></pre></td></tr></table></figure></li><li><h4 id="轉為百分比">轉為百分比</h4>將無單位的 <code>$number</code> (通常是0到1之間的小數) 轉換為百分比。<br>此功能與 <code>$number * 100%</code> 相同。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.percentage</span>($number)</span><br><span class="line">percentage($number) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.percentage(<span class="number">0.2</span>); <span class="comment">// 20%</span></span><br><span class="line"><span class="keyword">@debug</span> math.percentage(math.div(<span class="number">100px</span>, <span class="number">50px</span>)); <span class="comment">// 200%</span></span><br></pre></td></tr></table></figure></li><li><h4 id="隨機數">隨機數</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.random</span>($limit: null)</span><br><span class="line">random($limit: null) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<br>如果 <code>$limit</code> 是 <code>null</code>，則返回 0到1之間的隨機十進制數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.random(); <span class="comment">// 0.2821251858</span></span><br><span class="line"><span class="keyword">@debug</span> math.random(); <span class="comment">// 0.6221325814</span></span><br></pre></td></tr></table></figure>如果 <code>$limit</code> 是大於或等於1的數字，則返回 1到 <code>$limit</code> 之間的隨機整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.random(<span class="number">10</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.random(<span class="number">10000</span>); <span class="comment">// 5373</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="四捨五入">四捨五入</h4>將 <code>$number</code> 四捨五入，返回最接近該值的整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.round</span>($number)</span><br><span class="line">round($number) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.round(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.round(<span class="number">4.2</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.round(<span class="number">4.9</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="sass-selector"><code>sass:selector</code></h3><p>用於查看與處理選擇器。</p><ul><li><h4 id="比較兩個選擇器匹配的範圍">比較兩個選擇器匹配的範圍</h4><p>判斷 <code>$super</code> 選擇器是否包含了 <code>$sub</code> 選擇器所匹配的範圍。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.is-superselector</span>($super, $sub)</span><br><span class="line">is-superselector($super, $sub) <span class="comment">//=&gt; boolean</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a.disabled&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;sidebar a&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;sidebar a&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h4 id="累加">累加</h4><p>將第二個之後的選擇器，添加到第一個選擇器後面。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.append</span>($selectors...)</span><br><span class="line">selector-append($selectors...) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.append(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;.disabled&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.append(<span class="string">&quot;.accordion&quot;</span>, <span class="string">&quot;__copy&quot;</span>); <span class="comment">// .accordion__copy</span></span><br><span class="line"><span class="keyword">@debug</span> selector.append(<span class="string">&quot;.accordion&quot;</span>, <span class="string">&quot;__copy, __image&quot;</span>);</span><br><span class="line"><span class="comment">// .accordion__copy, .accordion__image</span></span><br></pre></td></tr></table></figure></li><li><h4 id="擴展">擴展</h4><p>與<code>@extend</code> 規則一樣。<br><code>$selector</code> 返回使用以下 <code>@extend</code> 規則修改的副本。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 副本 */</span></span><br><span class="line">#&#123;<span class="variable">$extender</span>&#125; &#123;</span><br><span class="line">  <span class="keyword">@extend</span> #&#123;<span class="variable">$extendee</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.extend</span>($selector, $extendee, $extender)</span><br><span class="line">selector-extend($selector, $extendee, $extender) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.extend(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;.link&quot;</span>); <span class="comment">// a.disabled, .link.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.extend(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;h1&quot;</span>, <span class="string">&quot;h2&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.extend(<span class="string">&quot;.guide .info&quot;</span>, <span class="string">&quot;.info&quot;</span>, <span class="string">&quot;.content nav.sidebar&quot;</span>);</span><br><span class="line"><span class="comment">// .guide .info, .guide .content nav.sidebar, .content .guide nav.sidebar</span></span><br></pre></td></tr></table></figure></li><li><h4 id="組合選擇器">組合選擇器</h4><p>返回組合嵌套的選擇器</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.nest</span>($selectors...)</span><br><span class="line">selector-nest($selectors...) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;ul&quot;</span>, <span class="string">&quot;li&quot;</span>); <span class="comment">// ul li</span></span><br><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;.alert, .warning&quot;</span>, <span class="string">&quot;p&quot;</span>); <span class="comment">// .alert p, .warning p</span></span><br><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;.alert&quot;</span>, <span class="string">&quot;&amp;:hover&quot;</span>); <span class="comment">// .alert:hover</span></span><br><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;.accordion&quot;</span>, <span class="string">&quot;&amp;__copy&quot;</span>); <span class="comment">// .accordion__copy</span></span><br></pre></td></tr></table></figure></li><li><h4 id="返回選擇器值">返回選擇器值</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.parse</span>($selector)</span><br><span class="line">selector-parse($selector) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.parse(<span class="string">&quot;.main aside:hover, .sidebar p&quot;</span>);</span><br><span class="line"><span class="comment">// ((unquote(&quot;.main&quot;) unquote(&quot;aside:hover&quot;)),</span></span><br><span class="line"><span class="comment">//  (unquote(&quot;.sidebar&quot;) unquote(&quot;p&quot;)))</span></span><br></pre></td></tr></table></figure></li><li><h4 id="替換選擇器">替換選擇器</h4><p>將 <code>$selector</code> 中的 <code>$original</code> 替換為 <code>$replacement</code>。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.replace</span>($selector, $original, $replacement)</span><br><span class="line">selector-replace($selector, $original, $replacement) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.replace(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;.link&quot;</span>); <span class="comment">// .link.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.replace(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;h1&quot;</span>, <span class="string">&quot;h2&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.replace(<span class="string">&quot;.guide .info&quot;</span>, <span class="string">&quot;.info&quot;</span>, <span class="string">&quot;.content nav.sidebar&quot;</span>);</span><br><span class="line"><span class="comment">// .guide .content nav.sidebar, .content .guide nav.sidebar</span></span><br></pre></td></tr></table></figure></li><li><h4 id="將兩組選擇器合成一個複合選擇器">將兩組選擇器合成一個複合選擇器</h4><p>若無法合成，則返回 <code>null</code>。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.unify</span>($selector1, $selector2)</span><br><span class="line">selector-unify($selector1, $selector2) <span class="comment">//=&gt; selector | null</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;.disabled&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a.outgoing&quot;</span>); <span class="comment">// a.disabled.outgoing</span></span><br><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;h1&quot;</span>); <span class="comment">// null</span></span><br><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;.warning a&quot;</span>, <span class="string">&quot;main a&quot;</span>); <span class="comment">// .warning main a, main .warning a</span></span><br></pre></td></tr></table></figure></li><li><h4 id="將合成選擇器拆分為單個選擇器">將合成選擇器拆分為單個選擇器</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.simple-selectors</span>($selector)</span><br><span class="line">simple-selectors($selector) <span class="comment">//=&gt; list</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.simple-selectors(<span class="string">&quot;a.disabled&quot;</span>); <span class="comment">// a, .disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.simple-selectors(<span class="string">&quot;main.blog:after&quot;</span>); <span class="comment">// main, .blog, :after</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="sass-string"><code>sass:string</code></h3><ul><li><h4 id="轉換-帶引號的字符串">轉換 帶引號的字符串</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.quote</span>($string)</span><br><span class="line"><span class="selector-tag">quote</span>($string) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.quote(Helvetica); <span class="comment">// &quot;Helvetica&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.quote(<span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// &quot;Helvetica&quot;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="轉換-不帶引號的字符串">轉換 不帶引號的字符串</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.unquote</span>($string)</span><br><span class="line">unquote($string) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.unquote(<span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// Helvetica</span></span><br><span class="line"><span class="keyword">@debug</span> string.unquote(<span class="string">&quot;.widget:hover&quot;</span>); <span class="comment">// .widget:hover</span></span><br></pre></td></tr></table></figure></li><li><h4 id="查找-index">查找 index</h4><p>返回第一個查找到的索引值，若沒有找到則回傳 <code>null</code>。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.index</span>($string, $substring)</span><br><span class="line">str-index($string, $substring) <span class="comment">//=&gt; number</span></span><br></pre></td></tr></table></figure><ul><li>範例：</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Neue&quot;</span>); <span class="comment">// 11</span></span><br></pre></td></tr></table></figure></li><li><h4 id="插入">插入</h4><p>返回從 <code>$string</code> 的 <code>$index</code> 處插入 <code>$insert</code> 後的字串。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.insert</span>($string, $insert, $index)</span><br><span class="line">str-insert($string, $insert, $index) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Roboto Bold&quot;</span>, <span class="string">&quot; Mono&quot;</span>, <span class="number">7</span>); <span class="comment">// &quot;Roboto Mono Bold&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Roboto Bold&quot;</span>, <span class="string">&quot; Mono&quot;</span>, -<span class="number">6</span>); <span class="comment">// &quot;Roboto Mono Bold&quot;</span></span><br></pre></td></tr></table></figure>如果 <code>$index</code> 大於 $string 總長度，則會 $insert 在 <code>結尾</code>。<br>如果 <code>$index</code> 小於 字符串負長度，則會 $insert 在 <code>開頭</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Roboto&quot;</span>, <span class="string">&quot; Bold&quot;</span>, <span class="number">100</span>); <span class="comment">// &quot;Roboto Bold&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Bold&quot;</span>, <span class="string">&quot;Roboto &quot;</span>, -<span class="number">100</span>); <span class="comment">// &quot;Roboto Bold&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="拆分">拆分</h4><p>返回從 index <code>$start-at</code> 到 <code>$end-at</code> 的字串。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.slice</span>($string, $start-at, $end-at: -<span class="number">1</span>)</span><br><span class="line">str-slice($string, $start-at, $end-at: -<span class="number">1</span>) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="number">11</span>); <span class="comment">// &quot;Neue&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="number">1</span>, <span class="number">3</span>); <span class="comment">// &quot;Hel&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="number">1</span>, -<span class="number">6</span>); <span class="comment">// &quot;Helvetica&quot;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="轉-大寫">轉 大寫</h4><p>將 ASCII字母轉換為大寫。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.to-upper-case</span>($string)</span><br><span class="line">to-upper-case($string) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.to-upper-case(<span class="string">&quot;Bold&quot;</span>); <span class="comment">// &quot;BOLD&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.to-upper-case(sans-serif); <span class="comment">// SANS-SERIF</span></span><br></pre></td></tr></table></figure></li><li><h4 id="轉-小寫">轉 小寫</h4><p>將 ASCII字母轉換為小寫。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.to-lower-case</span>($string)</span><br><span class="line">to-lower-case($string) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例</li></ul>  <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.to-lower-case(<span class="string">&quot;Bold&quot;</span>); <span class="comment">// &quot;bold&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.to-lower-case(SANS-SERIF); <span class="comment">// sans-serif</span></span><br></pre></td></tr></table></figure></li><li><h4 id="產生-uuid">產生 uuid</h4><p>隨機產生一個在當前Sass編譯中的唯一id。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.unique-id</span>()</span><br><span class="line">unique-id() <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例</li></ul> <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.unique-id(); <span class="comment">// uabtrnzug</span></span><br><span class="line"><span class="keyword">@debug</span> string.unique-id(); <span class="comment">// u6w1b1def</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="參考資源：-v2">參考資源：</h2><ul><li><a href="https://sass-lang.com/">Sass 官網</a></li><li><a href="https://m.runoob.com/sass/">Sass教程 - 菜鳥教程</a></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> SASS/SCSS </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_React</title>
      <link href="/2022/02/05/%E7%AD%86%E8%A8%98-React/"/>
      <url>/2022/02/05/%E7%AD%86%E8%A8%98-React/</url>
      
        <content type="html"><![CDATA[<p><small>v17.0.2</small></p><h2 id="React-是什麼？">React 是什麼？</h2><p>React 是一個陳述式、高效且具有彈性的 JavaScript 函式庫，用以建立使用者介面。<br>它讓你使用小巧而獨立的 <code>component</code>，來建立複雜的 UI。</p><a id="more"></a><h2 id="開發環境">開發環境</h2><ul><li><h3 id="安裝-v3">安裝</h3><p>若要開發標準的 React 專案，建議使用 <code>create-react-app</code> 來建立新專案。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i -g create-react-app</span><br></pre></td></tr></table></figure></li><li><h3 id="建立新專案">建立新專案</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">create-react-app &lt;專案名稱&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="主要概念">主要概念</h2><ul><li><h3 id="Hello-World">Hello World</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;h1&gt;Hello, world!&lt;/h1&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h3 id="JSX-介紹">JSX 介紹</h3><p><code>JSX</code> 是一種 JavaScript 的擴充語言，加入了一些 HTML 標籤的語法。<br><code>React</code> 架構在設計上將 HTML 標籤與 JavaScript 控制邏輯合併，以 <code>JSX</code> 來描述 UI 的外觀與運作邏輯，<br>打造出 React 的 UI 組件（components），再用這些 UI 組件堆疊出個應用程式。</p><ul><li><h4 id="在-JSX-中嵌入-Expression">在 JSX 中嵌入 Expression</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;Josh Perez&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatName</span>(<span class="params">user</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> user.firstName+ <span class="string">&#x27; &#x27;</span> + user.lastName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">  firstName: <span class="string">&#x27;Harper&#x27;</span>,</span><br><span class="line">  lastName: <span class="string">&#x27;Perez&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  &lt;h1&gt;</span><br><span class="line">    Hello, &#123;formatName(user)&#125;!</span><br><span class="line">  &lt;/h1&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="JSX-本身也是-Expression">JSX 本身也是 Expression</h4><p>使用 JSX 作為參數並由 function 中回傳。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getGreeting</span>(<span class="params">user</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;formatName(user)&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, Stranger.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="在-JSX-中指定屬性">在 JSX 中指定屬性</h4><ul><li><h5 id="可以使用引號將字串設定為屬性：">可以使用引號將字串設定為屬性：</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">tabIndex</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure></li><li><h5 id="也可以在屬性中使用大括號來嵌入一個-JavaScript-expression：">也可以在屬性中使用大括號來嵌入一個 JavaScript expression：</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;user.avatarUrl&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>不要在嵌入 JavaScript expression 作為屬性的時候同時使用引號或是大括號。</p><blockquote><p>React DOM 使用 <code>camelCase</code> 來命名屬性而不是使用慣有的 HTML 屬性名稱。<br>舉例來說：在 JSX 之中，<code>class</code> 變成了 className 而 <code>tabindex</code> 變成了 tabIndex。</p></blockquote></li><li><h5 id="在-JSX-中指定-Children">在 JSX 中指定 Children</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;user.avatarUrl&#125;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;Hello!&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;Good to see you here.&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h5 id="JSX-表示物件">JSX 表示物件</h5></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  &lt;h1 className=<span class="string">&quot;greeting&quot;</span>&gt;</span><br><span class="line">    Hello, World!</span><br><span class="line">  &lt;/h1&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Babel 將 JSX 編譯為呼叫 <code>React.createElement()</code> 的程式。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = React.createElement(</span><br><span class="line">  <span class="string">&#x27;h1&#x27;</span>,</span><br><span class="line">  &#123;<span class="attr">className</span>: <span class="string">&#x27;greeting&#x27;</span>&#125;,</span><br><span class="line">  <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="Render-Element">Render Element</h3><p>建立 React 應用程式最小的單位是 element。<br>與瀏覽器的 DOM element 不同，<br><code>React element</code> 是單純的 object，而且很容易被建立。<br><code>React DOM</code> 負責更新 DOM 來符合 React element。</p><ul><li><h4 id="Render-Element-到-DOM內">Render Element 到 DOM內</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;root&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>使用 React 建立應用程式時，通常會有一個單一的 root DOM node。<br>如果想要整合 React 到現有的應用程式時，可以根據需求獨立出多個 root DOM node。<br>如果要 render 一個 React element 到 root DOM node，傳入兩者到 <code>ReactDOM.render()</code>。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="更新被-Render-的-Element">更新被 Render 的 Element</h4>React element 是 <code>不可變動性</code> 的。<br>一旦你建立一個 element，你不能改變它的 children 或是 attribute。<br>更新 UI 唯一的方式是建立一個新的 element，並且將它傳入到 <code>ReactDOM.render()</code>。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> element = (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">      &lt;h2&gt;It is &#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">  ReactDOM.render(element, <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(tick, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">// 從 setInterval() callback 每秒呼叫 ReactDOM.render()。</span></span><br></pre></td></tr></table></figure></li><li><h4 id="React-只更新必要的-Element">React 只更新必要的 Element</h4>React DOM 會將 element 和它的 children 與先前的狀態做比較，<br>並且只更新必要的 DOM 達到理想的狀態。<br>只有內容更改的 node 才會被 React DOM 更新。</li></ul></li><li><h3 id="Components-與-Props">Components 與 Props</h3><p>概念上來說，component 就像是 JavaScript 的 function，<br>它接收任意的參數（稱之為「props」）並且回傳描述畫面的 React element。</p><ul><li><h4 id="Function-Component-與-Class-Component">Function Component 與 Class Component</h4>定義 component 最簡單的方法即是撰寫一個 Javascript function：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Welcome</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>也可以使用 ES6 Class 來定義 component：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="Render-一個-Component">Render 一個 Component</h4>React element 也可以是使用者自定義的 component：<br>當 React 看到由使用者定義 component 的 element 時，<br>它將 JSX 屬性和 children 作為 single object 傳遞給該 component。<br>我們稱這個 object 為「props」。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Welcome</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">Welcome</span> <span class="attr">name</span>=<span class="string">&quot;Sara&quot;</span> /&gt;</span></span>;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>React 以 <code>&#123;name: 'Sara'&#125;</code> 作為 props 傳入 Welcome component 並呼叫。<br>Welcome component 回傳了 <code>&lt;h1&gt;Hello, Sara&lt;/h1&gt;</code> 這個 element 作為返回值。<blockquote><p>Component 的字首須為大寫字母。<br>React 會將小寫字母開頭的組件視為原始 DOM 標籤。</p></blockquote></li><li><h4 id="組合-Component">組合 Component</h4>Component 可以在輸出中引用其他 component。<br>可以在任何層次中抽象化相同的 component，按鈕、表單、對話框、甚至是整個畫面，<br>在 React 應用程式中都將以 component 的方式呈現。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Welcome</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;Welcome name=<span class="string">&quot;Sara&quot;</span> /&gt;</span><br><span class="line">      &lt;Welcome name=<span class="string">&quot;Cahal&quot;</span> /&gt;</span><br><span class="line">      &lt;Welcome name=<span class="string">&quot;Edite&quot;</span> /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;App /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>通常來說，每個 React 應用程式都有一個最高層級的 App component。<br>然而，將 React 結合至現存的應用程式中，可能需要使用像 Button 這樣的小型 component，<br>並由下往上，逐步應用到畫面的最高層級。</li><li><h4 id="Props-是唯讀的">Props 是唯讀的</h4>不管你使用 <code>function</code> 或是 <code>class</code> 來宣告 component，<br>都絕不能修改自己的 props。<br>所有的 React component 都必須像 Pure function 一般保護他的 props。</li></ul></li><li><h3 id="State-和生命週期">State 和生命週期</h3><p>封裝 Clock component 讓它可以真正的被重複使用。<br>它將會設定本身的 timer 並且每秒更新一次。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Clock</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">      &lt;h2&gt;It is &#123;props.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  ReactDOM.render(</span><br><span class="line">    &lt;Clock date=&#123;<span class="keyword">new</span> <span class="built_in">Date</span>()&#125; /&gt;,</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(tick, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>理想情況下，Clock 會自己更新，需要加入 <code>state</code>到 Clock component。<br>State 類似於 prop，但它是私有且由 component 完全控制的。</p><ul><li><h4 id="轉換-Function-成-Class">轉換 Function 成 Class</h4><p>透過以下 5 個步驟轉換一個 function component 像是 Clock 成為 class：</p><ol><li>建立一個相同名稱並且繼承 <code>React.Component</code> 的 ES6 class。</li><li>加入一個 <code>render()</code> 的空方法。</li><li>將 function 的內容搬到 <code>render()</code> 方法。</li><li>將 <code>render()</code> 內的 <code>props</code> 替換成 <code>this.props</code>。</li><li>刪除剩下空的 function 宣告。</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;It is &#123;<span class="built_in">this</span>.props.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="加入-Local-State-到-Class">加入 Local State 到 Class</h4><p>透過以下 3 個步驟將 date 從搬移到 state：</p><ol><li>將 <code>render()</code> 方法內的 <code>this.props.date</code> 替換成 <code>this.state.date</code>：</li><li>加入一個 class constructor 並分配初始的 <code>this.state</code>：</li><li>從 <code>&lt;Clock /&gt;</code> element 中移除 <code>date</code> prop：</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="built_in">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;It is &#123;<span class="built_in">this</span>.state.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Clock /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="加入生命週期方法到-Class">加入生命週期方法到 Class</h4><p>每當 <code>Clock</code> render 到 DOM 的時候，我們想要設定一個 <code>timer</code>。在 React 中稱為「mount」。<br>每當產生的 <code>Clock</code> DOM 被移除時，我們想要清除 <code>timer</code>。在 React 中稱為「unmount」。<br>這些方法被稱為 <code>「生命週期方法」</code>。<br><code>componentDidMount()</code> 方法會在 component 被 render 到 DOM 之後才會執行。<br>在 <code>componentWillUnmount()</code> 生命週期方法內移除 timer。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="built_in">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">componentDidMount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.timerID = <span class="built_in">setInterval</span>(</span><br><span class="line">      () =&gt; <span class="built_in">this</span>.tick(),</span><br><span class="line">      <span class="number">1000</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">componentWillUnmount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timerID);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">tick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">      date: <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;It is &#123;<span class="built_in">this</span>.state.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Clock /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="正確的使用-State">正確的使用 State</h4><ul><li><h5 id="請不要直接修改-State">請不要直接修改 State</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 錯誤</span></span><br><span class="line"><span class="comment">// 唯一可以指定 `this.state` 值的地方是在 constructor。</span></span><br><span class="line"><span class="built_in">this</span>.state.comment = <span class="string">&#x27;Hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確</span></span><br><span class="line"><span class="built_in">this</span>.setState(&#123;<span class="attr">comment</span>: <span class="string">&#x27;Hello&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure></li><li><h5 id="State-的更新可能是非同步的">State 的更新可能是非同步的</h5>React 可以將多個 <code>setState()</code> 呼叫批次處理為單一的更新，以提高效能。<br><code>this.props</code> 和 <code>this.state</code> 可能是非同步的被更新，你不應該依賴它們的值來計算新的 state。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 錯誤</span></span><br><span class="line"><span class="built_in">this</span>.setState(&#123;</span><br><span class="line">  counter: <span class="built_in">this</span>.state.counter + <span class="built_in">this</span>.props.increment,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確</span></span><br><span class="line"><span class="built_in">this</span>.setState(<span class="function">(<span class="params">state, props</span>) =&gt;</span> (&#123;</span><br><span class="line">  counter: state.counter + props.increment</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></li><li><h5 id="State-的更新將會被-Merge">State 的更新將會被 Merge</h5>呼叫 <code>setState()</code> 時，React 會 merge object 到目前的 state。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">super</span>(props);</span><br><span class="line">  <span class="built_in">this</span>.state = &#123;</span><br><span class="line">    posts: [],</span><br><span class="line">    comments: []</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">componentDidMount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  fetchPosts().then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">      posts: response.posts</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  fetchComments().then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">      comments: response.comments</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="向下資料流">向下資料流</h4><p>Component 可以選擇將它的 state 做為 props 往下傳遞到它的 child component：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;FormattedDate date=&#123;<span class="built_in">this</span>.state.date&#125; /&gt;</span><br></pre></td></tr></table></figure><p>FormattedDate component 會在它的 props 接收到 date</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">FormattedDate</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;props.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>任何 state 總是由某個特定的 component 所擁有，<br>任何從 state 得到的資料或 UI，state 只能影響在 tree「以下」的 component。</p></li></ul></li><li><h3 id="事件處理">事件處理</h3><ul><li>事件的名稱在 React 中都是 <code>camelCase</code>，而在 HTML DOM 中則是小寫。</li><li>事件的值在 JSX 中是一個 <code>function</code>，而在 HTML DOM 中則是一個 string。<br>在 HTML 中的語法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;activateLasers()&quot;</span>&gt;</span></span><br><span class="line">  Activate Lasers</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>在 React 中的語法：</p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;activateLasers&#125;</span>&gt;</span></span><br><span class="line">  Activate Lasers</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 React 中，不能夠使用 return false 來避免瀏覽器預設行為。<br>必須明確地呼叫 <code>preventDefault</code>。</p>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Form</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">handleSubmit</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;You clicked submit.&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;form onSubmit=&#123;handleSubmit&#125;&gt;</span><br><span class="line">      &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;Submit&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>請特別注意 <code>this</code> 在 JSX callback 中的意義。<br>在 JavaScript 中，class 的方法在預設上是沒有被綁定（<code>bound</code>）的。<br>把它傳遞給 onClick 的話，this 的值將會在該 function 被呼叫時變成 undefined。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Toggle</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">isToggleOn</span>: <span class="literal">true</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 為了讓 `this` 能在 callback 中被使用，這裡的綁定是必要的：</span></span><br><span class="line">    <span class="built_in">this</span>.handleClick = <span class="built_in">this</span>.handleClick.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">      isToggleOn: !prevState.isToggleOn</span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;button onClick=&#123;<span class="built_in">this</span>.handleClick&#125;&gt;</span><br><span class="line">        &#123;<span class="built_in">this</span>.state.isToggleOn ? <span class="string">&#x27;ON&#x27;</span> : <span class="string">&#x27;OFF&#x27;</span>&#125;</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Toggle /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><h4 id="將參數傳給-Event-Handler">將參數傳給 Event Handler</h4>在一個迴圈中，我們常常會需要傳遞一個額外的參數給 event handler。<br>如果 id 是每一行的 ID 的話，下面兩種語法都可行：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;(e)</span> =&gt;</span> this.deleteRow(id, e)&#125;&gt;Delete Row<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.deleteRow.bind(this,</span> <span class="attr">id</span>)&#125;&gt;</span>Delete Row<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>以這兩個例子來說，<code>e</code> 這個參數所代表的 React 事件將會被當作 ID 之後的第二個參數被傳遞下去。<br>在使用 arrow function 時，我們必須明確地將它傳遞下去，<br>但若使用 bind 語法，未來任何的參數都將會自動被傳遞下去。</li></ul></li><li><h3 id="條件-Render">條件 Render</h3><p>使用 JavaScript 中的運算子如 <code>if</code> 或者 <code>三元運算子</code> 來建立表示目前 state 的 element，<br>然後讓 React 根據它們來更新 UI。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">UserGreeting</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome back!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuestGreeting</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Please sign up.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立一個 Greeting component，它會根據使用者是否已登入來顯示其中之一：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Greeting</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> isLoggedIn = props.isLoggedIn;</span><br><span class="line">  <span class="keyword">if</span> (isLoggedIn) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">UserGreeting</span> /&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">GuestGreeting</span> /&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  <span class="comment">// 根據 isLoggedIn prop 的值來 render 不同的問候語。</span></span><br><span class="line">  &lt;Greeting isLoggedIn=&#123;<span class="literal">false</span>&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><h4 id="Element-變數">Element 變數</h4><p>可以用變數來儲存 element。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoginButton</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;button onClick=&#123;props.onClick&#125;&gt;</span><br><span class="line">      Login</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LogoutButton</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;button onClick=&#123;props.onClick&#125;&gt;</span><br><span class="line">      Logout</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立一個名為 LoginControl 的 stateful component。</span></span><br><span class="line"><span class="comment">// 它將根據目前的 state 來 render &lt;LoginButton /&gt; 或 &lt; LogoutButton /&gt;。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginControl</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.handleLoginClick = <span class="built_in">this</span>.handleLoginClick.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleLogoutClick = <span class="built_in">this</span>.handleLogoutClick.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">isLoggedIn</span>: <span class="literal">false</span>&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleLoginClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">isLoggedIn</span>: <span class="literal">true</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleLogoutClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">isLoggedIn</span>: <span class="literal">false</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isLoggedIn = <span class="built_in">this</span>.state.isLoggedIn;</span><br><span class="line">    <span class="keyword">let</span> button;</span><br><span class="line">    <span class="keyword">if</span> (isLoggedIn) &#123;</span><br><span class="line">      button = <span class="xml"><span class="tag">&lt;<span class="name">LogoutButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      button = <span class="xml"><span class="tag">&lt;<span class="name">LoginButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;Greeting isLoggedIn=&#123;isLoggedIn&#125; /&gt;</span><br><span class="line">        &#123;button&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;LoginControl /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="Inline-If-與-邏輯運算子">Inline If 與 &amp;&amp; 邏輯運算子</h4><p>透過大括號在 JSX 中嵌入表達式，包括 JavaScript 的 &amp;&amp; 邏輯運算子，<br>可以方便 render 有條件的 element：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Mailbox</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> unreadMessages = props.unreadMessages;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Hello!&lt;/h1&gt;</span><br><span class="line">      &#123;unreadMessages.length &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        &lt;h2&gt;</span><br><span class="line">          You have &#123;unreadMessages.length&#125; unread messages.</span><br><span class="line">        &lt;/h2&gt;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> messages = [<span class="string">&#x27;React&#x27;</span>, <span class="string">&#x27;Re: React&#x27;</span>, <span class="string">&#x27;Re:Re: React&#x27;</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Mailbox unreadMessages=&#123;messages&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>能夠這樣做是因為在 JavaScript 中，<br><code>true &amp;&amp; expression</code> 總是回傳 <code>expression</code>，<br>而 <code>false &amp;&amp; expression</code> 總是回傳 <code>false</code>。</p><p>所以，當條件為 <code>true</code> 時，<code>&amp;&amp;</code> 右側的 element 會出現在輸出中，如果是 <code>false</code>，React 會忽略並跳過它。</p><p>請注意，回傳 falsy expression 仍會導致 <code>&amp;&amp;</code> 之後的 element 被忽略，<br>但依舊回傳 falsy expression，在下面的範例中，render 將會回傳 <code>&lt;div&gt;0&lt;/div&gt;</code>。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123; count &amp;&amp; <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Messages: &#123;count&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="Inline-If-Else-與三元運算子">Inline If-Else 與三元運算子</h4><p>另一個有條件 render element 的方式是透過 JavaScript 的三元運算子 <code>condition ? true : false</code>。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> isLoggedIn = <span class="built_in">this</span>.state.isLoggedIn;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      The user is &lt;b&gt;&#123;isLoggedIn ? <span class="string">&#x27;currently&#x27;</span> : <span class="string">&#x27;not&#x27;</span>&#125;&lt;/b&gt; logged <span class="keyword">in</span>.</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> isLoggedIn = <span class="built_in">this</span>.state.isLoggedIn;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123;isLoggedIn</span><br><span class="line">        ? <span class="xml"><span class="tag">&lt;<span class="name">LogoutButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span></span><br><span class="line">        : <span class="xml"><span class="tag">&lt;<span class="name">LoginButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="防止-Component-Render">防止 Component Render</h4><p>在少數的情況下，可能希望 component 隱藏自己本身，即便它是由另一個 component 被 render。<br>可以透過回傳 <code>null</code> 而不是它的 render 輸出。</p><p>在下面的範例中，<code>&lt;WarningBanner /&gt;</code> 的 render 取決於 <code>warn</code> prop 的值。<br>如果 prop 是 <code>false</code>，它就不會 render。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">WarningBanner</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!props.warn) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">&quot;warning&quot;</span>&gt;</span><br><span class="line">      Warning!</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Page</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">showWarning</span>: <span class="literal">true</span>&#125;;</span><br><span class="line">    <span class="built_in">this</span>.handleToggleClick = <span class="built_in">this</span>.handleToggleClick.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleToggleClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(<span class="function"><span class="params">state</span> =&gt;</span> (&#123;</span><br><span class="line">      showWarning: !state.showWarning</span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;WarningBanner warn=&#123;<span class="built_in">this</span>.state.showWarning&#125; /&gt;</span><br><span class="line">        &lt;button onClick=&#123;<span class="built_in">this</span>.handleToggleClick&#125;&gt;</span><br><span class="line">          &#123;<span class="built_in">this</span>.state.showWarning ? <span class="string">&#x27;Hide&#x27;</span> : <span class="string">&#x27;Show&#x27;</span>&#125;</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Page /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在 component 中回傳 null 並不會影響 component 的生命週期方法。<br>例如 componentDidUpdate 依然可以被呼叫。</p></li></ul></li><li><h3 id="列表與Key">列表與Key</h3><ul><li><h4 id="Render-多個-Component">Render 多個 Component</h4><p>可以建立一系列的 element 並用大括號 <code>&#123;&#125;</code> <code>將它們包含在 JSX 裡面</code>。<br>用 JavaScript 的 map() function 迭代 <code>numbers</code> array，我們每次都會回傳一個 <code>&lt;li&gt;</code> element。<br>最後，我們會把結果產生的 element array 設定為 <code>listItems</code>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">  &lt;li&gt;&#123;number&#125;&lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>把整個 <code>listItems</code> array 包含在一個 <code>&lt;ul&gt;</code> element 裡，然後 <code>render 到 DOM 上面</code>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="基本列表-Component">基本列表 Component</h4><p>將上面的範例改寫為一個接收 <code>numbers</code> array 並輸出一個沒有排序的 element 列表的 component。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;li&gt;&#123;number&#125;&lt;/li&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>當執行這段程式碼時，會收到一個關於應該提供 key 給每一個列表項目的警告。<br>「key」是當你在建立一個 element 列表時必須使用的特殊的 string attribute。</p><p>為 numbers.map() 列表中的每個項目分配一個 key，並修正遺漏 key 的問題。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;li key=&#123;number.toString()&#125;&gt;</span><br><span class="line">      &#123;number&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="Key">Key</h4><p>Key 幫助 React 分辨哪些項目被改變、增加或刪除。<br>在 array 裡面的每個 element 都應該要有一個 key，如此才能給予每個 element 一個固定的身份：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">  &lt;li key=&#123;number.toString()&#125;&gt;</span><br><span class="line">    &#123;number&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>選擇 key 最佳的方法是在列表中使用唯一識別字串來區別 sibling 項目。<br>通常，會使用資料的 ID 作為 key：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> todoItems = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span></span><br><span class="line">  &lt;li key=&#123;todo.id&#125;&gt;</span><br><span class="line">    &#123;todo.text&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>當 render 的項目沒有固定的 ID ，且也沒有更好的辦法時，<br>可以使用項目的索引做為 key：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 請在項目沒有固定的 ID 時才這樣做</span></span><br><span class="line"><span class="keyword">const</span> todoItems = todos.map(<span class="function">(<span class="params">todo, index</span>) =&gt;</span></span><br><span class="line">  &lt;li key=&#123;index&#125;&gt;</span><br><span class="line">    &#123;todo.text&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>不建議使用索引作為 key，尤其如果項目的順序會改變的話。<br>這會對效能產生不好的影響，也可能會讓 component state 產生問題。</p></li><li><h4 id="用-Key-抽離-Component">用 Key 抽離 Component</h4><p>Key 只有在周遭有 array 的情境中才有意義。<br>例如，如果要抽離一個 ListItem component 的話，應該把 key 放在 array 裡的 <ListItem /> element 上，<br>而不是把它放在 ListItem 裡面的 <li> element 上。</p><p>範例：Key 的錯誤使用方式</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ListItem</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> value = props.value;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">// 錯！你不需要在這裡指出 key：</span></span><br><span class="line">    &lt;li key=&#123;value.toString()&#125;&gt;</span><br><span class="line">      &#123;value&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;ListItem value=&#123;number&#125; /&gt;           <span class="comment">// 應該要在這裡指出 key：</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;listItems&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>範例：Key 的正確使用方式</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ListItem</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 不需要在這裡指出 key：</span></span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;props.value&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;ListItem key=&#123;number.toString()&#125; value=&#123;number&#125; /&gt;     <span class="comment">// 正確！Key 應該在 array 內被指定。</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;listItems&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>一個好的經驗法則是，在 <code>map()</code> 呼叫中的每個 element 都會需要 key。</p></li><li><h4 id="Key-必須在-Sibling-中是唯一的">Key 必須在 Sibling 中是唯一的</h4><p>在 array 中使用的 key 應該要是唯一的值。然而，它們不必在全域中唯一。<br>當產生兩個不同的 array 時，仍然可以使用相同的 key：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Blog</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> sidebar = (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;props.posts.map(<span class="function">(<span class="params">post</span>) =&gt;</span></span><br><span class="line">        &lt;li key=&#123;post.id&#125;&gt;</span><br><span class="line">          &#123;post.title&#125;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      )&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> content = props.posts.map(<span class="function">(<span class="params">post</span>) =&gt;</span></span><br><span class="line">    &lt;div key=&#123;post.id&#125;&gt;</span><br><span class="line">      &lt;h3&gt;&#123;post.title&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;p&gt;&#123;post.content&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123;sidebar&#125;</span><br><span class="line">      &lt;hr /&gt;</span><br><span class="line">      &#123;content&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> posts = [</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">title</span>: <span class="string">&#x27;Hello World&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;Welcome to learning React!&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">title</span>: <span class="string">&#x27;Installation&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;You can install React from npm.&#x27;</span>&#125;</span><br><span class="line">];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Blog posts=&#123;posts&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Key 的功能是提示 React，但它們不會被傳遞到你的 component。<br>如果在 component 中需要同樣的值，可以直接把這個值用一個不同的名稱作為 prop 傳下去：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> content = posts.map(<span class="function">(<span class="params">post</span>) =&gt;</span></span><br><span class="line">  &lt;Post</span><br><span class="line">    key=&#123;post.id&#125;</span><br><span class="line">    id=&#123;post.id&#125;</span><br><span class="line">    title=&#123;post.title&#125; /&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>Post</code> component 可以讀取 <code>props.id</code>，但不能讀取 <code>props.key</code>。</p></li><li><h4 id="在-JSX-中嵌入-map">在 JSX 中嵌入 map()</h4><p>在上面的例子中，我們宣告了另一個 <code>listItems</code> 變數並把它包含在 JSX 中：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;ListItem key=&#123;number.toString()&#125; value=&#123;number&#125; /&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;listItems&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JSX 能在大括號中<code>嵌入任何表達式</code>，所以能夠 inline <code>map()</code> 的結果：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">        &lt;ListItem key=&#123;number.toString()&#125; value=&#123;number&#125; /&gt;</span><br><span class="line">      )&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有時候這會產生更乾淨的程式碼，但這種風格也可能被濫用。<br>就像 JavaScript 一樣，是否要將變數抽取出來以增加可讀性完全是看你的決定。<br>請記得，如果 <code>map()</code> 的程式碼層級變得過度巢狀，也許就是使用 <code>抽離component</code> 的時候了。</p></li></ul></li><li><h3 id="表單-v2">表單</h3><ul><li><h4 id="Controlled-Component">Controlled Component</h4><p>在 HTML 中，表單的 element 像是 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 通常會維持它們自身的 state，並根據使用者的輸入來更新 state。<br>在 React 中，可變的 state 通常是被維持在 component 中的 state property，並只能以 setState() 來更新。<br>render 表單的 React component 同時也掌握了後續使用者的輸入對表單帶來的改變。<br>像這樣一個輸入表單的 element，被 React 用這樣的方式來控制它的值，就被稱為「controlled component」。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameForm</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">value</span>: <span class="string">&#x27;&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.handleChange = <span class="built_in">this</span>.handleChange.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleSubmit = <span class="built_in">this</span>.handleSubmit.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">value</span>: event.target.value&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleSubmit</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;A name was submitted: &#x27;</span> + <span class="built_in">this</span>.state.value);</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;form onSubmit=&#123;<span class="built_in">this</span>.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          Name:</span><br><span class="line">          &lt;input type=<span class="string">&quot;text&quot;</span> value=&#123;<span class="built_in">this</span>.state.value&#125; onChange=&#123;<span class="built_in">this</span>.handleChange&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由於 <code>value</code> attribute 是被設定在表單 element 上，顯示的 value 會永遠是 <code>this.state.value</code>，這使得 React 的 state 成為了資料來源。<br>由於 <code>handleChange</code> 在每一次鍵盤被敲擊時都會被執行，並更新 React 的 state，因此被顯示的 value 將會在使用者打字的同時被更新。</p><p>在這樣的 controlled component 中，顯示的 value 始終由 React 的 state 驅動，<br>雖然這意味著必須寫更多的 code，但現在同時可以將 value 傳遞給其他的 UI element，或是從其他 event handler 重置。</p></li><li><h4 id="Textarea-標籤">Textarea 標籤</h4><p>在 HTML 中，一個 <code>&lt;textarea&gt;</code> 的 element 是經由它的 children 來定義它的文字：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span></span><br><span class="line">  Hello there, this is some text in a text area</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 React 中，<code>&lt;textarea&gt;</code> 則是使用一個 <code>value</code> 的 attribute。<br>如此一來，一個使用 <code>&lt;textarea&gt;</code> 的表單可以使用非常類似單行的 input 方法來寫成：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EssayForm</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;</span><br><span class="line">      value: <span class="string">&#x27;Please write an essay about your favorite DOM element.&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.handleChange = <span class="built_in">this</span>.handleChange.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleSubmit = <span class="built_in">this</span>.handleSubmit.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">value</span>: event.target.value&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleSubmit</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;An essay was submitted: &#x27;</span> + <span class="built_in">this</span>.state.value);</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;form onSubmit=&#123;<span class="built_in">this</span>.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          Essay:</span><br><span class="line">          &lt;textarea value=&#123;<span class="built_in">this</span>.state.value&#125; onChange=&#123;<span class="built_in">this</span>.handleChange&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="Select-標籤">Select 標籤</h4><p>在 HTML 中，<code>&lt;select&gt;</code> 會建立一個下拉式選單。<br>例如，這個 HTML 會建立一個有各種水果的下拉式選單：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;grapefruit&quot;</span>&gt;</span>Grapefruit<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;lime&quot;</span>&gt;</span>Lime<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span> <span class="attr">value</span>=<span class="string">&quot;coconut&quot;</span>&gt;</span>Coconut<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;mango&quot;</span>&gt;</span>Mango<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>椰子的選項是一開始就被選定的，因為它有一個 <code>selected</code> attribute。<br>但是在 React 中並不是用 <code>selected</code> attribute，而是在 <code>select</code> 的標籤上用一個 <code>value</code> attribute。<br>對一個 controlled component 來說這是比較方便的，因為只需要在一個地方更新它。例如：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlavorForm</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">value</span>: <span class="string">&#x27;coconut&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.handleChange = <span class="built_in">this</span>.handleChange.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleSubmit = <span class="built_in">this</span>.handleSubmit.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">value</span>: event.target.value&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleSubmit</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;Your favorite flavor is: &#x27;</span> + <span class="built_in">this</span>.state.value);</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;form onSubmit=&#123;<span class="built_in">this</span>.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          Pick your favorite flavor:</span><br><span class="line">          &lt;select value=&#123;<span class="built_in">this</span>.state.value&#125; onChange=&#123;<span class="built_in">this</span>.handleChange&#125;&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;grapefruit&quot;</span>&gt;Grapefruit&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;lime&quot;</span>&gt;Lime&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;coconut&quot;</span>&gt;Coconut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;mango&quot;</span>&gt;Mango&lt;/option&gt;</span><br><span class="line">          &lt;/select&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整體來說，這使得 <code>&lt;input type=&quot;text&quot;&gt;</code>，<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 使用起來都很類似。<br>它們全都會接收一個 controlled component 時會使用到的 <code>value</code> attribute。</p></li><li><h4 id="檔案-input-標籤">檔案 input 標籤</h4><p>在 HTML 中，<code>&lt;input type=&quot;file&quot;&gt;</code> 讓使用者從它們的儲存裝置中選擇一個至多個檔案，<br>並把它們上傳到伺服器或透過 <code>File API</code> 被 JavaScript 處理。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>由於它的值是唯讀，它在 React 中是一個 uncontrolled component。</p></li><li><h4 id="處理多個輸入">處理多個輸入</h4><p>當需要處理多個 controlled <code>input</code> element，可以在每個 element 中加入一個 <code>name</code> attribute，<br>並讓 handler function 選擇基於 <code>event.target.name</code> 的值該怎麼做：</p></li></ul></li></ul><p>參考資源：</p><ul><li><a href="https://zh-hant.reactjs.org/">React 官方中文文檔</a></li><li><a href="https://blog.gtwang.org/web-development/react-hello-world-tutorial/">React 入門教學與 Hello World 基礎範例</a></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_hexo</title>
      <link href="/2022/02/05/%E7%AD%86%E8%A8%98-hexo/"/>
      <url>/2022/02/05/%E7%AD%86%E8%A8%98-hexo/</url>
      
        <content type="html"><![CDATA[<p>寫作筆記</p><a id="more"></a><h2 id="基本操作">基本操作</h2><ul><li><h3 id="安裝-Hexo">安裝 Hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -g hexo</span><br></pre></td></tr></table></figure><ul><li><h4 id="創建部落格">創建部落格</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><code>blog</code> 請改為部落格名稱</li></ul></li><li><h3 id="寫作">寫作</h3><ul><li>設定<br>所有文章都會在 <code>source/_posts</code> 裡面。<br>若想每新增一篇文章，自動在 <code>source/_posts</code> 裡，<br>新增一個跟文章同名的資料夾用來放置圖片資源，<br>可在 <code>_config.yml</code> 中，進行設定：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>新增文章<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&#x27;文章標題&#x27;</span></span><br></pre></td></tr></table></figure><code>hexo new</code> 預設為 <code>post</code>。<br>Hexo 有三種預設佈局： <code>post</code>、<code>page</code>、<code>draft</code>，分別對應不同的路徑<table><thead><tr><th>佈局</th><th>路徑</th></tr></thead><tbody><tr><td><code>post</code></td><td>source/_posts</td></tr><tr><td><code>page</code></td><td>source</td></tr><tr><td><code>draft</code></td><td>source/_drafts</td></tr></tbody></table></li></ul></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_從零開始 邁向數據分析 SQL資料庫語法入門</title>
      <link href="/2022/01/28/%E7%AD%86%E8%A8%98-%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E9%82%81%E5%90%91%E6%95%B8%E6%93%9A%E5%88%86%E6%9E%90SQL%E8%B3%87%E6%96%99%E5%BA%AB%E8%AA%9E%E6%B3%95%E5%85%A5%E9%96%80/"/>
      <url>/2022/01/28/%E7%AD%86%E8%A8%98-%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E9%82%81%E5%90%91%E6%95%B8%E6%93%9A%E5%88%86%E6%9E%90SQL%E8%B3%87%E6%96%99%E5%BA%AB%E8%AA%9E%E6%B3%95%E5%85%A5%E9%96%80/</url>
      
        <content type="html"><![CDATA[<p>紮穩 SQL 基礎, 循序養成大數據分析新技能<br>MySQL / MariaDB、MS SQL Server、Oracle、PostgreSQL、DB2 全適用！</p><a id="more"></a><h2 id="建構SQL執行環境">建構SQL執行環境</h2><ul><li><h3 id="安裝-XAMPP-來建構-MySQL-MariaDB-資料庫">安裝 XAMPP 來建構 MySQL / MariaDB 資料庫</h3><ul><li><h4 id="安裝-XAMPP">安裝 XAMPP</h4><a href="https://www.apachefriends.org/zh_tw/index.html">下載 XAMPP (https://www.apachefriends.org/zh_tw/index.html)</a><img data-src="/2022/01/28/%E7%AD%86%E8%A8%98-%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E9%82%81%E5%90%91%E6%95%B8%E6%93%9A%E5%88%86%E6%9E%90SQL%E8%B3%87%E6%96%99%E5%BA%AB%E8%AA%9E%E6%B3%95%E5%85%A5%E9%96%80/1.png" class=""></li><li><h4 id="設定-MySQL-MariaDB-管理員密碼">設定 MySQL / MariaDB 管理員密碼</h4></li></ul></li><li><h3 id="建立學習用資料庫">建立學習用資料庫</h3><ul><li><h4 id="透過-SQL-語法來操作資料庫">透過 SQL 語法來操作資料庫</h4></li></ul></li></ul><h2 id="資料庫與SQL">資料庫與SQL</h2><h3 id="資料庫是什麼">資料庫是什麼</h3><pre><code>#### 身邊隨處可見的資料庫#### 為什麼需要 DBMS#### DBMS 具有許多類型</code></pre><h3 id="資料庫的架構">資料庫的架構</h3><pre><code>#### 一般 RDBMS 的系統架構#### 資料表的結構</code></pre><h3 id="SQL-基本概要">SQL 基本概要</h3><pre><code>#### 標準 SQL#### SQL 敘述與其分類#### SQL 的基本撰寫規則</code></pre><h3 id="建立資料表">建立資料表</h3><pre><code>#### 資料表的內容#### 建立資料庫 (Create Database 敘述)#### 建立資料表 (Create Table 敘述)#### 命名規則#### 指定資料型別#### 設定條件約束</code></pre><h3 id="刪除與修改資料表">刪除與修改資料表</h3><pre><code>#### 刪除資料表 (Drop Table 敘述)#### 修改資料表結構 (Alter Table 敘述)#### 新增資料至資料表</code></pre><h3 id="自我練習">自我練習</h3><h2 id="查詢的基本語法">查詢的基本語法</h2><h3 id="SELECT-敘述的基本語法">SELECT 敘述的基本語法</h3><pre><code>#### 輸出特定欄位資料#### 輸出所有欄位資料#### 替欄位取個別名#### 輸出常數#### 省略結果中重複的紀錄#### 以 WHERE 子句篩選特定紀錄#### 註解的寫法</code></pre><h3 id="算術運算子與比較運算子">算術運算子與比較運算子</h3><pre><code>#### 算術運算子#### 請留意 NULL 的運算#### 比較運算子#### 對字串使用不等號的需注意事項#### 不能對 NULL 使用比較運算子</code></pre><h3 id="邏輯運算子">邏輯運算子</h3><pre><code>#### NOT 運算子#### AND 運算子與 OR 運算子#### 加上括號的部分優先處理#### 邏輯運算子與真偽值#### 含有 NULL 時的真偽值</code></pre><h3 id="自我練習-v2">自我練習</h3><h2 id="彙總與排序">彙總與排序</h2><h3 id="查詢時彙總資料">查詢時彙總資料</h3><pre><code>#### 彙總函數#### 計算資料表的紀錄筆數#### 計算 NULL 以外的紀錄筆數#### 求得總計#### 求得平均值#### 求得最大、最小值#### 排除重複值再使用彙總函數 (DISTINCT 關鍵字)</code></pre><h3 id="資料分群">資料分群</h3><pre><code>#### GROUP BY 子句#### 彙總鍵包含 NULL 的狀況#### 使用 WHRER 子句時 GROUP BY 的作用#### 彙總函數與 GROUP BY 子句的常見錯誤</code></pre><h3 id="對彙總結果指定條件">對彙總結果指定條件</h3><pre><code>#### HAVING 子句#### 可寫在 HAVING 子句的元素#### 適合以 WHERE 子句取代 HAVING 子句的條件</code></pre><h3 id="查詢結果排序">查詢結果排序</h3><pre><code>#### ORDER BY 子句#### 指定升幂或降幂#### 指定多個排序鍵#### NULL 的順序#### 使用欄位別名指定排序鍵#### ORDER BY 子句可使用的欄位#### 請勿使用欄位編號</code></pre><h3 id="自我練習-v3">自我練習</h3><h2 id="更新資料">更新資料</h2><h3 id="新增資料-INSERT">新增資料 (INSERT)</h3><pre><code>#### 什麼是 INSERT#### INSERT 敘述的基本語法#### 省略欄位串列#### 存入 NULL#### 存入預設值#### 從其他資料表複製資料</code></pre><h3 id="刪除資料-DELETE">刪除資料 (DELETE)</h3><pre><code>#### DROP TABLE 敘述與 DELETE 敘述#### DELETE 敘述的基本語法#### 刪除特定紀錄的 DELETE 敘述 (搜尋式 DELETE)</code></pre><h3 id="修改資料-UPDATE">修改資料 (UPDATE)</h3><pre><code>#### UPDATE 的基本語法#### 指定條件的 UPDATE 敘述 (搜尋式 UPDATE)#### 將資料改為 NULL#### 修改多個欄位的資料</code></pre><h3 id="交易功能">交易功能</h3><pre><code>#### 什麼是交易功能#### 如何設定交易功能#### ACID 特性</code></pre><h3 id="自我練習-v4">自我練習</h3><h2 id="進階查詢功能">進階查詢功能</h2><h3 id="檢視表">檢視表</h3><pre><code>#### 檢視表與資料表#### 檢視表的建立方式#### 檢視表的限制(1) 建立時不可使用 ORDER BY 子句#### 檢視表的限制(2) 透過檢視表更新資料#### 刪除檢視表</code></pre><h3 id="子查詢">子查詢</h3><pre><code>#### 子查詢與檢視表#### 子查詢的名稱#### 純量子查詢#### 可寫入純量子查詢的位置#### 使用純量子查詢的需注意事項</code></pre><h3 id="關聯子查詢">關聯子查詢</h3><pre><code>#### 一般子查詢與關聯子查詢的差異#### 關聯子查詢也能進行資料分群#### 連結條件必須寫在子查詢內</code></pre><h3 id="自我練習-v5">自我練習</h3><h2 id="函數、述詞、Case-運算式">函數、述詞、Case 運算式</h2><h3 id="各式各樣的函數">各式各樣的函數</h3><pre><code>#### 函數的類型#### 數學函數#### 字串函數#### 日期函數#### 轉換函數</code></pre><h3 id="述詞">述詞</h3><pre><code>#### 什麼是述詞#### LIKE 述詞 - 搜尋相同的字串#### BETWEEN - 範圍搜尋#### IS NULL、IS NOT NULL - 判斷是否為 NULL#### IN 述詞 - OR 的簡便形式#### 指定子查詢做為 IN 述詞的參數#### EXISTS 述詞</code></pre><h3 id="CASE-運算式">CASE 運算式</h3><pre><code>#### 什麼是 CASE 運算式#### CASE 運算式的語法#### CASE 運算式的使用方式</code></pre><h3 id="自我練習-v6">自我練習</h3><h2 id="集合運算-合併查詢">集合運算 (合併查詢)</h2><h3 id="資料表的加法與減法運算">資料表的加法與減法運算</h3><pre><code>#### 什麼是集合運算#### 資料表的加法運算 - UNION#### 集合運算的注意事項#### 列出重複紀錄的集合運算 - ALL選項#### 篩選出資料表的共通部分 - INTERSECT#### 紀錄的減法運算 - EXCEPT</code></pre><h3 id="結合-聯結多個資料表欄位">結合 (聯結多個資料表欄位)</h3><pre><code>#### 什麼是結合#### 內部結合 - INNER JOIN#### 外部結合 - OUTER JOIN#### 使用3個以上資料表的結合#### 交叉結合 - CROSS JOIN</code></pre><h3 id="自我練習-v7">自我練習</h3><h2 id="SQL-進階處理功能">SQL 進階處理功能</h2><h3 id="各式各樣的函數-v2">各式各樣的函數</h3><pre><code>#### 什麼是視窗函數#### 視窗函數的語法#### 基本使用方式 - 以 RANK 函數為例#### 也可以不指定 PARTITION BY#### 常用的視窗專用函數#### 視窗函數應當寫在何處#### 將彙總函數當作視窗函數使用#### 計算移動平均#### 2個 ORDER BY</code></pre><h3 id="GROUPING-運算子">GROUPING 運算子</h3><pre><code>#### 一併列出總計行#### ROLLUP - 1次取得總計與小計#### GROUPING 函數 - 分辨 NULL 的真偽#### CUBE - 將資料堆疊成積木#### GROUPING SETS - 只取出部分積木</code></pre><h3 id="自我練習-v8">自我練習</h3><h2 id="從應用程式連接資料庫">從應用程式連接資料庫</h2><h3 id="串聯資料庫和應用程式">串聯資料庫和應用程式</h3><pre><code>#### 資料庫與應用程式的關係#### 驅動程式 - 2個世界的橋樑#### 驅動程式的種類</code></pre><h3 id="程式的基礎知識">程式的基礎知識</h3><pre><code>#### 一如往例的 「Hello, World」#### 編譯與執行程式#### 常見的錯誤</code></pre><h3 id="利用程式連到-MariaDB">利用程式連到 MariaDB</h3><pre><code>#### 執行 SQL 敘述的 Java 程式#### Java 如何從資料庫取得資料#### 執行連接至資料庫的程式#### 嘗試篩選出資料表的資料#### 嘗試修改資料表的資料#### 小結</code></pre><h3 id="自我練習-v9">自我練習</h3><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> 筆記 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_正規表達式</title>
      <link href="/2022/01/16/%E7%AD%86%E8%A8%98-%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F/"/>
      <url>/2022/01/16/%E7%AD%86%E8%A8%98-%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="正規表達式-Regulay-Expression">正規表達式 (Regulay Expression)</h2><ul><li><code>Regular Expression</code> 是一套規則模式(pattern)，<br>可以用來做文字的搜尋、比對、萃取、替代、轉換等等，在許多的程式語言中都支援，<br>簡稱 <code>Regex</code>, <code>Regexp</code> 或 <code>RE</code>。</li></ul><a id="more"></a><ul><li><p><code>Regular Expression</code> 是在 UNIX 世界中發展出來的字串比對技巧，<br>基本概念是用一套簡單 (但功能強大) 的符號來比對字串，<br>並可對符合比對條件的字串進行修改或其他運算。</p></li><li><p><code>Regex</code> 可以實用的情境大致有幾種：</p><ol><li>尋找匹配的字串</li><li>取代匹配的字串</li><li>驗證使用者輸入資料的欄位</li><li>擷取某段想要的資訊</li></ol></li></ul><h2 id="撰寫正規表達式">撰寫正規表達式</h2><ul><li><code>pattern</code> 代表正規表達式的字串，區分大小寫。</li><li><code>flag</code> 則是比對的方式。</li><li>可透過下列兩種方式創建正規表達式：<ul><li>使用 <code>RegExp 物件的建構子函式</code>，<br>新增一個 <code>RegExp</code> 物件：<br>當模式會異動、事先未知匹配模式、或者從其他地方取得時，使用 <code>建構子函數</code> 較為合適。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> rules = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;pattern&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li>使用 <code>正規表達式實字</code>，<br>用兩個 <code>//</code> 包住條件：<br>當正規表達式為定值時，使用此方法可獲得較佳效能。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> rules = <span class="regexp">/pattern/</span>flag;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="修飾符-flag">修飾符 (flag)</h2><table><thead><tr><th></th><th>說明</th></tr></thead><tbody><tr><td><code>i</code></td><td>不區分大小寫。</td></tr><tr><td><code>m</code></td><td>使用多行模式，<br>使 <code>^</code> 和 <code>$</code> 會比對每一行的開頭與結尾，而不是輸入字串的開頭和結尾。</td></tr><tr><td><code>s</code></td><td>使用單行模式，<br>使 <code>句點.</code> 會比對每個字元，而不是換行符號 <code>\n</code> 以外的每個字元。</td></tr><tr><td><code>g</code></td><td>使用全域比對模式，<br>g flag 會保留lastIndex的狀態，讓下一次再匹配時，可以從lastIndex的位置開始找起。</td></tr><tr><td><code>x</code></td><td>將模式中的空白忽略。</td></tr><tr><td><code>A</code></td><td>強制以目標字符串開頭匹配。</td></tr><tr><td><code>U</code></td><td>禁止貪婪匹配，只匹配最近的一個字符串。 (不重複匹配)</td></tr><tr><td><code>gi</code></td><td>全域比對並忽略大小寫。</td></tr></tbody></table><h2 id="RegExp-物件方法">RegExp 物件方法</h2><table><thead><tr><th>方法</th><th>說明</th><th>語法格式</th></tr></thead><tbody><tr><td><code>exec</code></td><td>搜尋比對，符合傳回Array；不符合傳回 null。</td><td><code>regexObj.exec(str)</code></td></tr><tr><td><code>test</code></td><td>搜尋比對，符合傳回true；不符合傳回false。</td><td><code>regexObj.test(str)</code></td></tr></tbody></table><h2 id="字串物件方法">字串物件方法</h2><table><thead><tr><th>方法</th><th>說明</th><th>語法格式</th></tr></thead><tbody><tr><td><code>match</code></td><td>搜尋比對，如果符合的狀況正規表達式<br>包含g符號，則傳回所有相符的字串；<br>不包含g則傳回Array，<br>無符合傳回null。</td><td><code>str.match(regexp)</code></td></tr><tr><td><code>search</code></td><td>搜尋比對，<br>符合傳回第一個相符的索引 (index)，<br>不符合傳回 -1。</td><td><code>str.search(regexp)</code></td></tr><tr><td><code>replace</code></td><td>取代字串，<br>如果符合傳回一個新字串，不影響原字串。</td><td><code>str.replace(regexp, newstr)</code></td></tr><tr><td><code>split</code></td><td>分割字串，<br>如果符合傳回分割後的Array，不影響原字串。</td><td><code>str.split(regexp)</code></td></tr></tbody></table><h2 id="特殊字元">特殊字元</h2><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>\</code></td><td>反斜線，跳脫特殊字元。</td></tr><tr><td><code>.</code></td><td>任意字元。</td></tr><tr><td><code>$</code></td><td>字元結尾。</td></tr><tr><td><code>^</code></td><td>字元開頭</td></tr><tr><td><code>|</code></td><td>同程式常見的 OR 邏輯</td></tr></tbody></table><h2 id="常用字元">常用字元</h2><table><thead><tr><th>字元</th><th>匹配說明</th><th>等效正規表達式</th></tr></thead><tbody><tr><td><code>\d</code></td><td>數字。</td><td><code>[0-9]</code></td></tr><tr><td><code>\w</code></td><td>數字、字母、底線。</td><td><code>[a-zA-Z0-9_]</code></td></tr><tr><td><code>\s</code></td><td>空白字元、tab、換頁、換行。</td><td><code>[\r\t\n\f]</code></td></tr><tr><td><code>\b</code></td><td>英文單詞邊界。</td><td></td></tr></tbody></table><table><thead><tr><th>反義字元</th><th>匹配說明</th><th>等效正規表達式</th></tr></thead><tbody><tr><td><code>\D</code></td><td>非 數字。</td><td><code>[^0-9]</code>、<code>[^\d]</code></td></tr><tr><td><code>\W</code></td><td>非 數字、字母、底線。</td><td><code>[^a-zA-Z0-9_]</code>、<code>[^\w]</code></td></tr><tr><td><code>\S</code></td><td>非 空白字元、tab、換頁、換行。</td><td><code>[^\r\t\n\f]</code>、<code>[^\s]</code></td></tr><tr><td><code>\B</code></td><td>非 英文單詞邊界。</td><td><code>[^\b]</code></td></tr></tbody></table><table><thead><tr><th>其他字元</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>\0</code></td><td>查找 NULL 字符。</td></tr><tr><td><code>\n</code></td><td>查找換行符。</td></tr><tr><td><code>\f</code></td><td>查找換頁符。</td></tr><tr><td><code>\r</code></td><td>查找回車符。</td></tr><tr><td><code>\t</code></td><td>查找製表符(tab鍵)。</td></tr><tr><td><code>\v</code></td><td>查找垂直製表符。</td></tr><tr><td><code>\xxx</code></td><td>查找以八進制數 xxx 規定的字符。</td></tr><tr><td><code>\xdd</code></td><td>查找以十六進制數 dd 規定的字符。</td></tr><tr><td><code>\uxxxx</code></td><td>查找以十六進制數 xxxx 規定的Unicode字符。</td></tr></tbody></table><h2 id="量詞">量詞</h2><table><thead><tr><th>符號</th><th>匹配說明</th><th>等效正規表達式</th></tr></thead><tbody><tr><td>n<code>*</code></td><td>0次以上。</td><td>n<code>&#123;0,&#125;</code></td></tr><tr><td>n<code>+</code></td><td>至少1次以上。</td><td>n<code>&#123;1,&#125;</code></td></tr><tr><td>n<code>?</code></td><td>0次或1次。</td><td>n<code>&#123;0,1&#125;</code></td></tr><tr><td>n<code>&#123;x&#125;</code></td><td>x次 的 n。</td><td></td></tr><tr><td>n<code>&#123;x,&#125;</code></td><td>至少x次以上 的 n。</td><td></td></tr><tr><td>n<code>&#123;,y&#125;</code></td><td>最多y次 的 n。</td><td></td></tr><tr><td>n<code>&#123;x,y&#125;</code></td><td>至少x次以上，最多y次 的 n。</td><td></td></tr></tbody></table><p>對於量詞，Regex的匹配預設採取貪婪模式(盡可能多匹配)。<br><code>?</code>接在量詞後方，表示盡可能匹配短結果。</p>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> match = <span class="regexp">/&lt;.+?&gt;/</span>.exec(<span class="string">&#x27;&lt;em&gt;Hello World&lt;/em&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(match[<span class="number">0</span>]);        <span class="comment">// &lt;em&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方括號">方括號 []</h2><p>比對方括號裡面的任一字元，可以用範圍匹配</p><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>[]</code></td><td>方括號，比對方括號裡面的任一字元，可以用範圍匹配： [A-Z]、[a-z]、[0-9]</td></tr><tr><td><code>[^]</code>、<code>[!]</code></td><td>^代表「反」，比對方括號裡面<code>以外</code>的任一字元</td></tr></tbody></table><h2 id="群組">群組 ()</h2><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>(x)</code></td><td>比對x，並將符合的部分存入一個變數(自動命名的變數)</td></tr><tr><td><code>(?&lt;name&gt;x)</code></td><td>比對x，並將符合的部分存入name變數</td></tr><tr><td><code>(?:x)</code></td><td>比對x，但不存入結果陣列</td></tr><tr><td><code>x(?=y)</code></td><td>x之後必須接y</td></tr><tr><td><code>x(?!y)</code></td><td>x之後不能接y</td></tr><tr><td><code>(?&lt;=y)x</code></td><td>x前面必須接y</td></tr><tr><td><code>(?&lt;!y)x</code></td><td>x前面不能接y</td></tr></tbody></table><h2 id="回溯-Backreference">回溯 (Backreference)</h2><p>用來引用群組的內容。<br>使用反斜線加上數字。e.g.: <code>\1</code> (代表第一個群組)</p>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> regex = <span class="regexp">/(\d+)a\1b/</span></span><br><span class="line">regex.test(<span class="string">&#x27;1a1b&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">regex.test(<span class="string">&#x27;1a2b&#x27;</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h2 id="替換">替換</h2><p>與群組<code>()</code>一起使用。</p><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>$number</code>、<code>$&#123;number&#125;</code></td><td>number 表示匹配的群組 (capturing group)，群組編號從 1 開始 $1。<br>$ 後面接著的所有數字都會被解讀為屬於 number 群組，<br>可以用 <code>$&#123;number&#125;</code> 語法，例如用 <code>$&#123;1&#125;</code>1 就不會被解讀為第 11 個群組，而是第 1 個。</td></tr><tr><td><code>$&#123;name&#125;</code></td><td>用來引用 Named Capturing Group 的值。</td></tr><tr><td>$$</td><td>用來跳脫 (escape) $ 的特殊意義，表示 $ 字元。</td></tr><tr><td>$&amp;</td><td>用來引用整個匹配的字串。</td></tr><tr><td>$`</td><td>用來引用匹配字串的前面的所有字 (before match)。</td></tr><tr><td>$’</td><td>用來引用匹配字串的後面的所有字 (after match)。</td></tr><tr><td>$+</td><td>用來引用匹配的最後一個群組。</td></tr><tr><td>$_</td><td>用來引用整個輸入的字串。</td></tr></tbody></table><h2 id="常用實例">常用實例</h2><table><thead><tr><th></th><th>表達式</th></tr></thead><tbody><tr><td>Email</td><td><code>^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)$</code></td></tr><tr><td>URL網址</td><td><code>^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)([\/\w \.-]*)*\/?$</code></td></tr><tr><td>IP位址</td><td><code>^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$</code></td></tr><tr><td>手機號碼</td><td><code>^09\d&#123;8&#125;$</code></td></tr><tr><td>身份證字號</td><td><code>^[A-Z]&#123;1&#125;[1-2]&#123;1&#125;[0-9]&#123;8&#125;$</code></td></tr><tr><td>HTML Tag</td><td><code>^&lt;([a-z]+)([^&lt;]+)*(?:&gt;(.*)&lt;\/\1&gt;|\s+\/&gt;)$</code></td></tr><tr><td>副檔名</td><td><code>(\w+)\.(jpg|gif)$</code></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 筆記 </tag>
            
            <tag> 正規表達式 </tag>
            
            <tag> RegExp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_Array</title>
      <link href="/2021/11/29/%E9%80%9F%E6%9F%A5%E8%A1%A8-Array/"/>
      <url>/2021/11/29/%E9%80%9F%E6%9F%A5%E8%A1%A8-Array/</url>
      
        <content type="html"><![CDATA[<p>各種常用 Array語法 速查表</p><a id="more"></a><ul><li><h2 id="操作方法分類">操作方法分類</h2><table><thead><tr><th>分類</th><th>方法</th></tr></thead><tbody><tr><td>會改變原始陣列</td><td><a href="#push">push()</a>、<a href="#pop">pop()</a>、<a href="#shift">shift()</a>、<a href="#unshift">unshift()</a>、<a href="#reverse">reverse()</a>、<a href="#splice">splice()</a>、<a href="#sort">sort()</a>、<a href="#copyWithin">copyWithin()</a>、<a href="#fill">fill()</a></td></tr><tr><td>回傳陣列元素資訊或索引值</td><td><a href="#length">length</a>、<a href="#at">at()</a>、<a href="#indexOf">indexOf()</a>、<a href="#lastIndexOf">lastIndexOf()</a>、<a href="#find">find()</a>、<a href="#findIndex">findIndex()</a>、<a href="#filter">filter()</a></td></tr><tr><td>針對每個元素處理</td><td><a href="#forEach">forEach()</a></td></tr><tr><td>產生新的陣列或新的值</td><td><a href="#concat">concat()</a>、<a href="#slice">slice()</a>、<a href="#map">map()</a>、<a href="#reduce">reduce()</a>、<a href="#reduceRight">reduceRight()</a>、<a href="#flat">flat()</a>、<a href="#flatMap">flatMap()</a>、<br><a href="#Array-from">Array.from()</a>、<a href="#Array-of">Array.of()</a></td></tr><tr><td>回傳迭代器(Iteration)</td><td><a href="#entries">entries()</a>、<a href="#keys">keys()</a>、<a href="#values">values()</a></td></tr><tr><td>回傳字串</td><td><a href="#join">join()</a>、<a href="#toString">toString()</a></td></tr><tr><td>判斷並回傳布林值</td><td><a href="#every">every()</a>、<a href="#some">some()</a>、<a href="#includes">includes()</a>、<a href="#Array-isArray">Array.isArray()</a></td></tr></tbody></table></li><li><h2 id="會改變原始陣列">會改變原始陣列</h2><ul><li><h3 id="push">push()</h3><p><code>push()</code> 可以將一個或多個元素，加入陣列後方，並回傳修改後的陣列。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">a.push(<span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="pop">pop()</h3><p><code>pop()</code> 從陣列移除(取出)最後一個元素。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> b = a.pop();</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 3]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);     <span class="comment">// [4]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="shift">shift()</h3><p><code>shift()</code> 從陣列移除(取出)第一個元素。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> b = a.shift();</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [2, 3, 4]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);     <span class="comment">// [1]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="unshift">unshift()</h3><p><code>shift()</code> 可以將一個或多個元素，加入陣列前方，並回傳修改後的陣列。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">a.unshift(<span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [5, 6, 1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="reverse">reverse()</h3><p><code>reverse()</code> 將陣列作反向排序。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">a.reverse();</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="splice">splice()</h3><p><code>splice()</code> 可以移除或新增陣列的元素。<br>包含三個以上參數：</p><ul><li>第一個：要從哪個元素索引值開始，索引從0開始。</li><li>第二個：要移除的總筆數，若省略，則從刪除起點開始的所有元素都會被刪除；若設為0或負數，則不移除元素。</li><li>第三個以上：要添加的元素，若省略，則原陣列資料不會添加新資料，表示不增加只刪除。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 刪除一筆資料</span></span><br><span class="line">a.splice(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 4, 5]   3被移除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 刪除索引之後的所有元素</span></span><br><span class="line">a.splice(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1]   2以後的所有元素被移除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 取代</span></span><br><span class="line">a.splice(<span class="number">2</span>, <span class="number">3</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 100, 200, 300]   3,4,5被移除，並添加100,200,300</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不刪除，僅添加</span></span><br><span class="line">a.splice(<span class="number">2</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 100, 3, 4, 5]   在索引2的地方添加100</span></span><br></pre></td></tr></table></figure></li><li><h3 id="sort">sort()</h3><p><code>sort()</code> 可以針對陣列的元素進行排序，裡頭包含了一個排序用的判斷函式，<br>函式內必須包含兩個參數，這兩個參數分別代表陣列裡第 n 個和第 n+1 個元素，<br>透過比較第 n 和第 n+1 個元素的大小來進行排序。<br>會改變原本的陣列內容。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">99</span>, <span class="number">999</span>, <span class="number">88</span>, <span class="number">888</span>, <span class="number">666</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 由小到大排列</span></span><br><span class="line">nums.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a - b);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [88, 99, 666, 888, 999]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由大到小排列</span></span><br><span class="line">nums.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> b - a);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [999, 888, 666, 99, 88]</span></span><br></pre></td></tr></table></figure><p>如果不使用判斷函式，預設會將元素轉換成字串，並採用 <code>unicode</code> 來判斷。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">99</span>, <span class="number">999</span>, <span class="number">88</span>, <span class="number">888</span>, <span class="number">666</span>];</span><br><span class="line"></span><br><span class="line">nums.sort();</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [666, 88, 888, 99, 999]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="copyWithin">copyWithin()</h3><p><code>copyWithin()</code> 複製陣列中的元素，並置換原始陣列中的元素。<br>包含三個參數：</p><ul><li>第一個是要置換的位置 (必填)。</li><li>第二個是複製起點的索引值 (選填，預設0)。</li><li>第三個是複製終點的索引值+1 (選填，預設等於陣列長度)。</li></ul><p>處理後的陣列長度必須等於原本的長度，超過的部分會被移除。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">nums.copyWithin(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [1,2,1,2,3,4]  (5,6被移除)</span></span><br><span class="line"></span><br><span class="line">nums.copyWithin(<span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [1,2,3,2,3,6]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="fill">fill()</h3><p><code>fill()</code> 用一個指定的值置換陣列中所有元素。<br>包含三個參數：</p><ul><li>第一個是指定要置換的值 (必填)。</li><li>第二個是置換起點的索引值 (選填，預設0)。</li><li>第三個是置換終點的索引值+1 (選填，預設等於陣列長度)。</li></ul>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">nums.fill(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;]</span></span><br><span class="line"></span><br><span class="line">nums.fill(<span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [1,2,3,&#x27;b&#x27;,&#x27;b&#x27;,6]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="回傳陣列元素資訊或索引值">回傳陣列元素資訊或索引值</h2><ul><li><h3 id="length">length</h3><p><code>length</code> 可以取得陣列的長度(所有元素的數量)。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(a.length);     <span class="comment">// 4</span></span><br></pre></td></tr></table></figure></li><li><h3 id="at">at()</h3><p><code>at</code> 接收一個索引值，並返回該元素。<br>類似 array[index]。<br>參數：</p><ul><li><code>index</code> 要返回的陣列元素的索引位置，若為負數，則從陣列的尾端開始尋找 (必填)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> cart = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.at(-<span class="number">1</span>));        <span class="comment">// &#x27;pear&#x27;</span></span><br><span class="line"></span><br><span class="line">cart.push(<span class="string">&#x27;orange&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr.at(-<span class="number">1</span>));        <span class="comment">// &#x27;orange&#x27;</span></span><br></pre></td></tr></table></figure></li><li><h3 id="indexOf">indexOf()</h3><p><code>indexOf</code> 在陣列中搜尋指定元素，回傳第一個符合條件的元素的索引值；若沒找到，則回傳 -1。<br>參數：</p><ul><li>第一個參數為 要查找的值 (必填)。</li><li>第二個參數為 搜尋起點的索引值 (選填，預設為0)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fruits = [<span class="string">&#x27;蘋果&#x27;</span>, <span class="string">&#x27;香蕉&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;番茄&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;香蕉&#x27;</span>));        <span class="comment">// 1，代表元素在索引值 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;芭樂&#x27;</span>));        <span class="comment">// 2，只會回傳第一個符合的元素索引值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;榴槤&#x27;</span>));        <span class="comment">// -1，表示陣列中無此資料</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;香蕉&#x27;</span>, <span class="number">3</span>));     <span class="comment">// -1，從索引值 3 開始尋找，沒找到</span></span><br></pre></td></tr></table></figure></li><li><h3 id="lastIndexOf">lastIndexOf()</h3><p><code>lastIndexOf</code> 在陣列中搜尋指定元素，將會回傳最後一個符合條件的元素的索引值，若在陣列中沒找到則回傳 -1。<br>參數：</p><ul><li>第一個參數為 要查找的值 (必填)。</li><li>第二個參數為 由後向前搜尋的起點索引值 (選填，預設為整個陣列長度-1)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fruits = [<span class="string">&#x27;蘋果&#x27;</span>, <span class="string">&#x27;香蕉&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;番茄&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(fruits.lastIndexOf(<span class="string">&#x27;芭樂&#x27;</span>));        <span class="comment">// 3，只會回傳最後一個符合的元素索引值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.lastIndexOf(<span class="string">&#x27;香蕉&#x27;</span>, <span class="number">3</span>));     <span class="comment">// 1，從索引值3往回找。</span></span><br></pre></td></tr></table></figure></li><li><h3 id="find">find()</h3><p><code>find</code> 回傳第一個滿足條件的值，如果找不到則回傳 undefined。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(array.find(<span class="function"><span class="params">ele</span> =&gt;</span> ele &gt; <span class="number">10</span>));        <span class="comment">// 12 (回傳第一個滿足條件的值)</span></span><br><span class="line"><span class="built_in">console</span>.log(array.find(<span class="function"><span class="params">ele</span> =&gt;</span> ele &lt; <span class="number">0</span>));         <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></li><li><h3 id="findIndex">findIndex()</h3><p><code>findIndex</code> 回傳第一個滿足條件的索引值，如果找不到則回傳 -1。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(array.findIndex(<span class="function"><span class="params">ele</span> =&gt;</span> ele &gt; <span class="number">13</span>));        <span class="comment">// 3 (回傳第一個滿足條件的索引值)</span></span><br><span class="line"><span class="built_in">console</span>.log(array.findIndex(<span class="function"><span class="params">ele</span> =&gt;</span> ele &lt; <span class="number">0</span>));         <span class="comment">// -1</span></span><br></pre></td></tr></table></figure></li><li><h3 id="filter">filter()</h3><p><code>filter</code> 回傳所有符合條件的值，組成新陣列。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> words = [<span class="string">&#x27;spray&#x27;</span>, <span class="string">&#x27;limit&#x27;</span>, <span class="string">&#x27;elite&#x27;</span>, <span class="string">&#x27;exuberant&#x27;</span>, <span class="string">&#x27;destruction&#x27;</span>, <span class="string">&#x27;present&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(words.filter(<span class="function"><span class="params">w</span> =&gt;</span> w.length &gt; <span class="number">6</span>));</span><br><span class="line"><span class="comment">// [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="針對每個元素處理">針對每個元素處理</h2><ul><li><h3 id="forEach">forEach()</h3><p><code>forEach</code> 會將陣列中的每個元素，皆傳入函式中執行。<br>無法使用 <code>break</code> 中斷，若需中斷執行，請改用傳統的 <code>for</code> 迴圈。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    </span><br><span class="line">nums.forEach(<span class="function"><span class="params">n</span> =&gt;</span> <span class="built_in">console</span>.log(n));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  1</span></span><br><span class="line"><span class="comment">  2</span></span><br><span class="line"><span class="comment">  3</span></span><br><span class="line"><span class="comment">  4</span></span><br><span class="line"><span class="comment">  5</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>若想改變原始陣列，可善用索引值</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    </span><br><span class="line">nums.forEach(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  arr[index] = item * <span class="number">10</span>;</span><br><span class="line">&#125;)</span><br><span class="line">consolse.log(nums);               <span class="comment">// [10, 20, 30, 40, 50]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="產生新的陣列或新的值">產生新的陣列或新的值</h2><ul><li><h3 id="concat">concat()</h3><p><code>concat</code> 可以將多個陣列合併在一起，也可使用擴展運算符 <code>...</code> 來代替。</p>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> num2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">let</span> num3 = [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line">      </span><br><span class="line"><span class="keyword">let</span> nums = num1.concat(num2, num3);</span><br><span class="line"><span class="keyword">let</span> spread = [...num1, ...num2, ...num3];</span><br><span class="line"><span class="built_in">console</span>.log(nums);            <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="built_in">console</span>.log(spread);          <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br></pre></td></tr></table></figure><p>注意：合併巢狀陣列 (concat 只有淺拷貝)</p>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = [[<span class="number">1</span>]];</span><br><span class="line"><span class="keyword">let</span> num2 = [<span class="number">2</span>, [<span class="number">3</span>]];</span><br><span class="line">      </span><br><span class="line"><span class="keyword">var</span> nums = num1.concat(num2);</span><br><span class="line"><span class="built_in">console</span>.log(nums);              <span class="comment">// [[1], 2, [3]]</span></span><br><span class="line"></span><br><span class="line">num1[<span class="number">0</span>].push(<span class="number">4</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);              <span class="comment">// [[1, 4], 2, [3]]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="slice">slice()</h3><p><code>slice</code> 擷取原始陣列之 <code>begin</code> 至 <code>end</code> (不含end) 部分的淺拷貝，回傳一個新陣列物件。<br>包含兩個參數：</p><ul><li><code>begin</code> (選填，預設為0)，<br>從哪一個索引值開始提取拷貝 (起始為0)，<br>可使用負數，表示由陣列末端索引開始提取。</li><li><code>end</code> (選填，預設為陣列長度)，<br>至哪一個索引值之前停止提取，不含end (起始為0)，<br>可使用負數，表示到陣列末端索引結束提取，<br>若大於陣列長度，會提取至陣列最後一個元素。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> animals = [<span class="string">&#x27;ant&#x27;</span>, <span class="string">&#x27;bison&#x27;</span>, <span class="string">&#x27;camel&#x27;</span>, <span class="string">&#x27;duck&#x27;</span>, <span class="string">&#x27;elephant&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice());       <span class="comment">// [&#x27;ant&#x27;, &#x27;bison&#x27;, &#x27;camel&#x27;, &#x27;duck&#x27;, &#x27;elephant&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(<span class="number">2</span>));      <span class="comment">// [&#x27;camel&#x27;, &#x27;duck&#x27;, &#x27;elephant&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(<span class="number">2</span>, <span class="number">4</span>));   <span class="comment">// [&#x27;camel&#x27;, &#x27;duck&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(-<span class="number">2</span>));     <span class="comment">// [&#x27;duck&#x27;, &#x27;elephant&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(<span class="number">2</span>, -<span class="number">1</span>));  <span class="comment">// [&#x27;camel&#x27;, &#x27;duck&#x27;]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="map">map()</h3><p><code>map</code> 將原陣列的每一個元素經由回呼函式運算後，回傳一個新陣列物件。<br><code>map</code> 會處理每一個元素，就算不 <code>return</code>，也會出現 <code>undefined</code>，此時可先透過 <code>filter</code> 篩選過後，再使用 <code>map</code>。<br>若不需要回傳新陣列，可改用 <code>forEach</code>。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> maps = nums.map(<span class="function"><span class="params">x</span> =&gt;</span> x + <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(maps);          <span class="comment">// [11, 12, 13, 14]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="reduce">reduce()</h3><p><code>reduce</code> 將陣列中每個元素進行運算，每次函式的回傳值會當作下一次函式的傳入值，最後回傳最終結果。<br>空值會略過。<br>若初始計算的數值未提供，會跳過第一個陣列索引，從索引1開始執行回呼函式。<br>若有提供初始計算的數值，則會由陣列索引0開始執行。<br>不只可加總數字，也可做字串串接。<br>參數：</p><ul><li>含有一個 callback 函式參數 (必填) 和初始計算的數值 (選填，預設為陣列的第一個值)。</li><li>函式中有兩個必填參數及兩個選填參數：<ul><li>累加器，用來累積函式每一次執行的回傳值 (必填)</li><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">previousVal, current</span>) =&gt;</span> previousVal + current;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(nums.reduce(reducer));           <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(nums.reduce(reducer, <span class="number">5</span>));        <span class="comment">// 15，初始計算值：5</span></span><br></pre></td></tr></table></figure><p>HTML字串加總範例</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> lists = [<span class="string">&#x27;第一項&#x27;</span>, <span class="string">&#x27;第二項&#x27;</span>, <span class="string">&#x27;第三項&#x27;</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">previousVal, current</span>) =&gt;</span> <span class="string">`<span class="subst">$&#123;previousVal&#125;</span>&lt;li&gt;<span class="subst">$&#123;current&#125;</span>&lt;/li&gt;`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ulTag = <span class="built_in">document</span>.createElement(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">ulTag.append(lists.reduce(reducer, <span class="string">&#x27;&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ulTag);</span><br><span class="line"><span class="comment">// &lt;ul&gt;&lt;li&gt;第一項&lt;/li&gt;&lt;li&gt;第二項&lt;/li&gt;&lt;li&gt;第三項&lt;/li&gt;&lt;/ul&gt;</span></span><br></pre></td></tr></table></figure></li><li><h3 id="reduceRight">reduceRight()</h3><p><code>reduceRight</code> 與 <code>reduce</code> 大同小異，只是其計算方式是由右到左，<br>對於加法來說沒什麼影響，旦對於減法而言就有差異。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">accumulator, current</span>) =&gt;</span> accumulator - current;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(nums.reduce(reducer));           <span class="comment">// -2</span></span><br></pre></td></tr></table></figure></li><li><h3 id="flat">flat()</h3><p><code>flat</code> 可以將一個多維陣列的深度轉成一維 (扁平化)，<br>如果深度有很多層，可使用 <code>Infinity</code> 來全部展開成一維陣列。<br>參數：</p><ul><li><code>depth</code>，指定要轉換的結構深度 (選填，預設為1)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]];</span><br><span class="line"><span class="built_in">console</span>.log(arr1.flat());                 <span class="comment">// [0, 1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, [[[<span class="number">3</span>, <span class="number">4</span>]]]];</span><br><span class="line"><span class="built_in">console</span>.log(arr2.flat(<span class="number">2</span>));                <span class="comment">// [0, 1, 2, [3, 4]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 Infinity，可展開任意深度的陣列</span></span><br><span class="line"><span class="keyword">var</span> arr3 = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, [<span class="number">5</span>, <span class="number">6</span>, [<span class="number">7</span>, <span class="number">8</span>, [<span class="number">9</span>, <span class="number">10</span>]]]]];</span><br><span class="line">arr3.flat(<span class="literal">Infinity</span>);                      <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// flat() 會移除陣列中的空值</span></span><br><span class="line"><span class="keyword">var</span> arr4 = [<span class="number">1</span>, <span class="number">2</span>, , <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">arr4.flat();                              <span class="comment">// [1, 2, 4, 5]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="flatMap">flatMap()</h3><p><code>flatMap</code> 等於 <code>map()</code> 和 <code>flat()</code> 的組合，在運算後直接將陣列扁平化處理。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">arr1.flatMap(<span class="function"><span class="params">x</span> =&gt;</span> [x * <span class="number">2</span>]);        <span class="comment">// [2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line">arr1.flatMap(<span class="function"><span class="params">x</span> =&gt;</span> [[x * <span class="number">2</span>]]);      <span class="comment">// [[2], [4], [6], [8]]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="Array-from">Array.from()</h3><p><code>Array.from()</code> 會將 『類陣列物件』、『可迭代的物件』轉換成陣列。<br>類陣列物件：擁有一個length屬性和若干索引屬性的任務對象。<br>可迭代物件：可以獲取對象中的元素，如 <code>Map</code> 和 <code>Set</code> 等。<br>參數：</p><ul><li><code>arrayLike</code> 想要轉換成數組的類陣列或可迭代對象 (必填)。</li><li><code>mapFn</code> 新陣列中的每個元素會執行該回呼函式 (選填)。</li><li><code>this</code> 執行回呼函式mapFn時 this 對象 (選填)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(<span class="string">&#x27;foo&#x27;</span>));                     <span class="comment">// [&#x27;f&#x27;, &#x27;o&#x27;, &#x27;o&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="function"><span class="params">x</span> =&gt;</span> x + x));     <span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="Array-of">Array.of()</h3><p><code>Array.of()</code> 可以快速將數字、字串等內容，轉換成陣列。<br>Array.of() 與 Array 建構式之間的不同在於如何處理整數引數：<br>Array.of(7) 會建立一個擁有單個元素—7—的陣列，<br>而 Array(7) 會建立一個 length 屬性值為 7 的空陣列（註：這意味著這個陣列有 7 個空缺欄位（empty slots），而非 7 個值為 undefined 的欄位）。<br>參數：</p><ul><li><code>elementN</code> 要用來成為新建立之陣列的元素。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.of(<span class="number">7</span>);          <span class="comment">// [7]</span></span><br><span class="line"><span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);    <span class="comment">// [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span>(<span class="number">7</span>);             <span class="comment">// [ , , , , , , ]</span></span><br><span class="line"><span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);       <span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="回傳迭代器-Iteration">回傳迭代器 (Iteration)</h2><ul><li><h3 id="什麼是迭代？">什麼是迭代？</h3><p>迭代指的是對物件重複同樣的處理方式，每重複一次就稱為一次迭代。<br>JavaScript 中迭代大部分指的是迴圈，但陣列中也有類似迴圈功能的方法，<br>這些方法會產生「迭代器」來達成類似迴圈的效果。<br>#<code>產生器物件(Generator object)</code>、<br>#<code>委派(yield *)</code>、<br>#<code>建立產生器(function *)</code></p><blockquote><p><a href="https://cythilya.github.io/2020/01/29/generator/">Summer。桑莫。夏天 - 產生器(Generator)</a></p></blockquote></li><li><h3 id="回傳迭代器物件的陣列方法">回傳迭代器物件的陣列方法</h3><p>有些方法回傳的不是新陣列或是特定的值，而是一個陣列迭代器物件，<br>要操作或是讀取該物件的值就需要使用 <code>for...of</code> 語法。<br><code>for...of</code> 除了用在陣列以外，也可用在 <code>字串</code>、<code>map</code>、<code>set</code> 等等…</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> 元素 <span class="keyword">of</span> 迭代器)&#123;</span><br><span class="line">  執行動作...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>迭代器用法</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> iterator = a.values();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// w</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// y</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// k</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// o</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// p</span></span><br></pre></td></tr></table></figure></li><li><h3 id="entries">entries()</h3><p><code>entries</code> 會回傳一個新陣列迭代器物件，包含陣列中每一索引值與元素的配對。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fruits = [<span class="string">&#x27;蘋果&#x27;</span>, <span class="string">&#x27;香蕉&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;木瓜&#x27;</span>, <span class="string">&#x27;番茄&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> iterator = fruits.entries();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> iterator)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  [0, &quot;蘋果&quot;]</span></span><br><span class="line"><span class="comment">  [1, &quot;香蕉&quot;]</span></span><br><span class="line"><span class="comment">  [2, &quot;芭樂&quot;]</span></span><br><span class="line"><span class="comment">  [3, &quot;木瓜&quot;]</span></span><br><span class="line"><span class="comment">  [4, &quot;番茄&quot;]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><h3 id="keys">keys()</h3><p><code>keys</code> 回傳陣列中的每一個索引值(key)成為新的 Array Iterator 物件 (迭代器物件)。<br>需要使用 <code>for...of</code> 來讀取迭代器的值。<br>或使用 <code>Array.from()</code>、<code>解構賦值(展開)</code> 轉換成陣列。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> getKeys = arr.keys();</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">of</span> getKeys) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    0</span></span><br><span class="line"><span class="comment">    1</span></span><br><span class="line"><span class="comment">    2</span></span><br><span class="line"><span class="comment">    3</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fromKeys = <span class="built_in">Array</span>.from(getKeys);</span><br><span class="line"><span class="keyword">let</span> denseKeys = [...getKeys];</span><br><span class="line"><span class="built_in">console</span>.log(fromKeys);           <span class="comment">// [0, 1, 2, 3]</span></span><br><span class="line"><span class="built_in">console</span>.log(denseKeys);          <span class="comment">// [0, 1, 2, 3]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="values">values()</h3><p><code>values</code> 回傳陣列中的每一個元素的值成為新的 Array Iterator 物件 (迭代器物件)。<br>需要使用 <code>for...of</code> 來讀取迭代器的值。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> getVals = arr.values();</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> getVals) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  a</span></span><br><span class="line"><span class="comment">  b</span></span><br><span class="line"><span class="comment">  c</span></span><br><span class="line"><span class="comment">  d</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="回傳字串">回傳字串</h2><ul><li><h3 id="join">join()</h3><p><code>join</code> 可以將陣列中所有元素，藉由指定的字符合併在一起變成字串呈現，若沒有指定字符預設會用「逗號」合併。<br>任何 undefined 或 null 的元素都會被視為空字串處理。<br>參數：</p><ul><li>含有一個串接符號參數 (選填，預設 <code>,</code>)</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> elements = [<span class="string">&#x27;Fire&#x27;</span>, <span class="string">&#x27;Air&#x27;</span>, <span class="string">&#x27;Water&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(elements.join());           <span class="comment">// Fire,Air,Water</span></span><br><span class="line"><span class="built_in">console</span>.log(elements.join(<span class="string">&#x27;&#x27;</span>));         <span class="comment">// FireAirWater</span></span><br><span class="line"><span class="built_in">console</span>.log(elements.join(<span class="string">&#x27;--&#x27;</span>));       <span class="comment">// Fire--Air--Water</span></span><br></pre></td></tr></table></figure></li><li><h3 id="toString">toString()</h3><p><code>toString()</code> 將陣列以字串方式回傳。<br>Array 覆寫了 Object 中的 toString 方法。<br>陣列的 <code>toString</code> 方法會將陣列中的每個元素用逗號串接起來成為一個字串，並回傳該字串。<br>在會以文字型態表示的地方使用了陣列，或是在字串的串接中使用到了陣列，JavaScript 會自動為該陣列使用toString 方法。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;1a&#x27;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(array1.toString());         <span class="comment">// &#x27;1,2,a,1a&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="判斷並回傳布林值">判斷並回傳布林值</h2><ul><li><h3 id="every">every()</h3><p><code>every</code> 會測試陣列中的所有元素，是否都通過了由給定之函式所實作的測試，並回傳布林值。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">30</span>, <span class="number">39</span>, <span class="number">29</span>, <span class="number">10</span>, <span class="number">13</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(array1.every(<span class="function"><span class="params">e</span> =&gt;</span> e &lt; <span class="number">40</span>));       <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(array1.every(<span class="function"><span class="params">e</span> =&gt;</span> e &gt; <span class="number">30</span>));       <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><h3 id="some">some()</h3><p><code>some</code> 會測試陣列中的至少有一個元素，通過由給定之函式所實作的測試，並回傳布林值。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(array1.some(<span class="function"><span class="params">e</span> =&gt;</span> e % <span class="number">2</span> === <span class="number">0</span>));       <span class="comment">// true (至少有一個元素是偶數)</span></span><br></pre></td></tr></table></figure></li><li><h3 id="includes">includes()</h3><p><code>includes</code> 會判斷陣列中是否包含某個元素，並以此回傳 true 或 false。<br>參數：</p><ul><li><code>searchElement</code> 要搜索的元素 (必填)。</li><li><code>fromIndex</code> 搜尋起點的索引值，<br>若為負數值，則搜尋起點將會是陣列長度 + 此參數的值。<br>若fromIndex大於或等於陣列長度，會回傳 false (選填，預設0)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">2</span>);      <span class="comment">// true</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">4</span>);      <span class="comment">// false</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">3</span>, <span class="number">3</span>);   <span class="comment">// false</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">3</span>, -<span class="number">1</span>);  <span class="comment">// true</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NaN</span>].includes(<span class="literal">NaN</span>);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h3 id="Array-isArray">Array.isArray()</h3><p><code>Array.isArray()</code> 能判斷一個物件是否為陣列，並回傳 true 或 false。<br>參數：</p><ul><li><code>obj</code> 要檢查的物件 (必填)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下方都回傳 true</span></span><br><span class="line"><span class="built_in">Array</span>.isArray([]);</span><br><span class="line"><span class="built_in">Array</span>.isArray([<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>());</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>));</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>));</span><br><span class="line"><span class="comment">// 小細節：Array.prototype 本身是陣列：</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="built_in">Array</span>.prototype);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下方都回傳 false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray();</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123;&#125;);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">null</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">undefined</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="number">17</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="string">&#x27;Array&#x27;</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123; <span class="attr">__proto__</span>: <span class="built_in">Array</span>.prototype &#125;);</span><br></pre></td></tr></table></figure><p><code>instanceof</code> vs <code>isArray</code><br>當檢查Array實例時，<code>Array.isArray</code> 相較於 <code>instanceof</code> 更加推薦，因為它可以穿透 <code>iframes</code> 。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line">xArray = <span class="built_in">window</span>.frames[<span class="built_in">window</span>.frames.length-<span class="number">1</span>].Array;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> xArray(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// [1,2,3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確地檢查陣列型態</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(arr);  <span class="comment">// true</span></span><br><span class="line"><span class="comment">// 它不能在 iframes 之間正常運作</span></span><br><span class="line">arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>; <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_Markdown</title>
      <link href="/2021/11/07/%E7%AD%86%E8%A8%98-Markdown/"/>
      <url>/2021/11/07/%E7%AD%86%E8%A8%98-Markdown/</url>
      
        <content type="html"><![CDATA[<p>Markdown 是一種輕量級標記語言，允許使用易讀寫的純文本格式編寫文檔。<br>Markdown 編寫的文檔可以導出 <code>HTML</code>、<code>Word</code>、<code>圖像</code>、<code>PDF</code>、<code>Epub</code> 等多種格式的文檔。<br>Markdown 編寫的文檔後綴為 <code>.md</code> 、 <code>.markdown</code> 。</p><a id="more"></a><h2 id="表格-v2">表格</h2><p>製作表格使用 <code>|</code> 來分隔不同的單元格，使用 <code>-</code> 來分隔表頭和其他行。</p><ul><li><h3 id="範例">範例</h3><ul><li><h4 id="語法格式如下：">語法格式如下：</h4></li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|  表頭  |  表頭 |</span><br><span class="line">|  ---- |  ---  |</span><br><span class="line">| 單元格 | 單元格 |</span><br><span class="line">| 單元格 | 單元格 |</span><br></pre></td></tr></table></figure><ul><li><h4 id="顯示結果如下：">顯示結果如下：</h4></li></ul><table><thead><tr><th>表頭</th><th>表頭</th></tr></thead><tbody><tr><td>單元格</td><td>單元格</td></tr><tr><td>單元格</td><td>單元格</td></tr></tbody></table></li><li><h3 id="對齊方式">對齊方式</h3><p>可以設置表格的對齊方式：</p><ul><li><code>-:</code> 設置內容和標題，置右對齊。</li><li><code>:-</code> 設置內容和標題，置左對齊。</li><li><code>:-:</code> 設置內容和標題，置中對齊。</li><li><h4 id="語法格式如下：-v2">語法格式如下：</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 置左對齊 | 置中對齊 | 置右對齊 ｜</span><br><span class="line">|  :----  |  :---:  |  ----:  |</span><br><span class="line">|  單元格  |  單元格  |  單元格  |</span><br><span class="line">|  單元格  |  單元格  |  單元格  |</span><br></pre></td></tr></table></figure></li><li><h4 id="顯示結果如下：-v2">顯示結果如下：</h4></li></ul><table><thead><tr><th style="text-align:left">置左對齊</th><th style="text-align:center">置中對齊</th><th style="text-align:right">置右對齊</th></tr></thead><tbody><tr><td style="text-align:left">單元格</td><td style="text-align:center">單元格</td><td style="text-align:right">單元格</td></tr><tr><td style="text-align:left">單元格</td><td style="text-align:center">單元格</td><td style="text-align:right">單元格</td></tr></tbody></table></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_NPM</title>
      <link href="/2021/11/07/%E7%AD%86%E8%A8%98-NPM/"/>
      <url>/2021/11/07/%E7%AD%86%E8%A8%98-NPM/</url>
      
        <content type="html"><![CDATA[<p><code>npm</code> 是用 <code>Node.js</code> 編寫的，所以需要安裝 <code>Node.js</code> 才能使用。<br><small>本篇程式碼皆使用iOS版本語法示範</small></p><a id="more"></a><h2 id="安裝">安裝</h2><p>使用NVM安裝Nodejs，可參考：<a href="/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Windows/">Window篇</a>、<a href="/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Mac/">Mac篇</a>。</p><h2 id="檢查npm是否安裝完成">檢查npm是否安裝完成</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm -v      <span class="comment"># npm --version</span></span></span><br><span class="line">2.3.0</span><br></pre></td></tr></table></figure><h2 id="若要安裝最新版本">若要安裝最新版本</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm i npm@latest -g</span></span><br></pre></td></tr></table></figure><p><small>『 npm i 』為 npm install 的縮寫，『@latest』表示最新版本，『-g』表示全局安裝。</small></p><h2 id="新建package-json，npm-初始化">新建package.json，npm 初始化</h2><ul><li>請先建立新專案並切換至專案根目錄。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir demo-project</span><br><span class="line">cd demo-project</span><br></pre></td></tr></table></figure></li><li>npm 初始化<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><ul><li><p>初始化後，進行相關設定</p><table><thead><tr><th>關鍵字</th><th>說明</th></tr></thead><tbody><tr><td><code>name</code></td><td>專案名稱 (預設為目錄名)</td></tr><tr><td><code>version</code></td><td>專案版本</td></tr><tr><td><code>description</code></td><td>專案描述</td></tr><tr><td><code>entry point</code></td><td>專案切入點</td></tr><tr><td><code>test command</code></td><td>專案測試指令</td></tr><tr><td><code>git repository</code></td><td>專案原始碼的版本控管位置</td></tr><tr><td><code>keywords</code></td><td>專案關鍵字</td></tr><tr><td><code>auther</code></td><td>專案作者 (以 auther-name &lt;auther @email.com&gt; 寫之)</td></tr><tr><td><code>license</code></td><td>專案版權</td></tr></tbody></table></li><li><p>可略過設定，生成 package.json 後，再進行修改</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm init --yes  或  npm init -y</span><br></pre></td></tr></table></figure><p><code>npm init</code> 用來初始化生成一個新的 <code>package.json</code> 文件。<br><code>-f</code> (代表force)、<code>-y</code> (代表yes)，則跳過提問階段，直接生成一個新的<code>package.json</code>。</p></li><li><p>設定 init 預設值<br>為 <code>npm init</code> 設置默認值，這些訊息會存放在用戶主目錄的 <code>~/.npmrc</code> 文件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm set init-author-name &#x27;Your name&#x27;</span><br><span class="line">npm set init-author-email &#x27;Your email&#x27;</span><br><span class="line">npm set init-author-url &#x27;https://arx827.github.io/&#x27;</span><br><span class="line">npm set init-license &#x27;MIT&#x27;</span><br></pre></td></tr></table></figure></li><li><p>加入模塊時，紀錄確切版本，而不是一個可選的版本範圍</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm set save-exact true</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="安裝套件">安裝套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i &lt;packageName&gt;</span><br></pre></td></tr></table></figure><h2 id="查看安裝資訊">查看安裝資訊</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm list -g</span><br></pre></td></tr></table></figure><ul><li>如果要查看某個套件的版本號，可使用命令如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm list grunt</span><br></pre></td></tr></table></figure></li><li>結果如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">projectName@projectVersion /path/to/project/folder</span><br><span class="line">└── grunt@0.4.1</span><br></pre></td></tr></table></figure></li></ul><h2 id="Package-json-屬性說明">Package.json 屬性說明</h2><table><thead><tr><th>屬性</th><th>說明</th></tr></thead><tbody><tr><td><code>name</code></td><td>套件名稱</td></tr><tr><td><code>version</code></td><td>套件版本號</td></tr><tr><td><code>description</code></td><td>套件描述</td></tr><tr><td><code>homepage</code></td><td>套件的官網url</td></tr><tr><td><code>author</code></td><td>套件的作者姓名</td></tr><tr><td><code>contributors</code></td><td>套件的其他貢獻者姓名</td></tr><tr><td><code>dependencies</code></td><td>依賴套件列表。如果依賴套件沒有安裝，npm會自動將依賴套件安裝在node_module目錄下</td></tr><tr><td><code>repository</code></td><td>套件代碼存放地方的類型，可以是git或svn，git可在Github上</td></tr><tr><td><code>main</code></td><td>main字段指定了程序的主入口文件，require(‘moduleName’)就會加載這個文件。這個字段的默認值是套件跟目錄下面的index.js</td></tr><tr><td><code>keywords</code></td><td>關鍵字</td></tr></tbody></table><h2 id="卸載套件">卸載套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall &lt;packageName&gt;</span><br></pre></td></tr></table></figure><h2 id="更新套件">更新套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update &lt;packageName&gt;</span><br></pre></td></tr></table></figure><h2 id="搜索套件">搜索套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm search &lt;packageName&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> NPM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_NPM</title>
      <link href="/2021/11/07/%E9%80%9F%E6%9F%A5%E8%A1%A8-NPM/"/>
      <url>/2021/11/07/%E9%80%9F%E6%9F%A5%E8%A1%A8-NPM/</url>
      
        <content type="html"><![CDATA[<p>NPM 常用指令 速查表</p><h2 id="簡寫">簡寫</h2><table><thead><tr><th>簡寫語法</th><th>說明</th></tr></thead><tbody><tr><td><code>npm -v</code></td><td><code>npm --version</code>。</td></tr><tr><td><code>-g</code></td><td><code>--global</code>，縮寫為 <code>-g</code>，<br>表示安裝包時，視作 <code>全域</code> 的包。安裝之後的包將位於系統預設的目錄之下。</td></tr><tr><td><code>-S</code></td><td><code>--save</code>，縮寫為 <code>-S</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>dependencies</code>。</td></tr><tr><td><code>-D</code></td><td><code>--save-dev</code>，縮寫為 <code>-D</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>devDependencies</code>。</td></tr><tr><td><code>-O</code></td><td><code>--save-optional</code>，縮寫為 <code>-O</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>optionalDependencies</code>。</td></tr><tr><td><code>-E</code></td><td><code>--save-exact</code>，縮寫為 <code>-E</code>，<br>表示安裝的包的版本是精確指定的。</td></tr><tr><td><code>-B</code></td><td><code>--save-bundle</code>，縮寫為 <code>-B</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>bundleDependencies</code>。</td></tr><tr><td><code>-f</code></td><td><code>--force</code>，縮寫為 <code>-f</code>，<br>表示不管是否安裝過，都要強制重新安裝。</td></tr></tbody></table><a id="more"></a><ul><li><h2 id="npm-init">npm init</h2><p><small>初始化生成package.json</small></p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm init</code></td><td></td><td>初始化生成一個新的<code>package.json</code></td></tr><tr><td><code>npm init --yes</code></td><td><code>npm init -y</code></td><td>跳過提問階段，直接初始化生成一個新的<code>package.json</code></td></tr></tbody></table></li><li><h2 id="npm-set">npm set</h2><p><small>初始化時，預設的設置，這些信息會存放在用戶主目錄的 ~/.npmrc 文件</small></p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm set init-author-name 'Your name'</code></td><td>預設作者名稱</td></tr><tr><td><code>npm set init-author-email 'Your email'</code></td><td>預設信箱</td></tr><tr><td><code>npm set init-author-url 'https://arx827.github.io/'</code></td><td>預設主頁</td></tr><tr><td><code>npm set init-lincense 'MIT'</code></td><td>預設許可證字段</td></tr></tbody></table><p><small>設置 package.json 儲存確切版本號</small></p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm set save-exact true</code></td><td><code>package.json</code>將紀錄套件的確切版本，<br>而不是一個可選版本的範圍</td></tr></tbody></table></li><li><h2 id="npm-config">npm config</h2><p><small>設置 .npmrc 相關設定</small><br>npmrc 有 四個相關文件</p><table><thead><tr><th>路徑</th><th>說明</th></tr></thead><tbody><tr><td><code>/path/to/my/project/.npmrc</code></td><td>每個項目的配置文件</td></tr><tr><td><code>$HOME/.npmrc</code></td><td>每個用戶的配置文件，<br>可通過 CLI 選項–userconfig或環境變量配置<br>$NPM_CONFIG_USERCONFIG</td></tr><tr><td><code>$PREFIX/etc/npmrc</code></td><td>全域配置文件，<br>可通過 CLI 選項–globalconfig或環境變量配置<br>$NPM_CONFIG_GLOBALCONFIG</td></tr><tr><td><code>/path/to/npm/npmrc</code></td><td>npm 的內置配置文件</td></tr></tbody></table><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm config set &lt;key&gt; &lt;value&gt; [-g|--global]</code></td><td>將 <code>&lt;key&gt;</code> 設置為 <code>&lt;value&gt;</code>，<br>省略 <code>&lt;value&gt;</code> 時，則將其設置為 <code>true</code>。</td></tr><tr><td><code>npm config get &lt;key&gt;</code></td><td>顯示配置值</td></tr><tr><td><code>npm config delete &lt;key&gt;</code></td><td>刪除配置項</td></tr><tr><td><code>npm config list [-l] [--json]</code></td><td>顯示所有配置項</td></tr><tr><td><code>npm config edit</code></td><td>在編輯器中打開配置文件</td></tr><tr><td><code>npm set &lt;key&gt; &lt;value&gt; [-g|--global]</code></td><td>將 <code>&lt;key&gt;</code> 設置為 <code>&lt;value&gt;</code></td></tr><tr><td><code>npm get &lt;key&gt;</code></td><td>顯示配置值</td></tr><tr><td><code>npm config list -l</code></td><td>查看 npm 的配置。</td></tr></tbody></table></li><li><h2 id="npm-info">npm info</h2><p><small>可查看每個套件的具體資訊</small></p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm info &lt;packageName&gt;</code></td><td>查看套件資訊</td></tr><tr><td><code>npm info &lt;packageName&gt; &lt;key&gt;</code></td><td>查看套件單一項資訊</td></tr></tbody></table><p>下面命令的效果一樣</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm info react</span><br><span class="line">$ npm view react</span><br><span class="line">$ npm view &lt;別名&gt;</span><br><span class="line">$ npm show react</span><br><span class="line">$ npm v react</span><br></pre></td></tr></table></figure></li><li><h2 id="npm-search">npm search</h2><p><code>npm search</code> 命令用於搜索npm倉庫，它後面可以跟字符串，也可以跟正規表達式。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm search &lt;關鍵字&gt;</span><br></pre></td></tr></table></figure><p>下面是一個例子</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm search node-gyp</span><br><span class="line">// NAME                  DESCRIPTION</span><br><span class="line">// autogypi              Autogypi handles dependencies <span class="keyword">for</span> node-gyp projects.</span><br><span class="line">// grunt-node-gyp        Run node-gyp commands from Grunt.</span><br><span class="line">// gyp-io                Temporary solution to <span class="built_in">let</span> node-gyp run `rebuild` under…</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure></li><li><h2 id="npm-list">npm list</h2><p><code>npm list</code> 命令以樹形結構列出當前項目安裝的所有套件，以及它們依賴的套件。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm list</code></td><td><code>npm ls</code></td><td>列出當前項目安裝的所有套件</td></tr><tr><td><code>npm list -global</code></td><td><code>npm ls -g</code></td><td>列出全域安裝的所有套件</td></tr><tr><td><code>npm list &lt;packageName&gt;</code></td><td><code>npm ls &lt;packageName&gt;</code></td><td>列出單個套件依賴關係</td></tr></tbody></table></li><li><h2 id="npm-install">npm install</h2><ul><li><h3 id="基本用法">基本用法</h3><p>安裝之前，<code>npm install</code> 會先檢查，<code>node_modules</code> 目錄之中是否已經存在指定套件。如果存在，就不再重新安裝。即使遠程倉庫已經有一個新版本，也是如此。<br>每個套件可以『全域安裝』、『本地安裝』。</p><ul><li>『全域安裝』適用於工具模塊，e.g.: <code>eslint</code> 和 <code>gulp</code>。</li><li>『本地安裝』指將一個套件下載到當前項目的 <code>node_modules</code>子目錄，只有在項目目錄中，才能調用這個套件。</li></ul><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt;</code></td><td><code>npm i &lt;packageName&gt;</code></td><td>本地安裝 <code>&lt;packageName&gt;</code> 套件</td></tr><tr><td><code>npm install -global &lt;packageName&gt;</code></td><td><code>npm i -g &lt;packageName&gt;</code></td><td>全域安裝<code>&lt;packageName&gt;</code>套件</td></tr><tr><td><code>npm install &lt;packageName&gt; --force</code></td><td><code>npm i &lt;packageName&gt; -f</code></td><td>強制重新安裝<code>&lt;packageName&gt;</code>套件</td></tr></tbody></table></li><li><h3 id="安裝不同版本">安裝不同版本</h3><p>install命令總是安裝套件的最新版本，如果要安裝套件的特定版本，可以在套件名後面加上@和版本號。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt;@latest</code></td><td><code>npm i &lt;packageName&gt;@latest</code></td><td></td></tr><tr><td><code>npm install &lt;packageName&gt;@0.1.1</code></td><td><code>npm i &lt;packageName&gt;@0.1.1</code></td><td></td></tr><tr><td><code>npm install &lt;packageName&gt;@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</code></td><td><code>npm i &lt;packageName&gt;@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</code></td><td></td></tr></tbody></table><p>如果使用 <code>--save-exact</code> 參數，會在package.json文件指定安裝套件的確切版本</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm install readable-stream --save --save-exact</span><br></pre></td></tr></table></figure><p>install命令可以使用不同參數，指定所安裝的套件屬於哪一種性質的依賴關係，即出現在package.json文件的哪一項中</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt; --save</code></td><td><code>npm i &lt;packageName&gt; -S</code></td><td>套件將被添加到 dependencies</td></tr><tr><td><code>npm install &lt;packageName&gt; --save-dev</code></td><td><code>npm i &lt;packageName&gt; -D</code></td><td>套件將被添加到 devDependencies</td></tr></tbody></table><p>如果要安裝beta版本的套件，需要使用下面的命令</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt;@beat (latest beta)</code></td><td><code>npm i &lt;packageName&gt;@beat (latest beta)</code></td><td>安裝最新的beta版</td></tr><tr><td><code>npm install &lt;packageName&gt;@1.3.1-beat.3</code></td><td><code>npm i &lt;packageName&gt;@1.3.1-beat.3</code></td><td>安裝指定的beta版</td></tr></tbody></table><p><code>npm install</code> 默認會安裝 <code>dependencies</code> 字段和 <code>devDependencies</code> 字段中的所有套件，<br>如果使用 <code>-production</code> 參數，可以只安裝 <code>dependencies</code> 字段的套件。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm install --production</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ NODE_ENV=production npm install</span><br></pre></td></tr></table></figure><p>一旦安裝了某個套件，就可以在代碼中用 <code>require</code> 命令加載這個套件。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> backbone = <span class="built_in">require</span>(<span class="string">&#x27;backbone&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(backbone.VERSION)</span><br></pre></td></tr></table></figure></li><li><h3 id="避免系統權限">避免系統權限</h3><p>默認情況下，NPM全域套件都安裝在系統目錄 (如：<code>/usr/local/lib/</code>)，普通用戶沒有寫入權限，需要用到 <code>sudo</code> 命令。<br>這不是很方便，可以在沒有root權限的情況下，安裝全域套件。<br>首先，在主目錄下新建配置文件 <code>.npmrc</code>，然後在該文件中將 <code>prefix</code> 變數定義到主目錄下面。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">prefix = /home/yourUsername/npm</span><br></pre></td></tr></table></figure><p>然後在主目錄下新建 <code>npm</code> 子目錄。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/npm</span><br></pre></td></tr></table></figure><p>此後，全域安裝的套件都會安裝在這個子目錄中，npm也會到 <code>~/npm/bin</code> 目錄去尋找命令。<br>最後，將這個路徑在 <code>.bash_profile</code> 文件 (或 <code>.bashrc</code> 文件) 中加入 PASH 變數。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=~/npm/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="npm-update">npm update</h2><p><small>更新已安裝套件</small><br>會先到遠程倉庫查詢最新版本，然後查詢本地版本。<br>如果本地版本不存在，或者遠程版本較新，就會安裝。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm update &lt;packageName&gt;</code></td><td></td><td>更新 <code>&lt;packageName&gt;</code> 套件</td></tr></tbody></table><p>注意，從npm v2.6.1 開始， <code>npm update</code> 只更新頂層套件，而不更新依賴的依賴，以前版本是遞迴更新的。<br>如果想取到舊版本的效果，要使用下面的命令。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm --depth 9999 update</span><br></pre></td></tr></table></figure></li><li><h2 id="npm-uninstall">npm uninstall</h2><p><small>卸載已安裝套件</small></p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm uninstall &lt;packageName&gt;</code></td><td><code>npm un &lt;packageName&gt;</code></td><td>卸載 <code>&lt;packageName&gt;</code> 套件</td></tr><tr><td><code>npm uninstall &lt;packageName&gt; -global</code></td><td><code>npm un &lt;packageName&gt; -g</code></td><td>卸載全域 <code>&lt;packageName&gt;</code> 套件</td></tr></tbody></table></li><li><h2 id="npm-run">npm run</h2><p><code>package.json</code> 文件有一個 <code>scripts</code> 字段，可以用於執行腳本命令，供 <code>npm</code> 直接調用。<br><code>npm run</code> 命令會自動在環境變數 <code>$PATH</code> 添加 <code>node_modules/.bin</code> 目錄，所以 <code>scripts</code> 字段裡面調用命令時不用加上路徑。<br><code>npm run</code> 會創建一個 Shell，執行指定的命令，並臨時將 <code>node_modules/.bin</code> 加入PATH變數，意味著本地套件可以直接運行。<br>bash腳本，可直接存成 <code>.sh</code> 檔案，就可以在 <code>scripts</code> 屬性中引用該文件。 e.g.: <code>&quot;build-js&quot;: &quot;bin/build.sh&quot;</code>。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm run-script</code></td><td><code>npm run</code></td><td>列出 <code>package.json</code> 裡所有可執行的腳本命令</td></tr><tr><td><code>npm run-script &lt;scriptName&gt;</code></td><td><code>npm run &lt;scriptName&gt;</code></td><td>執行 <code>scripts</code> 中 <code>&lt;scriptName&gt;</code> 的腳本命令</td></tr></tbody></table><ul><li><h3 id="參數-v2">參數</h3><p><code>npm run</code> 命令還可以添加參數。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;test&quot;</span>: <span class="string">&quot;mocha test/&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代碼指定 <code>npm test</code>，實際運行 <code>mocha test</code>。<br>如果要通過 <code>npm test</code>，將參數傳入mocha，則參數前面要加上兩個連字號『 <code>--</code> 』。<br>下面命令表示，mocha要運行所有 <code>test</code> 子目錄的測試腳本，以及另外一個測試腳本<code>anothertest.js</code>。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm run <span class="built_in">test</span> -- anothertest.js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ mocha <span class="built_in">test</span>/ anothertest.js</span><br></pre></td></tr></table></figure><p>若參數後面不指定任何值將設置為 <code>true</code>。</p><p><code>npm run</code> 本身有一個參數 <code>-s</code>，表示關閉npm本身的輸出，只輸出腳本產生的結果。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 輸出npm命令頭</span></span><br><span class="line">$ npm run <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 不輸出npm命令頭</span></span><br><span class="line">$ npm run -s <span class="built_in">test</span></span><br></pre></td></tr></table></figure></li><li><h3 id="scripts腳本命令最佳實踐">scripts腳本命令最佳實踐</h3><p><code>scripts</code> 字段的腳本命令，有一些最佳實踐，可以方便開發。<br>首先，安裝 <code>npm-run-all</code> 套件。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm i -D npm-run-all</span><br></pre></td></tr></table></figure><p>這個套件用於運行多個 <code>scripts</code> 腳本命令。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#繼發執行</span></span><br><span class="line">$ npm-run-all build:html build:js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ npm run build:html &amp;&amp; npm run build:js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 併發執行</span></span><br><span class="line">$ npm-run-all --parallel watch:html watch:js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ npm run watch:html &amp; npm run watch:js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 混合執行</span></span><br><span class="line">$ npm-run-all clean lint --parallel watch:html watch:js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ npm-run-all clean lint</span><br><span class="line">$ npm-run-all --parallel watch:html watch:js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通配符</span></span><br><span class="line">$ npm-run-all --parallel watch:*</span><br></pre></td></tr></table></figure><ol><li><h4 id="start-腳本命令">start 腳本命令</h4></li></ol><p><code>start</code> 腳本命令，用於啟動應用程序。<br>下面命令併行執行 <code>dev</code> 腳本命令和 <code>serve</code> 腳本命令</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;start&quot;: &quot;npm-run-all --parallel dev serve&quot;</span><br></pre></td></tr></table></figure><p>等同於下面形式。</p>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm run dev &amp; npm run serve</span><br></pre></td></tr></table></figure><p>如果start腳本沒有配置，<code>npm start</code> 命令默認執行 <code>node server.js</code>，<br>前提是套件的根目錄存在一個server.js文件。</p>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ node server.js</span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="dev-腳本命令">dev 腳本命令</h4></li></ol><p><code>dev</code> 腳本命令，規定開發階段所要做的處理。<br>下面的命令用於繼發執行所有 <code>dev</code> 的子命令。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;dev&quot;: &quot;npm-run-all dev:*&quot;</span><br></pre></td></tr></table></figure><p>下面命令將sass文件編譯為css文件，並生成source map文件。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;predev:sass&quot;: &quot;node-sass --source-map src/css/hoodie.css.map --output-style nested src/sass/base.scss src/css/hoodie.css&quot;</span><br></pre></td></tr></table></figure><p>下面命令會監視sass文件的變動，只要有變動，就自動將其編譯為css文件。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;dev:sass&quot;: &quot;node-sass --source-map src/css/hoodie.css.map --watch --output-style nested src/sass/base.scss src/css/hoodie.css&quot;</span><br></pre></td></tr></table></figure><p>下面命令為css文件加上瀏覽器前綴，限制條件是只考慮市場使用率大於5％的瀏覽器。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;dev:autoprefix&quot;: &quot;postcss --use autoprefixer --autoprefixer.browsers \&quot;&gt; 5%\&quot; --output src/css/hoodie.css src/css/hoodie.css&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li><h4 id="serve-腳本命令">serve 腳本命令</h4></li></ol><p><code>serve</code> 腳本命令用於啟動服務。<br>下面命令啟動服務，用的是 <a href="https://www.npmjs.com/package/live-server">live-server</a> 套件，將服務啟動在9090端口，展示 <code>dist</code> 子目錄。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;serve&quot;: &quot;live-server dist/ --port=9090&quot;</span><br></pre></td></tr></table></figure><p><code>live-server</code> 套件有三個功能。</p><blockquote><ul><li>啟動一個HTTP服務器，展示指定目錄的 <code>index.html</code> 文件，通過該文件加載各種網路資源，這是 <code>file://</code> 協議做不到的。</li><li>添加自動刷新功能。只要指定目錄之中，文件有任何變化，它就會刷新頁面。</li><li><code>npm run serve</code> 命令執行以後，自動打開瀏覽器。</li></ul></blockquote><p>以前，上面三個功能需要三個套件來完成： <code>http-server</code>、<code>live-reload</code> 和 <code>opener</code>，現在只要 <code>live-server</code> 一個套件就夠了。</p><ol start="4"><li><h4 id="test-腳本命令">test 腳本命令</h4></li></ol><p><code>test</code> 腳本命令用於執行測試。<br>下面命令規定，執行測試時，運行 <code>lint</code> 腳本，檢查腳本之中的語法錯誤。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;test&quot;: &quot;npm-run-all test:*&quot;,</span><br><span class="line">&quot;test:lint&quot;: &quot;sass-lint --verbose --config .sass-lint.yml src/sass/*&quot;</span><br></pre></td></tr></table></figure><ol start="5"><li><h4 id="prod-腳本命令">prod 腳本命令</h4></li></ol><p><code>prod</code> 腳本命令，規定進入生產環境時需要做的處理。<br>下面命令將sass文件轉為css文件，並加上瀏覽器前綴。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;prod&quot;: &quot;npm-run-all prod:*&quot;,</span><br><span class="line">&quot;prod:sass&quot;: &quot;node-sass --output-style compressed src/sass/base.scss src/css/prod/hoodie.min.css&quot;,</span><br><span class="line">&quot;prod:autoprefix&quot;: &quot;postcss --use autoprefixer --autoprefixer.browsers &quot;&gt; 5%&quot; --output src/css/prod/hoodie.min.css src/css/prod/hoodie.min.css&quot;</span><br></pre></td></tr></table></figure><ol start="6"><li><h4 id="help-腳本命令">help 腳本命令</h4></li></ol><p>下面命令之中，<code>markdown-chalk</code> 套件用於將指定的markdown文件，轉為彩色文本顯示在終端之中。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;help&quot;: &quot;markdown-chalk --input DEVELOPMENT.md&quot;</span><br></pre></td></tr></table></figure><ol start="7"><li><h4 id="docs-腳本命令">docs 腳本命令</h4></li></ol><p><code>docs</code> 腳本命令用於生成文檔。<br>下面命令使用 <code>kss-node</code> 套件，提供源碼的註釋生成markdown格式的文檔。</p>  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;docs&quot;: &quot;kss-node --source src/sass --homepage ../../styleguide.md&quot;</span><br></pre></td></tr></table></figure></li><li><h3 id="pre-和-post-腳本">pre- 和 post- 腳本</h3><p><code>npm run</code> 為每條命令提供了 <code>pre-</code> 和 <code>post-</code> 兩個鉤子(hook)。<br>以 <code>npm run lint</code> 為例，執行這條命令之前，npm會先查看有沒有定義prelint和postlint兩個鉤子，<br>如果有的話，就會先執行 <code>npm run prelint</code>，然後執行 <code>npm run lint</code>，最後執行 <code>npm run postlint</code>。<br>下面代碼是一個 <code>package.json</code> 文件的例子。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;myproject&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span>: <span class="string">&quot;latest&quot;</span></span><br><span class="line">    <span class="string">&quot;karma&quot;</span>: <span class="string">&quot;latest&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;lint&quot;</span>: <span class="string">&quot;eslint --cache --ext .js --ext .jsx src&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;karma start --log-leve=error karma.config.js --single-run=true&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;pretest&quot;</span>: <span class="string">&quot;npm run lint&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;posttest&quot;</span>: <span class="string">&quot;echo &#x27;Finished running tests&#x27;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果執行過程出錯，就不會執行排在後面的腳本，即如果prelint腳本執行錯誤，就不會接著執行lint和postlint腳本。</p><p>如果執行 <code>npm test</code>，會按下面的順序執行相應的命令。</p><ol><li>pretest</li><li>test</li><li>posttest</li></ol><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;karma start&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;test:lint&quot;</span>: <span class="string">&quot;eslint . --ext .js --ext .jsx&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;pretest&quot;</span>: <span class="string">&quot;npm run test:lint&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一些常見的 <code>pre-</code> 和 <code>post-</code> 腳本。</p><table><thead><tr><th>腳本</th><th>說明</th></tr></thead><tbody><tr><td><code>prepublish</code></td><td>發佈一個套件前執行。</td></tr><tr><td><code>postpublish</code></td><td>發佈一個套件後執行。</td></tr><tr><td><code>preinstall</code></td><td>執行 <code>npm install</code> 命令前執行。</td></tr><tr><td><code>postinstall</code></td><td>執行 <code>npm install</code> 命令後執行。</td></tr><tr><td><code>preuninstall</code></td><td>卸載一個套件前執行。</td></tr><tr><td><code>postuninstall</code></td><td>卸載一個套件後執行。</td></tr><tr><td><code>preversion</code></td><td>更改套件版本前執行。</td></tr><tr><td><code>postversion</code></td><td>更改套件版本後執行。</td></tr><tr><td><code>pretest</code></td><td>運行 <code>npm run test</code> 命令前執行。</td></tr><tr><td><code>posttest</code></td><td>運行 <code>npm run test</code> 命令後執行。</td></tr><tr><td><code>prestop</code></td><td>運行 <code>npm run stop</code> 命令前執行。</td></tr><tr><td><code>poststop</code></td><td>運行 <code>npm run stop</code> 命令後執行。</td></tr><tr><td><code>prestart</code></td><td>運行 <code>npm run start</code> 命令前執行。</td></tr><tr><td><code>poststart</code></td><td>運行 <code>npm run start</code> 命令後執行。</td></tr><tr><td><code>prerestart</code></td><td>運行 <code>npm run restart</code> 命令前執行。</td></tr><tr><td><code>postrestart</code></td><td>運行 <code>npm run restart</code> 命令後執行。</td></tr></tbody></table><p>對於 <code>npm run restart</code>命令，如果沒有設置 <code>restart</code> 腳本，<code>prerestart</code> 和 <code>postrestart</code> 會依次執行stop和start腳本。</p><p>也支持Git相關的鉤子。下面以 <a href="https://github.com/typicode/husky">husky</a> 套件為例。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm i husky -D</span><br></pre></td></tr></table></figure><p>安裝以後，就能在 <code>package.json</code> 添加 <code>precommit</code>、<code>prepush</code> 等鉤子。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;lint&quot;</span>: <span class="string">&quot;eslint yourJsFiles.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;precommit&quot;</span>: <span class="string">&quot;npm run test &amp;&amp; npm run lint&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;prepush&quot;</span>: <span class="string">&quot;npm run test &amp;&amp; npm run lint&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;...&quot;</span>: <span class="string">&quot;...&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>類似作用的套件還有 <code>pre-commit</code>、<code>precommit-hook</code> 等。</p></li><li><h3 id="內部變數">內部變數</h3><p>scripts字段可以使用一些內部變數，主要是package.json的各種字段。<br>不區分大小寫，Node會優先選擇小寫版本。<br>在npm-scripts內部，npm將設置自己的環境變數。<br>例如：package.json的內容是 <code>&#123;&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;&#125;</code>，<br>那麼變數 <code>npm_package_name</code> 的值是foo，變數 <code>npm_package_version</code> 的值是1.2.5。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;bundle&quot;</span>: <span class="string">&quot;mkdir -p build/$npm_package_version/&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>運行 <code>npm run bundle</code> 以後，將會生成 <code>build/1.2.5/</code> 子目錄。</p><p><code>config</code> 字段也可以用於設置內部字段。<br>下面代碼中，變數 <code>npm_package_config_reporter</code> 對應的就是reporter。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;fooproject&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;config&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;reporter&quot;</span>: <span class="string">&quot;xunit&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;mocha test/ --reporter $npm_package_config_reporter&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="通配符">通配符</h3><p>npm的通配符的規則如下：</p><table><thead><tr><th>通配符</th><th>說明</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配0個或多個字符。</td></tr><tr><td><code>?</code></td><td>匹配1個字符。</td></tr><tr><td><code>[...]</code></td><td>匹配某個範圍的字符。如果該範圍的第一個字符是 <code>!</code> 或 <code>^</code>，則匹配不在該範圍的字符。</td></tr><tr><td><code>!(pattern|pattern|pattern)</code></td><td>匹配任何不符合給定的模式。</td></tr><tr><td><code>?(pattern|pattern|pattern)</code></td><td>匹配0個或1個給定的模式。</td></tr><tr><td><code>+(pattern|pattern|pattern)</code></td><td>匹配1個或多個給定的模式。</td></tr><tr><td><code>*(a|b|c)</code></td><td>匹配0個或多個給定的模式。</td></tr><tr><td><code>@(pattern|pat*|pat?erN)</code></td><td>只匹配給定模式之一。</td></tr><tr><td><code>**</code></td><td>如果出現在路徑部分，表示0個或多個子目錄。</td></tr></tbody></table></li></ul></li><li><h2 id="npm-link">npm link</h2><p>開發NPM套件的時候，有時會希望，邊開發邊試用，比如本地調適的時候， <code>require('packageName')</code> 會自動加載本地開發中的套件。<br>Node規定，使用一個套件時，需要將其安裝到全域的或項目的 <code>node_modules</code> 目錄之中。<br>對於開發中的套件，解決方法就是在全域的 <code>node_modules</code> 目錄之中，生成一個符號連結，指向套件的本地目錄。<br><code>npm link</code> 能自動建立這個符號連結。<br>假設，開發一個套件 <code>myModule</code>，目錄為 <code>src/myModule</code>，<br>開發項目為 <code>myProject</code> 要用到這個套件，項目目錄為 <code>src/myProject</code>。</p><p>思路：</p><ul><li>先在全域套件目錄中，新增一個文件指向開發中的套件。<br><code>/path/to/global/node_modules/myModule -&gt; src/myModule</code></li><li>將開發項目要用到的套件，指向全域套件目錄<br><code>src/myProject/node_modules/myModule -&gt; /path/to/global/node_modules/myModule</code></li><li>就可在開發項目中，加載該套件了<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myModule = <span class="built_in">require</span>(<span class="string">&#x27;myModule&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li>這樣一來，<code>myModule</code>的任何變化，都可以直接反映在 <code>myProject</code> 項目之中，但是相對的在 <code>myProject</code> 目錄中對 <code>myModule</code> 的修改，也會反映到套件的源碼中。</li><li>若不再需要該套件時，可以在項目目錄中執行 <code>npm unlink</code>，刪除符號連結。</li></ul><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm link</code></td><td>在套件目錄 <code>src/myModule</code>執行命令，會在NPM的全域套件目錄內，<br>生成一個符號連結文件，該文件的名稱就是 <code>package.json</code> 文件中指定的套件名。</td></tr><tr><td><code>npm link myModule</code></td><td>在項目目錄 <code>src/myProject</code>執行命令，並指定套件名，<br>就可以全域調用 <code>myModule</code> 套件了。</td></tr><tr><td><code>npm unlink</code></td><td>在項目目錄 <code>src/myProject</code>執行命令，刪除符號連結。</td></tr></tbody></table></li><li><h2 id="npm-bin">npm bin</h2><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm bin</code></td><td>顯示相對於當前目錄的，Node套件的可執行腳本所在目錄 (即 <code>.bin</code> 目錄)。</td></tr></tbody></table></li><li><h2 id="npm-adduser">npm adduser</h2><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm adduser</code></td><td>向 <a href="https://www.npmjs.com/">npmjs.com</a> 申請用戶名。</td></tr><tr><td><code>npm login</code></td><td>已經註冊過，就可以此命令登錄。</td></tr></tbody></table></li><li><h2 id="npm-publish">npm publish</h2><p>用於將當前套件發佈到 <a href="https://www.npmjs.com/">npmjs.com</a>。<br>執行 <code>npm publish</code> 之前，需先執行 <code>npm adduser</code> 向 <a href="https://www.npmjs.com/">npmjs.com</a> 申請用戶名，<br>並執行 <code>npm login</code> 登錄。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm publish</code></td><td>登錄後，就可以使用 <code>npm publish</code> 命令發佈。</td></tr><tr><td><code>npm publish --tag beta</code></td><td>如果當前套件是一個beta版，發佈的時候需要使用 <code>tag</code> 參數，<br>將其發佈到指定標籤，默認發佈標籤是 <code>latest</code>。</td></tr></tbody></table></li><li><h2 id="npm-deprecate">npm deprecate</h2><p>如果想廢棄某個版本的套件，可以使用 <code>npm deprecate</code> 命令。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm deprecate &lt;packageName&gt;@&quot;&lt;0.2.3&quot; &quot;critical bug fixed in v0.2.3&quot;</code></td><td>小於 <code>0.2.3</code> 版本的套件的 <code>package.json</code> ，都會在命令行顯示警告。</td></tr></tbody></table></li><li><h2 id="npm-owner">npm owner</h2><p>套件的維護者可以發佈新版本。 <code>npm owner</code> 用於管理套件的維護者。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm owner ls &lt;packageName&gt;</code></td><td>列出指定套件的維護者。</td></tr><tr><td><code>npm owner add &lt;user&gt; &lt;packageName&gt;</code></td><td>新增維護者。</td></tr><tr><td><code>npm owner rm &lt;user&gt; &lt;packageName&gt;</code></td><td>刪除維護者。</td></tr></tbody></table></li><li><h2 id="其他命令">其他命令</h2><ul><li><h3 id="npm-home-、-npm-repo">npm home 、 npm repo</h3></li></ul><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm home &lt;packageName&gt;</code></td><td>打開一個套件的主頁。</td></tr><tr><td><code>npm repo &lt;packageName&gt;</code></td><td>打開一個套件的代碼倉庫。</td></tr></tbody></table><ul><li><h3 id="npm-outdated">npm outdated</h3><p>會列出：</p><ul><li>當前版本 (current version)</li><li>應當安裝的版本 (wanted version)</li><li>最新發佈的版本 (latest version)</li></ul><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm outdated</code></td><td>檢查當前項目所依賴的套件，是否已經有新版本。</td></tr></tbody></table></li><li><h3 id="npm-prune">npm prune</h3><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm prune</code></td><td>檢查<code>node_modules</code>，是否有<code>package.json</code>裡面沒有提到的套件，輸出在命令行中。</td></tr></tbody></table></li><li><h3 id="npm-shrinkwrap">npm shrinkwrap</h3><p>運行該命令後，會在當前項目的根目錄下生成一個 <code>npm-shrinkwrap.json</code> 文件，內容是 <code>node_modules</code> 目錄下所有已經安裝的套件，以及它們的精確版本。<br>下次運行 <code>npm install</code> 命令時，npm 發現當前目錄下有 <code>npm-shrinkwrap.json</code> 文件，就會只安裝裡面提到的模塊，且版本也會保持一致。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm shrinkwrap</code></td><td>鎖定當前項目的依賴套件的版本。</td></tr></tbody></table></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> NPM </tag>
            
            <tag> 速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_NVM_Mac</title>
      <link href="/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Mac/"/>
      <url>/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Mac/</url>
      
        <content type="html"><![CDATA[<ul><li><h2 id="NVM-Node-Version-Manager-for-Mac">NVM (Node Version Manager) for Mac</h2><p>是 Node.js 的版本管理工具，<br>因為不同的專案可能使用不同 Node.js 版本，在同一台主機上安裝多個版本環境時，<br>可利用 NVM 來管理 Node.js 的版本控制和快速切換。</p><a id="more"></a><p>安裝流程：</p><ol><li>卸載(移除)原有的node相關目錄、檔案 (含npm、node)</li><li>安裝NVM</li><li>使用NVM 安裝Node指定版本</li></ol><ul><li><h3 id="卸載-移除-原有的node相關目錄、檔案-含npm、node">卸載(移除)原有的node相關目錄、檔案 (含npm、node)</h3><p>NVM不支援透過 <code>Brew (Homebrew)</code> 安裝的nodejs版本，<br>若先前已單獨安裝Node，請先刪除乾淨，再重新安裝。</p><ul><li>每次打開終端機都會顯示：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node: command not found.</span><br><span class="line">npm: command not found.</span><br></pre></td></tr></table></figure></li></ul><p>依原先nodejs安裝方式，選擇不同卸載。</p><ul><li><h5 id="手動安裝-直接從官網下載">手動安裝 (直接從官網下載)</h5><ul><li><p>刪除 <code>/usr/local/lib/</code> 目錄中的 <code>node</code> 與 <code>node_modules</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/include/</code> 目錄中的 <code>node</code> 與 <code>node_modules</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/bin/</code> 目錄中的 <code>node</code>、<code>node_modules</code>、<code>node-gyp</code> 目錄。</p></li><li><p>刪除個人目錄下的 <code>.npmrc</code> 文件。 <small>(這是npm的設置文件，若計畫以後要重新安裝nodejs，可以不刪)</small></p></li><li><p>刪除個人目錄下的 <code>.npm</code> 文件目錄。</p></li><li><p>刪除個人目錄下的 <code>.node-gyp</code> 目錄。</p></li><li><p>刪除個人目錄下的 <code>.node_repl_history</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/share/man/man1/</code> 中所有與 <code>node</code> 和 <code>npm</code> 有關的文件。 <small>(node*, npm*)</small></p></li><li><p>刪除 <code>/usr/local/lib/dtrace/</code> 中的 <code>node.d</code>。</p></li><li><p>刪除 <code>/opt/local/bin/</code> 中的 <code>node</code> 目錄。</p></li><li><p>刪除 <code>/opt/local/include/</code> 中的 <code>node</code> 目錄。</p></li><li><p>刪除 <code>/opt/local/lib/</code> 目錄中的 <code>node_modules</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/share/doc/</code> 目錄中的 <code>node</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/share/systemtap/tapset/</code> 目錄中的 <code>node.stp</code>。<br>以上目錄依次刪除就好，命令<code>rm -rf &lt;path&gt;</code>，刪除命令比較危險，請格外小心輸入。</p></li><li><p>其他方法 使用命令刪除</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rm -rf ~/.nvm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rm -rf ~/.npm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rm -rf ~/.bower</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或使用以下命令 配合上方手動刪除 一個一個刪</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo rm -rf /usr/<span class="built_in">local</span>/lib/...</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="通過-Homebrew-安裝">通過 Homebrew 安裝</h5>若原先使用 <code>Homebrew</code> 安裝的，可另用反向命令移除。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew uninstall node</span></span><br></pre></td></tr></table></figure></li><li><h5 id="通過-NVM-Node-Version-Manager-安裝">通過 NVM (Node Version Manager) 安裝</h5>若想刪除某一版本的 <code>nodejs</code>：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm uninstall v7.7.4</span></span><br></pre></td></tr></table></figure></li><li><h5 id="未知的安裝方式">未知的安裝方式</h5>另用which命令，由安裝路徑查找是哪一種安裝方式：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">which</span> node</span></span><br></pre></td></tr></table></figure><blockquote><p>ex：<code>/Users/scott/.nvm/versions/node/v4.1.2/bin/node</code> <small>(由路徑可得知為nvm安裝)</small></p></blockquote></li></ul></li><li><h3 id="安裝NVM">安裝NVM</h3><ul><li>請先 前往 <a href="https://github.com/nvm-sh/nvm/releases">https://github.com/nvm-sh/nvm/releases</a> 確認目前nvm最新版本</li><li>根據最新版本資訊，使用 <code>cURL</code> 或 <code>wget</code> 指令安裝腳本 <small>(請依據最新版本號更改以下腳本路徑)</small><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span></span><br></pre></td></tr></table></figure>或<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span></span><br></pre></td></tr></table></figure></li><li>NVM已自動加入環境變數<br>腳本已clone <code>~/.nvm</code> 到 配置文件<br>(<code>~/.bash_profile</code>、<code>~/.zshrc</code>、<code>~/.profile</code> 或 <code>~/.bashrc</code> )<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class="line">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure></li><li>確認是否安裝完成<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm -v</span></span><br></pre></td></tr></table></figure>若還是無法使用 nvm ，可執行下面指令立即應用ZSH的設定<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> .zshrc</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="使用NVM-安裝Node及相關指令">使用NVM 安裝Node及相關指令</h3><ul><li><h4 id="查看所有指令">查看所有指令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm --<span class="built_in">help</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看-Nodejs">查看 Nodejs</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote                       <span class="comment"># 查看可用的版本</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote 12                    <span class="comment"># 加上版號可縮小搜尋</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote --lts                 <span class="comment"># 列出可用的LTS版</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote --lts | grep Latest   <span class="comment"># 列出可用的最新LTS版</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="安裝-Nodejs">安裝 Nodejs</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm install latest          <span class="comment"># 安裝最新版本</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm install &lt;version&gt;       <span class="comment"># 安裝指定版本 e.g.: nvm install 12</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm install --lts           <span class="comment"># 安裝長期支援版本 (LTS： Long term support)</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看可用已安裝版本">查看可用已安裝版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm ls</span></span><br></pre></td></tr></table></figure></li><li><h4 id="切換-Nodejs-版本">切換 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm use &lt;version&gt;       <span class="comment"># 使用指定版本 e.g.: nvm use 12</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm use stable          <span class="comment"># 使用穩定版本</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看目前使用的-Nodejs-版本">查看目前使用的 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm use node</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或 $ nvm current</span></span><br></pre></td></tr></table></figure></li><li><h4 id="直接執行-Nodejs">直接執行 Nodejs</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm run node              <span class="comment"># 執行目前版本</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm run node &lt;version&gt;    <span class="comment"># 指定要直接執行的版本  或 $ nvm exec &lt;version&gt; node</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看-Nodejs-安裝路徑">查看 Nodejs 安裝路徑</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">which</span> &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="設定預設啟用的-Nodejs-版本">設定預設啟用的 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">alias</span> default &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="設定版本別名">設定版本別名</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">alias</span> &lt;name&gt; &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看所有別名配對">查看所有別名配對</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">alias</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可在以下指令中使用別名</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nvm install、 use、 run、 <span class="built_in">exec</span>、 <span class="built_in">which</span> ...等。</span></span><br></pre></td></tr></table></figure></li><li><h4 id="移除已安裝的-Nodejs-版本">移除已安裝的 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm uninstall &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> 筆記 </tag>
            
            <tag> NVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_NVM_Windows</title>
      <link href="/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Windows/"/>
      <url>/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Windows/</url>
      
        <content type="html"><![CDATA[<ul><li><h2 id="NVM-Node-Version-Manager-for-Windows">NVM (Node Version Manager) for Windows</h2><p>是 Node.js 的版本管理工具，<br>因為不同的專案可能使用不同 Node.js 版本，在同一台主機上安裝多個版本環境時，<br>可利用 NVM 來管理 Node.js 的版本控制和快速切換。</p><a id="more"></a><p>安裝流程：</p><ol><li>卸載(移除)原有的node相關目錄、檔案 (含npm、node)</li><li>安裝NVM</li><li>使用NVM 安裝Node指定版本</li></ol><ul><li><h3 id="卸載-移除-原有的node相關目錄、檔案-含npm、node-v2">卸載(移除)原有的node相關目錄、檔案 (含npm、node)</h3><ul><li>在移除軟體中，卸載node.js</li><li>在環境變數中刪除所有與node相關的路徑</li><li>刪除以下路徑的文件<blockquote><p>C:\Program Files (x86)\nodejs<br>C:\Program Files\nodejs<br>C:\Users{User}\AppData\Roaming\npm<br>C:\Users{User}\AppData\Roaming\npm-cache<br>C:\Users{User}\node_modules (電腦上的路徑)</p></blockquote></li></ul></li><li><h3 id="安裝NVM-v2">安裝NVM</h3><p>到<a href="https://github.com/coreybutler/nvm-windows/releases">GitHub</a>的項目下載地址，<br>選擇下載 <code>nvm-setup.zip</code>，解壓縮後開啟安裝程式即可。<br>找到 install.cmd 檔案並執行設定Path，直接按Enter進行設定</p><h4 id="確認是否安裝成功">確認是否安裝成功</h4>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm version</span></span><br></pre></td></tr></table></figure><ul><li>查詢結果<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 1.1.7</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="使用NVM-安裝Node指定版本">使用NVM 安裝Node指定版本</h3><ul><li><h4 id="查看可安裝的nodejs版本">查看可安裝的nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm list available</span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看已安裝的nodejs版本">查看已安裝的nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm list</span></span><br></pre></td></tr></table></figure><ul><li>如果是第一次安装，使用該命令結果如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">No installations recognized.</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="安裝指定Nodejs版本">安裝指定Nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm install &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="切換到指定Nodejs版本">切換到指定Nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm use &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="設定預設使用該版本的node-避免下次重啟後又恢復預設">設定預設使用該版本的node 避免下次重啟後又恢復預設</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm <span class="built_in">alias</span> default &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="刪除指定版本">刪除指定版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm uninstall &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> 筆記 </tag>
            
            <tag> NVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[工具]_normalize.css</title>
      <link href="/2021/10/26/%E5%B7%A5%E5%85%B7-normalize-css/"/>
      <url>/2021/10/26/%E5%B7%A5%E5%85%B7-normalize-css/</url>
      
        <content type="html"><![CDATA[<p>normalize.css 最大的特色就是保留原本預設 HTML 標籤的樣式，<br>僅針對不同瀏覽器與各版本間不相容的標籤進行些微調整。<br>目的在一開始將各瀏覽器之間的差異進行調整。</p><a id="more"></a><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Document 文件</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 修正所有瀏覽器中的行高。</span></span><br><span class="line"><span class="comment"> * 2. 避免在 iOS 中，因螢幕方向的改變而調整字型大小。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  -webkit-text-size-adjust: <span class="number">100%</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Sections 段落</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 移除所有瀏覽器中的 margin。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 中一致地呈現 `main` 元素。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome、Firefox 與 Safari 瀏覽器中，修正寫在 `section` 與 `article` 內之 `h1` 元素</span></span><br><span class="line"><span class="comment"> * 的字型大小與邊寬。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.67em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Grouping content 群組內容</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 Firefox 中新增正確的盒框尺寸。</span></span><br><span class="line"><span class="comment"> * 2. 在 Edge 與 IE 中顯示 overflow。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">hr &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: content-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在所有瀏覽器中，修正繼承與字型大小的調整。</span></span><br><span class="line"><span class="comment"> * 2. 在所有瀏覽器中，修正突兀的 `em` 字型大小單位。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">pre &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Text-level semantics 文本層級語意</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE10 中，移除套用在 active link 上的灰色背景。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 去除 Chrome 57- 的底部邊框。</span></span><br><span class="line"><span class="comment"> * 2. 在 Chrome、Edge、IE、Opera 和 Safari 瀏覽器中，新增正確的文本修飾。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">abbr</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline dotted; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome、Edge 和 Safari 瀏覽器中，新增正確的字型粗細。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在所有瀏覽器中，修正字型大小的繼承與縮放。</span></span><br><span class="line"><span class="comment"> * 2. 在所有瀏覽器中，修正突兀的 `em` 字型大小單位。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">kbd</span>,</span><br><span class="line"><span class="selector-tag">samp</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在所有瀏覽器中，新增正確的字型大小。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">small &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 避免 `sub` 與 `sup` 元素影響到所有瀏覽器中的行高。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">sub,</span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">0.25em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Embedded content 嵌入內容</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE10 與之前瀏覽器中，移除連結中影像的邊框。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Forms 表單</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在所有瀏覽器中，調整字型樣式 (視需要調整)。</span></span><br><span class="line"><span class="comment"> * 2. 在 Firefox 和 Safari 中，移除邊距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line">optgroup,</span><br><span class="line">select,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: inherit; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 中顯示 overflow</span></span><br><span class="line"><span class="comment"> * 1. 在 Edge 中顯示 overflow</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Edge、Firefox 與 IE 中，移除字型形變的繼承。</span></span><br><span class="line"><span class="comment"> * 1. 在 Firefox 中，移除字型形變的繼承。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line">select &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 iOS 和 Safari 中，修正無法調整可點按類型樣式的問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-appearance: button;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Firefox 中，移除內邊框與內距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]::-moz-focus-inner &#123;</span><br><span class="line">  border-style: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 回存之前規則未設定的 focus 樣式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]:-moz-focusring &#123;</span><br><span class="line">  outline: <span class="number">1px</span> dotted ButtonText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Firefox 中，修正 padding。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.35em</span> <span class="number">0.75em</span> <span class="number">0.625em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 Edge 和 IE 中，修正文字換行。</span></span><br><span class="line"><span class="comment"> * 2. 在 IE 中，修正由 `fieldset` 元素繼承而來的顏色。</span></span><br><span class="line"><span class="comment"> * 3. 在所有瀏覽器中，移除內距，讓開發者不會因將 `fieldset` 設為0而造成問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">color</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">display</span>: table; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 3 */</span></span><br><span class="line">  <span class="attribute">white-space</span>: normal; <span class="comment">/* 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome、Firefox 和 Opera 中，新增正確的垂直對齊。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">progress &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 10+ 中，刪除預設的垂直捲軸。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 IE10 與之前的瀏覽器中，新增正確的盒框大小。</span></span><br><span class="line"><span class="comment"> * 2. 在 IE10 與之前的瀏覽器中，移除內距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;radio&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome 中，為遞增或遞減按鈕修正游標樣式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;number&quot;</span>]</span>::-webkit-inner-spin-button,</span><br><span class="line">[type=<span class="string">&quot;number&quot;</span>]::-webkit-outer-spin-button &#123;</span><br><span class="line">  height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 Chrome 和 Safari 中，修正突兀的外觀。</span></span><br><span class="line"><span class="comment"> * 2. 在 Safari 中，修正外框樣式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-appearance: textfield; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">outline-offset</span>: -<span class="number">2px</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 macOS 上的 Chrome 和 Safari 中，移除內距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span>::-webkit-search-decoration &#123;</span><br><span class="line">  -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 iOS 和 Safari 中，修正無法調整可點按類型樣式的問題。</span></span><br><span class="line"><span class="comment"> * 2. 在 Safari 中，將字型屬性改為 `inherit`。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">::-webkit-file-upload-button &#123;</span><br><span class="line">  -webkit-appearance: button; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Interactive 互動</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 在 Edge、IE 10+ 和 Firefox 中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">details</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 在所有瀏覽器中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">summary</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: list-item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Misc 雜項</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 10+ 中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">template &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 10 中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_CSS重構</title>
      <link href="/2021/09/18/%E7%AD%86%E8%A8%98-CSS%E9%87%8D%E6%A7%8B/"/>
      <url>/2021/09/18/%E7%AD%86%E8%A8%98-CSS%E9%87%8D%E6%A7%8B/</url>
      
        <content type="html"><![CDATA[<ul><li><small><a href="http://www.cssrefactoringbook.com/">本書相關範例</a></small></li></ul><h2 id="第一章-重構與架構">第一章 - <em>重構與架構</em></h2><ul><li><h3 id="重構-Refactoring">重構 (Refactoring)</h3>是為了讓程式更簡單且更容易複用，在不改變其行為的情況下重寫程式的過程。</li><li><h3 id="軟體架構-software-architecture">軟體架構 (software architecture)</h3>描述軟體專案中這些零件如何組織在一起的用語，最好的架構通常會在進行編程之前就被規劃妥當。<ol><li><h4 id="好架構可預期">好架構可預期</h4></li></ol>可預期，意指可以對軟體的運作方式與其組成作為精確的假設。<br>2. #### 好架構有助於樣式碼複用<br>樣式碼複用，指樣式碼不需複製就可以在許多地方使用的性質。<br>3. #### 好架構易擴充<br>擴充性，具有這種特質的系統，可以很容易地在其上加進新的功能。<br>4. #### 好架構易維護<br>維護性，維護性高，調整起現有功能來就比較容易。</li></ul><h4 id="為什麼重構？">為什麼重構？</h4><pre><code>重構能改善軟體架構，一種可將程式碼重新組織成結構性更好的技術，目的是讓程式更容易預期、複用、擴充與維護。</code></pre><a id="more"></a><ul><li><h3 id="進行重構的原因">進行重構的原因</h3><ol><li><h4 id="需求改變">需求改變</h4></li></ol><p>軟體系統會因為需求改變而演變。<br>2. #### 設計不良的架構<br>現實環境的限制下，通常無法有足夠的時間作完整的規劃。<br>3. #### 低估難度<br>在專案時程被低估時，開發者寫碼時就不會深思熟慮。<br>4. #### 忽視最佳實務<br>需要再重新檢視樣式碼並進行某種程度的重構。</p></li><li><h3 id="何時該重構樣式碼？">何時該重構樣式碼？</h3><p>通常在修正錯誤或使用現有樣式碼建置新功能時，就是重構的最佳時機。<br>固定進行的重構會讓程式品質不斷提升。</p></li><li><h3 id="何時「不該」重構樣式碼？">何時「不該」重構樣式碼？</h3><p>應該只在能改善架構或為了符合一慣的編程準則時，才進行重構。</p></li><li><h3 id="重構範例">重構範例</h3></li></ul><blockquote><p><small>單元測試，是一段執行另一段程式的碼，用來檢查該程式是否如預期地運作。<br>為了將可能浮現之任何問題的根本肇因範圍縮小，<br>單元測試應該只用來檢測單一功能的樣式碼。</small><br>- #### JS重構後，通常會出現下列現象：<br>- 函式數量比之前更多。<br>- 單元測試比之前更多。<br>- 每個函式都只做一件特定的工作。<br>- 每個函式都有一個相對應的單元測試。<br>- 函式可互相搭配以進行更複雜的計算。<br>- #### CSS重構後，會出現下列現象：<br>- 抽離行內CSS有助於提高複用性 (reusability)。<br>- 功能區隔 (樣式與結構)，讓樣式碼的可讀性提高。<br>- 回歸測試 (regression testing) 可透過網頁瀏覽器手動的方式，或透過比較截圖與重構後介面的方式來進行。</p></blockquote><hr><h2 id="第二章-暸解串接">第二章 - <em>暸解串接</em></h2><ul><li><h3 id="串接-cascade">串接 (cascade)</h3>是瀏覽器用來決定樣式如何套用到元素上的方法。</li><li><h3 id="選取器特定度-specificity">選取器特定度 (specificity)</h3>是所使用的CSS選取器能多精準地將元素識別出來的一種估測。<br>(a, b, c, d, e)<ul><li>a: !important</li><li>b: inline style</li><li>c: ID選取器</li><li>d: class選取器、屬性選取器、偽類</li><li>e: 類型選取器、偽元素</li></ul></li><li><h3 id="規則集順序">規則集順序</h3>CSS規則集在樣式表中的位置。<br>較晚出現的宣告區塊具有較高的優先權。</li></ul><hr><h2 id="第三章-編寫較佳的CSS">第三章 - <em>編寫較佳的CSS</em></h2><ul><li><h3 id="善用註解">善用註解</h3><p>應該加上註解部份包括：</p><ol><li>檔案內容。</li><li>選取器的相依性與用法等。</li><li>為何要如此宣告 (處理瀏覽器特有渲染方式時特別有用)。</li><li>重構過但已停用的樣式 (deprecated styles) 與不該再使用的樣式。</li></ol><p>CSS只有區塊型註釋 (多行註釋)，以 <code>/*</code> 開頭，以 <code>*/</code> 結尾。</p>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 主要導覽連結的樣式</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><h3 id="一致的結構規則集">一致的結構規則集</h3><p>以一致的方式來編寫規則集可讓CSS更容易預期，也更容易被理解。<br>1.寫成一行的CSS規則集</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">selector &#123;property1: value; property2: value; property3: value&#125;</span><br></pre></td></tr></table></figure><p>2.寫成多行的CSS規則及</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">selector &#123;</span><br><span class="line">  property1: value;</span><br><span class="line">  property2: value;</span><br><span class="line">  property3: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.大括號另成一行的CSS規則集</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">selector</span><br><span class="line">&#123;</span><br><span class="line">  property1: value;</span><br><span class="line">  property2: value;</span><br><span class="line">  property3: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="以供應商前綴整理性質">以供應商前綴整理性質</h4><p>供應商前綴 (vendor prefix) 是瀏覽器開發商在新的實驗性CSS屬性尚未標準化前，在屬性名稱前加上的標示用字串。</p><ul><li>使用 Blink 或 Webkit 渲染引擎的瀏覽器，(如 Chrome 與 Safari) 會使用 <code>-webkit-</code> 前綴。</li><li>使用 Gecko 渲染引擎的瀏覽器，(如 Firefox) 會使用 <code>-moz</code> 前綴。</li><li>使用 Trident 渲染引擎的瀏覽器，(如 Internet Explorer / Edge)，會使用 <code>-ms</code> 前綴。</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.border-radius</span>&#123;</span><br><span class="line">  -ms-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當該屬性標準化後，就不會再加上前綴。<br>這些屬性的排列順序很重要，瀏覽器會以宣告區塊中由上而下的順序來套用這些屬性，<br>沒有辦法辨識的，它就會略過。<br>因為要讓特定瀏覽器的使用者升級其瀏覽器需要一些時間，<br>有前綴與沒有前綴屬性應該都要保留，直到你的網站不支援該瀏覽器為止。</p></li></ul></li><li><h3 id="維持選取器的單純">維持選取器的單純</h3><p>有時使用限定選取器是比較洽當的。</p><ul><li><h4 id="高效選取器">高效選取器</h4>簡單選取器的效能會比複雜選取器的效能要好。<ul><li><h5 id="由右向左比對選取器">由右向左比對選取器</h5>瀏覽器會從右自左比對選取器，所以它能排除前頭不符合的元素，不會浪費時間在檢查可能符合的元素。</li><li><h5 id="關鍵選取器">關鍵選取器</h5>選取器最右邊的部份稱為關鍵選取器。<br>只用全域選取器 (<code>*</code>) 不與組合器與其他選取器併用 (<code>body *</code>)。</li></ul></li></ul></li><li><h3 id="切斷CSS與JavaScript的耦合">切斷CSS與JavaScript的耦合</h3><p>JavaScript中用來選取元素的類別與ID不應該用來為元素指定樣式，<br>當元素的樣式需要透過JavaScript來調整時，應該透過增刪類別的方式來做。</p><ul><li><h4 id="為JavaScript中的類別與ID名稱之前加上前綴">為JavaScript中的類別與ID名稱之前加上前綴</h4>於要用在JavaScript中的類別與ID名稱之前加上<code>js-</code>。</li><li><h4 id="以類別修改元素樣式">以類別修改元素樣式</h4>與其透過JavaScript將樣式加到元素style屬性的方式來調整HTML元素的樣式，應該透過增刪元素類別的方式來進行調整。</li></ul></li><li><h3 id="使用類別">使用類別</h3><p>元素使用唯一ID所能獲得的好處其實可以用唯一的類別名稱來替代，可以有相同的效果。</p><blockquote><p><small>ID是JavaScript中選取元素最快的方法，<br>與在類別名稱前加上 <code>js-</code> 一樣，<br>不用它指定元素的樣式是另一種將CSS與JavaScript分離的好方法。</small></p></blockquote></li><li><h3 id="為類別取有意義的名稱">為類別取有意義的名稱</h3><p>能清楚表達意義很重要，但也要注意千萬別做過頭了。<br>e.g.: <code>.female-black-and-white-kitten </code></p><ul><li><h4 id="避免類別過度模組化">避免類別過度模組化</h4>有意義的類別名稱所表示的是要套用樣式的元素，而不是要被套用到元素上的樣式。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;font-bold uppercase blue-text margin-bottom-large no-padding&quot;</span>&gt;</span></span><br><span class="line">  Too Many CSS Classes</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>應該避免使用過度模組化的類別，因為它們比行內樣式好不到哪兒去。</li><li><h4 id="建造較佳的盒框">建造較佳的盒框</h4>盒框模型 (box model) 是瀏覽器決定如何渲染 (render) 一個方型區域的方法，HTML的所有元素基本上都可視為是一個盒框。<ul><li><h5 id="box-sizing-content-box">box-sizing: <code>content-box</code></h5>盒框元素 height 與 width，不包含 padding 與 border</li><li><h5 id="box-sizing-border-box">box-sizing: <code>border-box</code></h5>盒框元素 height 與 width，包含 padding 與 border<br>為了一致性，通常只會選一種來使用，可以透過全域選取器來為它設定一個適當的值。</li></ul></li></ul></li></ul><h2 id="第四章-為不同類型的樣式分類">第四章 - <em>為不同類型的樣式分類</em></h2><p>為不同樣式作分類才能善用串接的特性</p><ul><li><h3 id="樣式分類的重要性">樣式分類的重要性</h3>具語意的 HTML標籤 來描述要呈現的內容。<br>有助於創建出更好的架構，因為將樣式組織成不同的分類能讓樣式碼更容易複用。</li><li><h3 id="樣式正規化">樣式正規化</h3>不同的瀏覽器，樣式表集的屬性與值可能略有不同。<br>樣式正規化 (normalizing styles) 用來提供不同元素的屬性預設值。<br>為不同瀏覽器族系所製作的開源正規化樣式 e.g.: <code>normalize.css</code></li><li><h3 id="基底樣式">基底樣式</h3>基底樣式 (base styles) 用來作為其他特定度更高之樣式的建構基點。<br>編寫基底樣式時要注意的原則是，後來添加的樣式應該不需要覆寫太多基底樣式就可以做得出來。<ul><li><h4 id="定義基底樣式">定義基底樣式</h4><p>設計樣式時，應考慮元素最常見的使用方式，適合於最常見之使用情境的值。<br>經常用到的屬性包括：</p><ul><li><code>color</code></li><li><code>font-family</code></li><li><code>font-size</code></li><li><code>font-weight</code></li><li><code>letter-spacing</code></li><li><code>line-height</code></li><li><code>margin</code></li><li><code>padding</code></li></ul></li><li><h4 id="文件詮釋資料">文件詮釋資料</h4><p>文件詮釋資料 (metadata) 標籤包括<code>&lt;head&gt;</code>、<code>&lt;title&gt;</code>、<code>&lt;base&gt;</code>、<code>&lt;link&gt;</code>與<code>&lt;meta&gt;</code>等。<br>因為使用者看不到它們，所以無法指定這些標籤的樣式。</p></li><li><h4 id="分段元素">分段元素</h4><p>分段元素 (sectioning elements)包括<code>&lt;address&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;aside&gt;</code>、<code>&lt;body&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;header&gt;</code>、<code>&lt;nav&gt;</code>與<code>&lt;section&gt;</code>等。<br>通常會包含其他元素，構成HTML文件中不同的段落。</p></li><li><h4 id="標頭與文本元素">標頭與文本元素</h4><p>標頭元素 (heading elements) 包括 <code>&lt;h1&gt;</code> ~ <code>&lt;h6&gt;</code> 元素，<br>是用來在HTML文件中定義每一不同段落主題的元素。<br>文本元素 (text elements) 包括 <code>figure</code>、<code>&lt;figcaption&gt;</code>、<code>&lt;p&gt;</code>與<code>&lt;pre&gt;</code>元素，用來顯示文本區塊。</p></li><li><h4 id="錨點標籤">錨點標籤</h4><p>錨點標籤 (anchor tags) 提供可連到其他HTML文件或同一份HTML文件中段落的連結，<br>能搭配常用來顯示狀態的 <code>:link</code>、<code>:visited</code>、<code>:focus</code>、<code>:hover</code>與<code>:active</code> 虛擬類別。</p><ul><li><code>:link</code><br>套用在具有href屬性的元素上。</li><li><code>:visited</code><br>套用在具有href屬性的連結上，且該連結的位置已列在瀏覽器的瀏覽歷史紀錄中。</li><li><code>:focus</code><br>當元素被點選、觸碰或透過跳位鍵(Tab key)選到該元素時，此樣式會被套用。</li><li><code>:hover</code><br>套用在滑鼠指標下的連結。在觸控裝置上，因為不具有hover狀態，通常會被套用在被觸碰的元素上。</li><li><code>:active</code><br>套用在連結『被啟用(activated)』的元素上。<br>在滑鼠的情況下，點選連結但滑鼠鍵還未放開時就是處於這種狀態。<br>在觸控裝置上，點選元素但手指尚未移開螢幕時，元素會處於這種狀態。</li></ul></li><li><h4 id="文本語意">文本語意</h4><p>文本語意 (text semantics)，用來賦予文本更多意義或結構的元素。通常是行內型，包括：<br><code>&lt;abbr&gt;</code>、<code>&lt;b&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;code&gt;</code>、<code>&lt;data&gt;</code>、<code>&lt;dfn&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;i&gt;</code>、<code>&lt;kbd&gt;</code>、<code>&lt;s&gt;</code>、<code>&lt;strong&gt;</code>、<code>&lt;sub&gt;</code>、<code>&lt;sup&gt;</code>、<code>&lt;time&gt;</code>與<code>&lt;u&gt;</code>等標籤。</p></li><li><h4 id="列表">列表</h4><p>包括</p><ul><li><code>&lt;ol&gt;</code> (有序列表，ordered list)</li><li><code>&lt;ul&gt;</code> (無序列表，unordered list)</li><li><code>&lt;dl&gt;</code> (定義列表，definition list)</li></ul><p>有序與無序列表只能內含<code>&lt;li&gt;</code>(列表項目，list item)元素，<br>定義列表只能包含<code>&lt;dt&gt;</code>(定義項，definition term)與<code>&lt;dd&gt;</code>(定義說明，definition description)元素。</p><p><code>list-style-type</code>、<code>list-style-image</code>與<code>list-style-position</code>屬性，<br>若列表元素比較少用，直接設定成 <code>none</code> 可能會比較好，避免需要不斷地去覆寫這些屬性。<br><code>&lt;ol&gt;</code> 或 <code>&lt;ul&gt;</code> 的 <code>padding-left</code> 屬性應該設為0。<br>子<code>&lt;li&gt;</code>元素會繼承其父元素<code>&lt;ol&gt;</code>或<code>&lt;ul&gt;</code>的<code>font-family</code>、<code>font-size</code>與<code>line-height</code>屬性，但不會繼承<code>margin</code>、<code>padding</code>屬性。</p></li><li><h4 id="群組元素">群組元素</h4><p>包括<code>&lt;div&gt;</code>、<code>&lt;main&gt;</code>與<code>&lt;span&gt;</code>。<br><code>&lt;span&gt;</code>標籤，主要用來群組文本或行內元素。</p></li><li><h4 id="表格">表格</h4><p>包括 <code>&lt;table&gt;</code>、<code>&lt;caption&gt;</code>、<code>&lt;colgroup&gt;</code>、<br><code>&lt;col&gt;</code> (列，column)、<br><code>&lt;tbody&gt;</code> (表格主體，table body)、<br><code>&lt;thead&gt;</code> (表格標題，table header)、<br><code>&lt;tfoot&gt;</code> (表格頁尾，table footer)、<br><code>&lt;tr&gt;</code> (表格列，table row)、<br><code>&lt;td&gt;</code> (表格方格，table cell)、<br><code>&lt;th&gt;</code> (表格標題方格，table header cell)等元素。</p></li><li><h4 id="表單">表單</h4><p>包括 <code>&lt;form&gt;</code>、<code>&lt;label&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;button&gt;</code>、<code>&lt;select&gt;</code>、<code>&lt;datalist&gt;</code>、<code>&lt;optgroup&gt;</code>、<code>&lt;option&gt;</code>、<code>&lt;textarea&gt;</code>、<code>&lt;output&gt;</code>、<code>&lt;progress&gt;</code>、<code>&lt;meter&gt;</code>、<code>&lt;fieldset&gt;</code>與<code>&lt;legend&gt;</code>等元素。<br>某些表單元素的樣式可能不容易設定，因為瀏覽器會直接忽略其上所套用的屬性。<br>e.g.: 瀏覽器會忽略套用在複選框(checkboxes)與選項鈕(radio button)上的<code>border-color</code>、<code>border-width</code>、<code>background-color</code>或其他屬性。</p></li><li><h4 id="影像">影像</h4><p>圖片可透過<code>&lt;img&gt;</code>與<code>&lt;picture&gt;</code>標籤來呈現。<br>因為<code>&lt;img&gt;</code>元素可在行內的格式情境中使用，<code>baseline</code>是<code>vertical-align</code>屬性的預設值。<br>避免影像超出其容器的範圍，可將其<code>max-width</code>設定成等於其父容器的100%。<br><code>img</code>標籤基底樣式可設定成：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="組件樣式">組件樣式</h4><p>可複用組件 (reusable components)，<br>在製作可複用組件時，可先思考可複用組件的流程：</p><ol><li>在製作組件前，先定義所需的行為。</li><li>保持組件樣式粒度並設定合理的預設值。</li><li>在其周圍置放具不同類別之容器元素的方式，視需要覆寫群組組件的視覺樣式。</li><li>讓結構容器為其指定大小。</li></ol><p>ex：</p><ul><li><h5 id="定義需要建置的行為">定義需要建置的行為</h5><ul><li>組件應該可以只有2個或更多的頁籤。</li><li>當頁籤被點選時，底框會變成藍色而背景則為白色。</li><li>當頁籤未被點選時，背景色為灰色。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Tab One<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Tab Two<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Tab Three<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="保持組件樣式粒度">保持組件樣式粒度</h5><p>每一種組件樣式應該只用來為一個元素指定樣式。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 分別為每個頁籤指定樣式會產生不少重複的碼</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-1</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span>,</span><br><span class="line"><span class="selector-class">.tab-3</span> &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab-1</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.tab-3</span><span class="selector-pseudo">:hover</span> &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab-1</span><span class="selector-pseudo">:active</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span><span class="selector-pseudo">:active</span>,</span><br><span class="line"><span class="selector-class">.tab-3</span><span class="selector-pseudo">:active</span> &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab-1</span> &gt; <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span> &gt; <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.tab-3</span> &gt; <span class="selector-tag">a</span> &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab-group</span> &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>將樣式抽離到一個可重複使用的類別。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 頁籤組件樣式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#F2F2F2</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#2196F3</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#F9F9F9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: inherit;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 頁籤組件容器</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-group</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="讓組件容器依需要覆寫視覺樣式">讓組件容器依需要覆寫視覺樣式</h5><p>將定義這些樣式的工作委派給父容器來處理。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 水平頁籤群組</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-group</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab-group</span> <span class="selector-class">.tab</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 垂直頁籤群組</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-group-vertical</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab-group-vertical</span> <span class="selector-class">.tab</span>&#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="將指定尺寸委派給結構容器">將指定尺寸委派給結構容器</h5><p>指定尺寸的責任應該被委派給包含該組件或組件群組的結構。</p></li></ul></li><li><h4 id="結構樣式">結構樣式</h4><p>結構樣式，包含組件及其容器。</p></li><li><h4 id="工具樣式">工具樣式</h4><p>工具樣式(utility styles)，在定義要套用到HTML元素上之類別時，套用到元素上的樣式，或是在滿足特定條件時，由JavaScript所指定之樣式。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>:none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="瀏覽器特定樣式">瀏覽器特定樣式</h4><p>透過瀏覽器-特定的CSS改裝來對付有怪癖的舊版瀏覽器。<br>可以將這些改裝另外放在專屬的樣式表中，<br>並透過條件式註解將它們加到頁面裡，<br>這些條件式註解只會為特定版本的瀏覽器載入這些樣式。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE7]&gt;</span></span><br><span class="line"><span class="comment">  &lt;link rel=&quot;stylesheet&quot; href=&quot;ie7.css&quot; type=&quot;text/css&quot; /&gt;</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="第五章-測試">第五章 - <em>測試</em></h2><p>測試CSS可能會很困難，因為有許多不同的平台、螢幕尺寸與裝置形體 (form factors) 需要進行檢測。</p><ul><li><h3 id="測試為何困難？">測試為何困難？</h3><p>要徹底檢測CSS的變動，可能會耗費許多時間，也需要一些工具的輔助。<br>需要思考的因素：</p><ol><li>檢測網頁的瀏覽器是哪一種？</li><li>如何對不同作業系統上的幾種瀏覽器進行測試？</li><li>檢視網頁的視窗尺寸為何？</li><li>如何快速檢測為數眾多的網頁？</li><li>如何確認所見的結果是正確的？</li><li>如何在無法取得某些特定裝置的情況下，在這些裝置上檢測網站？</li></ol></li><li><h3 id="哪些瀏覽器對測試而言是重要的？">哪些瀏覽器對測試而言是重要的？</h3><p>理想上，只需要支援有一定數量的使用者用來檢視網站的瀏覽器即可。<br>透過分析工具，可以很容易地解析出使用者用來瀏覽網站的瀏覽器與裝置的各種版本。</p></li><li><h3 id="瀏覽器市佔率">瀏覽器市佔率</h3><p>支援最近幾年釋出的主要瀏覽器是很重要的工作。<br>Chrome、Firefox、Safari、Edge與其行動裝置的版本大部分都已符合標準的規範，瀏覽器行為不一致的情況也較之前少。<br>若使用舊版瀏覽器的網站使用者並不多，也許就不需要特別為這些舊瀏覽器去維護樣式碼。</p><ul><li><h4 id="從Google-Analytics取得瀏覽器與螢幕解析度的統計資料">從Google Analytics取得瀏覽器與螢幕解析度的統計資料</h4><a href="https://analytics.google.com/">Google Analytics</a> 是google所提供的免費服務，也是最常見的分析套件；<br>能追蹤網站流量、使用者的操作行為以及提供其他網站瀏覽資訊等。</li><li><h4 id="瀏覽器資訊">瀏覽器資訊</h4>當「Browser」被選成主要考量時，瀏覽器資訊可在GA中的Audience -&gt; Technology -&gt; Browser &amp; OS選單下找到。<br>這些資訊可讓你瞭解有哪些瀏覽器會被用來瀏覽你的網站，</li><li><h4 id="螢幕解析度">螢幕解析度</h4>當「Screen Resolution」被選成主要考量時，螢幕解析度資訊也可在GA中的Audience -&gt; Technology -&gt; Browser &amp; OS選單下找到，<br>這些資訊呈現出用來瀏覽你的裝置螢幕尺寸為何。</li></ul></li><li><h3 id="以幾種瀏覽器進行測試">以幾種瀏覽器進行測試</h3><p>在不同瀏覽器上檢測CSS最常見的方法是以手動方式進行測試。<br>目前主流的瀏覽器有:</p><ul><li>Google Chrome</li><li>Firefox</li><li>Safari</li><li>Microsoft Edge</li></ul><p>就行動裝置的測試而言，也會需要從對應的市集(marketplace)中下載所需的瀏覽器。</p><ul><li><h4 id="iOS版的Safari">iOS版的Safari</h4>iOS上的Safari可以透過iOS裝置上的原生應用程式或是使用Xcode裡面的iOS Simulator來測試<br>要注意的是Xcode只能在Mac OS上執行，他沒辦法在Windows上安裝。</li><li><h4 id="Android">Android</h4>可以透過Android Studio中的擬真器(emulators)來進行在Android裝置上的測試</li></ul></li><li><h3 id="以舊版瀏覽器進行測試">以舊版瀏覽器進行測試</h3><ul><li><h4 id="Internet-Eplorer-與-Microsoft-Edge">Internet Eplorer 與 Microsoft Edge</h4>可以從Microsoft的網站上面下載到Microsoft Edge和舊版的Internet Eplorer以供檢測使用。</li><li><h4 id="Firefox">Firefox</h4>可以從Firefox的網站上面下載到舊版的Firefox，只要找到你要測試的版本並下載在你的作業系統上能運行的版本即可。</li><li><h4 id="Safari與iOS版的Safari">Safari與iOS版的Safari</h4>因為Safari使用OS X上的WebKit框架來渲染網頁，要測試舊版的Safari會比較麻煩，需要找到舊版的Mac OS才行。<br>不過，要進行舊版的Safari for iOS測試可以透過Xcode上的模擬器來進行。</li><li><h4 id="Chrome">Chrome</h4>然Google並沒有提供舊版的Chrome讓大家下載測試，不過每六週都會有新版的Chrome釋出，而且每一個新版本的採用率(adoption rate)都非常高。</li></ul></li><li><h3 id="測試最新版本">測試最新版本</h3><p>各瀏覽器最新的開發測試版：</p><ul><li><a href="https://www.google.com/chrome/browser/canary.html">Chrome Canary</a></li><li><a href="https://nightly.mozilla.org">Firefox Aurora</a></li><li><a href="https://nightly.webkit.org">WebKit Nightly</a></li></ul><p>Microsoft並沒有提供Edge的開發測試版，但經常會提供先期版本給<a href="https://insider.window">Windows Insider Program</a>的會員進行測試。</p></li><li><h3 id="第三方測試服務">第三方測試服務</h3><p>採用第三方廠商所提供的服務，是另一種在多重作業系統上透過一些瀏覽器與模擬器來測試網站的方法。</p></li><li><h3 id="以開發者工具進行測試">以開發者工具進行測試</h3><p>每一種主流瀏覽器都會附帶一組開發者工具，來協助開發者將網站做得更好。</p><ul><li><a href="https://developer.chrome.com/devtools">Chrome DevTools</a></li><li><a href="https://developer.apple.com/safari/tools/">Safari for Developers</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Tools">Firefox Developer Tools</a></li><li><a href="https://dev.modern.ie/platform/documentation/f12-devtools-guide/">Microsoft Edge Developer Tools</a></li><li><h4 id="模擬裝置尺寸">模擬裝置尺寸</h4>要在不同的裝置形體 (如手機、平板等) 上進行測試，透過瀏覽器的開發者工具來模擬目標裝置的尺寸。</li></ul></li><li><h3 id="視覺回歸測試-visual-regression-testing">視覺回歸測試 (visual regression testing)</h3><p>產生一張使用者介面的比較基準圖 (baseline image)，然後用它來與後續的使用者介面圖進行比較。</p><ul><li><h4 id="視覺回歸測試的技巧">視覺回歸測試的技巧</h4><ul><li><h5 id="測試重要的東西">測試重要的東西</h5>測試越多，需要維護的就越多，與其要在大量的測試中打轉，不如只測試真正重要的。<br>基底樣式 (base styles)，通常不太會再回歸；<br>檢測更複雜且可能會更難處理的可複用元件，反而比較要緊。</li><li><h5 id="保持測試粒度">保持測試粒度</h5>若有太多元件一起測試，很難找出造成一個回歸產生的確切原因，個別測試一個元件，才能維持測試的粒度。</li><li><h5 id="使用不同的瀏覽器">使用不同的瀏覽器</h5>因為不同的瀏覽器間可能會有不一致的現象。</li></ul></li><li><h4 id="以Gemini進行視覺回歸測試">以Gemini進行視覺回歸測試</h4>它能在任何主要瀏覽器上編寫自動為元素截圖的程序(Script)，然後讓這些截圖與基準圖作比較，並以不同的反白強調方式，將差異處標示出來。<br>透過無介面瀏覽器 <a href="http://phantomjs.org">PhantomJS</a> 來存取該操作介面。<br>無介面瀏覽器 (headless browser) 是沒有使用者操作介面的網頁瀏覽器，<br>能在不顯示網頁的情況下渲染網站並截取螢幕截圖。<blockquote><p><a href="https://github.com/gemini-testing/gemini">Gemini安裝</a>、<a href="https://phantomjs.org">PhantomJS安裝</a><br><small>Gemini也可以測試其他使用 Selenium 或如 Sauce Labs 及 BrowserStack 等雲端服務的瀏覽器。</small></p></blockquote><ul><li><h5 id="組態">組態</h5>安裝 Gemini 之後，需要在專案的根目錄下創建一個名為 <code>.gemini.js</code> 的檔案。<br><a href="https://github.com/gemini-testing/gemini">完整的組態選項列表</a><br>範例：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  rootUrl: <span class="string">&#x27;http://127.0.0.1:8000&#x27;</span>,</span><br><span class="line">  browsers: &#123;</span><br><span class="line">    phantomjs: &#123;</span><br><span class="line">      desiredCapabilities: &#123;</span><br><span class="line">        browserName: <span class="string">&#x27;phantomjs&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>根網址(root URL)設定成 <a href="http://127.0.0.1:8000">http://127.0.0.1:8000</a> ，<br>以 PhantomJS 來進行測試，而且用該瀏覽器截下來的圖，<br>要以 <code>phantomjs</code> 為其檔名。(當使用多瀏覽器測試時，方便辨識)</li><li><h5 id="測試-v2">測試</h5>編寫一個測試檔。<br>Gemini 本身有一套功能，能開啟URL、選取特定元素、操作視窗並截取螢幕截圖等。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Gemini 測試套組檔 (animal-tests.js)</span></span><br><span class="line">gemini.suite(<span class="string">&#x27;animals&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">suite</span>)</span>&#123;</span><br><span class="line">  suite.setUrl(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    .setCaptureElements(<span class="string">&#x27;.animal&#x27;</span>)</span><br><span class="line">    .capture(<span class="string">&#x27;plain&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>先宣告測試套組(test suite)，為其命名( <code>'animals'</code> )。<br>網站的首頁( <code>/</code> )則透過 <code>setUrl</code> 指定成要開啟的URL。<br>用 <code>.setCaptureElements</code> 選取要測試的元素，<br>以 <code>.capture</code> 來截取螢幕截圖。</li><li><h5 id="收集基準圖">收集基準圖</h5>在進行任何測試前，要先收集基準圖，如此 Gemini 才能用它們來比較新的截圖。<br>先在終端機 (terminal) 中執行 PhantomJS 與 Gemini，才能截取基準圖。<ul><li>開啟終端機視窗並輸入 <code>phontomjs -webdriver=4444</code> 指令。<br>讓 PhantomJS 在 WebDriver 模式中的 4444 號埠上執行。<br>是 Gemini 與瀏覽器互動的管道。</li><li>另一個終端機跳到 <code>.gemini.js</code> 檔所在的目錄，<br>執行 <code>gemini update test/gemini/animal-tests.js</code> 指令，以取得基準螢幕截圖。<br>基準圖收集完成後，它們會被存放在 <code>gemini/screens/animals/plain</code> 這個新目錄底下。</li></ul></li><li><h5 id="測試回歸">測試回歸</h5>基準圖已經收集完成，可以測試回歸了。<br>以 <code>gemini test -reporter html tests/gemini/animal-test.js</code> 指令來執行Gemini。<br>這個指令要Gemini執行測試、比較螢幕截圖並將結果輸出到存放在gemini-report/index.html的HTML網頁中。<ul><li><h6 id="Gemini的替代方案">Gemini的替代方案</h6>Wraith 與 PhantomCSS。<br>都可以被用來開啟網站、透過PhantomJS (Webkit型的無介面瀏覽器) 或SlimerJS (Gecko型的無介面瀏覽器)來為元素截圖，並呈現元素目前版本與比較基準版本的不同。<ul><li><a href="http://bbc-news.github.io/wraith/index.html">Wraith</a><br>由BBC開發而成。<br>需要 CasperJS、PhantomJS 或 SlimerJS 以及 ImageMagick 與 Ruby 的支援。</li><li><a href="https://github.com/Huddle/PhantomCSS">PhantomCSS</a><br>由James Cryer 與 <a href="http://huddle.com">Huddle</a>的開發團隊發展而成。<br>需要 CasperJS 與 Resemble.JS 的支援，也可以搭配 PhantomJS 與 SlimerJS 使用。</li></ul></li></ul></li></ul></li></ul></li><li><h3 id="維護樣式碼">維護樣式碼</h3><p>樣式碼的品質可透過寫碼準則與樣式庫來維護。</p><ul><li><h4 id="寫碼準則-coding-standards">寫碼準則 (coding standards)</h4><p>團隊成員以同一方式來編寫樣式碼的指引方針。<br>CSS寫碼準則通常會規定註解、格式、命名、選取器使用的慣用法。</p><ul><li><h5 id="寫碼準則範本">寫碼準則範本</h5><ol><li>註解<br>A. 每一個檔的開頭都應寫上註解，說明該檔案的內容： <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 這個檔案內含頁籤群組的樣式。</span></span><br><span class="line"><span class="comment">* 頁籤群組只會用來含括帶有頁籤類別的元素。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ol><p>B. 可能會產生混淆的屬性應該以註解說明：<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tab-group-flush</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">12px</span>; <span class="comment">/* 移除父容器的內距 */</span></span><br><span class="line">  <span class="attribute">margin-right</span>: -<span class="number">12px</span>; <span class="comment">/* 移除父容器的內距 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>格式<br>A. 規則集 (rulesets) 應該：<ul><li>若屬性不只一個，則應該要分行編寫。</li><li>其中的宣告須縮排4格</li></ul></li></ol>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">property1: value;</span><br><span class="line">property2: value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">        property1: value;</span><br><span class="line">        property2: value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123; property1: value; property2: value; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1: value;</span><br><span class="line">    property2: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B. 宣告應該：<br>- 在冒號後加上一個空格。<br>- 結尾一定加上分號。</p>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1:value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1: value</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1 : value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C. 在幾個規則集有不同之 <code>background-position</code> 設定的情況下，規則集可以寫在一行。</p>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector1</span> &#123; property1: value; property2: value;&#125;</span><br><span class="line"><span class="selector-class">.selector2</span> &#123; property1: value; property2: value;&#125;</span><br><span class="line"><span class="selector-class">.selector3</span> &#123; property1: value; property2: value;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector1</span> &#123; <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-class">.selector2</span> &#123; <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">10px</span>; &#125;</span><br><span class="line"><span class="selector-class">.selector3</span> &#123; <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">10px</span>; &#125;</span><br></pre></td></tr></table></figure><p>D. 規則集與宣告後的空白必須移除。</p><ol start="3"><li>選取器命名慣例：<br>A. 只使用小寫字母。 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.SeleCtor</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.SELECTOR</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;&#125;</span><br></pre></td></tr></table></figure></li></ol><p>B. 由多字組成的選取器必須以骨節式 (spinal-case) 表示。<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selectorWithMultipleWords</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.SELECTORWITHMULTIPLEWORDS</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.selector_with_multiple_words</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.selectorWith_multiple-words</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector-with-multiple-words</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><p>C. ID不能用來為元素訂樣式；請改用類別。<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-id">#element-to-style</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.element-to-style</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><p>D. 會用JavaScript調整的樣式 (不管框架為何)，必須以新增或刪除CSS類別的方式來進行。<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  不正確的寫法：元素樣式會被JavaScript中的樣式屬性改變</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$(<span class="string">&#x27;.js-menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;#FFFF00&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  正確的寫法：元素樣式會透過JavaScript新增的類別來調整</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> $(<span class="string">&#x27;.js-menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">   $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;highlighted&#x27;</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure></p><p>E. 作爲JavaScript選取器使用的類別與ID，必須加上 <code>js-</code> 字頭，而且不能寫在樣式表中。<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  不正確的寫法：帶有js-字頭的樣式不應該出現在樣式表中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> #js-element-only-used-by-javascript &#123;</span><br><span class="line">     background-color: #FFFF00;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  不正確的寫法：透過指定元素樣式的類別在JavaScript中選取元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> $(<span class="string">&#x27;.menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;highlighted&#x27;</span>);</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  正確的寫法：在JavaScript中以用來在JavaScript中使用的選取器選取元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> $(<span class="string">&#x27;.js-menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;highlighted&#x27;</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure></p><p>F. 必須使用有意義的類別名稱<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法：沒有意義的類別名稱 */</span></span><br><span class="line"><span class="selector-class">.r</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法：有意義且具說明性的類別名稱 */</span></span><br><span class="line"><span class="selector-class">.resident</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><p>G. 類別名稱要描述被指定樣式的標的，而不是樣式本身<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法：描述要套用的樣式 */</span></span><br><span class="line"><span class="selector-class">.float-left-bold</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法：描述要套用樣式的標的 */</span></span><br><span class="line"><span class="selector-class">.sidebar-important</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><ol start="4"><li>屬性<br>A. 只能在 <code>border</code> 、 <code>margin</code> 與 <code>padding</code> 上使用屬性的速寫法 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法：在字型屬性上使用速寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span> Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法：只在border屬性上使用速寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>B. 屬性必須按照字母排序排列<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>C. 值為0的屬性其單位必須省略<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可參照下列寫碼準則</p><ul><li><a href="http://bit.ly/2e68N3y">Google CSS 寫碼準則</a></li><li><a href="http://bit.ly/2fgLrp2">WordPress CSS</a></li><li><a href="https://pages.18f.gov/frontend/#css">18F 前端指引</a></li></ul></li></ul></li><li><h4 id="模版庫-pattern-library">模版庫 (pattern library)</h4><p>是一組在網站上使用的操作介面模版，重要資訊包括：</p><ul><li>模版的使用時機</li><li>簡單的模版使用說明</li><li>為何要使用某特定模版的原因</li></ul><p>e.g.: <a href="https://www.yelp.com/styleguide">Yelp 模版庫</a>、<a href="https://ux.mailchimp.com/patterns">MailChimp 模版庫</a></p><ul><li><h5 id="好處">好處</h5>模版庫呈現了所有組成網站的元件，讓每位成員都能取得建造網站的基礎元件，也可確保成員們熟悉其運作方式。<br>不需為每一個新專案重新製作這些基礎元件。<br>讓所有元件都陳列在同一個地方，藉以建置出的使用者介面更一致。</li><li><h5 id="建置模版庫">建置模版庫</h5>包含 可運行的實作、使用時機的指引，以及呈現如何實作該模版的範例樣式碼。</li></ul><blockquote><p><small>取得更多模版庫資源：<a href="http://styleguides.io">http://styleguides.io</a></small></p></blockquote></li></ul></li></ul><h2 id="第六章-樣式碼置放與重構策略">第六章 - 樣式碼置放與重構策略</h2><ul><li><h3 id="從特定度低到特定度高之樣式的順序來組織CSS">從特定度低到特定度高之樣式的順序來組織CSS</h3><p>CSS樣式依據特定度與被引用的順序來套用，按照被套用的順序來組織CSS也是很合理的</p><ol><li>正規化樣式 (normalizing styles)</li><li>基底樣式 (base styles)</li><li>組件及其容器使用的樣式</li><li>結構樣式 (structural styles)</li><li>工具樣式 (utility styles)</li><li>瀏覽器特定樣式 (如果一定需要的話)</li></ol><ul><li><h4 id="正規化樣式">正規化樣式</h4>將各瀏覽器不一致的地方排除。</li><li><h4 id="基底樣式-v2">基底樣式</h4>定義了網站中所有元件的起始樣式。</li><li><h4 id="組件與其容器的樣式">組件與其容器的樣式</h4>以基底樣式為基礎，提供具視覺意涵的樣式，應該要能適用於全站的主要使用案例上，樣式上的任何調整，應該委派給父容器。</li><li><h4 id="結構化樣式">結構化樣式</h4>包含組件與其容器，用來創建網頁的版面與適用於一般情況的尺寸。</li><li><h4 id="工具樣式-v2">工具樣式</h4>特定度最高的樣式。像其他單一用途的樣式，由JavaScript所套用，會用到!important的類別，應該寫在這。</li><li><h4 id="瀏覽器特定樣式-v2">瀏覽器特定樣式</h4>要支援傳統的瀏覽器，特別實作出的樣式。可能也會用到!important，也可能由網站依據條件而引用。<br>不需要的時候，記得要將它們刪除。</li></ul><blockquote><p><small><b>媒介查詢 (media queries)</b><br>用來在特定條件滿足時，為元素套用不同的樣式。<br>媒體查詢應該儘可能地寫在靠近樣式宣告區塊的位置，而不是放在CSS的結尾處或另外存成一個檔案。</small></p></blockquote></li><li><h3 id="多檔還是單一大檔">多檔還是單一大檔 ?</h3><ul><li><h4 id="供應CSS">供應CSS</h4><p>造訪網站時，瀏覽器會要求下載檔案然後進行解析並套用適當的樣式。<br>因此，為了能迅速下載，這些檔案越小越好。</p><ul><li><h5 id="併接-concatenation">併接 (concatenation)</h5>減少需下載的檔案數來降低頁面下載時間的常用技術。<ul><li>headings.css</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含基本標頭元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>lists.css</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含列表元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>併接而成的CSS檔</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含基本標頭元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含列表元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="縮整-minification">縮整 (minification)</h5>是移除檔案不需要的空白、註解與新行碼 (newlines) 的操作。<ul><li>縮整後的CSS</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;<span class="attribute">color</span>:<span class="number">#333</span>;<span class="attribute">font-size</span>:<span class="number">24px</span>;<span class="attribute">margin-bottom</span>:<span class="number">6px</span>;<span class="attribute">margin-left</span>:<span class="number">12px</span>;<span class="attribute">margin-right</span>:<span class="number">6px</span>;<span class="attribute">margin-top</span>:<span class="number">12px</span>;&#125;<span class="selector-tag">ul</span>&#123;<span class="attribute">list-style-type</span>:none;<span class="attribute">padding-bottom</span>:<span class="number">12px</span>;<span class="attribute">padding-left</span>:<span class="number">0</span>;<span class="attribute">padding-top</span>:<span class="number">12px</span>;<span class="attribute">padding-right</span>:<span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="單檔開發">單檔開發</h4><p>小型專案而言，將CSS放在一個檔中，依據CSS被引入的串接順序，適當地以註解將之分段組織好，</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 正規化樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基底樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 基底樣式：表單 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：標頭 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：影像 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：列表 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：表格 */</span></span><br><span class="line"><span class="comment">/* 等等 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 組件樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 組件樣式：警告 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：按鈕 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：輪播 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：下拉式選單 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：模板 */</span></span><br><span class="line"><span class="comment">/* 等等 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 結構樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 結構樣式：登出版面 */</span></span><br><span class="line"><span class="comment">/* 結構樣式：側欄版面 */</span></span><br><span class="line"><span class="comment">/* 結構樣式：主要版面 */</span></span><br><span class="line"><span class="comment">/* 結構樣式：設定版面 */</span></span><br><span class="line"><span class="comment">/* 等等 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工具樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>若到了某個臨界點，還是需要將CSS拆分成幾個檔案。</p></li><li><h4 id="多檔開發">多檔開發</h4><p>透過好幾個CSS檔來開發網站時，每個檔案的內容就可以聚焦。<br>避免CSS被放在另一個比較不恰當的地方而影響到優化。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|-css/</span><br><span class="line">| |-normalizing-styles</span><br><span class="line">| |   |- normalize.css</span><br><span class="line">| |</span><br><span class="line">| |-base-styles</span><br><span class="line">| |   |- forms.css</span><br><span class="line">| |   |- headings.css</span><br><span class="line">| |   |- images.css</span><br><span class="line">| |   |- lists.css</span><br><span class="line">| |   |- tables.css</span><br><span class="line">| |   |- etc.</span><br><span class="line">| |</span><br><span class="line">| |-bcomponent-styles</span><br><span class="line">| |   |- alerts.css</span><br><span class="line">| |   |- buttons.css</span><br><span class="line">| |   |- carousel.css</span><br><span class="line">| |   |- dropdowns.css</span><br><span class="line">| |   |- modals.css</span><br><span class="line">| |   |- etc.</span><br><span class="line">| |</span><br><span class="line">| |-structural-styles</span><br><span class="line">| |   |- layout-checkout.css</span><br><span class="line">| |   |- layout-sidebar.css</span><br><span class="line">| |   |- layout-primary.css</span><br><span class="line">| |   |- layout-settings.css</span><br><span class="line">| |   |- etc.</span><br><span class="line">| |</span><br><span class="line">| |-utility-styles</span><br><span class="line">| |   |- utility.css</span><br><span class="line">| |</span><br><span class="line">| |-browser-specific-styles</span><br><span class="line">| |   |- ie8.css</span><br></pre></td></tr></table></figure><p>有這麼多的樣式檔，就不應該在HTML中把每一個都引進來。<br>因為太多檔案要求會讓頁面的載入速度變慢。</p></li></ul></li><li><h3 id="重構前檢核CSS">重構前檢核CSS</h3><p>高階的CSS評估準則：</p><ul><li>所用屬性列表</li><li>使用特定屬性之宣告區塊列表</li><li>所用之不同顏色的數量</li><li>所用之最高與最低的特定度</li><li>具最高與最低特定度的選擇器</li><li>選擇器的長度</li></ul><p>推薦一個Google Chrome瀏覽器的外掛工具『CSS Dig』，<br>只要到Chrome的擴充功能裡面搜尋 <a href="http://cssdig.com">CSS Dig</a> 並下載，<br>在網站內按下CSS Dig的圖示就可以使用，<br>能夠分析網頁內可用的CSS，是一套能將樣式碼整理好的實用工具！</p></li><li><h3 id="重構策略">重構策略</h3><p>應該儘可能只在常需被檢核與釋出的小且可控制的區段(chunks)上進行重構。<br>若在一個小區段中進行樣式碼的重構，會變動且產生回歸的地方就比較少，測試起來也比較容易。<br>建議每次只進行能很快佈署出去的小範圍變動。</p><ul><li><h4 id="一致地架構規則集">一致地架構規則集</h4><p>取決於要將宣告區塊寫成什麼格式，以及宣告的順序要如何安排。</p></li><li><h4 id="刪除廢碼">刪除廢碼</h4><p>廢碼(dead code)指的是有寫但沒有用到的碼。</p><ul><li><h5 id="未用宣告區塊-unused-declaration-blocks">未用宣告區塊 (unused declaration blocks)</h5>有寫但絕不會被用到的宣告區塊。</li><li><h5 id="重複宣告區塊-duplicate-declaration-blocks">重複宣告區塊 (duplicate declaration blocks)</h5>因與其他現有宣告完全相同而變成不需要重複的宣告區塊。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 重複宣告區塊 */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="重複宣告-duplicate-declarations">重複宣告 (duplicate declarations)</h5>在同一規則集中，應避免出現重複的宣告，因為只有最後那一個宣告才會被套用。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>; <span class="comment">/* 重複宣告 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="切斷CSS與JavaScript的耦合-v2">切斷CSS與JavaScript的耦合</h4><p>用來為元素指定樣式的類別與ID不應該在JavaScript中被用來選取元素，會產生相依性(dependency)，讓這些選取器不容易被修改。<br>因為類別與ID一被修改，可能會造成JavaScript的錯誤。<br>先在JavaScript中找到選取元素的地方，然後在選取器前加上 <code>js-</code> ，再將選取器加到定義元素的HTML裡頭即可。</p></li><li><h4 id="拆分基底樣式">拆分基底樣式</h4><p>它們運用的是類型選取器(type selectors)。<br>用『CSS Dig』 分析過網站後，Selectors 面板會列出不少選取器在何時與何處的使用資訊。<br>將基底樣式用分組的方式列出來：</p><ul><li>標題 (<code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>)</li><li>文本 (<code>&lt;p&gt;</code>，<code>&lt;fig&gt;</code>，<code>&lt;code&gt;</code>)</li><li>連結 (<code>&lt;a&gt;</code>)</li><li>列表 (<code>&lt;dl&gt;</code>，<code>&lt;ol&gt;</code>，<code>&lt;ul&gt;</code>)</li><li>表單 (<code>&lt;form&gt;</code>，<code>&lt;legend&gt;</code>，<code>&lt;fieldset&gt;</code>，<code>&lt;input&gt;</code>，<code>&lt;button&gt;</code>)</li><li>表格 (<code>&lt;table&gt;</code>，<code>&lt;thead&gt;</code>，<code>&lt;tbody&gt;</code>，<code>&lt;tfoot&gt;</code>，<code>&lt;tr&gt;</code>，<code>&lt;td&gt;</code>)</li><li>媒體 (<code>&lt;audio&gt;</code>，<code>&lt;object&gt;</code>，<code>&lt;video&gt;</code>)</li></ul><p>做完之後，使用『CSS Dig』再去找可以歸類在特定分類的選取器，找出最常用的屬性。<br>依照下列步驟來處理：</p><ol><li>在基底樣式中為要進行重構的類型選取器製作新的規則集。</li><li>將在所有類型選取器中找出的最常用屬性複製到新做好的規則集中。</li><li>移除其他規則集中可繼承自新基底樣式的重複樣式。</li></ol><p>範例：</p>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：style.css */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.section-condensed</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.order-form</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>第一步，製作一個新的規則集：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：headings.css */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123; &#125;</span><br></pre></td></tr></table></figure></li><li>接著，複製最常用的樣式到規則集裡頭：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：headings.css */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>最後，從規則集中移除重複的樣式，改由繼承基底樣式的樣式：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：style.css */</span></span><br><span class="line"><span class="selector-tag">body</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.section-condensed</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.order-form</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>仔細檢查那些不包含在基本樣式中的樣式，看看這些樣式是否已經偏離了方向，<br>若是，可將這些偏離方向的樣式移除。</p></li><li><h4 id="移除多餘的ID">移除多餘的ID</h4><p>在一個選取器中多寫的那幾個ID都是多餘的。<br>調降具更高特定度之選取器的特定度。<br>範例：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main-header</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">ul</span><span class="selector-id">#main-menu</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>從選取器中移除多餘的ID</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main-header</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="將ID轉成類別">將ID轉成類別</h4><p>多餘的ID被移除之後，其餘用到ID的選取器可以轉而使用類別。而且很容易就可以在需要的地方複用。<br>若需要調整許多其他的選取器才能解決一個特定問題，比較好的方法是不將ID變成類別，等到有特定度更高的樣式需要被重構成較低特定度時，再來重構這部份的樣式碼。</p></li><li><h4 id="拆分工具樣式">拆分工具樣式</h4><p>工具樣式是可運用 <code>!important</code> 例外的唯一樣式。當CSS併接的時候，工具樣式應該放在最後。<br>使用瀏覽器的開發者工具進行分析。若分析後發現它並不需要用到 <code>!important</code> ，則應該可以放心地將它移除。</p></li><li><h4 id="定義可複用組件-reusable-components">定義可複用組件 (reusable components)</h4><p>是進行CSS重構時最棘手的工作之一。<br>先選取一種常常被重複使用的介面模板 (interface pattern，如頁籤)，然後用一些時間檢視網站，看看有哪些地方使用。<br>記下該模版任何不同的地方，然後更新所有現行的模版，轉而使用新寫的樣式碼。<br>定義可複用組件有助於移除重複的CSS。</p></li><li><h4 id="移除行內CSS與過度模組化的類別">移除行內CSS與過度模組化的類別</h4><p>移除行內 (inline) CSS與過度模組化的類別應該要同時進行，<br>移除這二種東西，應該晚點做而不要太早做。<br>在移除行內CSS之前，需要將它暫時放在樣式表末，也許還要用 <code>!important</code> 來維持它的特定度。<br>檢查那些與基本及組件樣式不同的行內樣式，看看它是不是因設計或寫碼不一致所產生的。<br>若是，則可放心地將該行內樣式移除。<br>若樣式的不同是刻意做出來的，則應該透過元素的容器來使用該樣式。<br>如果按照順序進行重構，應該：</p><ul><li>有一套自己的方法能一致地將CSS架構好。</li><li>不能留有太多廢碼。</li><li>已將CSS與JavaScript的耦合切斷。</li><li>已建置好基本樣式。</li><li>已透過移除多餘ID並將ID轉成類別的方式，將最高特定度降低。</li><li>已將工具樣式拆分，並減少 <code>!important</code> 的使用。</li><li>已定義可複用組件。</li></ul></li><li><h4 id="隔離針對特定瀏覽器的CSS改裝">隔離針對特定瀏覽器的CSS改裝</h4><p>為了克服瀏覽器的限制所做的改裝 (hacks)，很容易就會污染到CSS。<br>在隔離之前，判斷是否不再支援該瀏覽器。</p></li></ul></li><li><h3 id="成效評估">成效評估</h3><ul><li><h4 id="網站壞了嗎？">網站壞了嗎？</h4>重構是在不改變樣式行為的前提下，進行重新寫碼的過程。<br>先檢查外觀是否相同，若沒發現任何視覺回歸，再開始檢查其他的面向。</li><li><h4 id="低耦合">低耦合</h4>將CSS與HTML間的耦合拆解掉。<br>試著別讓選取器過度複雜化。<br><code>CSS Dig</code> 可協助找出複雜且超格的選取器，應盡量設法將它們一般化。</li><li><h4 id="低特定度">低特定度</h4>選取器特定度是可以被估算，且被用來判斷CSS碼庫中是否含有許多不容易維護，且帶有高特定度之選取器的衡量標準。<br><code>CSS Dig</code> 能運用這個特質，篩選出選取器。</li><li><h4 id="檔案更少也更小">檔案更少也更小</h4>「 併接 」 可減少需下載的檔案數，<br>「 縮整 」 則可透過移除不必要之字元的方式，來降低檔案的大小。</li><li><h4 id="UI錯誤數">UI錯誤數</h4>透過模版庫與視覺回歸測試這二種有效的方法，就可以越快偵測並診斷出問題。</li><li><h4 id="省下開發與檢測時間">省下開發與檢測時間</h4>將CSS有條理地組織成幾個檔、建立編碼準則以及創建UI模版庫之後，建造並維護使用者介面的速度，會比之前要來得快上許多。<br>除了縮短開發時程之外，檢測介面的速度也會變得更快。</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_uiux</title>
      <link href="/2021/04/24/link-uiux/"/>
      <url>/2021/04/24/link-uiux/</url>
      
        <content type="html"><![CDATA[<h4 id="教學-v2">教學</h4><ul><li><a href="https://www.uisdc.com/archives">優設</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> UI/UX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_專有名詞</title>
      <link href="/2021/04/24/link-%E5%B0%88%E6%9C%89%E5%90%8D%E8%A9%9E/"/>
      <url>/2021/04/24/link-%E5%B0%88%E6%9C%89%E5%90%8D%E8%A9%9E/</url>
      
        <content type="html"><![CDATA[<h4 id="關於那些縮寫">關於那些縮寫</h4><ul><li><a href="https://www.design-hu.com/web-news/cms.html">CMS 是什麼 ？ 讓你秒懂什麽是 網站 後台 管理 CMS系統 - 鵠崙設計</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 專有名詞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_D3</title>
      <link href="/2021/04/24/link-D3/"/>
      <url>/2021/04/24/link-D3/</url>
      
        <content type="html"><![CDATA[<h4 id="基礎-v2">基礎</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10196538">M重新認識 JavaScript 番外篇 (3) - 鐵人賽戰況分析 - Kuro</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> D3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_其他</title>
      <link href="/2021/04/18/link-%E5%85%B6%E4%BB%96/"/>
      <url>/2021/04/18/link-%E5%85%B6%E4%BB%96/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://smarter01.com/2017/03/01/%EF%BB%BF%E5%8F%B0%E5%8C%97-%E9%81%A9%E5%90%88%E8%AE%80%E6%9B%B8%E6%9C%83%E3%80%81%E4%BA%A4%E6%B5%81%E6%9C%83%E6%88%96%E6%9C%83%E8%AD%B0%E7%9A%84%E5%92%96%E5%95%A1%E5%BB%B3%E6%B6%88%E8%B2%BB/">台北適合會議、讀書會或交流會的11間咖啡廳推薦</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_專案管理</title>
      <link href="/2021/04/04/link-%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
      <url>/2021/04/04/link-%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v10">系列文章</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20105176/ironman/3831">[iT邦] 從 RD 到 PM 的奇妙旅程 - 陪伴我成長的心法與工具整理集 - 小學生</a> - 2020</li></ul><h4 id="Side-Project">Side Project</h4><ul><li><a href="https://blog.hahow.in/samuel-side-project/amp/">9 個開始 Side Project 前一定要知道的事 - hahow</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 專案管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_API</title>
      <link href="/2021/04/04/link-API/"/>
      <url>/2021/04/04/link-API/</url>
      
        <content type="html"><![CDATA[<h4 id="入門">入門</h4><ul><li><a href="https://graphql.org/">GraphQL - 官方</a></li><li><a href="https://ithelp.ithome.com.tw/users/20111997/ironman/1878">[iT邦] GraphQL系列 - fx777</a></li><li><a href="https://tw.alphacamp.co/blog/api-introduction-understand-web-api-http-json">API是什麼？認識 Web API、HTTP 和 JSON 資料交換格式 - alphacamp</a></li></ul><h4 id="模擬">模擬</h4><ul><li><a href="https://medium.com/@debbyji/%E7%94%A8-json-server-%E6%A8%A1%E6%93%AC-restful-api-f07abda3927c">用 JSON Server 模擬 RESTful API - medium</a> - 2019</li><li><a href="https://jsonplaceholder.typicode.com/">JSON Placeholder - 官方</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> link </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Python</title>
      <link href="/2021/04/04/link-Python/"/>
      <url>/2021/04/04/link-Python/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v5">系列文章</h4><ul><li><a href="https://mofanpy.com/">莫煩Python</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Vue全家餐</title>
      <link href="/2021/03/22/link-Vue%E5%85%A8%E5%AE%B6%E9%A4%90/"/>
      <url>/2021/03/22/link-Vue%E5%85%A8%E5%AE%B6%E9%A4%90/</url>
      
        <content type="html"><![CDATA[<h4 id="Vue-源碼探索">Vue 源碼探索</h4><ul><li><a href="https://ustbhuangyi.github.io/vue-analysis/v2/prepare/">Vue2技術揭秘</a></li><li><a href="https://ustbhuangyi.github.io/vue-analysis/v3/new/">Vue3技術揭秘</a></li></ul><a id="more"></a><h4 id="Cli">Cli</h4><ul><li><p><a href="https://juejin.cn/post/6844903919911436296">Vue Cli3 MPA 多页面配置 - 掘金</a> - 2019</p></li><li><p><a href="https://cli.vuejs.org/zh/guide/">Vue Cli學習教程 - 官方</a></p></li><li><p><a href="https://cli.vuejs.org/zh/config/#%E5%85%A8%E5%B1%80-cli-%E9%85%8D%E7%BD%AE">Vue Cli學習教程-配置 - 官方</a></p></li><li><p><a href="https://staven630.github.io/vue-cli4-config/">vue-cli4全面配置（持續更新）</a></p></li><li><p><a href="https://cli.vuejs.org/zh/guide/webpack.html#%E5%AE%A1%E6%9F%A5%E9%A1%B9%E7%9B%AE%E7%9A%84-webpack-%E9%85%8D%E7%BD%AE">Vue Cli學習教程-審查項目的webpack 配置 - 官方</a></p></li><li><p><a href="https://github.com/neutrinojs/webpack-chain">webpack-chain - Github</a></p></li><li><p><a href="https://forum.vuejs.org/t/chainwebpack-configurewebpack/68750">chainWebpack與configureWebpack</a></p></li><li><p><a href="https://juejin.cn/post/6844904138954801166">前端工程化：webpack-chain - 掘金</a> - 2020</p></li><li><p><a href="https://blog.csdn.net/weixin_43443341/article/details/108865372">configureWebpack、chainWebpack配置vue.config.js - CSDN</a> - 2020</p></li><li><p><a href="https://juejin.cn/post/6844904154360446983">Vue CLI 源碼探索 - 掘金</a> - 2020</p></li><li><h5 id="多頁">多頁</h5><ul><li><a href="https://medium.com/@nchuuu/%E5%88%A9%E7%94%A8vue-cli-%E9%80%B2%E8%A1%8C%E5%A4%9A%E9%A0%81%E6%89%93%E5%8C%85-633b39bb157">Vue-CLI 製作 SPA 很方便，那需要多頁面的時候呢？ - Medium</a> - 2019</li><li><a href="https://github.com/liuyunzhuge/vue-multi-page-demo">vue-multi-page-demo - Github</a> - 2019</li><li><a href="https://blog.liuyunzhuge.com/2019/12/21/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8vue-cli4%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%A4%9A%E9%A1%B5%E5%BA%94%E7%94%A8/">如何使用vue-cli4构建一个多页应用 - 流云诸葛</a> - 2019</li></ul></li></ul><h4 id="Vue-Loader">Vue Loader</h4><ul><li><a href="https://vue-loader.vuejs.org/zh/spec.html">Vue 單文件組件(SFC) 規範 - 官方</a></li><li><a href="https://awdr74100.github.io/2020-04-13-webpack-vueloader/">Webpack 前端打包工具 - 使用 vue-loader 手動建置出 Vue CLI 環境 - Roya’s Blog</a></li></ul><h4 id="Vuex">Vuex</h4><ul><li><a href="https://vuex.vuejs.org/zh/">[官方] - Vuex</a></li><li><a href="https://medium.com/itsems-frontend/vue-vuex1-state-mutations-364163b3acac">Vuex 是什麼? 怎麼用? - Medium</a> - 2020</li></ul><h4 id="Vue-Router">Vue Router</h4><ul><li><a href="https://router.vuejs.org/zh/">[官方] - Vue Router</a></li><li><a href="https://www.jianshu.com/p/f920b0e994dc">使用vue-router+vuex進行導航守衛 - 簡書</a> - 2018</li><li><a href="https://zhuanlan.zhihu.com/p/54112006">vue-router導航守衛，不懂的來 - 知乎</a> - 2019</li><li><a href="https://zhuanlan.zhihu.com/p/54112006">Vue Router 導航守衛 - JC2182</a></li></ul><h4 id="Vue套件">Vue套件</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10188743">[iT邦] 其他現成UI - Ralph</a> - 2017</li></ul><h4 id="NuxtJs">NuxtJs</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20103424/ironman/1961">[iT邦] Nuxt - 使用 Vue.js 做 SSR 的第一哩路 - Ralph</a> - 2018</li><li><a href="https://medium.com/@jackercleaninglab/ssr-nuxt-js-%E8%B6%85%E5%85%A5%E9%96%80-84a0823b45ed">SSR — Nuxt.js 超入門 - Medium</a> - 2019</li><li><a href="https://www.youtube.com/watch?v=szrRDJBFmvQ&amp;feature=youtu.be">[YouTube] Vue Nuxt 介紹與實作範例 - 六角學院</a> - 2018</li><li><a href="https://www.youtube.com/watch?v=wgW1o4Nswqs&amp;feature=youtu.be">[YouTube] 👨‍💻 Nuxt 怎麼一回事｜#1 起源、環境安裝與第一次的開發 - Alex 宅開發</a> - 2019</li></ul><h4 id="Vuetify">Vuetify</h4><ul><li><a href="https://vuetifyjs.com/zh-Hans/introduction/why-vuetify/">Vuetify - 官方教學文件</a></li></ul><h4 id="Vite">Vite</h4><ul><li><a href="https://kknews.cc/code/n2mrkvg.amp">是什麼導致尤大大選擇放棄Webpack？【vite 原理解析】 - 每日頭條</a></li></ul><h4 id="PreRender-spa">PreRender-spa</h4><ul><li><a href="https://awdr74100.github.io/2020-07-13-webpack-prerenderspaplugin/">使用 prerender-spa-plugin 預渲染單頁應用 - Roya’s Blog</a> - 2020</li><li><a href="https://www.mdeditor.tw/pl/pyyk/zh-hk">基於prerender-spa-plugin的Vue.js預渲染實踐 - MdEditor</a> - 2020</li><li><a href="https://www.itread01.com/content/1544722025.html">單頁面的SEO優化：在vue中使用prerender-spa-plugin - itread01</a> - 2018</li></ul><h4 id="PWA-漸進式網頁應用程式">PWA 漸進式網頁應用程式</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10215567">[iT邦]30 天 Progressive Web App 學習筆記 - iamya</a> - 2016</li><li><a href="https://3c.ltn.com.tw/news/37555">Google Chrome 必學秘技！讓網頁一鍵變身桌面 App - 3C科技</a> - 2019</li><li><a href="https://medium.com/@zhenghaoli1996/%E8%A8%98%E9%8C%84%E4%B8%80%E6%AC%A1%E5%9F%BA%E6%96%BCvue-typescript-pwa%E7%9A%84%E9%A0%85%E7%9B%AE%E7%94%B1%E9%96%8B%E7%99%BC%E5%88%B0%E9%83%A8%E7%BD%B2-6d5189ddc22d">記錄一次基於vue、typescript、pwa的項目由開發到部署 - Medium</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/articles/10215567">[iT邦]什麼是漸進式網頁應用(Progressive Web Application) - rehome</a> - 2019</li></ul><h4 id="小技巧-v2">小技巧</h4><ul><li><h5 id="父子關係">父子關係</h5><ul><li><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/204272/">父元件呼叫子元件方法及事件 - 程式前沿</a> - 2018</li></ul></li><li><h5 id="部署Github">部署Github</h5><ul><li><a href="https://dean34520.medium.com/vue%E7%B3%BB%E5%88%97%E6%96%87-%E5%B0%87vue%E6%AA%94%E6%A1%88%E9%83%A8%E7%BD%B2%E8%87%B3github-334951cadede">將Vue專案部署至Github Pages - Medium</a> - 2019</li></ul></li></ul><h4 id="模板">模板</h4><ul><li><a href="https://www.creative-tim.com/blog/freebies/vuejs/top-vuejs-free-templates-for-this-summer/">10+ Top Vue.js Free Templates for 2021 - creative-tim</a> - 2021</li></ul><h4 id="插件">插件</h4><ul><li><p><a href="https://vuejsexamples.com/">Vue.js Examples - 總匯</a></p></li><li><p><a href="https://kknews.cc/code/kbejqlb.html">實用的vue插件大匯總，趕緊收藏起來 - 每日頭條</a> - 2018</p></li><li><h5 id="虛擬滾動">虛擬滾動</h5><ul><li><a href="https://github.com/tangbc/vue-virtual-scroll-list">vue-virtual-scroll-list - Github</a> - 2019</li><li><a href="https://github.com/Akryum/vue-virtual-scroller">vue-virtual-scroller - Github</a> - 2020</li></ul></li><li><h5 id="格式化時間">格式化時間</h5><ul><li><a href="https://segmentfault.com/a/1190000021200938">vue+moment.js使用 - segmentfault</a> - 2019</li><li><a href="https://blog.csdn.net/lihefei_coder/article/details/92628030">vue中使用Moment.js - CSDN</a> - 2019</li></ul></li></ul><h4 id="Blog-參考">Blog 參考</h4><ul><li><a href="https://github.com/uncleLian/vue-blog">vue-blog - Github</a> - 2019</li><li><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/#%E5%8A%9F%E8%83%BD">vue-element-admin</a></li></ul><h4 id="API-v2">API</h4><ul><li><a href="https://kuro.tw/posts/2017/06/07/%E5%A6%82%E4%BD%95%E5%9C%A8-Vue-CLI-%E5%BB%BA%E7%AB%8B%E7%9A%84%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E5%91%BC%E5%8F%AB%E8%B7%A8%E5%9F%9F%E9%81%A0%E7%AB%AF-RESTful-APIs/">如何在 Vue-CLI 建立的開發環境呼叫跨域遠端 RESTful APIs - Kuro’s Blog</a> - 2017</li><li><a href="https://medium.com/%E4%BC%81%E9%B5%9D%E4%B9%9F%E6%87%82%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/vue%E5%B0%88%E6%A1%88%E4%B8%AD%E7%9A%84api%E7%AE%A1%E7%90%86%E5%8F%8A%E5%B0%81%E8%A3%9D-bccb77f82f98">Vue專案中的API管理及封裝 - 企鵝也懂程式設計</a> - 2019</li><li><a href="https://zhuanlan.zhihu.com/p/231082156">Vue Axios之生產/開發環境跨域問題解決 - 知乎</a> - 2020</li></ul><h4 id="性能優化">性能優化</h4><ul><li><a href="https://juejin.cn/post/6844903913410314247">Vue 項目性能優化— 實踐指南（網上最全/ 詳細） - 掘金</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/articles/10249161">[iT邦] Vue Speed Level Up - Peter Lu</a> - 2020</li><li><a href="https://mp.weixin.qq.com/s/6BrE36U72LD_kGX0N1jQ5Q">面試官問Vue 性能優化，我該怎麼回答？ - 畫漫畫的程序員</a> - 2021</li></ul><h4 id="其他-v4">其他</h4><ul><li><a href="https://hackmd.io/@FortesHuang/rJf6CYynS">VueJS 教學筆記: 正規表示法 - hackmd</a> - 2019</li><li><a href="https://iter01.com/536683.html">Vue系列-import動態引入的坑 - IT人</a> - 2020</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Vue全家餐 </tag>
            
            <tag> Vue套件 </tag>
            
            <tag> Cli3 </tag>
            
            <tag> Vuex </tag>
            
            <tag> Vue Router </tag>
            
            <tag> NuxtJs </tag>
            
            <tag> Vuetify </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_規範</title>
      <link href="/2021/03/22/link-%E8%A6%8F%E7%AF%84/"/>
      <url>/2021/03/22/link-%E8%A6%8F%E7%AF%84/</url>
      
        <content type="html"><![CDATA[<h4 id="CSS規範">CSS規範</h4><ul><li><a href="https://github.com/doggy8088/CSS-Guidelines">CSS 筆記、建議與指導方針總整理 - doggy8088</a> - 2013</li></ul><a id="more"></a><h4 id="Vue規範">Vue規範</h4><ul><li><a href="https://lq782655835.github.io/blogs/team-standard/1.standard-ai-vue.html">AI前端Vue規範 - springleo’s blog</a></li></ul><h4 id="團隊規範-含各項規範">團隊規範(含各項規範)</h4><ul><li><a href="https://lq782655835.github.io/blogs/team-standard/0.standard-ai-summary.html">團隊規範 - springleo</a></li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/642504/">if我是前端團隊Leader，怎麼制定前端協作規範? - 程式前沿</a> - 2019</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/738497/">前端團隊代碼風格統一規範實踐 - 程式前沿</a> - 2020</li><li><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/29402/">Airbnb JavaScript 編碼風格指南（2018年最新版） - 程式前沿</a> - 2018</li></ul><h4 id="設定-v3">設定</h4><ul><li><a href="https://pjchender.blogspot.com/2019/07/vue-vue-style-guide-eslint-plugin-vue.html?m=1">[Vue] 整合 Vue style guide, eslint-plugin-vue 和 VSCode - Pjchender</a> - 2019</li><li><a href="https://www.tpisoftware.com/tpu/articleDetails/1950">啟用 ESLint 跟 stylelint 保持良好的 Coding Style - TPIU</a> - 2020</li><li><a href="https://github.com/stylelint/vscode-stylelint">vscode-stylelint - Github</a></li><li><a href="https://stylelint.io/user-guide/usage/node-api#configoverrides">stylelint - 官方</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> CSS </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 規範 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_SVG</title>
      <link href="/2021/03/12/link-SVG/"/>
      <url>/2021/03/12/link-SVG/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://kknews.cc/news/qepgpko.html">曾經自己學習的前端矢量圖繪製 - 每日頭條</a> - 2017</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> SVG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Webpack</title>
      <link href="/2021/03/12/link-Webpack/"/>
      <url>/2021/03/12/link-Webpack/</url>
      
        <content type="html"><![CDATA[<h4 id="入門-v8">入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20107789/ironman/3332">[iT邦] 尋覓 webpack - 藉由 webpack 學習網頁前端工程的精妙之處 - Peter Chen</a> - 2020</li><li><a href="https://webpack.docschina.org/concepts/">v4.0教程 - 官方</a></li><li><a href="https://www.yuque.com/fe9/basic/fnvdeu">Webpack基本配置 - 前端九部</a></li></ul><a id="more"></a><h4 id="系列文章-v8">系列文章</h4><ul><li><a href="https://shunnnet.github.io/blog/2020/04/07/%E4%BD%BF%E7%94%A8%20Webpack%20%E8%93%8B%E5%87%BA%20Vue-CLI%20%E7%9A%84%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F/">使用 Webpack 蓋出 Vue-CLI 的打包程序 - 邊緣邊緣人</a> - 2020</li></ul><h4 id="環境建置">環境建置</h4><ul><li><a href="https://devs.tw/post/60">手動建置一個Webpack-Vue的開發環境 - Devs.tw</a> - 2018</li></ul><h4 id="loader">loader</h4><ul><li><h5 id="postcss-loader">postcss-loader</h5><ul><li><a href="https://awdr74100.github.io/2020-03-05-webpack-postcssloader/">Webpack 前端打包工具 - 使用 postcss-loader 自動為 CSS 增加 Prefix - Roya’s Blog</a> - 2020</li></ul></li></ul><h4 id="plugin">plugin</h4>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 管理工具 </tag>
            
            <tag> Webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_工具</title>
      <link href="/2021/02/26/link-%E5%B7%A5%E5%85%B7/"/>
      <url>/2021/02/26/link-%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h4 id="平台-v2">平台</h4><ul><li><a href="http://tools.jb51.net/">腳本之家</a></li></ul><a id="more"></a><h4 id="文書處理">文書處理</h4><ul><li><a href="https://www.ypppt.com/">優品PPT</a></li></ul><h4 id="FlipaClip">FlipaClip</h4><ul><li><a href="https://www.youtube.com/watch?v=_dBRzmrmchU">[YouTube] 用FlipaClip或PPT製作千萬級爆款視頻，10分鐘學會2種方法！</a> - 2020</li></ul><h4 id="正規表達式-v2">正規表達式</h4><ul><li><a href="http://tools.jb51.net/regex/create_reg">正規表達式線上生成工具 - 腳本之家</a></li><li><a href="http://tools.jb51.net/regex/javascript">正規表達式線上測試工具 - 腳本之家</a></li></ul><h4 id="Can-I-系列">Can I 系列</h4><ul><li><a href="https://caniuse.com/">Can I use</a></li><li><a href="https://www.caniemail.com/">Can I email</a></li></ul><h4 id="線上編譯器">線上編譯器</h4><ul><li><a href="https://codesandbox.io/">CodeSandbox</a></li><li><a href="https://html.cafe/">HTML 線上編輯器</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_web-資訊安全</title>
      <link href="/2021/02/26/link-web%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/"/>
      <url>/2021/02/26/link-web%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="網站安全">網站安全</h4><ul><li><a href="https://medium.com/%E7%A8%8B%E5%BC%8F%E7%8C%BF%E5%90%83%E9%A6%99%E8%95%89/same-origin-policy-%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96-%E4%B8%80%E5%88%87%E5%AE%89%E5%85%A8%E7%9A%84%E5%9F%BA%E7%A4%8E-36432565a226">Same Origin Policy 同源政策 ! 一切安全的基礎 - Medium</a> - 2018</li><li><a href="https://medium.com/%E7%A8%8B%E5%BC%8F%E7%8C%BF%E5%90%83%E9%A6%99%E8%95%89/%E7%9B%AE%E9%8C%84%E9%81%8D%E6%AD%B7-path-traversal-%E6%94%BB%E6%93%8A%E6%89%8B%E6%B3%95-238218d5115d">目錄遍歷 Path Traversal 攻擊手法 - Medium</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Web資訊安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_Emmet</title>
      <link href="/2021/02/23/%E9%80%9F%E6%9F%A5%E8%A1%A8-emmet/"/>
      <url>/2021/02/23/%E9%80%9F%E6%9F%A5%E8%A1%A8-emmet/</url>
      
        <content type="html"><![CDATA[<h3 id="font-color-FF6600-基本階層語法-font"><font color=#FF6600>基本階層語法</font></h3><ul><li><h4 id="nav-ul-li"><code>nav&gt;ul&gt;li</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><hr><h3 id="font-color-FF6600-加入運算式「-」-font"><font color=#FF6600>加入運算式「*」</font></h3><ul><li><h4 id="ul-li-5"><code>ul&gt;li*5</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="font-color-FF6600-加入字元變數「-」-font"><font color=#FF6600>加入字元變數「$」</font></h3><ul><li><h4 id="ul-li-item-5"><code>ul&gt;li.item$*5</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="h-title-item-Header-3"><code>h$[title=item$]&#123;Header $&#125;*3</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">&quot;item1&quot;</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">title</span>=<span class="string">&quot;item2&quot;</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">title</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>Header 3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="ul-li-item-5-v2"><code>ul&gt;li.item$$$*5</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item002&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item003&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item005&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="ul-li-item-5-v3"><code>ul&gt;li.item$@-*5</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="ul-li-item-3-5"><code>ul&gt;li.item$@3*5</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item7&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="form-search-wide"><code>form#search.wide</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;search&quot;</span> <span class="attr">class</span>=<span class="string">&quot;wide&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="p-class1-class2-class3"><code>p.class1.class2.class3</code></h4></li></ul>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;class1 class2 class3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="font-color-FF6600-ID-and-CLASS-attributes-快速輸出id和class標籤結構-font"><font color=#FF6600>ID and CLASS attributes 快速輸出id和class標籤結構</font></h3><ul><li><h4 id="header"><code>#header</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="header-v2"><code>.header</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="font-color-FF6600-Sibling-組合標籤-font"><font color=#FF6600>Sibling: + 組合標籤</font></h3><ul><li><h4 id="div-p-bq"><code>div+p+bq</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="font-color-FF6600-Climb-up-font"><font color=#FF6600>Climb-up: ^</font></h3><ul><li><h4 id="div-div-p-span-em-bq"><code>div+div&gt;p&gt;span+em^bq</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="div-div-p-span-em-bq-v2"><code>div+div&gt;p&gt;span+em^^bq</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="font-color-FF6600-Grouping-font"><font color=#FF6600>Grouping: ()</font></h3><ul><li><h4 id="div-header-ul-li-2-a-footer-p"><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="div-dl-dt-dd-3-footer-p"><code>(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="font-color-FF6600-Custom-attributes-自定義對象-font"><font color=#FF6600>Custom attributes 自定義對象</font></h3><ul><li><h4 id="p-title-Hello-world"><code>p[title=&quot;Hello world&quot;]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;Hello world&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="td-rowspan-2-colspan-3-title"><code>td[rowspan=2 colspan=3 title]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="a-value1-b-value2"><code>[a='value1' b=&quot;value2&quot;]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">a</span>=<span class="string">&quot;value1&quot;</span> <span class="attr">b</span>=<span class="string">&quot;value2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="font-color-FF6600-Text-font"><font color=#FF6600>Text: {}</font></h3><ul><li><h4 id="a-Click-me"><code>a&#123;Click me&#125;</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="p-Click-a-here-to-continue"><code>p&gt;&#123;Click &#125;+a&#123;here&#125;+&#123; to continue&#125;</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Click<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>here<span class="tag">&lt;/<span class="name">a</span>&gt;<span class="name">to</span></span> continue<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="font-color-FF6600-Implicit-tag-names-font"><font color=#FF6600>Implicit tag names</font></h3><ul><li><h4 id="class"><code>.class</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="em-class"><code>em&gt;.class</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ul-class"><code>ul&gt;.class</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="table-row-col"><code>table&gt;.row&gt;.col</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="html-5"><code>html:5</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="font-color-FF6600-html元素快速輸出-font"><font color=#FF6600>html元素快速輸出</font></h3><ul><li><h4 id="a"><code>a</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="a-link"><code>a:link</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="a-mail"><code>a:mail</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="abbr"><code>abbr</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="acronym"><code>acronym</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">acronym</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">acronym</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="base"><code>base</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="basefont"><code>basefont</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">basefont</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="br"><code>br</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="frame"><code>frame</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="hr"><code>hr</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bdo"><code>bdo</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bdo-r"><code>bdo:r</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">&quot;rtl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bdo-l"><code>bdo:l</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">&quot;ltr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="col"><code>col</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">col</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link"><code>link</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-css"><code>link:css</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-print"><code>link:print</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;print.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;print&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-favicon"><code>link:favicon</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.ico&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-touch"><code>link:touch</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.png&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-rss"><code>link:rss</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/rss+xml&quot;</span> <span class="attr">title</span>=<span class="string">&quot;RSS&quot;</span> <span class="attr">href</span>=<span class="string">&quot;rss.xml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-atom"><code>link:atom</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/atom+xml&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Atom&quot;</span> <span class="attr">href</span>=<span class="string">&quot;atom.xml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta"><code>meta</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-utf"><code>meta:utf</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-win"><code>meta:win</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=windows-1251&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-vp"><code>meta:vp</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-compat"><code>meta:compat</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=7&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="style"><code>style</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="script"><code>script</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="script-src"><code>script:src</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="img"><code>img</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="iframe"><code>iframe</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="embed"><code>embed</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="object"><code>object</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="param"><code>param</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="map-v2"><code>map</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area"><code>area</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-d"><code>area:d</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;default&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-c"><code>area:c</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-r"><code>area:r</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-p"><code>area:p</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;poly&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="form"><code>form</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="form-get"><code>form:get</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="form-post"><code>form:post</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="label"><code>label</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input"><code>input</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="inp"><code>inp</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-hidden-或-input-type-hidden-name-或-input-h-或-input-hidden"><code>input:hidden</code> 或 <code>input[type=hidden name]</code> 或 <code>input:h</code> 或 <code>input:hidden</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-text-或-input-t-或-inp"><code>input:text</code> 或 <code>input:t</code> 或 <code>inp</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-search-或-inp-type-search"><code>input:search</code> 或 <code>inp[type=search]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-email-或-inp-type-email"><code>input:email</code> 或 <code>inp[type=email]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-url-或-inp-type-url"><code>input:url</code> 或 <code>inp[type=url]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-password-或-inp-type-password-或-input-p-或-input-password"><code>input:password</code> 或 <code>inp[type=password]</code> 或 <code>input:p</code> 或 <code>input:password</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-datetime-或-inp-type-datetime"><code>input:datetime</code> 或 <code>inp[type=datetime]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;datetime&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-date-或-inp-type-date"><code>input:date</code> 或 <code>inp[type=date]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-datetime-local-或-inp-type-datetime-local"><code>input:datetime-local</code> 或 <code>inp[type=datetime-local]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;datetime-local&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-month-或-inp-type-month"><code>input:month</code> 或 <code>inp[type=month]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;month&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-week-或-inp-type-week"><code>input:week</code> 或 <code>inp[type=week]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;week&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-time-或-inp-type-time"><code>input:time</code> 或 <code>inp[type=time]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;time&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-number-或-inp-type-number"><code>input:number</code> 或 <code>inp[type=number]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-color-或-inp-type-color"><code>input:color</code> 或 <code>inp[type=color]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-c-或-input-checkbox"><code>input:c</code> 或 <code>input:checkbox</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-radio-或-inp-type-radio-或-input-r"><code>input:radio</code> 或 <code>inp[type=radio]</code> 或 <code>input:r</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-range-或-inp-type-range"><code>input:range</code> 或 <code>inp[type=range]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-file-或-inp-type-file-或-input-f"><code>input:file</code> 或 <code>inp[type=file]</code> 或 <code>input:f</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-submit-或-input-s"><code>input:submit</code> 或 <code>input:s</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-image"><code>input:image</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-image-或-input-i"><code>input:image</code> 或 <code>input:i</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-button"><code>input:button</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-button-或-input-b"><code>input:button</code> 或 <code>input:b</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="isindex"><code>isindex</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">isindex</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-reset-或-input-button-type-reset"><code>input:reset</code> 或 <code>input:button[type=reset]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="select"><code>select</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="option"><code>option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="textarea"><code>textarea</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="menu-context-或-menu-type-context-或-menu-c"><code>menu:context</code> 或 <code>menu[type=context]&gt;</code> 或 <code>menu:c</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">type</span>=<span class="string">&quot;context&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="menu-toolbar-或-menu-type-toolbar-或-menu-t"><code>menu:toolbar</code> 或 <code>menu[type=toolbar]&gt;</code> 或 <code>menu:t</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">type</span>=<span class="string">&quot;toolbar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="video"><code>video</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="audio"><code>audio</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="html-xml"><code>html:xml</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="keygen"><code>keygen</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keygen</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="command"><code>command</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">command</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bq-或-blockquote"><code>bq</code> 或 <code>blockquote</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="acr-或-acronym"><code>acr</code> 或 <code>acronym</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">acronym</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">acronym</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="fig-或-figure"><code>fig</code> 或 <code>figure</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="figc-或-figcaption"><code>figc</code> 或 <code>figcaption</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ifr-或-iframe"><code>ifr</code> 或 <code>iframe</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="emb-或-embed"><code>emb</code> 或 <code>embed</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="obj-或-object"><code>obj</code> 或 <code>object</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="src-或-source"><code>src</code> 或 <code>source</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span><span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cap-或-caption"><code>cap</code> 或 <code>caption</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="colg-或-colgroup"><code>colg</code> 或 <code>colgroup</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span><span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="fst-或-fset-或-fieldset"><code>fst</code> 或 <code>fset</code> 或 <code>fieldset</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-或-button"><code>btn</code> 或 <code>button</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-b-或-button-type-button"><code>btn:b</code> 或 <code>button[type=button]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-r-或-button-type-reset"><code>btn:r</code> 或 <code>button[type=reset]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-s-或-button-type-submit"><code>btn:s</code> 或 <code>button[type=submit]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="optg-或-optgroup"><code>optg</code> 或 <code>optgroup</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">optgroup</span>&gt;</span><span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="opt-或-option"><code>opt</code> 或 <code>option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="tarea-或-textarea"><code>tarea</code> 或 <code>textarea</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="leg-或-legend"><code>leg</code> 或 <code>legend</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span><span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="sect-或-section"><code>sect</code> 或 <code>section</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="art-或-article"><code>art</code> 或 <code>article</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="hdr-或-header"><code>hdr</code> 或 <code>header</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ftr-或-footer"><code>ftr</code> 或 <code>footer</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="adr-或-address"><code>adr</code> 或 <code>address</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="dlg-或-dialog"><code>dlg</code> 或 <code>dialog</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dialog</span>&gt;</span><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="str-或-strong"><code>str</code> 或 <code>strong</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="prog-或-progress"><code>prog</code> 或 <code>progress</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">progress</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="datag-或-datagrid"><code>datag</code> 或 <code>datagrid</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">datagrid</span>&gt;</span><span class="tag">&lt;/<span class="name">datagrid</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="datal-或-datalist"><code>datal</code> 或 <code>datalist</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">datalist</span>&gt;</span><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="kg-或-keygen"><code>kg</code> 或 <code>keygen</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keygen</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="out-或-output"><code>out</code> 或 <code>output</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">output</span>&gt;</span><span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="det-或-details"><code>det</code> 或 <code>details</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cmd-或-command"><code>cmd</code> 或 <code>command</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">command</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ol-或-ol-li"><code>ol+</code> 或 <code>ol&gt;li</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ul-或-ul-li"><code>ul+</code> 或 <code>ul&gt;li</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="dl-或-dl-dt-dd"><code>dl+</code> 或 <code>dl&gt;dt+dd</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span><span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="map-或-map-area"><code>map+</code> 或 <code>map&gt;area</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="table-或-table-tr-td"><code>table+</code> 或 <code>table&gt;tr&gt;td</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="colgroup-或-colg-或-colgroup-col"><code>colgroup+</code> 或 <code>colg+</code> 或 <code>colgroup&gt;col</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span> <span class="tag">&lt;<span class="name">col</span> /&gt;</span> <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="tr-或-tr-td"><code>tr+</code> 或 <code>tr&gt;td</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="select-或-select-option"><code>select+</code> 或 <code>select&gt;option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="optgroup-或-optg-或-optgroup-option"><code>optgroup+</code> 或 <code>optg+</code> 或 <code>optgroup&gt;option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">optgroup</span>&gt;</span><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id=""><code>!!!</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="4t"><code>!!!4t</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="4s"><code>!!!4s</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="xt"><code>!!!xt</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="xs"><code>!!!xs</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="xxs"><code>!!!xxs</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.1//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="c"><code>c</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- $&#123;child&#125; --&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cc-ie6"><code>cc:ie6</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lte IE 6]&gt; $&#123;child&#125; &lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cc-ie"><code>cc:ie</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE]&gt; $&#123;child&#125; &lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cc-noie"><code>cc:noie</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if !IE]&gt;&lt;!--&gt;</span> $&#123;child&#125; <span class="comment">&lt;!--&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p><a href="https://alrin0000.blogspot.com/2014/05/emmet.html">[參考] Emmet語法大全（補充中）</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 速查表 </tag>
            
            <tag> Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_VScode</title>
      <link href="/2021/02/23/link-VScode/"/>
      <url>/2021/02/23/link-VScode/</url>
      
        <content type="html"><![CDATA[<h4 id="外掛">外掛</h4><ul><li><h5 id="MJML">MJML</h5><ul><li><a href="https://github.com/mjmlio/mjml">MJML - Github</a></li><li><a href="https://uu9924079.medium.com/%E8%AE%93-email-%E5%88%87%E7%89%88%E4%B8%8D%E5%86%8D%E5%8F%AF%E6%80%95-mjml-%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97-2b9748a47f87">讓 Email 切版不再可怕－MJML 初次使用心得 - Medium</a> - 2021</li><li><a href="https://medium.com/schaoss-blog/build-rwd-email-template-via-mjml-9665421c4c46">透過 MJML 快速完成 RWD Email 排版 - Medium</a> - 2020</li></ul></li></ul><a id="more"></a><h4 id="設定">設定</h4><ul><li><h5 id="emmet">emmet</h5><ul><li><a href="https://chunchun0401.medium.com/vscode-%E8%A8%AD%E5%AE%9A-js-%E7%9A%84-emmet-609bcadfa40c">VScode 設定 js 的 emmet - Medium</a> - 2020</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> VScode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[議題]_關於那些被IE排擠的屬性</title>
      <link href="/2021/02/23/%E9%97%9C%E6%96%BC%E9%82%A3%E4%BA%9B%E8%A2%ABIE%E6%8E%92%E6%93%A0%E7%9A%84%E5%B1%AC%E6%80%A7/"/>
      <url>/2021/02/23/%E9%97%9C%E6%96%BC%E9%82%A3%E4%BA%9B%E8%A2%ABIE%E6%8E%92%E6%93%A0%E7%9A%84%E5%B1%AC%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<ul><li><h4 id="CSS-v2">CSS</h4><ul><li><h5 id="多行文本溢出顯示…">多行文本溢出顯示…</h5><ul><li><code>-webkit-line-clamp</code></li><li>需搭配 -webkit-box-orient 使用</li><li>目前支援line-clamp的，只有Chrome與Safari</li><li>Firefox與IE，需用高度來將超出的文字給隱藏起來</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  -webkit-box-orient: vertical;</span><br><span class="line">  -webkit-line-clamp: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">72px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://caniuse.com/?search=line-clamp">[Can I use] -webkit-line-clamp</a><br><a href="https://caniuse.com/?search=-webkit-box-orient">[Can I use] -webkit-box-orient</a><br><a href="https://www.minwt.com/webdesign-dev/css/18447.html">[參考] 免寫程式！透過CSS3將多行文字自動省略，並出現… - 梅問題教學網</a> - 2017<br><a href="https://www.itread01.com/content/1502438188.html">[參考] 多行文本溢出顯示…的方法 - ITREAD</a> - 2017<br><a href="https://css-tricks.com/almanac/properties/l/line-clamp/">[參考] line-clamp - CSS-TRICKS</a> - 2018<br><a href="https://ithelp.ithome.com.tw/articles/10245872">[參考] [iT邦] line-clamp - futian_shen</a> - 2020<br><a href="https://wsw0615.medium.com/%E6%83%B3%E7%9F%A5%E9%81%93%E5%97%8E-text-overflow%E6%8A%8A%E8%A1%8C%E5%B0%BE%E8%AE%8A%E6%88%90-e86ad8bf827c">[參考] 想知道嗎：Text-overflow把行尾變成… - Medium</a> - 2020</p></blockquote></li><li><h5 id="Flex-v2">Flex</h5><ul><li><code>flex: 1;</code></li></ul></li></ul></li></ul><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 被IE排擠 </tag>
            
            <tag> 議題 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]-資料視覺化</title>
      <link href="/2021/02/22/link-%E8%B3%87%E6%96%99%E8%A6%96%E8%A6%BA%E5%8C%96/"/>
      <url>/2021/02/22/link-%E8%B3%87%E6%96%99%E8%A6%96%E8%A6%BA%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h4 id="其他-v6">其他</h4><ul><li><a href="https://www.luoow.com/dc_tw/103222144">拿好！52個實用的資料視覺化工具！ - 微文庫</a> - 2017</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 資料視覺化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_HTTP</title>
      <link href="/2021/02/21/link-HTTP/"/>
      <url>/2021/02/21/link-HTTP/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v3">系列文章</h4><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP">HTTP系列 - MDN Web Docs</a></li></ul><a id="more"></a><h4 id="跨源資源共享-CORS">跨源資源共享 (CORS)</h4><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS">CORS - MDN Web Docs</a></li></ul><h4 id="HTTP緩存機制">HTTP緩存機制</h4><ul><li><a href="https://www.bilibili.com/read/cv3403681/">徹底弄懂HTTP緩存機制及原理 - bilibili</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Git</title>
      <link href="/2021/02/19/link-Git/"/>
      <url>/2021/02/19/link-Git/</url>
      
        <content type="html"><![CDATA[<h4 id="其他">其他</h4><ul><li><a href="https://medium.com/@alex_cheng_9527/git-%E8%87%AA%E7%B0%BD%E6%86%91%E8%AD%89%E5%95%8F%E9%A1%8C-self-signed-certificate-1ebba5eaf61c">[Git SSL自簽憑證問題] - Medium</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Markdown</title>
      <link href="/2021/02/19/link-Markdown/"/>
      <url>/2021/02/19/link-Markdown/</url>
      
        <content type="html"><![CDATA[<h4 id="其他-v2">其他</h4><ul><li><a href="https://www.twblogs.net/a/5c0612dcbd9eee0cf7a20d63">原來組織架構圖可以醬紫畫 - 台部落</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_web-browser</title>
      <link href="/2021/02/16/link-web-browser/"/>
      <url>/2021/02/16/link-web-browser/</url>
      
        <content type="html"><![CDATA[<h4 id="瀏覽器渲染">瀏覽器渲染</h4><ul><li><a href="https://shubo.io/browser-rendering/">瀏覽器轉譯/渲染(Browser Rendering)原理 - Shubo</a> - 2016</li><li><a href="https://blog.techbridge.cc/2016/04/02/Browser-Rendering-Optimization/">Browser Rendering Optimization - TechBridge 技術共筆部落格</a> - 2016</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> web-browser </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_SASS/SCSS</title>
      <link href="/2021/02/16/link-SASS/"/>
      <url>/2021/02/16/link-SASS/</url>
      
        <content type="html"><![CDATA[<h4 id="入門-v5">入門</h4><ul><li><a href="https://sass-lang.com/guide">Sass官網</a></li><li><a href="https://hackmd.io/@FortesHuang/SyKirdx78">學習Sass，你需要更有效率的切版方式(上) - hackmd</a> - 2020</li><li><a href="https://hackmd.io/@FortesHuang/HJPE3sCXU">學習Sass，你需要更有效率的切版方式(下) - hackmd</a> - 2020</li></ul><a id="more"></a><h4 id="map-get">map get</h4><ul><li><a href="https://wcc723.github.io/sass/2015/02/11/sass-map-get/">Sass map get - 卡斯伯</a> - 2015</li></ul><h4 id="Animation-v2">Animation</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10159400">[iT邦]Sass教學 (26) - 使用animate.scss增強網頁瀏覽體驗 - 廖洧杰</a> - 2014</li><li><a href="https://happyjayxin.medium.com/%E5%88%A9%E7%94%A8-scss-%E6%9B%B4%E7%B0%A1%E6%BD%94%E7%9A%84%E4%BD%BF%E7%94%A8-css-animation-f0717a958a69">利用 SCSS 更方便的使用 CSS Animation - Medium</a> - 2019</li><li><a href="https://css-tricks.com/repeatable-staggered-animation-three-ways-sass-gsap-web-animations-api/">loading動態圖 - CSS-Tricks</a> - 2020</li><li><a href="https://github.com/tgdev/animate-sass">animate-sass - Github</a></li></ul><h4 id="其他議題-v4">其他議題</h4><ul><li><a href="https://wcc723.github.io/sass/2013/08/26/sass-hsl-funtion/">HSL function - 卡斯伯</a> - 2013</li><li><a href="https://medium.com/d-d-mag/%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-sass-%E6%8A%80%E5%B7%A7-c97d4d5e0fc4">你可能不知道的 Sass 技巧 - 愷開</a> - 2017</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> SASS/SCSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_React</title>
      <link href="/2021/02/16/link-React/"/>
      <url>/2021/02/16/link-React/</url>
      
        <content type="html"><![CDATA[<h4 id="入門-v4">入門</h4><ul><li><a href="https://zh-hant.reactjs.org/">[官網] - ReactJS</a></li><li><a href="https://ithelp.ithome.com.tw/users/20129269/ironman/3050">[iT邦] React 30 天學習歷程 - gigd123</a> - 2020</li><li><a href="https://www.youtube.com/watch?v=zqV7NIFGDrQ">[Youtube]【前端速成】React 快速入門｜Tiktok工程師帶你入門前端｜布魯斯前端</a> - 2021</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 框架 </tag>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_VR</title>
      <link href="/2021/02/16/link-VR/"/>
      <url>/2021/02/16/link-VR/</url>
      
        <content type="html"><![CDATA[<h4 id="3D產品展示">3D產品展示</h4><ul><li><a href="https://www.trplus.com.tw/p/016051276">Demo</a></li><li><a href="https://luxion.atlassian.net/wiki/spaces/K6M/pages/5767183/KeyShotVR+Variables">運用技術 - VR產品圖片產生器</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_TypeScript</title>
      <link href="/2021/02/14/link-TypeScript/"/>
      <url>/2021/02/14/link-TypeScript/</url>
      
        <content type="html"><![CDATA[<h4 id="入門-v6">入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20120614/ironman/2685">[iT邦] - 讓 TypeScript 成為你全端開發的 ACE！ - Maxwell Alexius</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Bootstrap</title>
      <link href="/2021/02/14/link-Bootstrap/"/>
      <url>/2021/02/14/link-Bootstrap/</url>
      
        <content type="html"><![CDATA[<h4 id="BS4">BS4</h4><ul><li><a href="https://www.slideshare.net/chihchengwang3/bootstrap-keynote">Bootstrap 4與3的差異 - 卡斯伯</a> - 2017</li></ul><h4 id="BS5">BS5</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/3796">[iT邦] 金魚都能懂的Bootstrap5網頁框架開發 - CSScoke</a> - 2020</li><li><a href="https://www.youtube.com/playlist?list=PLqivELodHt3jq3oWBZfdhMu0GE7774HBW">[Youtube] 金魚都能懂的Bootstrap5網頁框架開發 - CSScoke</a> - 2020</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Bit</title>
      <link href="/2021/02/14/link-Bit/"/>
      <url>/2021/02/14/link-Bit/</url>
      
        <content type="html"><![CDATA[<h4 id="入門-v3">入門</h4><ul><li><a href="https://www.twblogs.net/a/5d7110fbbd9eee541c3401f1">Bit系列 - 組件管理工具Bit</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Bit </tag>
            
            <tag> 管理工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Angular</title>
      <link href="/2021/02/14/link-Angular/"/>
      <url>/2021/02/14/link-Angular/</url>
      
        <content type="html"><![CDATA[<h4 id="入門-v2">入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20090728/ironman/1600">[iT邦] Angular 深入淺出三十天 - Leo</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/695">[iT邦] 入門AngularJS筆記與前端領域的學習筆記分享 - iamya</a> - 2013</li></ul><a id="more"></a><h4 id="測試">測試</h4><ul><li><a href="https://www.facebook.com/will.fans/videos/251547546415443?sfns=mo">[Facebook 影片] 多奇技術分享會：Angular Testing 101 - Will保哥</a> - 2021</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Angular </tag>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_NodeJs</title>
      <link href="/2021/02/14/link-NodeJs/"/>
      <url>/2021/02/14/link-NodeJs/</url>
      
        <content type="html"><![CDATA[<h4 id="NodeJs">NodeJs</h4><ul><li><a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js 教程 - Runoob</a></li></ul><a id="more"></a><h4 id="NVM">NVM</h4><ul><li><a href="https://sasacode.wordpress.com/">Mac下的NVM - HappyCoder 的填坑筆記</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10184980">[iT邦]Node.js 必備工具 - NVM 、 NPM - Ivan Wei</a> - 2016</li><li><a href="https://ithelp.ithome.com.tw/articles/10207177">[iT邦]nvm - 版本隨你切 - 六角學院</a> - 2018</li><li><a href="https://medium.com/%E5%93%86%E5%95%A6%E5%AF%A6%E9%A9%97%E5%AE%A4/node-js%E7%AE%A1%E7%90%86%E7%A5%9E%E5%99%A8nvm-b6acfca44ea5">Node.js管理神器nvm - Medium</a> - 2018</li><li><a href="https://noob.tw/nvm/amp/">nvm：快速安裝、切換不同版本的 Node.js - NOOB</a> - 2019</li><li><a href="https://www.onejar99.com/nvm-install-for-windows/">安裝 NVM (Node Version Manager) 來切換 Node.js 版本 for Windows - OneJar的隧道</a> - 2019</li><li><a href="https://bmhiamso1.medium.com/ubuntu-%E5%AE%89%E8%A3%9D-nvm-npm-3bf6bffa9152">Ubuntu 安裝 nvm +npm - Medium</a> - 2019</li><li><a href="https://titangene.github.io/article/nvm.html">nvm：安裝、切換不同 Node.js 版本的管理器 - Titangene Blog</a> - 2020</li></ul><h4 id="NPM">NPM</h4><ul><li><a href="https://pjchender.blogspot.com/p/blog-page.html">NPM系列 - 從手動到自動 - PJCHENder</a></li><li><a href="https://medium.com/itsems-frontend/whats-npx-e83400efe7f8">npx 是什麼? 跟 npm 差在哪? - Medium</a></li><li><a href="https://javascript.ruanyifeng.com/nodejs/npm.html">npm模塊管理器 - 阮一峰</a></li><li><a href="https://medium.com/html-test/%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B-%E4%BD%BF%E7%94%A8npm%E5%A5%97%E4%BB%B6-317beefdf182">從零開始: 使用NPM套件 - medium</a> - 2017</li><li><a href="https://www.runoob.com/nodejs/nodejs-npm.html">NPM 使用介绍 - Runoob</a></li><li><a href="https://cloud.tencent.com/developer/chapter/18114">CLI命令 - 雲社區</a></li></ul><h4 id="NPX">NPX</h4><ul><li><a href="https://www.ruanyifeng.com/blog/2019/02/npx.html">npx 使用教程 - 阮一峰</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 管理工具 </tag>
            
            <tag> Node </tag>
            
            <tag> NPM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_jQuery</title>
      <link href="/2021/02/14/link-jQuery/"/>
      <url>/2021/02/14/link-jQuery/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v9">系列文章</h4><ul><li><a href="https://pjchender.blogspot.com/p/blog-page_18.html">jQuery系列 - PJCHENder</a></li><li><a href="https://www.itread01.com/content/1542724273.html">原生JS替代jQuery的各種方法彙總 - ITREAD01</a></li></ul><a id="more"></a><h4 id="議題">議題</h4><ul><li><a href="https://tw.alphacamp.co/blog/jquery-javascript-library-overview">什麼是 jQuery？前端框架盛行還需要JavaScript函式庫嗎？ - alphacamp</a></li></ul><h4 id="套件">套件</h4><ul><li><a href="https://www.ucamc.com/e-learning/javascript/298-fullpage-js%E5%96%AE%E9%A0%81%E5%BC%8F%E9%81%B8%E5%96%AE%E6%BB%91%E5%8B%95%E5%8D%80%E5%A1%8A%E7%9A%84%E5%85%A8%E5%B1%8F%E6%BB%BE%E5%8B%95%E7%B6%B2%E7%AB%99">jQuery - fullPage.js - 使用fullPage.js設計單頁式選單滑動區塊的全屏滾動網站 - ucamc</a> - 2018</li><li><a href="https://www.itread01.com/content/1520158803.html">jQuery - fullPage.js - 學習 | jQuery全屏滾動插件FullPage.js - ITREAD01</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_HTML5</title>
      <link href="/2021/02/14/link-HTML5/"/>
      <url>/2021/02/14/link-HTML5/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v2">系列文章</h4><ul><li><a href="https://pjchender.blogspot.com/search/label/HTML">HTML5系列 - PJCHENder</a></li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/387">[iT邦] 只是路過 HTML5 - iamya</a> - 2012</li></ul><a id="more"></a><h4 id="其他議題-v2">其他議題</h4><ul><li><a href="https://pjchender.blogspot.com/2017/01/html-5-data-attribute.html?m=1">[技術分享] 什麼是 HTML 5 中的資料屬性（data-* attribute） - PJCHENder</a></li><li><a href="https://medium.com/@papashong1111/html-%E9%9B%BB%E5%AD%90%E5%A0%B1%E6%94%BB%E7%95%A5-7fe3a4fcffd2">HTML 電子報攻略 - Medium</a></li><li><a href="https://segmentfault.com/a/1190000017896469">referrer策略和meta標籤的問題 - Segmentfault</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_JavaScript</title>
      <link href="/2021/02/14/link-JavaScript/"/>
      <url>/2021/02/14/link-JavaScript/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v4">系列文章</h4><ul><li><a href="https://pjchender.blogspot.com/p/blog-page_72.html">JavaScript系列 - PJCHENder</a></li><li><a href="https://pjchender.blogspot.com/2017/06/javascript-understanding-weird-part.html">你所不知道的JavaScript - PJCHENder</a> - 2017</li><li><a href="https://pjchender.blogspot.com/2017/06/js30.html">JS30 - PJCHENder</a> - 2017</li><li><a href="https://openhome.cc/Gossip/ECMAScript/index.html">ECMASCRIPT - openhome</a></li><li><a href="https://wangdoc.com/javascript/index.html">JavaScript 教程 - WangDoc</a></li><li><a href="https://ithelp.ithome.com.tw/users/20065504/ironman/1259">[iT邦] 重新認識 JavaScript - Kuro</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20112656/ironman/2782">[iT邦] 好 Js 不學嗎 !? JavaScript 入門中的入門 - Vita Ora</a> - 2019</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dYbxVoYDyT_fmXZHnuKg2Fq">[Youtube] 深入淺出 Javascript30 快速導覽 - Alex 宅幹嘛</a> - 2020</li><li><h5 id="ES6">ES6</h5><ul><li><a href="https://es6.ruanyifeng.com/">ECMAScript 6 入門 - 阮一峰</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes">Classes - Mozilla</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes/constructor">建構子 - Mozilla</a></li></ul></li></ul><a id="more"></a><h4 id="基礎-v3">基礎</h4><ul><li><p><a href="https://fred-zone.blogspot.com/2017/01/javascript-mapreduce.html?m=1">上手使用 JavaScript 的 Map、Reduce 吧！ - Fred chien</a> - 2017</p></li><li><h5 id="物件">物件</h5><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Learn/JavaScript/Objects">JavaScript 物件介紹 - mozilla</a></li></ul></li><li><h5 id="DOM">DOM</h5><ul><li><a href="https://jmln.tw/blog/2017-07-07-vanilla-javascript-dom-manipulation.html">都 2017 年了，學學用原生 JS 來操作 DOM 吧 - Jimmy</a> - 2017</li><li><a href="https://notfalse.net/64/js-dom-2017">學學用原生JS來操作DOM吧 - notfalse技術客</a> - 2018</li></ul></li><li><h5 id="編程風格">編程風格</h5><ul><li><a href="https://es6.ruanyifeng.com/#docs/style">編程風格 - 阮一峰</a></li></ul></li><li><h5 id="console">console</h5><ul><li><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/218950/">除Console.log()外更多的Javascript除錯命令 - 程式前沿</a></li></ul></li><li><h5 id="Array">Array</h5><ul><li><a href="https://www.oxxostudio.tw/articles/201908/js-array.html">JavaScript Array 陣列操作方法大全 ( 含 ES6 ) - oxxostudio</a> - 2019</li></ul></li><li><h5 id="閉包">閉包</h5><ul><li><a href="https://openhome.cc/Gossip/JavaScript/Closure.html">閉包 - openhome</a></li><li><a href="https://pjchender.blogspot.com/2017/05/javascript-closure.html">深入淺出瞭解 JavaScript 閉包（closure） - PJCHENder</a> - 2017</li><li><a href="https://cythilya.github.io/2018/10/22/closure/">你懂 JavaScript 嗎？#15 閉包（Closure） - Summer。桑莫。夏天</a> - 2018</li><li><a href="https://blog.techbridge.cc/2018/12/08/javascript-closure/">所有的函式都是閉包：談 JS 中的作用域與 Closure - TechBridge 技術共筆部落格</a> - 2018</li><li><a href="https://wangdoc.com/javascript/types/function.html#%E9%97%AD%E5%8C%85">閉包 - WangDoc</a></li></ul></li><li><h5 id="Proxy">Proxy</h5><ul><li><a href="https://blog.techbridge.cc/2018/05/27/js-proxy-reflect/">一起來了解 Javascript 中的 Proxy 與 Reflect - TechBridge 技術共筆部落格</a> - 2018</li></ul></li><li><h5 id="正規表達式">正規表達式</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10221016">[iT邦]JavaScript - RegExp 物件 - Vita Ora</a> - 2019</li></ul></li></ul><h4 id="其他議題-v3">其他議題</h4><ul><li><h5 id="JSDoc-文檔註解">JSDoc 文檔註解</h5><ul><li><a href="https://www.ucamc.com/e-learning/javascript/250-javascript-use-jsdoc">Javascript文檔註解規則使用方式 @use JSDoc - ucamc</a> - 2018</li></ul></li><li><h5 id="Preload-Prefetch-Preconnect">Preload, Prefetch, Preconnect</h5><ul><li><a href="https://shubo.io/preload-prefetch-preconnect/">深入淺出 Preload, Prefetch 和 Preconnect：三種加快網頁載入速度的 Resource Hint 技巧 - Shubo</a> - 2019</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/672381/">資源提示——什麼是Preload，Prefetch和Preconnect？ - 程式前沿</a> - 2019</li></ul></li><li><p><a href="https://blog.csdn.net/dKnightL/article/details/89517010">拖曳時，禁止觸發點擊事件的三種方法 - CSDN</a> - 2019</p></li><li><p><a href="https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror">使用window.onerror捕獲並報告JavaScript錯誤 - SENTRY</a> - 2016</p></li><li><p><a href="https://kuro.tw/posts/2019/08/04/JS-%E5%86%B7%E7%9F%A5%E8%AD%98-%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-void/">JS 冷知識: 你所不知道的 void - Kuro</a> - 2019</p></li><li><p><a href="https://ithelp.ithome.com.tw/articles/10197335">網頁的生命週期 - Kuro</a> - 2018</p></li><li><p><a href="https://pjchender.blogspot.com/2016/06/javascriptprototypeprototype.html">[筆記] 了解JavaScript中原型(prototype)、原型鍊（prototype chain）和繼承(inheritance)的概念 - PJCHENder</a> - 2016</p></li><li><p><a href="https://www.796t.com/article.php?id=137003">詳解JavaScript型別判斷的四種方法 - 程式人生</a> - 2020</p></li><li><p><a href="https://hooty868.medium.com/%E4%BD%A0%E7%9F%A5%E9%81%93javascript%E5%85%B6%E5%AF%A6%E6%98%AF%E5%96%AE%E7%B7%9A%E7%A8%8B%E5%97%8E-8eb6fce68920">你知道JavaScript其實是單線程嗎 ? - Steve chu</a> - 2020</p></li></ul><h4 id="第三方套件">第三方套件</h4><ul><li><a href="https://chriscavs.github.io/rallax-demo/">Rallax.js - 滾動視差效果</a></li><li><a href="https://github.com/asvd/dragscroll">dragscroll.js - 拖曳捲動</a></li><li><h4 id="瀑布流">瀑布流</h4><ul><li><a href="https://isotope.metafizzy.co/">isotope.js - 可篩選排序的瀑布流</a></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_CSS</title>
      <link href="/2021/02/14/link-CSS/"/>
      <url>/2021/02/14/link-CSS/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章">系列文章</h4><ul><li><p><a href="https://pjchender.blogspot.com/search/label/CSS">CSS系列 - PJCHENder</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20117586/ironman/2617">[iT邦] 重新認識 CSS - Titangene</a> - 2019</p></li><li><h5 id="金魚系列">金魚系列</h5><ul><li><a href="http://csscoke.com/">CSS系列 - CSScoke</a></li><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/3803">[iT邦] 金魚都能懂的CSS必學屬性 - CSScoke</a> - 2020</li></ul></li></ul><a id="more"></a><h4 id="工具">工具</h4><ul><li><a href="https://code.ciaoca.com/style/css-cheat-sheet/">CSS速查表</a></li><li><h5 id="reset">reset</h5><ul><li><a href="https://github.com/necolas/normalize.css">normalize.css</a></li></ul></li></ul><h4 id="基礎">基礎</h4><ul><li><h5 id="CSS選取器">CSS選取器</h5><ul><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2799">[iT邦] 金魚都能懂的 CSS 選取器 - CSScoke</a> - 2019</li></ul></li><li><h5 id="CSS模組化-設計模式">CSS模組化(設計模式)</h5><ul><li><a href="https://www.slideshare.net/kurotanshi/css-oocss-smacss-bem">[PPT]漫談 CSS 架構方法 - 以 OOCSS, SMACSS, BEM 為例 - Kuro Hsu</a> - 2014</li><li><a href="https://cythilya.github.io/2018/06/05/css-methodologies/">OOCSS、SMACSS、BEM、CSS Modules、CSS in JS - Summer。桑莫。夏天</a> - 2018</li><li><a href="https://chupainotebook.blogspot.com/2019/05/bemcss.html?m=1">BEM，CSS 設計模式 - 竹白記事本</a> - 2019</li></ul></li><li><h5 id="CSS變數">CSS變數</h5><ul><li><a href="https://www.itread01.com/content/1541942662.html">CSS變數實用指南及注意事項 - ITREAD01</a> - 2018</li><li><a href="https://w3c.hexschool.com/blog/21985acb">原生 CSS 變數運用技巧 - W3HexSchool</a> - 2019</li><li><a href="https://www.mdeditor.tw/pl/2AUE/zh-tw">自定義變數帶你隨心所欲，一鍵換膚 - MdEditor</a> - 2019</li><li><a href="https://www.itread01.com/content/1550553325.html">CSS 自定義屬性的策略指南 - ITREAD01</a> - 2019</li></ul></li><li><h5 id="CSS權重">CSS權重</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10196454">小事之 CSS 權重 (css specificity) - 小艾iris</a> - 2018</li></ul></li><li><h5 id="垂直置中">垂直置中</h5><ul><li><a href="http://csscoke.com/2018/08/21/css-vertical-align/">CSS垂直置中技巧 - CSScoke</a></li><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2092">[iT邦] 連續30天的超實務網頁設計的垂直置中教學</a></li></ul></li><li><h5 id="Grid">Grid</h5><ul><li><a href="https://www.youtube.com/watch?v=fYcz3FUqv7M&amp;feature=youtu.be">[Youtube] CSS GRID / CSS格線好好玩【完整版】 | CSS教學 | CSS格線 - CSScoke</a></li><li><a href="https://cssgridgarden.com/#zh-tw">[互動] - Grid - 蘿蔔</a></li><li><a href="https://ballaediworkshop.blogspot.com/2019/10/css-grid-introduction-and-tutorial.html?m=1">Css Grid 概念介紹及使用教學 - Ballaedi</a></li></ul></li><li><h5 id="Flex">Flex</h5><ul><li><a href="https://www.youtube.com/watch?v=_nCBQ6AIzDU&amp;feature=youtu.be">[Youtube] 玩轉 CSS FLEX | CSS教學 | 網頁教學 | 網頁設計 - CSScoke</a></li><li><a href="https://flexboxfroggy.com/#zh-tw">[互動] - Flex - 青蛙</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10226145">[iT邦] flex 1 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10226454">[iT邦] flex 2 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10226856">[iT邦] flex 3 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10227188">[iT邦] flex 4 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10227461">[iT邦] flex 5 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10227769">[iT邦] flex 6 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10228020">[iT邦] flex 7 - yachen</a></li></ul></li><li><h5 id="line-box">line box</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10225029">[iT邦] 淺談 line box 高度 - yachen</a></li></ul></li><li><h5 id="box-shadow">box-shadow</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10220112">[iT邦] 番外篇 - 胡搞 box-shadow (上) - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10220686">[iT邦] 番外篇 - 胡搞 box-shadow (中) - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10221008">[iT邦] 番外篇 - 胡搞 box-shadow (下) - yachen</a></li></ul></li><li><h5 id="calc">calc</h5><ul><li><a href="https://dotblogs.com.tw/explooosion/2020/06/05/001534">calc 結合變數，從 CSS、SCSS 喇到 Styled Components - Robby</a> - 2020</li></ul></li></ul><h4 id="Animation">Animation</h4><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/CSS_Animations/Using_CSS_animations">CSS animation 設定 - Mozilla</a></li></ul><h4 id="npm-套件">npm 套件</h4><ul><li><a href="https://animate.style/">Animate.css</a></li></ul><h4 id="其他議題">其他議題</h4><ul><li><h5 id="Collapsing-margins">Collapsing margins</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10218740">[iT邦] Collapsing margins - yachen</a></li></ul></li><li><h5 id="滿版">滿版</h5><ul><li><a href="https://css-tricks.com/almanac/properties/o/object-fit/">object-fit - CSS-TRICKS</a></li></ul></li><li><h5 id="判斷觸控設備">判斷觸控設備</h5><ul><li><a href="https://www.zhangxinxu.com/wordpress/2020/01/css-any-hover-media/">CSS any-hover any-pointer media查询与交互体验提升 - 鑫空間,鑫生活</a> - 2020</li></ul></li><li><h5 id="幾何圖形">幾何圖形</h5><ul><li><a href="https://kknews.cc/code/6ae4lop.html">用純css做幾何圖形的技巧 (一) - 每日頭條</a> - 2019</li><li><a href="https://kknews.cc/zh-tw/code/nle3rk8.html">用純css做幾何圖形的技巧（二）clip-path - 每日頭條</a> - 2019</li></ul></li><li><h5 id="postcss">postcss</h5><ul><li><h6 id="cssnext">cssnext</h6><ul><li><a href="https://blog.csdn.net/qq_20282263/article/details/79437145">postcss-cssnext features - CSDN</a> - 2018</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/752087/">PostCSS以及cssnext語法 - 程式前沿</a></li></ul></li><li><h6 id="pxtorem">pxtorem</h6><ul><li><a href="https://www.npmjs.com/package/postcss-pxtorem">px轉rem - npm</a></li></ul></li></ul></li></ul><h4 id="神人膜拜區">神人膜拜區</h4><ul><li><a href="https://codepen.io/miocene/pen/mjLPVp">Moustached Nanny - Julia Miocene</a>、<a href="https://codepen.io/miocene">作者 - Julia Miocene</a></li><li><a href="https://codepen.io/charisseysabel/pen/adXGMe">A love for Cats - Charisse</a></li></ul><h4 id="跨平台解法">跨平台解法</h4><ul><li><h5 id="Safari">Safari</h5></li><li><a href="https://stackoverflow.com/questions/3047337/does-overflowhidden-applied-to-body-work-on-iphone-safari">overflow:hidden</a></li><li><a href="https://benfrain.com/preventing-body-scroll-for-modals-in-ios/">Preventing body scroll for modals in iOS</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Hexo</title>
      <link href="/2021/02/11/link-Hexo/"/>
      <url>/2021/02/11/link-Hexo/</url>
      
        <content type="html"><![CDATA[<h4 id="教學">教學</h4><ul><li><a href="https://hexo.io/zh-tw/docs/">[Hexo官方] - 中文文件</a></li><li><a href="https://yogapan.github.io/2017/08/11/%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E9%83%A8%E8%90%BD%E6%A0%BC/">用Hexo + Github Pages搭建個人部落格 - 小蛇蛇的筆記</a></li><li><a href="https://ed521.github.io/2019/08/hexo-admin/">使用 hexo-admin 後台管理工具 - 瑪利歐的部落格</a> - 2019</li></ul><a id="more"></a><h4 id="API">API</h4><ul><li><a href="https://hexo.io/zh-tw/docs/configuration.html">[Hexo官方] - _config.yml配置</a></li></ul><h4 id="Themes">Themes</h4><ul><li><a href="https://hexo.io/themes/">[Hexo官方] - 樣式庫</a></li><li><a href="https://github.com/Molunerfinn/hexo-theme-melody">[melody] - github</a></li><li><a href="https://molunerfinn.com/">[melody] - demo</a></li><li><a href="https://github.com/theme-next/hexo-theme-next">[next] - github</a></li></ul><h4 id="託管">託管</h4><ul><li><a href="https://hyrepo.com/tech/hexo-firebase-blog/">使用Hexo+Firebase搭建平台托管的静态博客 - Decouple</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_前端技術彙整</title>
      <link href="/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/"/>
      <url>/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/</url>
      
        <content type="html"><![CDATA[<h4 id="從零開始">從零開始</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20060646/ironman/477">新手前端日記 - chibc</a> - 2012</li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/494">[iT邦] 視覺設計師邁向程式設計師養成計畫 - iamya</a> - 2012</li><li><a href="https://ithelp.ithome.com.tw/users/20107637/ironman/1457">[iT邦] 前端新手村 - Chris</a> - 2017</li><li><a href="https://ithelp.ithome.com.tw/users/20102825/ironman/1314">[iT邦] 重新學習網頁設計 - Cian</a> - 2017</li><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2072">[iT邦] 金魚都能懂的網頁設計入門 - CSScoke</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20112158/ironman/1914">[iT邦] 前端菜焦阿日記 - mangoSu</a> - 2018</li><li><a href="https://medium.com/i-am-mike/%E5%9C%A8%E9%96%8B%E5%A7%8B%E5%AF%ABcode%E5%89%8D%E7%9A%84%E9%81%B8%E6%93%87-662b3a2debe8">在開始寫Code之前？ - Medium</a> - 2018</li><li><a href="https://www.youtube.com/playlist?list=PLqivELodHt3iL9PgGHg0_EF86FwdiqCre">[Youtube] 金魚都能懂的網頁設計入門 - CSScoke</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20120740/ironman/2632">[iT邦] 前端新手進化史 - yachen</a> - 2019</li><li><a href="https://hulitw.medium.com/front-end-learning-path-55201571ecfe">紮實的網頁前端學習路線與資源推薦 - Medium</a> - 2019</li><li><a href="https://www.cakeresume.com/resources/career-change-frontend-engineers.amp?locale=zh-TW">【轉職前端工程師】無經驗沒關係！給初學者的前端基本介紹 - CakeResume</a> - 2020</li></ul><a id="more"></a><h4 id="平台">平台</h4><ul><li><p><a href="https://cythilya.github.io/">[blog] Summer。桑莫。夏天</a></p></li><li><p><a href="https://blog.techbridge.cc/">[blog] TechBridge 技術共筆部落格</a></p></li><li><p><a href="https://pjchender.blogspot.com/">[blog] 那些沒告訴你的小細節 - PJCHENder</a></p></li><li><p><a href="https://wcc723.github.io/">[blog] 卡斯伯</a></p></li><li><p><a href="https://www.oxxostudio.tw/list.html">[blog] oxxostudio</a></p></li><li><p><a href="https://dotblogs.com.tw/wasichris">[blog] 搞搞就懂 - CHRIS CHEN</a></p></li><li><p><a href="https://cloud.tencent.com/developer/devdocs">[blog] 雲社區</a></p></li><li><p><a href="https://codertw.com/">[blog] 程式前沿</a></p></li><li><p><a href="https://medium.com/@kalanyei">[medium] 愷開</a></p></li><li><p><a href="https://medium.com/@sexyoung1985">[medium] sexyoung</a></p></li><li><p><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dZcmTWAHWDgiLhkFAQh-xpA">[Youtube] 網站開發直播主題集合 - Alex 宅幹嘛</a> - 2018</p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20040221/ironman">[iT邦] 廖洧杰</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20103676/ironman/">[iT邦] 若虛</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20071512/ironman">[iT邦] iamya</a></p></li><li><p><a href="https://ballaediworkshop.blogspot.com/">Ballaedi</a></p></li><li><p><a href="https://wsw0615.medium.com/">W.S.Wade</a></p></li></ul><h4 id="切版">切版</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2623">[iT邦] 金魚都能懂的網頁切版 - CSScoke</a> - 2019</li><li><a href="https://www.youtube.com/playlist?list=PLqivELodHt3hxeuLX8PYaI8u1GcDaBoJo">[Youtube] 金魚都能懂的網頁切版 - CSScoke</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20001433/ironman/3142?page=1">[iT邦] 我說那個手機版 - 閃光洽</a> - 2020</li></ul><h4 id="題庫">題庫</h4><ul><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/607762/">前端面試題彙總 筆試題 - 程式前沿</a></li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/974">[iT邦] 前端小字典三十天【每日一字】- iamya</a> - 2014</li></ul><h4 id="效能優化">效能優化</h4><ul><li><a href="https://medium.com/starbugs/%E4%BB%8A%E6%99%9A-%E6%88%91%E6%83%B3%E4%BE%86%E9%BB%9E-web-%E5%89%8D%E7%AB%AF%E6%95%88%E8%83%BD%E5%84%AA%E5%8C%96%E5%A4%A7%E8%A3%9C%E5%B8%96-e1a5805c1ca2">今晚，我想來點 Web 前端效能優化大補帖！ - Medium</a> - 2020</li><li><a href="https://wyattkidd.medium.com/%E9%AB%98%E6%95%88%E8%83%BD%E7%B6%B2%E7%AB%99%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F-f7b7b9499b2e">【翻譯】高效能網站應用程式 - Medium</a> - 2020</li><li><a href="http://skyroxas.tw/%e5%89%8d%e7%ab%af%e6%95%88%e8%83%bd%e5%84%aa%e5%8c%96-%e5%89%8d%e7%ab%af%e6%95%88%e8%83%bd%e5%84%aa%e5%8c%96%e7%9a%84%e7%9b%ae%e7%9a%84%e8%88%87%e9%87%8d%e8%a6%81%e6%80%a7/">[前端效能優化] 前端效能 優化的 目的 與 重要性 - ZHI-WEI</a> - 2017</li><li><a href="https://ppfocus.com/0/di4b1b6c6.html">你不知道的「前端性能優化」知識，我都給你總結好了 - 人人焦點</a> - 2020</li></ul><h4 id="關注未來">關注未來</h4><ul><li><a href="https://kknews.cc/code/l4moaez.amp">前端開發，2019年往這個方向走，最新技術棧公布，國外大牛總結 - 每日頭條</a> - 2018</li><li><a href="https://zhuanlan.zhihu.com/p/53043557">2019 - Web開發技術指南和趨勢 - 知乎</a> - 2019</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/712917/">從2019看2020前端發展趨勢 - 程式前沿</a> - 2019</li><li><a href="https://www.infoq.cn/article/VdJX0JkmSm_dkJBgF23r">2020年你應該知道的8 種前端JavaScript 趨勢和工具 - alphacamp</a> - 2019</li><li><a href="https://twgreatdaily.com/Ab5UHHABgx9BqZZIPEa_.html">2020年讓人難以置信的50款前端新工具：JavaScript插件篇（一） - 前端達人</a> - 2020</li><li><a href="https://blog.csdn.net/Ed7zgeE9X/article/details/104306013">2020年讓人難以置信的50款前端新工具：CSS &amp; HTML 工具篇（二） - 前端達人</a> - 2020</li><li><a href="https://tw.alphacamp.co/blog/javascript-full-stack-developer-journey-and-skilltree?utm_source=facebook&amp;utm_medium=paidsocial&amp;utm_campaign=Rem-SiteVisitors&amp;utm_term=Rem&amp;utm_content=blog-skilltree-v2">2020年 全端技能樹 - alphacamp</a> - 2020</li><li><a href="https://kknews.cc/code/254438r.amp">你值得擁有的 11 個前端開發利器 - 每日頭條</a> - 2020</li><li><a href="https://www.zhihu.com/question/376613288">2020年，有哪些即將讓人眼前一亮的前端新技術？ - 知乎</a> - 2020</li><li><a href="https://zhuanlan.zhihu.com/p/111532573">2020年不可不知的三大Web前端技術趨勢 - 知乎</a> - 2020</li><li><a href="https://iter01.com/505089.html">2020 有哪些不容錯過的前端技術趨勢？ - IT人</a> - 2020</li></ul><h4 id="其他-v5">其他</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20102562/ironman/987?page=1">[iT邦]DevOps CI 從入門到入坑 - Miles</a> - 2016</li><li><a href="https://ithelp.ithome.com.tw/articles/10202427">MPA 與 SPA - Leo</a> - 2018</li><li><a href="https://vocus.cc/@raychang/5d4d8d31fd89780001faf03c">搞懂網頁技術名詞：MVC、SPA、SSR、AMP 及 PWA - Ray C</a> - 2019</li><li><a href="https://lukajojo.medium.com/%E4%B8%8D%E7%AE%A1%E4%BD%A0%E6%98%AF%E5%89%8D%E7%AB%AF-%E5%BE%8C%E7%AB%AF-%E5%85%87%E7%8B%A0%E7%9A%84%E8%AE%8A%E5%BC%B7%E5%90%A7-%E9%A5%85%E9%A0%AD%E8%A8%88%E7%95%AB%E7%AC%AC%E9%9B%B6%E6%9C%9F-%E6%88%90%E6%9E%9C%E5%88%86%E4%BA%AB-81918be92ca4">饅頭計畫第零彈 — 不管你是前端、後端，兇狠的變強吧 | 成果分享 - Luka Huang</a> - 2019</li><li><a href="https://blog.hiskio.com/%E5%A5%BD%E7%94%A8%E5%89%8D%E7%AB%AF%E8%B3%87%E6%BA%90%E5%8C%85%EF%BC%8Dhtml%E3%80%81css%E3%80%81js%E4%B8%80%E7%B6%B2%E6%89%93%E7%9B%A1/">好用前端資源包－HTML、CSS、JS一網打盡 - HiSKIO</a> - 2019</li><li><a href="https://kknews.cc/code/pl4mrye.amp">推薦8個好用的前端小工具，Web前端程式設計師居家必備良品！ - 每日頭條</a> - 2019</li></ul><h4 id="技能樹">技能樹</h4><ul><li><h5 id="前端技能樹">前端技能樹</h5><table><thead><tr><th><img data-src="/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/1.jpeg" class=""></th></tr></thead><tbody><tr><td><img data-src="/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/3.png" class=""></td></tr></tbody></table></li><li><h5 id="全端技能樹">全端技能樹</h5><table><thead><tr><th><img data-src="/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/2.jpeg" class=""></th></tr></thead></table></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 前端技術彙整 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Vue2</title>
      <link href="/2021/02/11/link-Vue2/"/>
      <url>/2021/02/11/link-Vue2/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v6">系列文章</h4><ul><li><p><a href="https://pjchender.blogspot.com/search/label/Vue">Vue系列 - PJCHENder</a></p></li><li><p><a href="https://kuro.tw/">Vue系列 - Kuro</a></p></li><li><p><a href="https://hackmd.io/@FortesHuang">Vue系列 - Fortes Huang</a></p></li><li><p><a href="https://dotblogs.com.tw/wasichris/Series?qq=Vue">搞搞就懂 - CHRIS CHEN</a></p></li><li><h5 id="Youtube-Vue系列-Alex-宅幹嘛">[Youtube] Vue系列 - Alex 宅幹嘛</h5><ul><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dYor8h4Hi2lqKJ0xqNTFh16">Vue.js 手牽手，一起嗑光全家桶</a> - 2018</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dapPjoPvWX0c8JCK6-mIvGr">Re Vue 重頭說起 第一季</a> - 2020</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4daEhioHKZqrkGXAedXIQ2Cn">Re Vue 重頭說起 第二季</a> - 2020</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dbIlLGrUsF-cQW-mNPNwf1O">Re Vue 重頭說起 第三季</a> - 2020</li></ul></li></ul><a id="more"></a><h4 id="入門-v7">入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20103424/ironman/1049">[iT邦] Vue.js 30天 - Ralph</a> - 2016</li><li><a href="https://ithelp.ithome.com.tw/users/20111956/ironman/1784">[iT邦] 網頁設計靠 Vue.js 轉前端 - adam747</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20107789/ironman/1710">[iT邦] 勇者鬥Vue龍 - Peter Chen</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20114645/ironman/2811">[iT邦] 前端新手筆記-Vue.js - chunwen</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20112158/ironman/2614">[iT邦] 技術在走，Vue.js 要有 - mangoSu</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20109609/ironman/2233">[iT邦] 學習 vue 30天 - sunbu</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20001433/ironman/2154">[iT邦] VueJS 從前端到後端 - 閃光洽</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20110850/ironman/2171">[iT邦] 超緊繃!30天Vue.js學習日記 - Peter學程式</a> - 2019</li></ul><h4 id="學習教程">學習教程</h4><ul><li><a href="https://cn.vuejs.org/v2/guide/">Vue2學習教程 - 官方</a></li><li><a href="https://cn.vuejs.org/v2/guide/testing.html">測試學習教程 - 官方</a></li></ul><h4 id="小技巧">小技巧</h4><ul><li><a href="https://medium.com/@debbyji/deep-%E6%98%AF%E4%BB%80%E9%BA%BC-%E8%81%8A%E8%81%8A-vue-%E8%A3%A1%E7%9A%84-scoped-css-d1877f902845">/deep/ 是什麼？ — 聊聊 Vue 裡的 scoped css - Medium</a> - 2020</li></ul><h4 id="設定-v2">設定</h4><ul><li><a href="https://yiyingloveart.blogspot.com/2016/06/vuejs-change-custom-delimiters.html?m=1">vue.js 改變分隔符的符號</a> - 2016</li><li><h5 id="Cookie">Cookie</h5><ul><li><a href="https://blog.csdn.net/summer7310/article/details/90480828">vue開發不同代理方式設置cookies - CSDN</a> - 2019</li><li><a href="https://blog.csdn.net/qq_36297981/article/details/89528832">webpack-dev-server使用proxy跨域cookie問題 - CSDN</a> - 2019</li><li><a href="https://blog.csdn.net/weixin_43160044/article/details/94901074">webpack：proxy中cookie無法保存的解決辦法 - CSDN</a> - 2019</li><li><a href="https://juejin.cn/post/6844903984612818952">wepack-dev-server無法傳遞cookie到後端的問題 - 掘金</a> - 2019</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 框架 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Vue3</title>
      <link href="/2021/02/11/link-Vue3/"/>
      <url>/2021/02/11/link-Vue3/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章-v7">系列文章</h4><ul><li><a href="https://book.vue.tw/">重新認識 Vue.js - Kuro Hsu</a> - 2020<ul><li><a href="https://github.com/kurotanshi/source-book-vue.js">重新認識 Vue.js(範例檔) - Kuro Hsu</a> - 2020</li></ul></li><li><a href="https://campus-xoops.tn.edu.tw/modules/tad_book3/index.php?op=list_docs&amp;tbsn=33">Vue.js 3.0 筆記 - XOOPS輕鬆架</a> - 2017</li><li><a href="https://www.bilibili.com/video/BV14k4y117LL?from=search&amp;seid=16839590488178074731">「李南江」Vue3.0正式版教程 - bilibili</a> - 2020</li><li><a href="https://github.com/vue3/vue3-News">vue3-News- Github</a></li><li><a href="https://vue3js.cn/docs/zh/">[官方] Vue3中文文檔</a></li><li><a href="https://tw511.com/a/01/13583.html">VUE 3.0初體驗 - TW511教學網</a></li></ul><a id="more"></a><h4 id="Composition-Api">Composition Api</h4><ul><li><a href="https://vue3js.cn/docs/zh/guide/composition-api-introduction.html#%E4%BB%80%E4%B9%88%E6%98%AF%E7%BB%84%E5%90%88%E5%BC%8F-api">[官方] 什麼是組合式API？</a></li><li><a href="https://blog.csdn.net/fesfsefgs/article/details/106572929">vue2中Options API 和vue3中Composition API 的對比 - CSDN</a></li></ul><h4 id="CSS">CSS</h4><ul><li><a href="https://juejin.cn/post/6916298446638940173">為什麼Vue3選擇了CSS變數 - 掘金</a> - 2021<ul><li><a href="https://juejin.cn/post/6916298446638940173">Vue3注入CSS變數方式範例 - Github</a> - 2020</li></ul></li></ul><h4 id="其他-v3">其他</h4><ul><li><a href="https://medium.com/i-am-mike/vue-3-vue3-%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD-suspense-428e02254030">Vue3 的新功能 — Suspense - Medium</a> - 2020</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 框架 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
