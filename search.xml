<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[筆記]_React-Router</title>
      <link href="2022/04/27/%E7%AD%86%E8%A8%98-React-Router/"/>
      <url>2022/04/27/%E7%AD%86%E8%A8%98-React-Router/</url>
      
        <content type="html"><![CDATA[<p><small>Version: 2021/11 v6.0.0</small></p><a id="more"></a><h2 id="React-Router-v6簡介"><a href="#React-Router-v6簡介" class="headerlink" title="React Router v6簡介"></a>React Router v6簡介</h2><p>  React Router 於 2021年底發佈了 v6 的穩定版，<br>  由於v6含有大量 Hook，需依賴於 React v16.8以上版本。</p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install react-router-dom@6</span><br></pre></td></tr></table></figure><hr><h2 id="主要組件"><a href="#主要組件" class="headerlink" title="主要組件"></a>主要組件</h2><ul><li><h3 id="路由器設置"><a href="#路由器設置" class="headerlink" title="路由器設置"></a>路由器設置</h3><ul><li><h4 id="BrowserRouter"><a href="#BrowserRouter" class="headerlink" title="BrowserRouter"></a>BrowserRouter</h4>使用常規URL路徑，<br>如 <code>https://reactrouter.com/docs/en/v6</code>。<br>切換url時會發送 request 到 server端，<br>server端必須有對應的response(在server端設定)。<br>一般來說，在SPA(單頁應用)中，除了API 以外的 request，<br>server 都應回傳 index.html。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; BrowserRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="HashRouter"><a href="#HashRouter" class="headerlink" title="HashRouter"></a>HashRouter</h4>使用當前位置，頁面路徑會加上『＃』，<br>如 <code>https://reactrouter.com/#/docs/en/v6</code>。<br>換url時不會發送request。僅在前端置換頁面。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; HashRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;HashRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/HashRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="路由匹配"><a href="#路由匹配" class="headerlink" title="路由匹配"></a>路由匹配</h3><ul><li><h4 id="Route"><a href="#Route" class="headerlink" title="Route"></a>Route</h4><p>用來定義路徑與component的關係。<br>有兩個主要參數：<code>path</code>、<code>element</code>。</p><ul><li><code>path</code>：設定對應路徑。</li><li><code>element</code>：欲渲染的 component。</li></ul><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;Route path=<span class="string">&quot;/about&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">About</span> /&gt;</span></span> &#125;&gt;</span><br></pre></td></tr></table></figure></li><li><h4 id="Routes"><a href="#Routes" class="headerlink" title="Routes"></a>Routes</h4><p>為 舊版的 <code>Switch</code> 組件的升級版。<br>Routes 會查看所有 <code>&lt;Route&gt;</code> 元素，找到與目前路徑匹配的子項目。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;Routes&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;/&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">Dashboard</span> /&gt;</span></span> &#125;&gt;</span><br><span class="line">    &lt;Route path=<span class="string">&quot;messages&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">DashboardMessages</span> /&gt;</span></span> &#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">&quot;tasks&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">DashboardTasks</span> /&gt;</span></span> &#125; /&gt;</span><br><span class="line">    &lt;Navigate to=<span class="string">&quot;/about&quot;</span> replace=<span class="string">&quot;&#123; true &#125;&quot;</span>&gt;   <span class="comment">// 重導向</span></span><br><span class="line">  &lt;/Route&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;/about&quot;</span> element=&#123; <span class="xml"><span class="tag">&lt;<span class="name">AboutPage</span> /&gt;</span></span> &#125; /&gt;</span><br><span class="line">&lt;/Routes&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="導航"><a href="#導航" class="headerlink" title="導航"></a>導航</h3><ul><li><h4 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h4>用於創建連結導向，<code>&lt;Link&gt;</code>會生成 <code>&lt;a&gt;</code> 元素。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;Link to=<span class="string">&quot;/product&quot;</span>&gt; 商品頁 &lt;/Link&gt;</span><br></pre></td></tr></table></figure></li><li><h4 id="NavLink"><a href="#NavLink" class="headerlink" title="NavLink"></a>NavLink</h4>Link 的加強版，當路徑與<code>NavLink</code>對應時，會附帶一個 active 表示頁面正在作用中的參數。<br>方便製作 active 效果。<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;NavLink</span><br><span class="line">  to=<span class="string">&quot;/messages&quot;</span></span><br><span class="line">  className=&#123;</span><br><span class="line">    (&#123; isActive &#125;) =&gt; isActive ? <span class="string">&#x27;active&#x27;</span> : <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="應用範例"><a href="#應用範例" class="headerlink" title="應用範例"></a>應用範例</h2><ul><li><h3 id="一般路由"><a href="#一般路由" class="headerlink" title="一般路由"></a>一般路由</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> ReactDOM <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BrowserRouter,</span><br><span class="line">  Link,</span><br><span class="line">  Routes,</span><br><span class="line">  Route</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;nav&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/&quot;</span>&gt;home&lt;/Link&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product&quot;</span>&gt;product&lt;/Link&gt;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">      &lt;Routes&gt;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Home</span> /&gt;</span></span>&#125; /&gt;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/product&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Product</span> /&gt;</span></span>&#125; /&gt;</span><br><span class="line">      &lt;/Routes&gt;</span><br><span class="line">    &lt;/&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h3 id="巢狀路由"><a href="#巢狀路由" class="headerlink" title="巢狀路由"></a>巢狀路由</h3>使用<code>Outlet</code><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> ReactDOM <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BrowserRouter,</span><br><span class="line">  Link,</span><br><span class="line">  Routes,</span><br><span class="line">  Route</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;nav&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product&quot;</span>&gt;productIndex&lt;/Link&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product/add&quot;</span>&gt;productAdd&lt;/Link&gt;</span><br><span class="line">        &lt;Link to=<span class="string">&quot;/product/edit&quot;</span>&gt;productEdit&lt;/Link&gt;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">      &lt;Routes&gt;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/product&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Product</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">          &lt;Route index element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Index</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">          &lt;Route path=<span class="string">&quot;add&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Add</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">          &lt;Route path=<span class="string">&quot;edit&quot;</span> element=&#123;<span class="xml"><span class="tag">&lt;<span class="name">Edit</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">        &lt;/Route&gt;</span><br><span class="line">      &lt;/Routes&gt;</span><br><span class="line">    &lt;/&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;h1&gt;Product&lt;/h1&gt;</span><br><span class="line">      &lt;Outlet /&gt;</span><br><span class="line">    &lt;/&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="常用-Hook"><a href="#常用-Hook" class="headerlink" title="常用 Hook"></a>常用 Hook</h2><ul><li><h3 id="useLocation"><a href="#useLocation" class="headerlink" title="useLocation"></a><code>useLocation</code></h3><p>會返回一個location Object物件，<br>包含 pathname, search, hash, key, state 等資訊。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useLocation &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line">&lt;Link to=&#123;&#123;</span><br><span class="line">  pathname: <span class="string">&quot;/settings&quot;</span>,</span><br><span class="line">  state: &#123;</span><br><span class="line">    fromNavBar: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#125;&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> location = useLocation();</span><br><span class="line"><span class="built_in">console</span>.log(location);</span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//  &quot;pathname&quot;: &quot;/settings&quot;,</span></span><br><span class="line"><span class="comment">//  &quot;state&quot;: &#123;</span></span><br><span class="line"><span class="comment">//    &quot;fromNavBar&quot;: true</span></span><br><span class="line"><span class="comment">//  &#125;,</span></span><br><span class="line"><span class="comment">//  &quot;search&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="comment">//  &quot;hash&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="comment">//  ...</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure></li><li><h3 id="useNavigate"><a href="#useNavigate" class="headerlink" title="useNavigate"></a><code>useNavigate</code></h3><p>取代了 useHistory，第一個參數可以是路由或是數字，代表前往或是前進後退的頁數。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> navigate = useNavigate();</span><br><span class="line"></span><br><span class="line">navigate(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">navigate(-<span class="number">1</span>);</span><br><span class="line">navigate(<span class="string">&#x27;/success&#x27;</span>, &#123; <span class="attr">replace</span>: <span class="literal">true</span> &#125;);</span><br></pre></td></tr></table></figure></li><li><h3 id="useParams"><a href="#useParams" class="headerlink" title="useParams"></a><code>useParams</code></h3><p>取得URL中的參數。</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line">&lt;Link to=<span class="string">&quot;/Product/123&quot;</span>&gt;</span><br><span class="line">&lt;Router&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;/Product/:id&quot;</span> component=&#123; <span class="xml"><span class="tag">&lt;<span class="name">Product</span> /&gt;</span></span> &#125;&gt;</span><br><span class="line">&lt;/Router&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; id &#125; = useParams();</span><br></pre></td></tr></table></figure></li><li><h3 id="useRoutes"><a href="#useRoutes" class="headerlink" title="useRoutes"></a><code>useRoutes</code></h3><p>功能等同於 <code>&lt;Routes&gt;</code>，可用來製作 Router config。<br>後面介紹Router config 用法。</p></li></ul><hr><h2 id="Router-config-用法"><a href="#Router-config-用法" class="headerlink" title="Router config 用法"></a>Router config 用法</h2>  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; BrowserRouter, useRoutes &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    element: <span class="xml"><span class="tag">&lt;<span class="name">Dashboard</span> /&gt;</span></span>,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;messages&quot;</span>,</span><br><span class="line">        element: <span class="xml"><span class="tag">&lt;<span class="name">DashboardMessages</span> /&gt;</span></span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">path</span>: <span class="string">&quot;tasks&quot;</span>, <span class="attr">element</span>: <span class="xml"><span class="tag">&lt;<span class="name">DashboardTasks</span> /&gt;</span></span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&quot;team&quot;</span>, <span class="attr">element</span>: <span class="xml"><span class="tag">&lt;<span class="name">AboutPage</span> /&gt;</span></span> &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RenderRoutes</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> element = useRoutes(routes);</span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    ...</span><br><span class="line">    &lt;RenderRoutes /&gt;</span><br><span class="line">    ...</span><br><span class="line">  )</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  root</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h2 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h2><ul><li><a href="https://ithelp.ithome.com.tw/articles/10282773">React Router v6 和 v5 有哪些地方不同?</a></li><li><a href="https://reactrouter.com/">React Router v6 官網</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_CSS大全</title>
      <link href="2022/04/24/%E9%80%9F%E6%9F%A5%E8%A1%A8-css%E5%A4%A7%E5%85%A8/"/>
      <url>2022/04/24/%E9%80%9F%E6%9F%A5%E8%A1%A8-css%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>各種常用 CSS語法 速查表</p><a id="more"></a><ul><li><a href="https://github.com/meyerweb/csstdg4figs">範例程式碼</a></li></ul><ul><li><h2 id="章節目錄"><a href="#章節目錄" class="headerlink" title="章節目錄"></a>章節目錄</h2><table><thead><tr><th>目錄</th><th></th></tr></thead><tbody><tr><td><a href="#CSS%E8%88%87%E6%96%87%E4%BB%B6">CSS與文件</a></td><td><a href="#%E5%85%83%E7%B4%A0">元素</a>、<a href="#%E9%80%A3%E7%B5%90CSS%E8%88%87HTML">連結CSS與HTML</a>、<a href="#%E6%A8%A3%E5%BC%8F%E8%A1%A8%E5%85%A7%E5%AE%B9">樣式表內容</a>、<a href="#%E5%AA%92%E9%AB%94%E6%9F%A5%E8%A9%A2">媒體查詢</a>、<a href="#%E7%89%B9%E6%80%A7%E6%9F%A5%E8%A9%A2">特性查詢</a>、<a href="#%E5%B0%8F%E7%B5%90">小結</a></td></tr><tr><td><a href="#%E9%81%B8%E6%93%87%E5%99%A8">選擇器</a></td><td></td></tr><tr><td><a href="#%E6%AC%8A%E9%87%8D%E8%88%87%E8%81%AF%E7%B4%9A">權重與聯級</a></td><td></td></tr><tr><td><a href="#%E6%95%B8%E5%80%BC%E8%88%87%E5%96%AE%E4%BD%8D">數值與單位</a></td><td></td></tr><tr><td><a href="#%E5%AD%97%E5%9E%8B">字型</a></td><td></td></tr><tr><td><a href="#%E6%96%87%E5%AD%97%E5%B1%AC%E6%80%A7">文字屬性</a></td><td></td></tr><tr><td><a href="#%E5%9F%BA%E6%9C%AC%E8%A6%96%E8%A6%BA%E6%A0%BC%E5%BC%8F">基本視覺格式</a></td><td></td></tr><tr><td><a href="#%E5%85%A7%E8%B7%9D%E3%80%81%E9%82%8A%E6%A1%86%E3%80%81%E8%BC%AA%E5%BB%93%E8%88%87%E9%82%8A%E7%95%8C%E7%AF%84%E5%9C%8D">內距、邊框、輪廓與邊界範圍</a></td><td></td></tr><tr><td><a href="#%E8%89%B2%E5%BD%A9%E3%80%81%E8%83%8C%E6%99%AF%E8%88%87%E6%BC%B8%E5%B1%A4">色彩、背景與漸層</a></td><td></td></tr><tr><td><a href="#%E6%B5%AE%E5%8B%95%E8%88%87%E5%BD%A2%E7%8B%80">浮動與形狀</a></td><td></td></tr><tr><td><a href="#%E5%AE%9A%E4%BD%8D">定位</a></td><td></td></tr><tr><td><a href="#Flexbox%E6%8E%92%E7%89%88">Flexbox排版</a></td><td></td></tr><tr><td><a href="#%E7%B6%B2%E6%A0%BC%E6%8E%92%E7%89%88">網格排版</a></td><td></td></tr><tr><td><a href="#CSS%E8%A1%A8%E6%A0%BC%E6%8E%92%E7%89%88">CSS表格排版</a></td><td></td></tr><tr><td><a href="#%E5%88%97%E8%A1%A8%E8%88%87%E7%94%9F%E6%88%90%E5%85%A7%E5%AE%B9">列表與生成內容</a></td><td></td></tr><tr><td><a href="#%E8%BD%89%E6%8F%9B">轉換</a></td><td></td></tr><tr><td><a href="#%E8%BD%89%E5%A0%B4">轉場</a></td><td></td></tr><tr><td><a href="#%E5%8B%95%E7%95%AB">動畫</a></td><td></td></tr><tr><td><a href="#%E6%BF%BE%E9%8F%A1%E3%80%81%E6%B7%B7%E5%90%88%E3%80%81%E8%A3%81%E5%88%87%E8%88%87%E9%81%AE%E7%BD%A9">濾鏡、混合、裁切與遮罩</a></td><td></td></tr><tr><td><a href="#%E5%AA%92%E9%AB%94%E7%9B%B8%E4%BE%9D%E6%A8%A3%E5%BC%8F">媒體相依樣式</a></td><td></td></tr><tr><td><a href="#%E9%99%84%E9%8C%84A">附錄A - 可動畫屬性</a></td><td></td></tr><tr><td><a href="#%E9%99%84%E9%8C%84B">附錄B - 基本屬性參考手冊</a></td><td></td></tr><tr><td><a href="#%E9%99%84%E9%8C%84C">附錄C - 色彩值對照表</a></td><td></td></tr></tbody></table></li><li><h2 id="語法慣例"><a href="#語法慣例" class="headerlink" title="語法慣例"></a>語法慣例</h2><table><thead><tr><th>語法</th><th>說明</th></tr></thead><tbody><tr><td><code>X | Y</code></td><td>只允許 X、Y 其中一個值。</td></tr><tr><td><code>X || Y</code></td><td>表示能夠使用 X、Y 或 同時使用兩個值，不限順序。(X、Y、XY、YX)。</td></tr><tr><td><code>X &amp;&amp; Y</code></td><td>X、Y都必須出現，不限順序。(XY、YX)。</td></tr><tr><td><code>[...]</code></td><td>數組。</td></tr></tbody></table><table><thead><tr><th>修飾子</th><th>說明</th></tr></thead><tbody><tr><td>星號 <code>(*)</code></td><td>可以重複出現 0次以上。</td></tr><tr><td>加號 <code>(+)</code></td><td>可以重複出現 1次以上。</td></tr><tr><td>井字號 <code>(#)</code></td><td>可以重複出現 1次以上，並用逗號分隔。</td></tr><tr><td>問號 <code>(?)</code></td><td>選填數值。</td></tr><tr><td>驚嘆號 <code>(!)</code></td><td>必要值，至少出現 1次。</td></tr><tr><td>花括號 <code>(&#123;M, N&#125;)</code></td><td>必須重複出現 M ~ N 次。</td></tr></tbody></table></li><li><h2 id="CSS與文件"><a href="#CSS與文件" class="headerlink" title="CSS與文件"></a>CSS與文件</h2><p>階層式樣式表 (Cascading Style Sheet，CSS)。</p><ul><li><h3 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h3><p>「元素」(Element) 是文件結構的基礎。</p><ul><li><h4 id="置換與非置換元素"><a href="#置換與非置換元素" class="headerlink" title="置換與非置換元素"></a>置換與非置換元素</h4><ul><li><h5 id="置換元素"><a href="#置換元素" class="headerlink" title="置換元素"></a>置換元素</h5>元素的內容(Content) 會被置換成某些文章內容外的東西的元素，<ul><li>e.g. <code>&lt;img&gt;</code>元素的內容會被文件外部的影像檔案取代。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;howdy.gif&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>e.g. <code>&lt;input&gt;</code>也是置換元素，置換後的內容依據型別的不同可以是選擇鈕(radio button)、複選框(checkbox)或文件輸入框(text input box)。</li></ul></li><li><h5 id="非置換元素"><a href="#非置換元素" class="headerlink" title="非置換元素"></a>非置換元素</h5>表示使用者代理(user agent，通常是指瀏覽器)會直接以元素本身產生元素的內容，呈現在某個方框(box)當中。</li></ul></li><li><h4 id="元素顯示角色"><a href="#元素顯示角色" class="headerlink" title="元素顯示角色"></a>元素顯示角色</h4><ul><li><h5 id="區塊級元素"><a href="#區塊級元素" class="headerlink" title="區塊級元素"></a>區塊級元素</h5>會產生一個(預設會)填滿父元素內容區塊且無法與其他元素並排的元素方框(element box)，<br>會在元素方框的前後產生「斷行」(break)，置換元素通常都不是區塊級元素。<ul><li>e.g. <code>&lt;p&gt;</code> 、<code>&lt;div&gt;</code></li></ul></li><li><h5 id="行內級元素"><a href="#行內級元素" class="headerlink" title="行內級元素"></a>行內級元素</h5>會在文字所在文字行產生元素方框，不會破壞該行的流向(flow)，<br>在HTML中，區塊級元素不能放置在行內級元素之內，CSS則沒有限制不同顯示角色間的關係。<ul><li>e.g.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;display: inline;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">em</span> <span class="attr">style</span>=<span class="string">&quot;display: block;&quot;</span>&gt;</span>an inline element<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li><li><h3 id="連結CSS與HTML"><a href="#連結CSS與HTML" class="headerlink" title="連結CSS與HTML"></a>連結CSS與HTML</h3><ul><li><h4 id="link-標記"><a href="#link-標記" class="headerlink" title="link 標記"></a>link 標記</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sheet1.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;all&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS透過link標記將樣式表(stylesheet)連結到文件，稱為「外部樣式表」。<br>link標記必須直接放在head元素內，瀏覽器會找尋並載入樣式表，使用其中定義的樣式呈現HTML文件。</p><ul><li><h5 id="屬性-attribute"><a href="#屬性-attribute" class="headerlink" title="屬性 (attribute)"></a>屬性 (attribute)</h5><ul><li><code>rel</code>，表示「關係」(relation)，e.g. stylesheet。</li><li><code>type</code>屬性，表示使用link標記載入的資料類型，e.g. text/css。能夠讓瀏覽器知道樣式表是CSS樣式表，也決定了瀏覽器對載入的資料的處理方式。</li><li><code>href</code>屬性，是樣式表的URL。</li><li><code>media</code>屬性，是一個以上的媒體描述子 (media descriptor)，代表了特定的媒體類型以及該媒體的特性，媒體描述子之間以逗號區隔。e.g. 可以指定針對螢幕(screen)與投影機(projection)媒體使用的樣式表。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;visual-sheet.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen, projection&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="替代樣式表-alternate-stylesheet"><a href="#替代樣式表-alternate-stylesheet" class="headerlink" title="替代樣式表 (alternate stylesheet)"></a>替代樣式表 (alternate stylesheet)</h5></li></ul></li><li><h4 id="style-元素"><a href="#style-元素" class="headerlink" title="style 元素"></a>style 元素</h4></li><li><h4 id="import-指令"><a href="#import-指令" class="headerlink" title="@import 指令"></a>@import 指令</h4></li><li><h4 id="HTTP-連結"><a href="#HTTP-連結" class="headerlink" title="HTTP 連結"></a>HTTP 連結</h4></li><li><h4 id="行內樣式"><a href="#行內樣式" class="headerlink" title="行內樣式"></a>行內樣式</h4></li></ul></li></ul></li></ul>  <div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_SASS/SCSS</title>
      <link href="2022/04/01/%E7%AD%86%E8%A8%98-SASS-SCSS/"/>
      <url>2022/04/01/%E7%AD%86%E8%A8%98-SASS-SCSS/</url>
      
        <content type="html"><![CDATA[<style>  .d-flex {    display: flex;  }  .d-flex .col {    flex: 1;  }  .d-flex .d-flex-item {    margin: 0 5px;  }  .flex-direction-column {    flex-direction: column;  }  .arrow {    color:#aaa;  }  .arrow.down {    transform: rotate(90deg);  }</style><p><small>Releases v3.6.3 (2019/11/4)</small></p><p>是一種CSS預處理器，需要另外編譯成CSS，瀏覽器才看得懂。<br>Sass 是一款強化CSS 的輔助工具，<br>它在CSS 語法的基礎上增加了變數(variables)、嵌套(nesting)、混合(mixins)、導入(inline imports) 等高級功能。</p><a id="more"></a><h2 id="CSS-功能拓展"><a href="#CSS-功能拓展" class="headerlink" title="CSS 功能拓展"></a>CSS 功能拓展</h2><ul><li><h3 id="嵌套規則"><a href="#嵌套規則" class="headerlink" title="嵌套規則"></a>嵌套規則</h3><p>Sass 允許 CSS樣式使用嵌套方式。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00ff00</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">97%</span>;</span><br><span class="line">  <span class="selector-class">.redbox</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00ff00</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">97%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">p</span> <span class="selector-class">.redbox</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; &#123;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">  + <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  ~ &#123;</span><br><span class="line">    <span class="selector-tag">span</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span> + <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> ~ <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="父選擇器-amp"><a href="#父選擇器-amp" class="headerlink" title="父選擇器 &amp;"></a>父選擇器 <code>&amp;</code></h3><p>在嵌套CSS 規則時，有時也需要直接使用嵌套外層的父選擇器。<br>可以用 <code>&amp;</code> 代表嵌套規則外層的父選擇器。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123; <span class="attribute">text-decoration</span>: underline; &#125;</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-class">.firefox</span> &amp; &#123; <span class="attribute">font-weight</span>: normal; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.firefox</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="屬性嵌套"><a href="#屬性嵌套" class="headerlink" title="屬性嵌套"></a>屬性嵌套</h3><p>有些CSS 屬性遵循相同的命名空間(namespace)，<br>比如 font-family, font-size, font-weight 都以 font 作為屬性的命名空間。<br>為了便於管理這樣的屬性，同時也為了避免了重複輸入，Sass 允許將屬性嵌套在命名空間中。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.funky</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: &#123;</span><br><span class="line">    family: fantasy;</span><br><span class="line">    size: <span class="number">30em</span>;</span><br><span class="line">    weight: bold;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.funky</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: fantasy;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>## 註釋</li></ul></li><li><p>Sass 支持標準的CSS，<br>單行註釋 以<code>//</code>開頭。<br>多行註釋 以 <code>/*</code> 開頭， <code>*/</code> 結尾，多行註釋。<br>多行註釋 會完整保留至編譯後的CSS文件中，<br>單行註釋 則會在壓縮模式編譯後，從CSS中去除。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="comment">/* This comment is</span></span><br><span class="line"><span class="comment">* several lines long.</span></span><br><span class="line"><span class="comment">* since it uses the CSS comment syntax,</span></span><br><span class="line"><span class="comment">* it will appear in the CSS output. */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">color</span>: black; &#125;</span><br><span class="line"><span class="comment">// These comments are only one line long each.</span></span><br><span class="line"><span class="comment">// They won&#x27;t appear in the CSS output,</span></span><br><span class="line"><span class="comment">// since they use the single-line comment syntax.</span></span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">color</span>: green; &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$version</span>: <span class="string">&quot;1.2.3&quot;</span>;</span><br><span class="line"><span class="comment">/*! This comment will be included even in compressed mode. */</span></span><br><span class="line"><span class="comment">/*! This CSS is generated by My Snazzy Framework version #&#123;$version&#125;. */</span></span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="comment">/* This comment is</span></span><br><span class="line"><span class="comment">* several lines long.</span></span><br><span class="line"><span class="comment">* since it uses the CSS comment syntax,</span></span><br><span class="line"><span class="comment">* it will appear in the CSS output. */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">color</span>: black; &#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">color</span>: green; &#125;</span><br><span class="line"><span class="comment">/*! This comment will be included even in compressed mode. */</span></span><br><span class="line"><span class="comment">/*! This CSS is generated by My Snazzy Framework version 1.2.3. */</span></span><br></pre></td></tr></table></figure>但在壓縮模式編譯後的CSS中，也會移除多行註釋，若想保留，可以 `/*!` 作為多行註釋 開頭，通常用於添加版權信息。也可在註釋中輸出變數值(插值語句)。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">color</span>: black; &#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">color</span>: green; &#125;</span><br><span class="line"><span class="comment">/*! This comment will be included even in compressed mode. */</span></span><br><span class="line"><span class="comment">/*! This CSS is generated by My Snazzy Framework version 1.2.3. */</span></span><br></pre></td></tr></table></figure>## 變數</li></ul></li><li><p>Sass變數，以 <code>$</code> 開頭，可以在任何地方聲明。<br>變數可以減少重複、進行複雜的運算。</p></li><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$base-color</span>: <span class="number">#c6538c</span>;</span><br><span class="line"><span class="variable">$border-dark</span>: rgba(<span class="variable">$base-color</span>, <span class="number">0.88</span>);</span><br><span class="line"><span class="selector-class">.alert</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$border-dark</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.alert</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">198</span>, <span class="number">83</span>, <span class="number">140</span>, <span class="number">0.88</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="默認值"><a href="#默認值" class="headerlink" title="默認值"></a>默認值</h3><ul><li>當變數賦值時，如果該變數已經有一個值，舊值將被覆蓋。<br>Sass 提供了 <code>!default</code> 標誌。僅當該變數未定義或其值為 <code>null</code> ，才使用新值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$content</span>: <span class="string">&quot;First content&quot;</span>;</span><br><span class="line"><span class="variable">$content</span>: <span class="string">&quot;Second content?&quot;</span> !default;</span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;First content&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>使用規則： <code>!default</code> 加載模塊時可以配置定義的變數。<br>要加載帶有配置的模塊，請編寫 <code>@use &lt;url&gt; with (&lt;variable&gt;: &lt;value&gt;)</code> ，<br>配置的值將覆蓋變數的默認值。<br>只能配置在樣式表頂層編寫的帶有 <code>!default</code> 標誌的變數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _library.scss</span></span><br><span class="line"><span class="variable">$border-radius</span>: <span class="number">0.25rem</span> !default;</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$border-radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;library&#x27;</span> with (</span><br><span class="line">  <span class="variable">$border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.1rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="作用域-區域變數、全域變數"><a href="#作用域-區域變數、全域變數" class="headerlink" title="作用域(區域變數、全域變數)"></a>作用域(區域變數、全域變數)</h3><ul><li><p>當區域變數與全域變數同名時，不受全域變數影響。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$variable</span>: global value;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="variable">$variable</span>: local value;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">value</span>: local value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">value</span>: global value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用規則： <code>!global</code>，始終配置全域變數，不受區域變數影響</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$variable</span>: first global value;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="variable">$variable</span>: second global value !global;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  value: <span class="variable">$variable</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">value</span>: second global value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">value</span>: second global value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用規則： 條件式宣告</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$dark-theme</span>: true !default;</span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#f8bbd0</span> !default;</span><br><span class="line"><span class="variable">$accent-color</span>: <span class="number">#6a1b9a</span> !default;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@if</span> <span class="variable">$dark-theme</span> &#123;</span><br><span class="line">  <span class="variable">$primary-color</span>: darken(<span class="variable">$primary-color</span>, <span class="number">60%</span>);</span><br><span class="line">  <span class="variable">$accent-color</span>: lighten(<span class="variable">$accent-color</span>, <span class="number">60%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$primary-color</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$accent-color</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#750c30</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f5ebfc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>## 插值</li></ul></li></ul></li><li><p>使用 <code>#&#123;&#125;</code> 插值語句可以在選擇器或屬性名中使用變數。<br>使用 <code>#&#123;&#125;</code> 可以避免Sass 運行運算表達式，直接編譯CSS。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$name</span>: <span class="string">&#x27;.foo&#x27;</span>;</span><br><span class="line"><span class="variable">$attr</span>: border;</span><br><span class="line"><span class="selector-tag">p</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">  #&#123;<span class="variable">$attr</span>&#125;-<span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.foo</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="variable">$font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="variable">$line-height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">font</span>: #&#123;<span class="variable">$font-size</span>&#125;/#&#123;<span class="variable">$line-height</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> corner-icon(<span class="variable">$name</span>, <span class="variable">$top-or-bottom</span>, <span class="variable">$left-or-right</span>) &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: url(<span class="string">&quot;/icons/#&#123;$name&#125;.svg&quot;</span>);</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    #&#123;<span class="variable">$top-or-bottom</span>&#125;: <span class="number">0</span>;</span><br><span class="line">    #&#123;<span class="variable">$left-or-right</span>&#125;: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> corner-icon(<span class="string">&quot;mail&quot;</span>, top, left);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.icon-mail</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/icons/mail.svg&quot;</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>注入未引用的字符串中。再動態生成名稱(例如：動畫)時，特別有用。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> inline-animation(<span class="variable">$duration</span>) &#123;</span><br><span class="line">  <span class="variable">$name</span>: inline-#&#123;unique-id()&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@keyframes</span> #&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">    <span class="keyword">@content</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">animation-name</span>: <span class="variable">$name</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="variable">$duration</span>;</span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pulse</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> inline-animation(<span class="number">2s</span>) &#123;</span><br><span class="line">    from &#123; <span class="attribute">background-color</span>: yellow &#125;</span><br><span class="line">    to &#123; background-color: red &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.pulse</span> &#123;</span><br><span class="line">  <span class="attribute">animation-name</span>: inline-u368htqnd;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> inline-u368htqnd &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>## @規則</li></ul></li><li><h3 id="use"><a href="#use" class="headerlink" title="@use"></a><code>@use</code></h3><p>以模塊方式，從其他Sass樣式表中加載 mixins、函數或變數，並將來自多個樣式表的CSS組合在一起。<br>以這種方式加載的任何樣式都將在編譯CSS中，僅包含一次，無論被加載多少次。</p><ul><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// foundation/_code.scss</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">25em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// foundation/_lists.scss</span></span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  &amp; &amp; &#123;</span><br><span class="line">    <span class="attribute">padding</span>: &#123;</span><br><span class="line">      bottom: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;foundation/code&#x27;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;foundation/lists&#x27;</span>;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">25em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> <span class="selector-tag">ol</span> &#123;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="加載成員"><a href="#加載成員" class="headerlink" title="加載成員"></a>加載成員</h4><p>使用命名空間方式呼叫模塊中的 變數、函數和mixins。<br>默認情況下，命名空間為URL最後的檔名。</p><ul><li><p><code>&lt;namespace&gt;.&lt;variable&gt;</code></p></li><li><p><code>&lt;namespace&gt;.&lt;function&gt;</code></p></li><li><p><code>@include &lt;namespace&gt;.&lt;mixin&gt;()</code></p></li><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/_corners.scss</span></span><br><span class="line"><span class="variable">$radius</span>: <span class="number">3px</span>;</span><br><span class="line"><span class="keyword">@mixin</span> rounded &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;src/corners&quot;</span>;</span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> corners.rounded;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> + corners.<span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="自訂命名空間"><a href="#自訂命名空間" class="headerlink" title="自訂命名空間"></a>自訂命名空間</h5><p><code>@use &quot;&lt;url&gt;&quot; as &lt;namespace&gt;</code></p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/_corners.scss</span></span><br><span class="line"><span class="variable">$radius</span>: <span class="number">3px</span>;</span><br><span class="line"><span class="keyword">@mixin</span> rounded &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;src/corners&quot;</span> as c;</span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> c.rounded;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> + c.<span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="私有屬性"><a href="#私有屬性" class="headerlink" title="私有屬性"></a>私有屬性</h5><p>若不希望定義的所有屬性都在樣式表之外可用。<br><code>-</code> 可以通過開頭的名稱來輕鬆定義私有屬性。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/_corners.scss</span></span><br><span class="line"><span class="variable">$-radius</span>: <span class="number">3px</span>;</span><br><span class="line"><span class="keyword">@mixin</span> rounded &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$-radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;src/corners&quot;</span>;</span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> corners.rounded;</span><br><span class="line">  <span class="comment">// This is an error! $-radius isn&#x27;t visible outside of `_corners.scss`.</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> + corners.<span class="variable">$-radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="配置模塊"><a href="#配置模塊" class="headerlink" title="配置模塊"></a>配置模塊</h4><p><code>!default</code> 樣式表可以使用標誌 定義變數以使其可配置。<br>要加載帶有配置的模塊，請編寫 <code>@use &lt;url&gt; with (&lt;variable&gt;:&lt;value&gt;, &lt;variable&gt;:&lt;value&gt;)</code>。<br>配置的值將覆蓋變數的默認值。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _library.scss</span></span><br><span class="line"><span class="variable">$black</span>: <span class="number">#000</span> !default;</span><br><span class="line"><span class="variable">$border-radius</span>: <span class="number">0.25rem</span> !default;</span><br><span class="line"><span class="variable">$box-shadow</span>: <span class="number">0</span> <span class="number">0.5rem</span> <span class="number">1rem</span> rgba(<span class="variable">$black</span>, <span class="number">0.15</span>) !default;</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$border-radius</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="variable">$box-shadow</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&#x27;library&#x27;</span> with (</span><br><span class="line">  <span class="variable">$black</span>: <span class="number">#222</span>,</span><br><span class="line">  <span class="variable">$border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.1rem</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="built_in">rgba</span>(<span class="number">34</span>, <span class="number">34</span>, <span class="number">34</span>, <span class="number">0.15</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="import"><a href="#import" class="headerlink" title="@import"></a><code>@import</code></h3><p>能夠導入 Sass 和 CSS 樣式表。<br>Sass 團隊不鼓勵繼續使用該 <code>@import</code> 規則。<br>將在接下來的幾年中逐步淘汰。<br>請以 <code>@use</code> 取代。</p><blockquote><p><code>@import</code> 有以下問題：<br>@import 是全局的，必須為其添加前綴以避免命名衝突。<br>每個樣式表都會執行，造成編譯時間太久。<br>若同時載入同一份樣式表，都會被編譯，早成資源浪費。<br>沒有私有屬性。</p></blockquote><ul><li>可使用逗點載入多個樣式。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;foundation/code&#x27;</span>, <span class="string">&#x27;foundation/lists&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li>檔名開頭為<code>_</code>，僅用於導入而不會自行編譯。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _lists.scss</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;lists&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li>可嵌套於樣式中 (使用 <code>mixin</code> 會是更好的選擇)<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="selector-class">.theme-sample</span> &#123;</span><br><span class="line">  <span class="keyword">@import</span> <span class="string">&quot;theme&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="mixin、-include"><a href="#mixin、-include" class="headerlink" title="@mixin、@include"></a><code>@mixin</code>、<code>@include</code></h3><p>定義可以在整個樣式表中重複使用的樣式。</p><ul><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> reset-list &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> horizontal-list &#123;</span><br><span class="line">  <span class="keyword">@include</span> reset-list;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: &#123;</span><br><span class="line">      left: -<span class="number">2px</span>;</span><br><span class="line">      <span class="attribute">right</span>: <span class="number">2em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> horizontal-list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="參數"><a href="#參數" class="headerlink" title="參數"></a>參數</h4><p>但是必須傳入相同數量參數。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> rtl(<span class="variable">$property</span>, <span class="variable">$ltr-value</span>, <span class="variable">$rtl-value</span>) &#123;</span><br><span class="line">  #&#123;<span class="variable">$property</span>&#125;: <span class="variable">$ltr-value</span>;</span><br><span class="line">  <span class="selector-attr">[dir=rtl]</span> &amp; &#123;</span><br><span class="line">    #&#123;<span class="variable">$property</span>&#125;: <span class="variable">$rtl-value</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> rtl(float, left, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[dir=rtl]</span> <span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="可選參數"><a href="#可選參數" class="headerlink" title="可選參數"></a>可選參數</h4><p>可以通過定義一個默認值來使參數成為可選參數。<br>如果該參數未傳遞，則將使用該默認值。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> replace-text(<span class="variable">$image</span>, <span class="variable">$x</span>: <span class="number">50%</span>, <span class="variable">$y</span>: <span class="number">50%</span>) &#123;</span><br><span class="line">  <span class="attribute">text-indent</span>: -<span class="number">99999em</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">background</span>: &#123;</span><br><span class="line">    image: <span class="variable">$image</span>;</span><br><span class="line">    repeat: no-repeat;</span><br><span class="line">    <span class="attribute">position</span>: <span class="variable">$x</span> <span class="variable">$y</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mail-icon</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> replace-text(url(<span class="string">&quot;/images/mail.svg&quot;</span>), <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.mail-icon</span> &#123;</span><br><span class="line">  <span class="attribute">text-indent</span>: -<span class="number">99999em</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/images/mail.svg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="關鍵字參數"><a href="#關鍵字參數" class="headerlink" title="關鍵字參數"></a>關鍵字參數</h4><p>可以明確指定傳遞的參數名稱，避免參數順序問題。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> square(<span class="variable">$size</span>, <span class="variable">$radius</span>: <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$radius</span> != <span class="number">0</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> square(<span class="number">100px</span>, <span class="variable">$radius</span>: <span class="number">4px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="任意參數"><a href="#任意參數" class="headerlink" title="任意參數"></a>任意參數</h4><p>能夠接受任意數量的參數，最後一個參數以<code>...</code>結尾。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> order(<span class="variable">$height</span>, <span class="variable">$selectors</span>...) &#123;</span><br><span class="line">  <span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">0</span> to length(<span class="variable">$selectors</span>) &#123;</span><br><span class="line">    #&#123;nth(<span class="variable">$selectors</span>, <span class="variable">$i</span> + 1)&#125; &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">height</span>: <span class="variable">$height</span>;</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="variable">$i</span> * <span class="variable">$height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> order(<span class="number">150px</span>, <span class="string">&quot;input.name&quot;</span>, <span class="string">&quot;input.address&quot;</span>, <span class="string">&quot;input.zip&quot;</span>);</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-class">.name</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-class">.address</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-class">.zip</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="內容塊"><a href="#內容塊" class="headerlink" title="內容塊"></a>內容塊</h4><p>除了參數之外，mixin 還可以接受整個樣式塊，或內容塊。<br>注入並取代 <code>@content</code> 的位置。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> hover &#123;</span><br><span class="line">  &amp;<span class="selector-pseudo">:not</span>(<span class="selector-attr">[disabled]</span>)<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="keyword">@content</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  <span class="keyword">@include</span> hover &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.button</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.button</span><span class="selector-pseudo">:not(</span><span class="selector-attr">[disabled]</span>)<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>一個 mixin 可以包含多個 <code>@content</code>，內容塊將分別包含在每個 <code>@content</code>。</li><li>mixin 可以將參數傳遞給它的內容塊。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> media(<span class="variable">$types</span>...) &#123;</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$type</span> in <span class="variable">$types</span> &#123;</span><br><span class="line">    <span class="keyword">@media</span> #&#123;<span class="variable">$type</span>&#125; &#123;</span><br><span class="line">      <span class="keyword">@content</span>(<span class="variable">$type</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> media(screen, print) using (<span class="variable">$type</span>) &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="keyword">@if</span> <span class="variable">$type</span> == print &#123;</span><br><span class="line">      <span class="attribute">font-family</span>: Calluna;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@media</span> screen &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> print &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: Calluna;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="縮寫"><a href="#縮寫" class="headerlink" title="縮寫"></a>縮寫</h4><p><code>@mixin</code> 可縮寫為 <code>=</code><br><code>@include</code> 可縮寫為 <code>+</code><br>雖然語法簡潔，但語意讓人難懂。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line">=reset-list &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">=horizontal-list &#123;</span><br><span class="line">  +reset-list;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: &#123;</span><br><span class="line">      left: -<span class="number">2px</span></span><br><span class="line">      right: <span class="number">2em</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">nav ul &#123;</span><br><span class="line">  +horizontal-list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="function"><a href="#function" class="headerlink" title="@function"></a><code>@function</code></h3><p>定義自定義函數，以處理複雜運算。<br>回調使用 <code>@retrun</code>。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@function</span> pow(<span class="variable">$base</span>, <span class="variable">$exponent</span>) &#123;</span><br><span class="line">  <span class="variable">$result</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">@for</span> $_ from <span class="number">1</span> through <span class="variable">$exponent</span> &#123;</span><br><span class="line">    <span class="variable">$result</span>: <span class="variable">$result</span> * <span class="variable">$base</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-left</span>: pow(<span class="number">4</span>, <span class="number">3</span>) * <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">64px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="可選參數-1"><a href="#可選參數-1" class="headerlink" title="可選參數"></a>可選參數</h4>可以通過定義一個默認值來使參數成為可選參數。<br>如果該參數未傳遞，則將使用該默認值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@function</span> invert(<span class="variable">$color</span>, <span class="variable">$amount</span>: <span class="number">100%</span>) &#123;</span><br><span class="line">  <span class="variable">$inverse</span>: change-color(<span class="variable">$color</span>, <span class="variable">$hue</span>: hue(<span class="variable">$color</span>) + <span class="number">180</span>);</span><br><span class="line">  <span class="keyword">@return</span> mix(<span class="variable">$inverse</span>, <span class="variable">$color</span>, <span class="variable">$amount</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#036</span>;</span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: invert(<span class="variable">$primary-color</span>, <span class="number">80%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#523314</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="關鍵字參數-1"><a href="#關鍵字參數-1" class="headerlink" title="關鍵字參數"></a>關鍵字參數</h4>可以明確指定傳遞的參數名稱，避免參數順序問題。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#036</span>;</span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$primary-color</span>;</span><br><span class="line">  <span class="attribute">color</span>: scale-color(<span class="variable">$primary-color</span>, <span class="variable">$lightness</span>: +<span class="number">40%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#036</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0a85ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="任意參數-1"><a href="#任意參數-1" class="headerlink" title="任意參數"></a>任意參數</h4>能夠接受任意數量的參數，最後一個參數以<code>...</code>結尾。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@function</span> sum(<span class="variable">$numbers</span>...) &#123;</span><br><span class="line">  <span class="variable">$sum</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$number</span> in <span class="variable">$numbers</span> &#123;</span><br><span class="line">    <span class="variable">$sum</span>: <span class="variable">$sum</span> + <span class="variable">$number</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$sum</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.micro</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: sum(<span class="number">50px</span>, <span class="number">30px</span>, <span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.micro</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">180px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="return"><a href="#return" class="headerlink" title="@return"></a><code>@return</code></h4>只允許在<code>@function</code>中出現。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@function</span> str-insert(<span class="variable">$string</span>, <span class="variable">$insert</span>, <span class="variable">$index</span>) &#123;</span><br><span class="line">  <span class="comment">// Avoid making new strings if we don&#x27;t need to.</span></span><br><span class="line">  <span class="keyword">@if</span> string.length(<span class="variable">$string</span>) == <span class="number">0</span> &#123;</span><br><span class="line">    <span class="keyword">@return</span> <span class="variable">$insert</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$before</span>: string.slice(<span class="variable">$string</span>, <span class="number">0</span>, <span class="variable">$index</span>);</span><br><span class="line">  <span class="variable">$after</span>: string.slice(<span class="variable">$string</span>, <span class="variable">$index</span>);</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$before</span> + <span class="variable">$insert</span> + <span class="variable">$after</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="extend"><a href="#extend" class="headerlink" title="@extend"></a><code>@extend</code></h3><p>允許選擇器上，相互繼承樣式。<br>設計頁面時，經常會出現一個類應該具有另一個類的所有樣式以及自己的特定樣式。<br>例如：<code>BEM方法</code> 中的修飾符類。(在預設樣式上，增加了特殊樣式。)<br>但這會造成HTML混亂，容易因忘記包含這兩個類而出錯，並且可能會將非語意樣式問題帶入標籤中。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;error error--serious&quot;</span>&gt;</span></span><br><span class="line">  Oh no! You&#x27;ve been hacked!</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@extend</code>規則解決了此類問題。</p><ul><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line"></span><br><span class="line">  &amp;--serious &#123;</span><br><span class="line">    <span class="keyword">@extend</span> .error;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error</span>, <span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>當一個類`@extend`另一個類時，所有類都會進行相同配置。</li><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.error</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .error;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.error--serious</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="optional-聲明"><a href="#optional-聲明" class="headerlink" title="!optional 聲明"></a><code>!optional</code> 聲明</h4><p>如果<code>@extend</code>找不到對應的擴展樣式，將會報錯。<br><code>!optional</code> 可讓<code>@extend</code>報錯時，不生成選擇器。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-class">.important</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .notice !optional;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="佔位符選擇器"><a href="#佔位符選擇器" class="headerlink" title="佔位符選擇器"></a>佔位符選擇器</h4><p>有時想編寫僅用於extend的樣式規則，不包含在 CSS 輸出中。在此情況下，可以使用佔位符選擇器 <code>%</code>。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line">%<span class="selector-tag">strong</span>-alert &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> %strong-alert;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.error--serious</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="Mixins-or-Extends"><a href="#Mixins-or-Extends" class="headerlink" title="Mixins or Extends"></a>Mixins or Extends</h4><p><code>@mixins</code> 與 <code>@extends</code> 兩者的概念蠻相近的，由於兩者都可以拿來做相同樣式的包裝，所以兩者的使用時機很容易讓人搞混。<br>由於 <code>@extends</code> 會智能統一擴展的樣式，生成混合後的樣式表，並修剪重複性的樣式。<br>處理重用性高的樣式時，建議採用 <code>@extends</code>。<br>處理需要帶參數而動態生成的樣式時，建議採用 <code>@mixins</code>。</p></li></ul></li><li><h3 id="error"><a href="#error" class="headerlink" title="@error"></a><code>@error</code></h3><p>導致編譯失敗並顯示錯誤消息。<br>在編寫帶有參數的<code>@mixins</code>或<code>@function</code>時，<br>通常為確保參數的類型和格式是預期的，若不是，<br>則需要通知用戶並將 <code>@mixins</code>或<code>@function</code> 停止運行。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> reflexive-position(<span class="variable">$property</span>, <span class="variable">$value</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$property</span> != left <span class="keyword">and</span> <span class="variable">$property</span> != right &#123;</span><br><span class="line">    <span class="keyword">@error</span> <span class="string">&quot;Property #&#123;$property&#125; must be either left or right.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$left-value</span>: if(<span class="variable">$property</span> == right, initial, <span class="variable">$value</span>);</span><br><span class="line">  <span class="variable">$right-value</span>: if(<span class="variable">$property</span> == right, <span class="variable">$value</span>, initial);</span><br><span class="line"></span><br><span class="line">  <span class="attribute">left</span>: <span class="variable">$left-value</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="variable">$right-value</span>;</span><br><span class="line">  <span class="selector-attr">[dir=rtl]</span> &amp; &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="variable">$right-value</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="variable">$left-value</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> reflexive-position(top, <span class="number">12px</span>);</span><br><span class="line">  <span class="comment">//       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span><br><span class="line">  <span class="comment">// Error: Property top must be either left or right.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="warn"><a href="#warn" class="headerlink" title="@warn"></a><code>@warn</code></h3><p>與 <code>@error</code> 用法相同，<br>差異在於，不停止編譯的情況下打印警告。</p></li><li><h3 id="debug"><a href="#debug" class="headerlink" title="@debug"></a><code>@debug</code></h3><p>有時在開發樣式表時查看 變數 或 表達式 的值很有用。<br>與 <code>console</code> 雷同，能打印出運算後的值。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> inset-divider-offset(<span class="variable">$offset</span>, <span class="variable">$padding</span>) &#123;</span><br><span class="line">  <span class="variable">$divider-offset</span>: (<span class="number">2</span> * <span class="variable">$padding</span>) + <span class="variable">$offset</span>;</span><br><span class="line">  <span class="keyword">@debug</span> <span class="string">&quot;divider offset: #&#123;$divider-offset&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="variable">$divider-offset</span>;</span><br><span class="line">  <span class="attribute">width</span>: calc(<span class="number">100%</span> - #&#123;<span class="variable">$divider-offset</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="at-root"><a href="#at-root" class="headerlink" title="@at-root"></a><code>@at-root</code></h3><p>將其中的樣式放在CSS 文檔的根目錄中，而不是使用正常的嵌套。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">@at-root</span> &#123;</span><br><span class="line">    <span class="selector-class">.child1</span> &#123; ... &#125;</span><br><span class="line">    <span class="selector-class">.child2</span> &#123; ... &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.step-child</span> &#123; ... &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line">.parent &#123; ... &#125;</span><br><span class="line">.child1 &#123; ... &#125;</span><br><span class="line">.child2 &#123; ... &#125;</span><br><span class="line">.parent .step-child &#123; ... &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="控制指令"><a href="#控制指令" class="headerlink" title="控制指令"></a>控制指令</h3><ul><li><h4 id="if、-else"><a href="#if、-else" class="headerlink" title="@if、@else"></a><code>@if</code>、<code>@else</code></h4>可以控制區塊內的樣式是否編譯，表達式返回 <code>true</code>，才會編譯進CSS。<br>在SCSS中，假值只有 <code>false</code> 和 <code>null</code>。<br>其他的都認定為真值 ( <code>空值</code> 、 <code>空陣列</code> 、 <code>0</code> 都算真值)。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> avatar(<span class="variable">$size</span>, <span class="variable">$circle</span>: false) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$circle</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="variable">$size</span> / <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.square-av</span> &#123; <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: false); &#125;</span><br><span class="line"><span class="selector-class">.circle-av</span> &#123; <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: true); &#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.square-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.circle-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="else"><a href="#else" class="headerlink" title="@else"></a><code>@else</code></h5><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$light-background</span>: <span class="number">#f2ece4</span>;</span><br><span class="line"><span class="variable">$light-text</span>: <span class="number">#036</span>;</span><br><span class="line"><span class="variable">$dark-background</span>: <span class="number">#6b717f</span>;</span><br><span class="line"><span class="variable">$dark-text</span>: <span class="number">#d2e1dd</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> theme-colors(<span class="variable">$light-theme</span>: true) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$light-theme</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$light-background</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$light-text</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$dark-background</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$dark-text</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> theme-colors(<span class="variable">$light-theme</span>: true);</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-class">.dark</span> &amp; &#123;</span><br><span class="line">    <span class="keyword">@include</span> theme-colors(<span class="variable">$light-theme</span>: false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f2ece4</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#036</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.dark</span> <span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#6b717f</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#d2e1dd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="else-if"><a href="#else-if" class="headerlink" title="@else if"></a><code>@else if</code></h5><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> triangle(<span class="variable">$size</span>, <span class="variable">$color</span>, <span class="variable">$direction</span>) &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">border-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="variable">$size</span> / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$direction</span> == up &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> if <span class="variable">$direction</span> == right &#123;</span><br><span class="line">    <span class="attribute">border-left-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> if <span class="variable">$direction</span> == down &#123;</span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> if <span class="variable">$direction</span> == left &#123;</span><br><span class="line">    <span class="attribute">border-right-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">    <span class="keyword">@error</span> <span class="string">&quot;Unknown direction #&#123;$direction&#125;.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> triangle(<span class="number">5px</span>, black, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">2.5px</span>;</span><br><span class="line">  <span class="attribute">border-left-color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="each"><a href="#each" class="headerlink" title="@each"></a><code>@each</code></h4>可以輕鬆的為列表的每個元素或map中的每個元素生成樣式或評估代碼。<br>對於一些重複樣式非常有用。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$sizes</span>: <span class="number">40px</span>, <span class="number">50px</span>, <span class="number">80px</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$size</span> in <span class="variable">$sizes</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$size</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.icon-40px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-50px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-80px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h5>可以透過 <code>@each</code> 迭代印出每個 鍵(key)/值(value) 對。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$icons</span>: (<span class="string">&quot;eye&quot;</span>: <span class="string">&quot;\f112&quot;</span>, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;\f12e&quot;</span>, <span class="string">&quot;stop&quot;</span>: <span class="string">&quot;\f12f&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$glyph</span> in <span class="variable">$icons</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="variable">$glyph</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"><span class="selector-class">.icon-eye</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-start</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-stop</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="解構"><a href="#解構" class="headerlink" title="解構"></a>解構</h5>通過 <code>@each</code> 自動將變數分配給內部列表中的每個值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$icons</span>:</span><br><span class="line">  <span class="string">&quot;eye&quot;</span> <span class="string">&quot;\f112&quot;</span> <span class="number">12px</span>,</span><br><span class="line">  <span class="string">&quot;start&quot;</span> <span class="string">&quot;\f12e&quot;</span> <span class="number">16px</span>,</span><br><span class="line">  <span class="string">&quot;stop&quot;</span> <span class="string">&quot;\f12f&quot;</span> <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$glyph</span>, <span class="variable">$size</span> in <span class="variable">$icons</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="variable">$glyph</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"><span class="selector-class">.icon-eye</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-start</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-stop</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="for"><a href="#for" class="headerlink" title="@for"></a><code>@for</code></h4>有兩種寫法：<br><code>@for $i from 1 to 10</code>，迴圈會從 <code>1~9</code> ，<code>不含10</code>。<br><code>@for $i from 1 through 10</code>，迴圈會從 <code>1~10</code> 。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$base-color</span>: <span class="number">#036</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">1</span> through <span class="number">3</span> &#123;</span><br><span class="line">  <span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child</span>(3n + #&#123;<span class="variable">$i</span>&#125;) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lighten(<span class="variable">$base-color</span>, <span class="variable">$i</span> * <span class="number">5%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child(3n</span> + 1) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#004080</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child(3n</span> + 2) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#004d99</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">:nth-child(3n</span> + 3) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#0059b3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="while"><a href="#while" class="headerlink" title="@while"></a><code>@while</code></h4>當寫入的規則為 <code>true</code> 時，會持續迴圈，直到規則回傳 <code>false</code>。<br>請小心別造成無限迴圈…。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$i</span>: <span class="number">6</span>;</span><br><span class="line"><span class="variable">$end</span> : -<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@while</span> <span class="variable">$i</span> &gt; <span class="variable">$end</span> &#123;</span><br><span class="line">  <span class="selector-class">.item-</span>#&#123;<span class="variable">$i</span>&#125; &#123; <span class="attribute">width</span>: <span class="number">2px</span> * <span class="variable">$i</span>; &#125;</span><br><span class="line">  <span class="variable">$i</span>: <span class="variable">$i</span> - <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.item-6</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-4</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-0</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>## 類型</li></ul></li></ul></li><li><h3 id="Numbers"><a href="#Numbers" class="headerlink" title="Numbers"></a><code>Numbers</code></h3><p>Sass的數字有兩個組成成分：數字、單位。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">100</span>;</span><br><span class="line"><span class="keyword">@debug</span> <span class="number">0.8</span>;</span><br><span class="line"><span class="keyword">@debug</span> <span class="number">16px</span>;</span><br></pre></td></tr></table></figure></li><li><h4 id="單位"><a href="#單位" class="headerlink" title="單位"></a>單位</h4>Sass 對單位計算提供強大的支持。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">4px</span> * <span class="number">6px</span>; <span class="comment">// 24px*px (read &quot;square pixels&quot;)</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">5px</span>, <span class="number">2s</span>); <span class="comment">// 2.5px/s (read &quot;pixels per second&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.125px*deg/s*em (read &quot;pixel-degrees per second-em&quot;)</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">5px</span> * math.div(math.div(<span class="number">30deg</span>, <span class="number">2s</span>), <span class="number">24em</span>); </span><br><span class="line"></span><br><span class="line"><span class="variable">$degrees-per-second</span>: math.div(<span class="number">20deg</span>, <span class="number">1s</span>);</span><br><span class="line"><span class="keyword">@debug</span> <span class="variable">$degrees-per-second</span>; <span class="comment">// 20deg/s</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">1</span>, <span class="variable">$degrees-per-second</span>); <span class="comment">// 0.05s/deg</span></span><br></pre></td></tr></table></figure>Sass 會自動兼容單位之間的轉換，但不支援不兼容的單位，Sass會報錯。<br>e.g. 尺寸單位 與 時間單位。</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// CSS defines one inch as 96 pixels.</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1in</span> + <span class="number">6px</span>; <span class="comment">// 102px or 1.0625in</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1in</span> + <span class="number">1s</span>;</span><br><span class="line"><span class="comment">//     ^^^^^^^^</span></span><br><span class="line"><span class="comment">// Error: Incompatible units s and in.</span></span><br></pre></td></tr></table></figure>當變數欲計算時，<code>#&#123;$number&#125;px</code>，會被認定為字串，無法計算。<br>請使用以下方式：</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">$number = 10px;</span><br><span class="line"><span class="variable">$number</span> * 1px;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="精確"><a href="#精確" class="headerlink" title="精確"></a>精確</h4>Sass 數字支持小數點後10位的精度。<ul><li>只有小數點後10位數字，會編譯在CSS中。</li><li>如果兩個數字在小數點後10位皆相同，則兩者會被判定相等。</li><li>如果一個數字與整數的距離小於 0.0000000001 整數，則會被認定為整數。</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">0.012345678912345</span>; <span class="comment">// 0.0123456789</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">0.01234567891</span> == <span class="number">0.01234567899</span>; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1.00000000009</span>; <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">0.99999999991</span>; <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a><code>Strings</code></h3><p>Sass支持兩種內部結構：帶引號的字符串、不帶引號的字符串(標識符)。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// SASS 提供了函數可進行轉換</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> string.unquote(<span class="string">&quot;.widget:hover&quot;</span>); <span class="comment">// .widget:hover  (移除引號)</span></span><br><span class="line"><span class="keyword">@debug</span> string.quote(bold); <span class="comment">// &quot;bold&quot;  (加上引號)</span></span><br></pre></td></tr></table></figure></li><li><h4 id="跳脫"><a href="#跳脫" class="headerlink" title="跳脫"></a>跳脫</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="string">&quot;\&quot;&quot;</span>; <span class="comment">// &#x27;&quot;&#x27;</span></span><br><span class="line"><span class="keyword">@debug</span> \.widget; <span class="comment">// \.widget</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="字符串索引"><a href="#字符串索引" class="headerlink" title="字符串索引"></a>字符串索引</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Neue&quot;</span>); <span class="comment">// 11</span></span><br><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Roboto Mono&quot;</span>, -<span class="number">4</span>); <span class="comment">// &quot;Mono&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Colors"><a href="#Colors" class="headerlink" title="Colors"></a><code>Colors</code></h3><p>包含 十六進制代碼(<code>#f2ece4</code> 或 <code>#b37399aa</code>)、<br>CSS顏色名稱(<code>blue</code>、<code>red</code>)<br>或函數(<code>rgb()</code>、<code>rgba()</code>、<code>hsl()</code>、<code>hsla()</code>)。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> <span class="number">#f2ece4</span>; <span class="comment">// #f2ece4</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">#b37399aa</span>; <span class="comment">// rgba(179, 115, 153, 67%)</span></span><br><span class="line"><span class="keyword">@debug</span> midnightblue; <span class="comment">// #191970</span></span><br><span class="line"><span class="keyword">@debug</span> rgb(<span class="number">204</span>, <span class="number">102</span>, <span class="number">153</span>); <span class="comment">// #c69</span></span><br><span class="line"><span class="keyword">@debug</span> rgba(<span class="number">107</span>, <span class="number">113</span>, <span class="number">127</span>, <span class="number">0.8</span>); <span class="comment">// rgba(107, 113, 127, 0.8)</span></span><br><span class="line"><span class="keyword">@debug</span> hsl(<span class="number">228</span>, <span class="number">7%</span>, <span class="number">86%</span>); <span class="comment">// #dadbdf</span></span><br><span class="line"><span class="keyword">@debug</span> hsla(<span class="number">20</span>, <span class="number">20%</span>, <span class="number">85%</span>, <span class="number">0.7</span>); <span class="comment">// rgb(225, 215, 210, 0.7)</span></span><br></pre></td></tr></table></figure>SCSS支持許多有用的 顏色函數，可用於將顏色混合或調整色調、飽和度或亮度來創建新顏色。</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> scale-color(<span class="variable">$venus</span>, <span class="variable">$lightness</span>: +<span class="number">15%</span>); <span class="comment">// #a893a8</span></span><br><span class="line"><span class="keyword">@debug</span> mix(<span class="variable">$venus</span>, midnightblue); <span class="comment">// #594d85</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a><code>Lists</code></h3><p>Lists 包含一系列的值，不需要特殊的括號。<br>可以用逗點(,)、空格。</p><ul><li><h4 id="使用Lists"><a href="#使用Lists" class="headerlink" title="使用Lists"></a>使用Lists</h4><ul><li><h5 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h5>索引從1起算。<br>索引1代表第一個元素，索引-1代表倒數第一個元素。</li><li><h5 id="取得元素"><a href="#取得元素" class="headerlink" title="取得元素"></a>取得元素</h5>可以使用 <code>list.nth($list, $n)</code> 函數獲取索引處的元素。<br><code>$list</code>：Lists 本身。<br><code>$n</code>： 想抓取的元素的索引。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.nth(<span class="number">10px</span> <span class="number">12px</span> <span class="number">16px</span>, <span class="number">2</span>); <span class="comment">// 12px</span></span><br><span class="line"><span class="keyword">@debug</span> list.nth([line1, line2, line3], -<span class="number">1</span>); <span class="comment">// line3</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="遞迴"><a href="#遞迴" class="headerlink" title="遞迴"></a>遞迴</h5><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$sizes</span>: <span class="number">40px</span>, <span class="number">50px</span>, <span class="number">80px</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$size</span> in <span class="variable">$sizes</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$size</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.icon-40px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-50px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-80px</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h5>使用 <code>list.append($list, $val)</code> 函數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> append(<span class="number">10px</span> <span class="number">12px</span> <span class="number">16px</span>, <span class="number">25px</span>); <span class="comment">// 10px 12px 16px 25px</span></span><br><span class="line"><span class="keyword">@debug</span> append([col1-line1], col1-line2); <span class="comment">// [col1-line1, col1-line2]</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="查找元素索引"><a href="#查找元素索引" class="headerlink" title="查找元素索引"></a>查找元素索引</h4><p>檢查一個元素是否在列表中或找到索引，<br>使用 <code>list.index($list, $value)</code> 函數。<br>如果該值不在list中，則 <code>list.index()</code> 返回 null。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, <span class="number">1px</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, solid); <span class="comment">// 2</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, dashed); <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:list&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$valid-sides</span>: top, bottom, left, right;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> attach(<span class="variable">$side</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="keyword">not</span> list.index(<span class="variable">$valid-sides</span>, <span class="variable">$side</span>) &#123;</span><br><span class="line">    <span class="keyword">@error</span> <span class="string">&quot;#&#123;$side&#125; is not a valid side. Expected one of #&#123;$valid-sides&#125;.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="不變性"><a href="#不變性" class="headerlink" title="不變性"></a>不變性</h4><p>Sass的列表函數都會返回新的list而不是修改原始列表。<br>但仍然可以通過將新列表分配給同一變數，隨時間更新狀態。<br>通常在函數和mixin中使用，以將一堆值收集到列表中。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:list&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$prefixes-by-browser</span>: (<span class="string">&quot;firefox&quot;</span>: moz, <span class="string">&quot;safari&quot;</span>: webkit, <span class="string">&quot;ie&quot;</span>: ms);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@function</span> prefixes-for-browsers(<span class="variable">$browsers</span>) &#123;</span><br><span class="line">  <span class="variable">$prefixes</span>: ();</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$browser</span> in <span class="variable">$browsers</span> &#123;</span><br><span class="line">    <span class="variable">$prefixes</span>: list.append(<span class="variable">$prefixes</span>, map.get(<span class="variable">$prefixes-by-browser</span>, <span class="variable">$browser</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$prefixes</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> prefixes-for-browsers(<span class="string">&quot;firefox&quot;</span> <span class="string">&quot;ie&quot;</span>); <span class="comment">// moz ms</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="參數列表"><a href="#參數列表" class="headerlink" title="參數列表"></a>參數列表</h5><p>當聲明一個接受任意參數的 mixin 或 函數時，<br>得到的值是一個特殊列表，稱為 <code>參數列表</code>。<br>當用戶傳遞了關鍵字參數，則可以通過將參數列表傳遞給 <code>meta.keywords()</code>函數來將它們映射。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:meta&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> syntax-colors(<span class="variable">$args</span>...) &#123;</span><br><span class="line">  <span class="keyword">@debug</span> meta.keywords(<span class="variable">$args</span>);</span><br><span class="line">  <span class="comment">// (string: #080, comment: #800, variable: #60b)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$color</span> in meta.keywords(<span class="variable">$args</span>) &#123;</span><br><span class="line">    <span class="selector-tag">pre</span> <span class="selector-tag">span</span><span class="selector-class">.stx-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> syntax-colors(</span><br><span class="line">  <span class="variable">$string</span>: <span class="number">#080</span>,</span><br><span class="line">  <span class="variable">$comment</span>: <span class="number">#800</span>,</span><br><span class="line">  <span class="variable">$variable</span>: <span class="number">#60b</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>範例<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">pre</span> <span class="selector-tag">span</span><span class="selector-class">.stx-string</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#080</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">pre</span> <span class="selector-tag">span</span><span class="selector-class">.stx-comment</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#800</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">pre</span> <span class="selector-tag">span</span><span class="selector-class">.stx-variable</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#60b</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Maps"><a href="#Maps" class="headerlink" title="Maps"></a><code>Maps</code></h3><p>Sass中的映射包含鍵和值對，並且可以通過對應的<code>key</code>輕鬆查找<code>value</code>。<br><code>key</code>必須是唯一的，與Lists不同，Maps必須用括號括起來。<br>Maps 允許將任何Sass值當作key。</p><ul><li><h4 id="查找值"><a href="#查找值" class="headerlink" title="查找值"></a>查找值</h4><code>map.get($map, $key)</code> 函數，會返回對應的值。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;medium&quot;</span>); <span class="comment">// 500</span></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;extra-bold&quot;</span>); <span class="comment">// nul</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="遞迴-1"><a href="#遞迴-1" class="headerlink" title="遞迴"></a>遞迴</h4>使用 <code>@each</code>，key 跟 value 會被分配給對應的變數，因此可以輕鬆的使用它們。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$icons</span>: (<span class="string">&quot;eye&quot;</span>: <span class="string">&quot;\f112&quot;</span>, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;\f12e&quot;</span>, <span class="string">&quot;stop&quot;</span>: <span class="string">&quot;\f12f&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$glyph</span> in <span class="variable">$icons</span> &#123;</span><br><span class="line">  <span class="selector-class">.icon-</span>#&#123;<span class="variable">$name</span>&#125;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="variable">$glyph</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"><span class="selector-class">.icon-eye</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-start</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-stop</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Icon Font&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="新增-修改"><a href="#新增-修改" class="headerlink" title="新增/修改"></a>新增/修改</h4><code>map.set($map, $key, $value)</code> 函數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$font-weights</span>, <span class="string">&quot;extra-bold&quot;</span>, <span class="number">900</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 700, &quot;extra-bold&quot;: 900)</span></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$font-weights</span>, <span class="string">&quot;bold&quot;</span>, <span class="number">900</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 900)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="合併"><a href="#合併" class="headerlink" title="合併"></a>合併</h4><code>map.merge($map1, $map2)</code>。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$light-weights</span>: (<span class="string">&quot;lightest&quot;</span>: <span class="number">100</span>, <span class="string">&quot;light&quot;</span>: <span class="number">300</span>);</span><br><span class="line"><span class="variable">$heavy-weights</span>: (<span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$light-weights</span>, <span class="variable">$heavy-weights</span>);</span><br><span class="line"><span class="comment">// (&quot;lightest&quot;: 100, &quot;light&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure>若兩個Maps具有相同的 <code>key</code>，則在合併中會使用第二個Maps的 <code>value</code>。</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$weights</span>: (<span class="string">&quot;light&quot;</span>: <span class="number">300</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$weights</span>, (<span class="string">&quot;medium&quot;</span>: <span class="number">700</span>));</span><br><span class="line"><span class="comment">// (&quot;light&quot;: 300, &quot;medium&quot;: 700)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="不變性-1"><a href="#不變性-1" class="headerlink" title="不變性"></a>不變性</h4>與<code>Lists</code>一樣，<br>Sass的列表函數都會返回新的Maps而不是修改原始Maps。<br>但仍然可以通過將新Maps分配給同一變數，隨時間更新狀態。<br>通常在函數和mixin中使用，以將一堆值收集到列表中。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$prefixes-by-browser</span>: (<span class="string">&quot;firefox&quot;</span>: moz, <span class="string">&quot;safari&quot;</span>: webkit, <span class="string">&quot;ie&quot;</span>: ms);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> add-browser-prefix(<span class="variable">$browser</span>, <span class="variable">$prefix</span>) &#123;</span><br><span class="line">  <span class="variable">$prefixes-by-browser</span>: map.merge(<span class="variable">$prefixes-by-browser</span>, (<span class="variable">$browser</span>: <span class="variable">$prefix</span>)) !global;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> add-browser-prefix(<span class="string">&quot;opera&quot;</span>, o);</span><br><span class="line"><span class="keyword">@debug</span> <span class="variable">$prefixes-by-browser</span>;</span><br><span class="line"><span class="comment">// (&quot;firefox&quot;: moz, &quot;safari&quot;: webkit, &quot;ie&quot;: ms, &quot;opera&quot;: o)</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a><code>Boolean</code></h3><p>Boolean 是邏輯<code>true</code>和<code>false</code>。<br>falsey 值只包含 <code>null</code> 與 <code>false</code>，其餘都是 truthy。</p><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:math&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1px</span> == <span class="number">2px</span>; <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">1px</span> == <span class="number">1px</span>; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="number">10px</span> &lt; <span class="number">3px</span>; <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> math.comparable(<span class="number">100px</span>, <span class="number">3in</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h4 id="運算"><a href="#運算" class="headerlink" title="運算"></a>運算</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> true <span class="keyword">and</span> true; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> true <span class="keyword">and</span> false; <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> true <span class="keyword">or</span> false; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> false <span class="keyword">or</span> false; <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> <span class="keyword">not</span> true; <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> <span class="keyword">not</span> false; <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4>通常與 <code>@if</code> 一起使用。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> avatar(<span class="variable">$size</span>, <span class="variable">$circle</span>: false) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$circle</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="variable">$size</span> / <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.square-av</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: false);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.circle-av</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> avatar(<span class="number">100px</span>, <span class="variable">$circle</span>: true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.square-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.circle-av</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="三元運算式"><a href="#三元運算式" class="headerlink" title="三元運算式"></a>三元運算式</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@debug</span> if(true, <span class="number">10px</span>, <span class="number">30px</span>); <span class="comment">// 10px</span></span><br><span class="line"><span class="keyword">@debug</span> if(false, <span class="number">10px</span>, <span class="number">30px</span>); <span class="comment">// 30px</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="null"><a href="#null" class="headerlink" title="null"></a><code>null</code></h3><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:map&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Roboto&quot;</span>); <span class="comment">// null</span></span><br><span class="line"><span class="keyword">@debug</span> map.get((<span class="string">&quot;large&quot;</span>: <span class="number">20px</span>), <span class="string">&quot;small&quot;</span>); <span class="comment">// null</span></span><br><span class="line"><span class="keyword">@debug</span> &amp;; <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li><li><h4 id="省略"><a href="#省略" class="headerlink" title="省略"></a>省略</h4>若屬性列表中含有null，則會部份省略。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$fonts</span>: (<span class="string">&quot;serif&quot;</span>: <span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;monospace&quot;</span>: <span class="string">&quot;Consolas&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">18px</span> bold map-get(<span class="variable">$fonts</span>, <span class="string">&quot;sans&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">18px</span> bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>若屬性值為 <code>null</code>，則生成的CSS將會全部省略。</li><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$fonts</span>: (<span class="string">&quot;serif&quot;</span>: <span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;monospace&quot;</span>: <span class="string">&quot;Consolas&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: &#123;</span><br><span class="line">    size: <span class="number">18px</span>;</span><br><span class="line">    weight: bold;</span><br><span class="line">    family: map-get(<span class="variable">$fonts</span>, <span class="string">&quot;sans&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="falsey"><a href="#falsey" class="headerlink" title="falsey"></a>falsey</h4><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@mixin</span> app-background(<span class="variable">$color</span>) &#123;</span><br><span class="line">  #&#123;if(&amp;, &#x27;&amp;.app-background&#x27;, &#x27;.app-background&#x27;)&#125; &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$color</span>;</span><br><span class="line">    <span class="attribute">color</span>: rgba(<span class="number">#fff</span>, <span class="number">0.75</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> app-background(<span class="number">#036</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> app-background(<span class="number">#c6538c</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.app-background</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#036</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span><span class="selector-class">.app-background</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#c6538c</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Calculations-計算"><a href="#Calculations-計算" class="headerlink" title="Calculations(計算)"></a><code>Calculations</code>(計算)</h3><p><code>計算</code> 是 Sass表示 <code>calc()</code>函數的方式，以及類似的函數，如 <code>clamp()</code>、<code>min()</code>和<code>max()</code>。<br>Sass將盡可能簡化這些，使它們相互結合。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> calc(<span class="number">400px</span> + <span class="number">10%</span>); <span class="comment">// calc(400px + 10%)</span></span><br><span class="line"><span class="keyword">@debug</span> calc(<span class="number">400px</span> / <span class="number">2</span>); <span class="comment">// 200px</span></span><br><span class="line"><span class="keyword">@debug</span> min(<span class="number">100px</span>, calc(<span class="number">1rem</span> + <span class="number">10%</span>)); <span class="comment">// min(100px, 1rem + 10%)</span></span><br></pre></td></tr></table></figure><p>在 <code>計算</code> 中可以使用 sass變數、sass函數。<br>也可在 <code>計算</code> 中使用插值，但這樣做會讓括號中的任何內容都不會被簡化或類型檢查，<br>與其寫 <code>calc(10px + #&#123;$var&#125;)</code>，不如寫 <code>calc(10px + $var)</code>。</p><ul><li><h4 id="運用"><a href="#運用" class="headerlink" title="運用"></a>運用</h4>不能將<code>計算</code>與正常的Sass運算一起使用。只需將他們包覆在<code>calc()</code>表達式中。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$width</span>: calc(<span class="number">100%</span> + <span class="number">10px</span>);</span><br><span class="line"><span class="keyword">@debug</span> <span class="variable">$width</span> * <span class="number">2</span>; <span class="comment">// Error!</span></span><br><span class="line"><span class="keyword">@debug</span> calc(<span class="variable">$width</span> * <span class="number">2</span>); <span class="comment">// calc((100% + 10px) * 2);</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="min-和-max"><a href="#min-和-max" class="headerlink" title="min() 和 max()"></a><code>min()</code> 和 <code>max()</code></h4>CSS添加了對 <code>Values and Units Level 4</code> 的支持 <code>min()</code> 和 <code>max()</code> 函數，<br>但Sass早在此之前就支援 <code>min()</code> 和 <code>max()</code> 函數，<br>所以Sass會自動調適使用CSS函數或使用Sass函數。<ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="variable">$padding</span>: <span class="number">12px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="comment">// Since these max() calls are valid calculation expressions, they&#x27;re</span></span><br><span class="line">  <span class="comment">// parsed as calculations.</span></span><br><span class="line">  <span class="attribute">padding-left</span>: max(<span class="variable">$padding</span>, env(safe-area-inset-left));</span><br><span class="line">  <span class="attribute">padding-right</span>: max(<span class="variable">$padding</span>, env(safe-area-inset-right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="comment">// Since these use the SassScript-only modulo operator, they&#x27;re parsed as</span></span><br><span class="line">  <span class="comment">// SassScript function calls.</span></span><br><span class="line">  <span class="attribute">padding-left</span>: max(<span class="variable">$padding</span> % <span class="number">10</span>, <span class="number">20px</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: max(<span class="variable">$padding</span> % <span class="number">10</span>, <span class="number">20px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="built_in">max</span>(<span class="number">12px</span>, env(safe-area-inset-left));</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="built_in">max</span>(<span class="number">12px</span>, env(safe-area-inset-right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Function"><a href="#Function" class="headerlink" title="Function"></a><code>Function</code></h3><p>不能直接將 <code>Function</code> 寫為值，<br>但可以將 <code>Function</code> 的名稱傳遞給 <code>meta.get-function()</code> 函數，將其作為值獲取。</p></li><li><p>範例</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* scss */</span></span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:list&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:meta&quot;</span>;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;sass:string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// Return a copy of $list with all elements for which $condition returns `true`</span></span><br><span class="line"><span class="comment">/// removed.</span></span><br><span class="line"><span class="keyword">@function</span> remove-where(<span class="variable">$list</span>, <span class="variable">$condition</span>) &#123;</span><br><span class="line">  <span class="variable">$new-list</span>: ();</span><br><span class="line">  <span class="variable">$separator</span>: list.separator(<span class="variable">$list</span>);</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$element</span> in <span class="variable">$list</span> &#123;</span><br><span class="line">    <span class="keyword">@if</span> <span class="keyword">not</span> meta.call(<span class="variable">$condition</span>, <span class="variable">$element</span>) &#123;</span><br><span class="line">      <span class="variable">$new-list</span>: list.append(<span class="variable">$new-list</span>, <span class="variable">$element</span>, <span class="variable">$separator</span>: <span class="variable">$separator</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$new-list</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fonts</span>: Tahoma, Geneva, <span class="string">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, sans-serif;</span><br><span class="line"></span><br><span class="line"><span class="attribute">content</span> &#123;</span><br><span class="line">  <span class="keyword">@function</span> contains-helvetica(<span class="variable">$string</span>) &#123;</span><br><span class="line">    <span class="keyword">@return</span> string.index(<span class="variable">$string</span>, <span class="string">&quot;Helvetica&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">font-family</span>: remove-where(<span class="variable">$fonts</span>, meta.get-function(<span class="string">&quot;contains-helvetica&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="d-flex">  <small class="arrow down">➤</small>  <small class="arrow down">➤</small></div><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Tahoma, Geneva, Arial, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>## 高階用法 - 內置模塊</li><li><h3 id="sass-color"><a href="#sass-color" class="headerlink" title="sass:color"></a><code>sass:color</code></h3><ul><li><h4 id="顏色設置"><a href="#顏色設置" class="headerlink" title="顏色設置"></a>顏色設置</h4><ul><li><h5 id="創建RGB色"><a href="#創建RGB色" class="headerlink" title="創建RGB色"></a>創建RGB色</h5><code>R: red(紅色)</code>、<code>G: green(綠色)</code>、<code>B: blue(藍色)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgb(red, green, blue)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgb(0, 0, 255);</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="創建RGBA色"><a href="#創建RGBA色" class="headerlink" title="創建RGBA色"></a>創建RGBA色</h5><code>R: red(紅色)</code>、<code>G: green(綠色)</code>、<code>B: blue(藍色)</code>、<code>A: alpha(透明)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgba(red, green, blue, alpha)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">rgba(0, 0, 255, 0<span class="selector-class">.3</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="創建hsl色"><a href="#創建hsl色" class="headerlink" title="創建hsl色"></a>創建hsl色</h5><code>H: hue(色相)</code>、<code>S: saturation(飽和度)</code>、<code>L: lightness(亮度)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsl(hue, saturation, lightness)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsl(120, 100%, 50%); <span class="comment">// 綠色</span></span><br><span class="line">hsl(120, 100%, 75%); <span class="comment">// 淺綠色</span></span><br><span class="line">hsl(120, 100%, 25%); <span class="comment">// 深綠色</span></span><br><span class="line">hsl(120, 60%, 70%); <span class="comment">// 柔和的綠色</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="創建hsla色"><a href="#創建hsla色" class="headerlink" title="創建hsla色"></a>創建hsla色</h5><code>H: hue(色相)</code>、<code>S: saturation(飽和度)</code>、<code>L: lightness(亮度)</code>、<code>A: alpha(透明)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsla(hue, saturation, lightness, alpha)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">hsla(120, 100%, 50%, 0<span class="selector-class">.3</span>); <span class="comment">// 綠色帶有透明度</span></span><br><span class="line">hsla(120, 100%, 75%, 0<span class="selector-class">.3</span>); <span class="comment">// 淺綠色帶有透明度</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="返回灰色"><a href="#返回灰色" class="headerlink" title="返回灰色"></a>返回灰色</h5>將一個顏色變成灰色，相當於<code>desaturate(color, 100%)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.grayscale</span>(<span class="variable">$color</span>)</span><br><span class="line">grayscale(<span class="variable">$color</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.grayscale(<span class="number">#6b717f</span>); <span class="comment">// #757575</span></span><br><span class="line"><span class="keyword">@debug</span> color.grayscale(<span class="number">#d2e1dd</span>); <span class="comment">// #dadada</span></span><br><span class="line"><span class="keyword">@debug</span> color.grayscale(<span class="number">#036</span>); <span class="comment">// #333333</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="返回補色"><a href="#返回補色" class="headerlink" title="返回補色"></a>返回補色</h5>返回一個補色，相當於 <code>adjust-hue($color, 180deg)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.complement</span>(<span class="variable">$color</span>)</span><br><span class="line">complement(<span class="variable">$color</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hue 222deg becomes 42deg.</span></span><br><span class="line"><span class="keyword">@debug</span> color.complement(<span class="number">#6b717f</span>); <span class="comment">// #7f796b</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 164deg becomes 344deg.</span></span><br><span class="line"><span class="keyword">@debug</span> color.complement(<span class="number">#d2e1dd</span>); <span class="comment">// #e1d2d6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 210deg becomes 30deg.</span></span><br><span class="line"><span class="keyword">@debug</span> color.complement(<span class="number">#036</span>); <span class="comment">// #663300</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="返回對比色"><a href="#返回對比色" class="headerlink" title="返回對比色"></a>返回對比色</h5>返回一個對比色，紅、綠、藍色值倒過來，而透明度不變。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.invert</span>(<span class="variable">$color</span>, <span class="variable">$weight</span>: <span class="number">100%</span>)</span><br><span class="line">invert(<span class="variable">$color</span>, <span class="variable">$weight</span>: <span class="number">100%</span>) //=&gt; color </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.invert(<span class="number">#b37399</span>); <span class="comment">// #4c8c66</span></span><br><span class="line"><span class="keyword">@debug</span> color.invert(black); <span class="comment">// white</span></span><br><span class="line"><span class="keyword">@debug</span> color.invert(<span class="number">#550e0c</span>, <span class="number">20%</span>); <span class="comment">// #663b3a</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="顏色獲取"><a href="#顏色獲取" class="headerlink" title="顏色獲取"></a>顏色獲取</h4><ul><li><h5 id="獲取紅色值"><a href="#獲取紅色值" class="headerlink" title="獲取紅色值"></a>獲取紅色值</h5>從一個顏色中獲取其中紅色值 (0~255)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.red</span>(<span class="variable">$color</span>)</span><br><span class="line">red(<span class="variable">$color</span>) <span class="comment">//=&gt; number   </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.red(<span class="number">#e1d7d2</span>); <span class="comment">// 225</span></span><br><span class="line"><span class="keyword">@debug</span> color.red(white); <span class="comment">// 255</span></span><br><span class="line"><span class="keyword">@debug</span> color.red(black); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="獲取綠色值"><a href="#獲取綠色值" class="headerlink" title="獲取綠色值"></a>獲取綠色值</h5>從一個顏色中獲取其中綠色值 (0~255)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.green</span>(<span class="variable">$color</span>)</span><br><span class="line">green(<span class="variable">$color</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.green(<span class="number">#e1d7d2</span>); <span class="comment">// 215</span></span><br><span class="line"><span class="keyword">@debug</span> color.green(white); <span class="comment">// 255</span></span><br><span class="line"><span class="keyword">@debug</span> color.green(black); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="獲取藍色值"><a href="#獲取藍色值" class="headerlink" title="獲取藍色值"></a>獲取藍色值</h5>從一個顏色中獲取其中藍色值 (0~255)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.blue</span>(<span class="variable">$color</span>)</span><br><span class="line">blue(<span class="variable">$color</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.blue(<span class="number">#e1d7d2</span>); <span class="comment">// 210</span></span><br><span class="line"><span class="keyword">@debug</span> color.blue(white); <span class="comment">// 255</span></span><br><span class="line"><span class="keyword">@debug</span> color.blue(black); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="獲取色調"><a href="#獲取色調" class="headerlink" title="獲取色調"></a>獲取色調</h5>返回顏色在 HSL 色值中的角度值 (0deg - 255deg)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.hue</span>(<span class="variable">$color</span>)</span><br><span class="line">hue(<span class="variable">$color</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.hue(<span class="number">#e1d7d2</span>); <span class="comment">// 20deg</span></span><br><span class="line"><span class="keyword">@debug</span> color.hue(<span class="number">#f2ece4</span>); <span class="comment">// 34.2857142857deg</span></span><br><span class="line"><span class="keyword">@debug</span> color.hue(<span class="number">#dadbdf</span>); <span class="comment">// 228deg</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="獲取飽和度"><a href="#獲取飽和度" class="headerlink" title="獲取飽和度"></a>獲取飽和度</h5>獲取一個顏色的飽和度值 (0% - 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">saturation(<span class="attribute">color</span>)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">saturation(<span class="selector-id">#7fffd4</span>); <span class="comment">// 100%</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="獲取亮度"><a href="#獲取亮度" class="headerlink" title="獲取亮度"></a>獲取亮度</h5>獲取一個顏色的亮度值 (0% - 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">lightness(<span class="attribute">color</span>)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">lightness(<span class="selector-id">#7fffd4</span>); <span class="comment">// 74.9%</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="獲取alpha通道"><a href="#獲取alpha通道" class="headerlink" title="獲取alpha通道"></a>獲取alpha通道</h5>獲取一個顏色的alpha通道值 (0 - 1)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">alpha(<span class="variable">$color</span>)</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.alpha(<span class="number">#e1d7d2</span>); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="獲取opacity"><a href="#獲取opacity" class="headerlink" title="獲取opacity"></a>獲取opacity</h5>獲取一個顏色的透明度值 (0 - 1)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">opacity</span>(<span class="variable">$color</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.opacity(rgb(<span class="number">210</span>, <span class="number">225</span>, <span class="number">221</span>, <span class="number">0.4</span>)); <span class="comment">// 0.4</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="顏色操作"><a href="#顏色操作" class="headerlink" title="顏色操作"></a>顏色操作</h4><ul><li><h5 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h5>把兩種顏色混合起來。<br><code>$weight</code> 參數必須是 0% 到 100%。<br>默認 <code>$weight</code> 為 50%，表明新顏色各取50% <code>color1</code> 和 <code>color2</code>的色值相加。<br>如果 <code>$weight</code> 為 25%，那表明新顏色為25% <code>color1</code> 和 75% <code>color2</code>的色值相加。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.mix</span>(<span class="variable">$color1</span>, <span class="variable">$color2</span>, <span class="variable">$weight</span>: <span class="number">50%</span>)</span><br><span class="line">mix(<span class="variable">$color1</span>, <span class="variable">$color2</span>, <span class="variable">$weight</span>: <span class="number">50%</span>) //=&gt; color </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.mix(<span class="number">#036</span>, <span class="number">#d2e1dd</span>); <span class="comment">// #698aa2</span></span><br><span class="line"><span class="keyword">@debug</span> color.mix(<span class="number">#036</span>, <span class="number">#d2e1dd</span>, <span class="number">75%</span>); <span class="comment">// #355f84</span></span><br><span class="line"><span class="keyword">@debug</span> color.mix(<span class="number">#036</span>, <span class="number">#d2e1dd</span>, <span class="number">25%</span>); <span class="comment">// #9eb6bf</span></span><br><span class="line"><span class="keyword">@debug</span> color.mix(rgba(<span class="number">242</span>, <span class="number">236</span>, <span class="number">228</span>, <span class="number">0.5</span>), <span class="number">#6b717f</span>); <span class="comment">// rgba(141, 144, 152, 0.75)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="改變色相"><a href="#改變色相" class="headerlink" title="改變色相"></a>改變色相</h5>增加或減少 <code>$color</code> 的色相值 (-360deg ~ 360deg)，創建一個新的顏色。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">adjust-hue(<span class="variable">$color</span>, <span class="variable">$degrees</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hue 222deg becomes 282deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#6b717f</span>, <span class="number">60deg</span>); <span class="comment">// #796b7f</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 164deg becomes 104deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#d2e1dd</span>, -<span class="number">60deg</span>); <span class="comment">// #d6e1d2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 210deg becomes 255deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#036</span>, <span class="number">45</span>); <span class="comment">// #1a0066</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="增加或減少-color的色調"><a href="#增加或減少-color的色調" class="headerlink" title="增加或減少$color的色調"></a>增加或減少$color的色調</h4><code>$hue</code> 必須介於 (-360deg ~ 360deg)之間的數字，才能添加$color的色調。<br>可以是無單位。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">adjust-hue(<span class="variable">$color</span>, <span class="variable">$degrees</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hue 222deg becomes 282deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#6b717f</span>, <span class="number">60deg</span>); <span class="comment">// #796b7f</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 164deg becomes 104deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#d2e1dd</span>, -<span class="number">60deg</span>); <span class="comment">// #d6e1d2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hue 210deg becomes 255deg.</span></span><br><span class="line"><span class="keyword">@debug</span> adjust-hue(<span class="number">#036</span>, <span class="number">45</span>); <span class="comment">// #1a0066</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="按固定量增加或減少-color"><a href="#按固定量增加或減少-color" class="headerlink" title="按固定量增加或減少$color"></a>按固定量增加或減少$color</h4><code>$color</code> 按固定量增加或減少的一項或多項屬性。<br>將每個關鍵字參數傳遞到顏色的相應屬性中，並返回調整後的顏色。<br>所有可選參數必須是數字，必須是無單位介於<code>-255</code>到<code>255</code>之間。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.adjust</span>(<span class="variable">$color</span>,</span><br><span class="line"><span class="variable">$red</span>: null, <span class="variable">$green</span>: null, <span class="variable">$blue</span>: null,</span><br><span class="line"><span class="variable">$hue</span>: null, <span class="variable">$saturation</span>: null, <span class="variable">$lightness</span>: null,</span><br><span class="line"><span class="variable">$whiteness</span>: null, <span class="variable">$blackness</span>: null,</span><br><span class="line"><span class="variable">$alpha</span>: null)</span><br><span class="line"></span><br><span class="line">adjust-color(...) //=&gt; color</span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.adjust(<span class="number">#6b717f</span>, <span class="variable">$red</span>: <span class="number">15</span>); <span class="comment">// #7a717f</span></span><br><span class="line"><span class="keyword">@debug</span> color.adjust(<span class="number">#d2e1dd</span>, <span class="variable">$red</span>: -<span class="number">10</span>, <span class="variable">$blue</span>: <span class="number">10</span>); <span class="comment">// #c8e1e7</span></span><br><span class="line"><span class="keyword">@debug</span> color.adjust(<span class="number">#998099</span>, <span class="variable">$lightness</span>: -<span class="number">30%</span>, <span class="variable">$alpha</span>: -<span class="number">0.4</span>); <span class="comment">// rgba(71, 57, 71, 0.6)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="替換"><a href="#替換" class="headerlink" title="替換"></a>替換</h4>將顏色的一個或多個屬性設置為新值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.change</span>(<span class="variable">$color</span>,</span><br><span class="line">  <span class="variable">$red</span>: null, <span class="variable">$green</span>: null, <span class="variable">$blue</span>: null,</span><br><span class="line">  <span class="variable">$hue</span>: null, <span class="variable">$saturation</span>: null, <span class="variable">$lightness</span>: null,</span><br><span class="line">  <span class="variable">$whiteness</span>: null, <span class="variable">$blackness</span>: null,</span><br><span class="line">  <span class="variable">$alpha</span>: null)</span><br><span class="line">change-color(...) //=&gt; color </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.change(<span class="number">#6b717f</span>, <span class="variable">$red</span>: <span class="number">100</span>); <span class="comment">// #64717f</span></span><br><span class="line"><span class="keyword">@debug</span> color.change(<span class="number">#d2e1dd</span>, <span class="variable">$red</span>: <span class="number">100</span>, <span class="variable">$blue</span>: <span class="number">50</span>); <span class="comment">// #64e132</span></span><br><span class="line"><span class="keyword">@debug</span> color.change(<span class="number">#998099</span>, <span class="variable">$lightness</span>: <span class="number">30%</span>, <span class="variable">$alpha</span>: <span class="number">0.5</span>); <span class="comment">// rgba(85, 68, 85, 0.5)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="調深"><a href="#調深" class="headerlink" title="調深"></a>調深</h4>使 <code>$color</code> 顏色更深，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">darken(<span class="variable">$color</span>, <span class="variable">$amount</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Lightness 92% becomes 72%.</span></span><br><span class="line"><span class="keyword">@debug</span> darken(<span class="number">#b37399</span>, <span class="number">20%</span>); <span class="comment">// #7c4465</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 85% becomes 45%.</span></span><br><span class="line"><span class="keyword">@debug</span> darken(<span class="number">#f2ece4</span>, <span class="number">40%</span>); <span class="comment">// #b08b5a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 20% becomes 0%.</span></span><br><span class="line"><span class="keyword">@debug</span> darken(<span class="number">#036</span>, <span class="number">30%</span>); <span class="comment">// black</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="調淺"><a href="#調淺" class="headerlink" title="調淺"></a>調淺</h4>使 <code>$color</code> 顏色更淺，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">lighten(<span class="variable">$color</span>, <span class="variable">$amount</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Lightness 46% becomes 66%.</span></span><br><span class="line"><span class="keyword">@debug</span> lighten(<span class="number">#6b717f</span>, <span class="number">20%</span>); <span class="comment">// #a1a5af</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 20% becomes 80%.</span></span><br><span class="line"><span class="keyword">@debug</span> lighten(<span class="number">#036</span>, <span class="number">60%</span>); <span class="comment">// #99ccff</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Lightness 85% becomes 100%.</span></span><br><span class="line"><span class="keyword">@debug</span> lighten(<span class="number">#e1d7d2</span>, <span class="number">30%</span>); <span class="comment">// white</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="增加飽和度"><a href="#增加飽和度" class="headerlink" title="增加飽和度"></a>增加飽和度</h4>使 <code>$color</code> 飽和度更高，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">saturate(<span class="variable">$color</span>, <span class="variable">$amount</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Saturation 50% becomes 70%.</span></span><br><span class="line"><span class="keyword">@debug</span> saturate(<span class="number">#c69</span>, <span class="number">20%</span>); <span class="comment">// #e05299</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 35% becomes 85%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#f2ece4</span>, <span class="number">50%</span>); <span class="comment">// #ebebeb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 80% becomes 100%.</span></span><br><span class="line"><span class="keyword">@debug</span> saturate(<span class="number">#0e4982</span>, <span class="number">30%</span>);  <span class="comment">// #004990</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="降低飽和度"><a href="#降低飽和度" class="headerlink" title="降低飽和度"></a>降低飽和度</h4>使 <code>$color</code> 飽和度降低，(0% ~ 100%)。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">desaturate(<span class="variable">$color</span>, <span class="variable">$amount</span>) <span class="comment">//=&gt; color  </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Saturation 100% becomes 80%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#036</span>, <span class="number">20%</span>); <span class="comment">// #0a335c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 35% becomes 15%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#f2ece4</span>, <span class="number">20%</span>); <span class="comment">// #eeebe8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Saturation 20% becomes 0%.</span></span><br><span class="line"><span class="keyword">@debug</span> desaturate(<span class="number">#d2e1dd</span>, <span class="number">30%</span>); <span class="comment">// #dadada</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="流暢地縮放一個或多個屬性"><a href="#流暢地縮放一個或多個屬性" class="headerlink" title="流暢地縮放一個或多個屬性"></a>流暢地縮放一個或多個屬性</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.scale</span>(<span class="variable">$color</span>,</span><br><span class="line">  <span class="variable">$red</span>: null, <span class="variable">$green</span>: null, <span class="variable">$blue</span>: null,</span><br><span class="line">  <span class="variable">$saturation</span>: null, <span class="variable">$lightness</span>: null,</span><br><span class="line">  <span class="variable">$whiteness</span>: null, <span class="variable">$blackness</span>: null,</span><br><span class="line">  <span class="variable">$alpha</span>: null)</span><br><span class="line">scale-color(...) //=&gt; color </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.scale(<span class="number">#6b717f</span>, <span class="variable">$red</span>: <span class="number">15%</span>); <span class="comment">// #81717f</span></span><br><span class="line"><span class="keyword">@debug</span> color.scale(<span class="number">#d2e1dd</span>, <span class="variable">$lightness</span>: -<span class="number">10%</span>, <span class="variable">$saturation</span>: <span class="number">10%</span>); <span class="comment">// #b3d4cb</span></span><br><span class="line"><span class="keyword">@debug</span> color.scale(<span class="number">#998099</span>, <span class="variable">$alpha</span>: -<span class="number">40%</span>); <span class="comment">// rgba(153, 128, 153, 0.6)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="變更透明"><a href="#變更透明" class="headerlink" title="變更透明"></a>變更透明</h4>將 <code>$color</code> 變更透明。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">transparentize(<span class="variable">$color</span>, <span class="variable">$amount</span>)</span><br><span class="line">fade-out(<span class="variable">$color</span>, <span class="variable">$amount</span>) <span class="comment">//=&gt; color </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> transparentize(rgba(<span class="number">#6b717f</span>, <span class="number">0.5</span>), <span class="number">0.2</span>);  <span class="comment">// rgba(107, 113, 127, 0.3)</span></span><br><span class="line"><span class="keyword">@debug</span> fade-out(rgba(<span class="number">#e1d7d2</span>, <span class="number">0.5</span>), <span class="number">0.4</span>);  <span class="comment">// rgba(225, 215, 210, 0.1)</span></span><br><span class="line"><span class="keyword">@debug</span> transparentize(rgba(<span class="number">#036</span>, <span class="number">0.3</span>), <span class="number">0.3</span>);  <span class="comment">// rgba(0, 51, 102, 0)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="返回HWB-色調-黑度"><a href="#返回HWB-色調-黑度" class="headerlink" title="返回HWB(色調)黑度"></a>返回HWB(色調)黑度</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.blackness</span>(<span class="variable">$color</span>) <span class="comment">//=&gt; number  </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.blackness(<span class="number">#e1d7d2</span>); <span class="comment">// 11.7647058824%</span></span><br><span class="line"><span class="keyword">@debug</span> color.blackness(white); <span class="comment">// 0%</span></span><br><span class="line"><span class="keyword">@debug</span> color.blackness(black); <span class="comment">// 100%</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="返回HWB-色調-白度"><a href="#返回HWB-色調-白度" class="headerlink" title="返回HWB(色調)白度"></a>返回HWB(色調)白度</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span><span class="selector-class">.whiteness</span>(<span class="variable">$color</span>) <span class="comment">//=&gt; number  </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> color.whiteness(<span class="number">#e1d7d2</span>); <span class="comment">// 82.3529411765%</span></span><br><span class="line"><span class="keyword">@debug</span> color.whiteness(white); <span class="comment">// 100%</span></span><br><span class="line"><span class="keyword">@debug</span> color.whiteness(black); <span class="comment">// 0%</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li><li><h3 id="sass-list"><a href="#sass-list" class="headerlink" title="sass:list"></a><code>sass:list</code></h3><ul><li><h4 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h4>將單個值 <code>$val</code> 添加到列表尾端。<br><code>$separator</code> 為分隔符，默認會自動偵測，可指定 <code>逗號(comma)</code> 或 <code>空格(space)</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.append</span>(<span class="variable">$list</span>, <span class="variable">$val</span>, <span class="variable">$separator</span>: auto)</span><br><span class="line">append(<span class="variable">$list</span>, <span class="variable">$val</span>, <span class="variable">$separator</span>: auto) //=&gt; list </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.append(<span class="number">10px</span> <span class="number">20px</span>, <span class="number">30px</span>); <span class="comment">// 10px 20px 30px</span></span><br><span class="line"><span class="keyword">@debug</span> list.append((blue, red), green); <span class="comment">// blue, red, green</span></span><br><span class="line"><span class="keyword">@debug</span> list.append(<span class="number">10px</span> <span class="number">20px</span>, <span class="number">30px</span> <span class="number">40px</span>); <span class="comment">// 10px 20px (30px 40px)</span></span><br><span class="line"><span class="keyword">@debug</span> list.append(<span class="number">10px</span>, <span class="number">20px</span>, <span class="variable">$separator</span>: comma); <span class="comment">// 10px, 20px</span></span><br><span class="line"><span class="keyword">@debug</span> list.append((blue, red), green, <span class="variable">$separator</span>: space); <span class="comment">// blue red green</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4>返回列表中 <code>$value</code> 所在的索引值。<br>沒找到，則返回 <code>null</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.index</span>(<span class="variable">$list</span>, <span class="variable">$value</span>)</span><br><span class="line">index(<span class="variable">$list</span>, <span class="variable">$value</span>) <span class="comment">//=&gt; number | null </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, <span class="number">1px</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, solid); <span class="comment">// 2</span></span><br><span class="line"><span class="keyword">@debug</span> list.index(<span class="number">1px</span> solid red, dashed); <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="是否有中括號"><a href="#是否有中括號" class="headerlink" title="是否有中括號"></a>是否有中括號</h4>判斷列表中是否有中括號<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.is-bracketed</span>(<span class="variable">$list</span>)</span><br><span class="line">is-bracketed(<span class="variable">$list</span>) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.is-bracketed(<span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> list.is-bracketed([<span class="number">1px</span>, <span class="number">2px</span>, <span class="number">3px</span>]); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="合併-1"><a href="#合併-1" class="headerlink" title="合併"></a>合併</h4>合併兩列表，將 <code>$list2</code> 添加到 <code>$list1</code> 尾端。<br><code>$separator</code> 是分隔符，默認會自動偵測，可指定 <code>逗號(comma)</code> 或 <code>空格(space)</code>。<br><code>$bracketed</code> 默認會自動偵測是否有中括號，可以設置 <code>true</code> 或 <code>false</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.join</span>(<span class="variable">$list1</span>, <span class="variable">$list2</span>, <span class="variable">$separator</span>: auto, <span class="variable">$bracketed</span>: auto)</span><br><span class="line">join(<span class="variable">$list1</span>, <span class="variable">$list2</span>, <span class="variable">$separator</span>: auto, <span class="variable">$bracketed</span>: auto) //=&gt; list </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span> <span class="number">20px</span>, <span class="number">30px</span> <span class="number">40px</span>); <span class="comment">// 10px 20px 30px 40px</span></span><br><span class="line"><span class="keyword">@debug</span> list.join((blue, red), (<span class="number">#abc</span>, <span class="number">#def</span>)); <span class="comment">// blue, red, #abc, #def</span></span><br><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span>, <span class="number">20px</span>); <span class="comment">// 10px 20px</span></span><br><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span>, <span class="number">20px</span>, <span class="variable">$separator</span>: comma); <span class="comment">// 10px, 20px</span></span><br><span class="line"><span class="keyword">@debug</span> list.join((blue, red), (<span class="number">#abc</span>, <span class="number">#def</span>), <span class="variable">$separator</span>: space); <span class="comment">// blue red #abc #def</span></span><br><span class="line"><span class="keyword">@debug</span> list.join([<span class="number">10px</span>], <span class="number">20px</span>); <span class="comment">// [10px 20px]</span></span><br><span class="line"><span class="keyword">@debug</span> list.join(<span class="number">10px</span>, <span class="number">20px</span>, <span class="variable">$bracketed</span>: true); <span class="comment">// [10px 20px]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="長度"><a href="#長度" class="headerlink" title="長度"></a>長度</h4>返回 <code>$list</code> 的長度。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.length</span>(<span class="variable">$list</span>)</span><br><span class="line">length(<span class="variable">$list</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.length(<span class="number">10px</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> list.length(<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>); <span class="comment">// 3</span></span><br><span class="line"><span class="keyword">@debug</span> list.length((width: <span class="number">10px</span>, height: <span class="number">20px</span>)); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="分隔符類型"><a href="#分隔符類型" class="headerlink" title="分隔符類型"></a>分隔符類型</h4>返回列表的分隔符類型，可以是 <code>空格(space)</code> 或 <code>逗號(comma)</code>。<br>若 <code>$list</code> 沒有分隔符，則返回 <code>space</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.separator</span>(<span class="variable">$list</span>)</span><br><span class="line">list-separator(<span class="variable">$list</span>) <span class="comment">//=&gt; unquoted string </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.separator(<span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span>); <span class="comment">// space</span></span><br><span class="line"><span class="keyword">@debug</span> list.separator(<span class="number">1px</span>, <span class="number">2px</span>, <span class="number">3px</span>); <span class="comment">// comma</span></span><br><span class="line"><span class="keyword">@debug</span> list.separator(<span class="string">&#x27;Helvetica&#x27;</span>); <span class="comment">// space</span></span><br><span class="line"><span class="keyword">@debug</span> list.separator(()); <span class="comment">// space</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="取得index的值"><a href="#取得index的值" class="headerlink" title="取得index的值"></a>取得index的值</h4>返回索引處的值。<br>索引從1起算。<br>若 <code>$n</code> 為負數，則從尾端開始計算。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.nth</span>(<span class="variable">$list</span>, <span class="variable">$n</span>)</span><br><span class="line">nth(<span class="variable">$list</span>, <span class="variable">$n</span>) </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.nth(<span class="number">10px</span> <span class="number">12px</span> <span class="number">16px</span>, <span class="number">2</span>); <span class="comment">// 12px</span></span><br><span class="line"><span class="keyword">@debug</span> list.nth([line1, line2, line3], -<span class="number">1</span>); <span class="comment">// line3</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="設置index的值"><a href="#設置index的值" class="headerlink" title="設置index的值"></a>設置index的值</h4>返回替換 <code>$n</code> 處的值後的lists。<br>索引從1起算。<br>若 <code>$n</code> 為負數，則從尾端開始計算。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.set-nth</span>(<span class="variable">$list</span>, <span class="variable">$n</span>, <span class="variable">$value</span>)</span><br><span class="line">set-nth(<span class="variable">$list</span>, <span class="variable">$n</span>, <span class="variable">$value</span>) <span class="comment">//=&gt; list</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.set-nth(<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>, <span class="number">1</span>, <span class="number">2em</span>); <span class="comment">// 2em 20px 30px</span></span><br><span class="line"><span class="keyword">@debug</span> list.set-nth(<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>, -<span class="number">1</span>, <span class="number">8em</span>); <span class="comment">// 10px, 20px, 8em</span></span><br><span class="line"><span class="keyword">@debug</span> list.set-nth((Helvetica, Arial, sans-serif), <span class="number">3</span>, Roboto); <span class="comment">// Helvetica, Arial, Roboto</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="依相同索引產生新維度列表"><a href="#依相同索引產生新維度列表" class="headerlink" title="依相同索引產生新維度列表"></a>依相同索引產生新維度列表</h4>將多個列表按照相同索引值為一組，重新組成一個新的多維度列表。<br>返回與列表中最短的列表一樣長的 lists。<br>主列表以逗號分隔，子列表以空格分隔。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">list<span class="selector-class">.zip</span>(<span class="variable">$lists</span>...)</span><br><span class="line">zip(<span class="variable">$lists</span>...) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> list.zip(<span class="number">10px</span> <span class="number">50px</span> <span class="number">100px</span>, short mid long); <span class="comment">// 10px short, 50px mid, 100px long</span></span><br><span class="line"><span class="keyword">@debug</span> list.zip(<span class="number">10px</span> <span class="number">50px</span> <span class="number">100px</span>, short mid); <span class="comment">// 10px short, 50px mid</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="sass-map"><a href="#sass-map" class="headerlink" title="sass:map"></a><code>sass:map</code></h3><ul><li><h4 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h4><p>返回map中key對應的value，如果沒有對應的key，則返回null。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">map</span><span class="selector-class">.get</span>(<span class="variable">$map</span>, <span class="variable">$key</span>, <span class="variable">$keys</span>...)</span><br><span class="line"><span class="selector-tag">map</span>-get(<span class="variable">$map</span>, <span class="variable">$key</span>, <span class="variable">$keys</span>...) </span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;medium&quot;</span>); <span class="comment">// 500</span></span><br><span class="line"><span class="keyword">@debug</span> map.get(<span class="variable">$font-weights</span>, <span class="string">&quot;extra-bold&quot;</span>); <span class="comment">// null</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="是否有key"><a href="#是否有key" class="headerlink" title="是否有key"></a>是否有key</h4><p>判斷 map 是否有對應的key，返回 Boolean。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">map</span><span class="selector-class">.has-key</span>(<span class="variable">$map</span>, <span class="variable">$key</span>, <span class="variable">$keys</span>...)</span><br><span class="line"><span class="selector-tag">map</span>-has-key(<span class="variable">$map</span>, <span class="variable">$key</span>, <span class="variable">$keys</span>...) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.has-key(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> map.has-key(<span class="variable">$font-weights</span>, <span class="string">&quot;bolder&quot;</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="所有key"><a href="#所有key" class="headerlink" title="所有key"></a>所有key</h4><p>返回所有鍵。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">map</span><span class="selector-class">.keys</span>(<span class="variable">$map</span>)</span><br><span class="line"><span class="selector-tag">map</span>-keys(<span class="variable">$map</span>) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.keys(<span class="variable">$font-weights</span>); <span class="comment">// &quot;regular&quot;, &quot;medium&quot;, &quot;bold&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="所有value"><a href="#所有value" class="headerlink" title="所有value"></a>所有value</h4><p>返回所有值。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">map</span><span class="selector-class">.values</span>(<span class="variable">$map</span>)</span><br><span class="line"><span class="selector-tag">map</span>-values(<span class="variable">$map</span>) <span class="comment">//=&gt; list </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"><span class="keyword">@debug</span> map.values(<span class="variable">$font-weights</span>); <span class="comment">// 400, 500, 700</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="變更"><a href="#變更" class="headerlink" title="變更"></a>變更</h4><p>如果有找到 <code>$key</code>，將 <code>$value</code> 設置為新的值。<br>若沒找到，則返回原本的資料</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">map</span><span class="selector-class">.set</span>(<span class="variable">$map</span>, <span class="variable">$key</span>, <span class="variable">$value</span>)</span><br><span class="line"><span class="selector-tag">map</span><span class="selector-class">.set</span>(<span class="variable">$map</span>, <span class="variable">$keys</span>..., <span class="variable">$key</span>, <span class="variable">$value</span>) <span class="comment">//=&gt; map </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>, <span class="number">300</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure>巢狀嵌套設定<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$fonts</span>: (</span><br><span class="line">  <span class="string">&quot;Helvetica&quot;</span>: (</span><br><span class="line">    <span class="string">&quot;weights&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;regular&quot;</span>: <span class="number">400</span>,</span><br><span class="line">      <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>,</span><br><span class="line">      <span class="string">&quot;bold&quot;</span>: <span class="number">700</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.set(<span class="variable">$fonts</span>, <span class="string">&quot;Helvetica&quot;</span>, <span class="string">&quot;weights&quot;</span>, <span class="string">&quot;regular&quot;</span>, <span class="number">300</span>);</span><br><span class="line"><span class="comment">// (</span></span><br><span class="line"><span class="comment">//   &quot;Helvetica&quot;: (</span></span><br><span class="line"><span class="comment">//     &quot;weights&quot;: (</span></span><br><span class="line"><span class="comment">//       &quot;regular&quot;: 300,</span></span><br><span class="line"><span class="comment">//       &quot;medium&quot;: 500,</span></span><br><span class="line"><span class="comment">//       &quot;bold&quot;: 700</span></span><br><span class="line"><span class="comment">//     )</span></span><br><span class="line"><span class="comment">//   )</span></span><br><span class="line"><span class="comment">// )</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="合併-2"><a href="#合併-2" class="headerlink" title="合併"></a>合併</h4><p>合併兩個以上的map，形成一個新的 map，<br>將 <code>map2</code> 新增到 <code>map1</code> 的尾部。<br>如果兩者有相同的 key，則 <code>map1</code> 優先。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">map</span><span class="selector-class">.merge</span>(<span class="variable">$map1</span>, <span class="variable">$map2</span>)</span><br><span class="line"><span class="selector-tag">map</span>-merge(<span class="variable">$map1</span>, <span class="variable">$map2</span>)</span><br><span class="line"><span class="selector-tag">map</span><span class="selector-class">.merge</span>(<span class="variable">$map1</span>, <span class="variable">$keys</span>..., <span class="variable">$map2</span>)</span><br><span class="line"><span class="selector-tag">map</span>-merge(<span class="variable">$map1</span>, <span class="variable">$keys</span>..., <span class="variable">$map2</span>) <span class="comment">//=&gt; map </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$light-weights</span>: (<span class="string">&quot;lightest&quot;</span>: <span class="number">100</span>, <span class="string">&quot;light&quot;</span>: <span class="number">300</span>);</span><br><span class="line"><span class="variable">$heavy-weights</span>: (<span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$light-weights</span>, <span class="variable">$heavy-weights</span>);</span><br><span class="line"><span class="comment">// (&quot;lightest&quot;: 100, &quot;light&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$fonts</span>: (</span><br><span class="line">  <span class="string">&quot;Helvetica&quot;</span>: (</span><br><span class="line">    <span class="string">&quot;weights&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;lightest&quot;</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="string">&quot;light&quot;</span>: <span class="number">300</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"><span class="variable">$heavy-weights</span>: (<span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.merge(<span class="variable">$fonts</span>, <span class="string">&quot;Helvetica&quot;</span>, <span class="string">&quot;weights&quot;</span>, <span class="variable">$heavy-weights</span>);</span><br><span class="line"><span class="comment">// (</span></span><br><span class="line"><span class="comment">//   &quot;Helvetica&quot;: (</span></span><br><span class="line"><span class="comment">//     &quot;weights&quot;: (</span></span><br><span class="line"><span class="comment">//       &quot;lightest&quot;: 100,</span></span><br><span class="line"><span class="comment">//       &quot;light&quot;: 300,</span></span><br><span class="line"><span class="comment">//       &quot;medium&quot;: 500,</span></span><br><span class="line"><span class="comment">//       &quot;bold&quot;: 700</span></span><br><span class="line"><span class="comment">//     )</span></span><br><span class="line"><span class="comment">//   )</span></span><br><span class="line"><span class="comment">// )</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h4><p>移除 map 中的 <code>$key</code>。<br>若沒有找到，則忽略。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">map</span><span class="selector-class">.remove</span>(<span class="variable">$map</span>, <span class="variable">$keys</span>...)</span><br><span class="line"><span class="selector-tag">map</span>-remove(<span class="variable">$map</span>, <span class="variable">$keys</span>...) <span class="comment">//=&gt; map </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$font-weights</span>: (<span class="string">&quot;regular&quot;</span>: <span class="number">400</span>, <span class="string">&quot;medium&quot;</span>: <span class="number">500</span>, <span class="string">&quot;bold&quot;</span>: <span class="number">700</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@debug</span> map.remove(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>); <span class="comment">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br><span class="line"><span class="keyword">@debug</span> map.remove(<span class="variable">$font-weights</span>, <span class="string">&quot;regular&quot;</span>, <span class="string">&quot;bold&quot;</span>); <span class="comment">// (&quot;medium&quot;: 500)</span></span><br><span class="line"><span class="keyword">@debug</span> map.remove(<span class="variable">$font-weights</span>, <span class="string">&quot;bolder&quot;</span>);</span><br><span class="line"><span class="comment">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="sass-math"><a href="#sass-math" class="headerlink" title="sass:math"></a><code>sass:math</code></h3><ul><li><h4 id="判斷是否有相同的單位"><a href="#判斷是否有相同的單位" class="headerlink" title="判斷是否有相同的單位"></a>判斷是否有相同的單位</h4>返回 <code>$number1</code> 是否與 <code>$number2</code> 有相同的單位。<br>若為 <code>true</code>，則 <code>$number1</code> 與 <code>$number2</code> 可以安全地進行 加法、減法和比較。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.compatible</span>(<span class="variable">$number1</span>, <span class="variable">$number2</span>)</span><br><span class="line">comparable(<span class="variable">$number1</span>, <span class="variable">$number2</span>) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.compatible(<span class="number">2px</span>, <span class="number">1px</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> math.compatible(<span class="number">100px</span>, <span class="number">3em</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> math.compatible(<span class="number">10cm</span>, <span class="number">3mm</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="判斷是否沒有單位"><a href="#判斷是否沒有單位" class="headerlink" title="判斷是否沒有單位"></a>判斷是否沒有單位</h4>返回 <code>$number</code> 是否沒有單位<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.is-unitless</span>(<span class="variable">$number</span>)</span><br><span class="line">unitless(<span class="variable">$number</span>) <span class="comment">//=&gt; boolean </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.is-unitless(<span class="number">100</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> math.is-unitless(<span class="number">100px</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="絕對值"><a href="#絕對值" class="headerlink" title="絕對值"></a>絕對值</h4>返回絕對值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.abs</span>(<span class="variable">$number</span>)</span><br><span class="line">abs(<span class="variable">$number</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.abs(<span class="number">10px</span>); <span class="comment">// 10px</span></span><br><span class="line"><span class="keyword">@debug</span> math.abs(-<span class="number">10px</span>); <span class="comment">// 10px</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="向上取整"><a href="#向上取整" class="headerlink" title="向上取整"></a>向上取整</h4>向上取得整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.ceil</span>(<span class="variable">$number</span>)</span><br><span class="line">ceil(<span class="variable">$number</span>) <span class="comment">//=&gt; number  </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.ceil(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.ceil(<span class="number">4.2</span>); <span class="comment">// 5</span></span><br><span class="line"><span class="keyword">@debug</span> math.ceil(<span class="number">4.9</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="向下取整"><a href="#向下取整" class="headerlink" title="向下取整"></a>向下取整</h4>向下取得整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.floor</span>(<span class="variable">$number</span>)</span><br><span class="line">floor(<span class="variable">$number</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.floor(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.floor(<span class="number">4.2</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.floor(<span class="number">4.9</span>); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="最大值"><a href="#最大值" class="headerlink" title="最大值"></a>最大值</h4>返回最大值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.max</span>(<span class="variable">$number</span>...)</span><br><span class="line">max(<span class="variable">$number</span>...) <span class="comment">//=&gt; number</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.max(<span class="number">1px</span>, <span class="number">4px</span>); <span class="comment">// 4px</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$widths</span>: <span class="number">50px</span>, <span class="number">30px</span>, <span class="number">100px</span>;</span><br><span class="line"><span class="keyword">@debug</span> math.max(<span class="variable">$widths</span>...); <span class="comment">// 100px</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="最小值"><a href="#最小值" class="headerlink" title="最小值"></a>最小值</h4>返回最小值。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.min</span>(<span class="variable">$number</span>...)</span><br><span class="line">min(<span class="variable">$number</span>...) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.min(<span class="number">1px</span>, <span class="number">4px</span>); <span class="comment">// 1px</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$widths</span>: <span class="number">50px</span>, <span class="number">30px</span>, <span class="number">100px</span>;</span><br><span class="line"><span class="keyword">@debug</span> math.min(<span class="variable">$widths</span>...); <span class="comment">// 30px</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="除"><a href="#除" class="headerlink" title="除"></a>除</h4>返回 <code>$number1</code> 除以 <code>$number2</code> 的結果<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.div</span>(<span class="variable">$number1</span>, <span class="variable">$number2</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">1</span>, <span class="number">2</span>); <span class="comment">// 0.5</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">100px</span>, <span class="number">5px</span>); <span class="comment">// 20</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">100px</span>, <span class="number">5</span>); <span class="comment">// 20px</span></span><br><span class="line"><span class="keyword">@debug</span> math.div(<span class="number">100px</span>, <span class="number">5s</span>); <span class="comment">// 20px/s</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="轉為百分比"><a href="#轉為百分比" class="headerlink" title="轉為百分比"></a>轉為百分比</h4>將無單位的 <code>$number</code> (通常是0到1之間的小數) 轉換為百分比。<br>此功能與 <code>$number * 100%</code> 相同。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.percentage</span>(<span class="variable">$number</span>)</span><br><span class="line">percentage(<span class="variable">$number</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.percentage(<span class="number">0.2</span>); <span class="comment">// 20%</span></span><br><span class="line"><span class="keyword">@debug</span> math.percentage(math.div(<span class="number">100px</span>, <span class="number">50px</span>)); <span class="comment">// 200%</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="隨機數"><a href="#隨機數" class="headerlink" title="隨機數"></a>隨機數</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.random</span>(<span class="variable">$limit</span>: null)</span><br><span class="line">random(<span class="variable">$limit</span>: null) //=&gt; number </span><br></pre></td></tr></table></figure><ul><li>範例：<br>如果 <code>$limit</code> 是 <code>null</code>，則返回 0到1之間的隨機十進制數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.random(); <span class="comment">// 0.2821251858</span></span><br><span class="line"><span class="keyword">@debug</span> math.random(); <span class="comment">// 0.6221325814</span></span><br></pre></td></tr></table></figure>如果 <code>$limit</code> 是大於或等於1的數字，則返回 1到 <code>$limit</code> 之間的隨機整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.random(<span class="number">10</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.random(<span class="number">10000</span>); <span class="comment">// 5373</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="四捨五入"><a href="#四捨五入" class="headerlink" title="四捨五入"></a>四捨五入</h4>將 <code>$number</code> 四捨五入，返回最接近該值的整數。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">math<span class="selector-class">.round</span>(<span class="variable">$number</span>)</span><br><span class="line">round(<span class="variable">$number</span>) <span class="comment">//=&gt; number </span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> math.round(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.round(<span class="number">4.2</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">@debug</span> math.round(<span class="number">4.9</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="sass-selector"><a href="#sass-selector" class="headerlink" title="sass:selector"></a><code>sass:selector</code></h3><p>用於查看與處理選擇器。</p><ul><li><h4 id="比較兩個選擇器匹配的範圍"><a href="#比較兩個選擇器匹配的範圍" class="headerlink" title="比較兩個選擇器匹配的範圍"></a>比較兩個選擇器匹配的範圍</h4><p>判斷 <code>$super</code> 選擇器是否包含了 <code>$sub</code> 選擇器所匹配的範圍。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.is-superselector</span>(<span class="variable">$super</span>, <span class="variable">$sub</span>)</span><br><span class="line">is-superselector(<span class="variable">$super</span>, <span class="variable">$sub</span>) <span class="comment">//=&gt; boolean</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a.disabled&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;sidebar a&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;sidebar a&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">@debug</span> selector.is-superselector(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="累加"><a href="#累加" class="headerlink" title="累加"></a>累加</h4><p>將第二個之後的選擇器，添加到第一個選擇器後面。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.append</span>(<span class="variable">$selectors</span>...)</span><br><span class="line">selector-append(<span class="variable">$selectors</span>...) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.append(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;.disabled&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.append(<span class="string">&quot;.accordion&quot;</span>, <span class="string">&quot;__copy&quot;</span>); <span class="comment">// .accordion__copy</span></span><br><span class="line"><span class="keyword">@debug</span> selector.append(<span class="string">&quot;.accordion&quot;</span>, <span class="string">&quot;__copy, __image&quot;</span>);</span><br><span class="line"><span class="comment">// .accordion__copy, .accordion__image</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="擴展"><a href="#擴展" class="headerlink" title="擴展"></a>擴展</h4><p>與<code>@extend</code> 規則一樣。<br><code>$selector</code> 返回使用以下 <code>@extend</code> 規則修改的副本。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 副本 */</span></span><br><span class="line">#&#123;<span class="variable">$extender</span>&#125; &#123;</span><br><span class="line">  <span class="keyword">@extend</span> #&#123;<span class="variable">$extendee</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.extend</span>(<span class="variable">$selector</span>, <span class="variable">$extendee</span>, <span class="variable">$extender</span>)</span><br><span class="line">selector-extend(<span class="variable">$selector</span>, <span class="variable">$extendee</span>, <span class="variable">$extender</span>) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.extend(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;.link&quot;</span>); <span class="comment">// a.disabled, .link.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.extend(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;h1&quot;</span>, <span class="string">&quot;h2&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.extend(<span class="string">&quot;.guide .info&quot;</span>, <span class="string">&quot;.info&quot;</span>, <span class="string">&quot;.content nav.sidebar&quot;</span>);</span><br><span class="line"><span class="comment">// .guide .info, .guide .content nav.sidebar, .content .guide nav.sidebar</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="組合選擇器"><a href="#組合選擇器" class="headerlink" title="組合選擇器"></a>組合選擇器</h4><p>返回組合嵌套的選擇器</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.nest</span>(<span class="variable">$selectors</span>...)</span><br><span class="line">selector-nest(<span class="variable">$selectors</span>...) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;ul&quot;</span>, <span class="string">&quot;li&quot;</span>); <span class="comment">// ul li</span></span><br><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;.alert, .warning&quot;</span>, <span class="string">&quot;p&quot;</span>); <span class="comment">// .alert p, .warning p</span></span><br><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;.alert&quot;</span>, <span class="string">&quot;&amp;:hover&quot;</span>); <span class="comment">// .alert:hover</span></span><br><span class="line"><span class="keyword">@debug</span> selector.nest(<span class="string">&quot;.accordion&quot;</span>, <span class="string">&quot;&amp;__copy&quot;</span>); <span class="comment">// .accordion__copy</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="返回選擇器值"><a href="#返回選擇器值" class="headerlink" title="返回選擇器值"></a>返回選擇器值</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.parse</span>(<span class="variable">$selector</span>)</span><br><span class="line">selector-parse(<span class="variable">$selector</span>) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.parse(<span class="string">&quot;.main aside:hover, .sidebar p&quot;</span>);</span><br><span class="line"><span class="comment">// ((unquote(&quot;.main&quot;) unquote(&quot;aside:hover&quot;)),</span></span><br><span class="line"><span class="comment">//  (unquote(&quot;.sidebar&quot;) unquote(&quot;p&quot;)))</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="替換選擇器"><a href="#替換選擇器" class="headerlink" title="替換選擇器"></a>替換選擇器</h4><p>將 <code>$selector</code> 中的 <code>$original</code> 替換為 <code>$replacement</code>。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.replace</span>(<span class="variable">$selector</span>, <span class="variable">$original</span>, <span class="variable">$replacement</span>)</span><br><span class="line">selector-replace(<span class="variable">$selector</span>, <span class="variable">$original</span>, <span class="variable">$replacement</span>) <span class="comment">//=&gt; selector</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.replace(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;.link&quot;</span>); <span class="comment">// .link.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.replace(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;h1&quot;</span>, <span class="string">&quot;h2&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.replace(<span class="string">&quot;.guide .info&quot;</span>, <span class="string">&quot;.info&quot;</span>, <span class="string">&quot;.content nav.sidebar&quot;</span>);</span><br><span class="line"><span class="comment">// .guide .content nav.sidebar, .content .guide nav.sidebar</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="將兩組選擇器合成一個複合選擇器"><a href="#將兩組選擇器合成一個複合選擇器" class="headerlink" title="將兩組選擇器合成一個複合選擇器"></a>將兩組選擇器合成一個複合選擇器</h4><p>若無法合成，則返回 <code>null</code>。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.unify</span>(<span class="variable">$selector1</span>, <span class="variable">$selector2</span>)</span><br><span class="line">selector-unify(<span class="variable">$selector1</span>, <span class="variable">$selector2</span>) <span class="comment">//=&gt; selector | null</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;.disabled&quot;</span>); <span class="comment">// a.disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;a.disabled&quot;</span>, <span class="string">&quot;a.outgoing&quot;</span>); <span class="comment">// a.disabled.outgoing</span></span><br><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;h1&quot;</span>); <span class="comment">// null</span></span><br><span class="line"><span class="keyword">@debug</span> selector.unify(<span class="string">&quot;.warning a&quot;</span>, <span class="string">&quot;main a&quot;</span>); <span class="comment">// .warning main a, main .warning a</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="將合成選擇器拆分為單個選擇器"><a href="#將合成選擇器拆分為單個選擇器" class="headerlink" title="將合成選擇器拆分為單個選擇器"></a>將合成選擇器拆分為單個選擇器</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">selector<span class="selector-class">.simple-selectors</span>(<span class="variable">$selector</span>)</span><br><span class="line">simple-selectors(<span class="variable">$selector</span>) <span class="comment">//=&gt; list</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> selector.simple-selectors(<span class="string">&quot;a.disabled&quot;</span>); <span class="comment">// a, .disabled</span></span><br><span class="line"><span class="keyword">@debug</span> selector.simple-selectors(<span class="string">&quot;main.blog:after&quot;</span>); <span class="comment">// main, .blog, :after</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="sass-string"><a href="#sass-string" class="headerlink" title="sass:string"></a><code>sass:string</code></h3><ul><li><h4 id="轉換-帶引號的字符串"><a href="#轉換-帶引號的字符串" class="headerlink" title="轉換 帶引號的字符串"></a>轉換 帶引號的字符串</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.quote</span>(<span class="variable">$string</span>)</span><br><span class="line">quote(<span class="variable">$string</span>) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.quote(Helvetica); <span class="comment">// &quot;Helvetica&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.quote(<span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// &quot;Helvetica&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="轉換-不帶引號的字符串"><a href="#轉換-不帶引號的字符串" class="headerlink" title="轉換 不帶引號的字符串"></a>轉換 不帶引號的字符串</h4><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.unquote</span>(<span class="variable">$string</span>)</span><br><span class="line">unquote(<span class="variable">$string</span>) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.unquote(<span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// Helvetica</span></span><br><span class="line"><span class="keyword">@debug</span> string.unquote(<span class="string">&quot;.widget:hover&quot;</span>); <span class="comment">// .widget:hover</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="查找-index"><a href="#查找-index" class="headerlink" title="查找 index"></a>查找 index</h4><p>返回第一個查找到的索引值，若沒有找到則回傳 <code>null</code>。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.index</span>(<span class="variable">$string</span>, <span class="variable">$substring</span>)</span><br><span class="line">str-index(<span class="variable">$string</span>, <span class="variable">$substring</span>) <span class="comment">//=&gt; number</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Helvetica&quot;</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">@debug</span> string.index(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Neue&quot;</span>); <span class="comment">// 11</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><p>返回從 <code>$string</code> 的 <code>$index</code> 處插入 <code>$insert</code> 後的字串。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.insert</span>(<span class="variable">$string</span>, <span class="variable">$insert</span>, <span class="variable">$index</span>)</span><br><span class="line">str-insert(<span class="variable">$string</span>, <span class="variable">$insert</span>, <span class="variable">$index</span>) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例：<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Roboto Bold&quot;</span>, <span class="string">&quot; Mono&quot;</span>, <span class="number">7</span>); <span class="comment">// &quot;Roboto Mono Bold&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Roboto Bold&quot;</span>, <span class="string">&quot; Mono&quot;</span>, -<span class="number">6</span>); <span class="comment">// &quot;Roboto Mono Bold&quot;</span></span><br></pre></td></tr></table></figure>如果 <code>$index</code> 大於 $string 總長度，則會 $insert 在 <code>結尾</code>。<br>如果 <code>$index</code> 小於 字符串負長度，則會 $insert 在 <code>開頭</code>。<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Roboto&quot;</span>, <span class="string">&quot; Bold&quot;</span>, <span class="number">100</span>); <span class="comment">// &quot;Roboto Bold&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.insert(<span class="string">&quot;Bold&quot;</span>, <span class="string">&quot;Roboto &quot;</span>, -<span class="number">100</span>); <span class="comment">// &quot;Roboto Bold&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="拆分"><a href="#拆分" class="headerlink" title="拆分"></a>拆分</h4><p>返回從 index <code>$start-at</code> 到 <code>$end-at</code> 的字串。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.slice</span>(<span class="variable">$string</span>, <span class="variable">$start-at</span>, <span class="variable">$end-at</span>: -<span class="number">1</span>)</span><br><span class="line">str-slice(<span class="variable">$string</span>, <span class="variable">$start-at</span>, <span class="variable">$end-at</span>: -<span class="number">1</span>) //=&gt; string</span><br></pre></td></tr></table></figure><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="number">11</span>); <span class="comment">// &quot;Neue&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="number">1</span>, <span class="number">3</span>); <span class="comment">// &quot;Hel&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.slice(<span class="string">&quot;Helvetica Neue&quot;</span>, <span class="number">1</span>, -<span class="number">6</span>); <span class="comment">// &quot;Helvetica&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="轉-大寫"><a href="#轉-大寫" class="headerlink" title="轉 大寫"></a>轉 大寫</h4><p>將 ASCII字母轉換為大寫。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.to-upper-case</span>(<span class="variable">$string</span>)</span><br><span class="line">to-upper-case(<span class="variable">$string</span>) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.to-upper-case(<span class="string">&quot;Bold&quot;</span>); <span class="comment">// &quot;BOLD&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.to-upper-case(sans-serif); <span class="comment">// SANS-SERIF</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="轉-小寫"><a href="#轉-小寫" class="headerlink" title="轉 小寫"></a>轉 小寫</h4><p>將 ASCII字母轉換為小寫。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.to-lower-case</span>(<span class="variable">$string</span>)</span><br><span class="line">to-lower-case(<span class="variable">$string</span>) <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.to-lower-case(<span class="string">&quot;Bold&quot;</span>); <span class="comment">// &quot;bold&quot;</span></span><br><span class="line"><span class="keyword">@debug</span> string.to-lower-case(SANS-SERIF); <span class="comment">// sans-serif</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="產生-uuid"><a href="#產生-uuid" class="headerlink" title="產生 uuid"></a>產生 uuid</h4><p>隨機產生一個在當前Sass編譯中的唯一id。</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">string<span class="selector-class">.unique-id</span>()</span><br><span class="line">unique-id() <span class="comment">//=&gt; string</span></span><br></pre></td></tr></table></figure><ul><li>範例<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@debug</span> string.unique-id(); <span class="comment">// uabtrnzug</span></span><br><span class="line"><span class="keyword">@debug</span> string.unique-id(); <span class="comment">// u6w1b1def</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> SASS/SCSS </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_React</title>
      <link href="2022/02/05/%E7%AD%86%E8%A8%98-React/"/>
      <url>2022/02/05/%E7%AD%86%E8%A8%98-React/</url>
      
        <content type="html"><![CDATA[<p><small>v17.0.2</small></p><h2 id="React-是什麼？"><a href="#React-是什麼？" class="headerlink" title="React 是什麼？"></a>React 是什麼？</h2><p>  React 是一個陳述式、高效且具有彈性的 JavaScript 函式庫，用以建立使用者介面。<br>  它讓你使用小巧而獨立的 <code>component</code>，來建立複雜的 UI。</p><a id="more"></a><h2 id="開發環境"><a href="#開發環境" class="headerlink" title="開發環境"></a>開發環境</h2><ul><li><h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>若要開發標準的 React 專案，建議使用 <code>create-react-app</code> 來建立新專案。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i -g create-react-app</span><br></pre></td></tr></table></figure></li><li><h3 id="建立新專案"><a href="#建立新專案" class="headerlink" title="建立新專案"></a>建立新專案</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">create-react-app &lt;專案名稱&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="主要概念"><a href="#主要概念" class="headerlink" title="主要概念"></a>主要概念</h2><ul><li><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;h1&gt;Hello, world!&lt;/h1&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h3 id="JSX-介紹"><a href="#JSX-介紹" class="headerlink" title="JSX 介紹"></a>JSX 介紹</h3><p><code>JSX</code> 是一種 JavaScript 的擴充語言，加入了一些 HTML 標籤的語法。<br><code>React</code> 架構在設計上將 HTML 標籤與 JavaScript 控制邏輯合併，以 <code>JSX</code> 來描述 UI 的外觀與運作邏輯，<br>打造出 React 的 UI 組件（components），再用這些 UI 組件堆疊出個應用程式。</p><ul><li><h4 id="在-JSX-中嵌入-Expression"><a href="#在-JSX-中嵌入-Expression" class="headerlink" title="在 JSX 中嵌入 Expression"></a>在 JSX 中嵌入 Expression</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;Josh Perez&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatName</span>(<span class="params">user</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> user.firstName+ <span class="string">&#x27; &#x27;</span> + user.lastName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">  firstName: <span class="string">&#x27;Harper&#x27;</span>,</span><br><span class="line">  lastName: <span class="string">&#x27;Perez&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  &lt;h1&gt;</span><br><span class="line">    Hello, &#123;formatName(user)&#125;!</span><br><span class="line">  &lt;/h1&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="JSX-本身也是-Expression"><a href="#JSX-本身也是-Expression" class="headerlink" title="JSX 本身也是 Expression"></a>JSX 本身也是 Expression</h4><p>使用 JSX 作為參數並由 function 中回傳。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getGreeting</span>(<span class="params">user</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;formatName(user)&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, Stranger.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="在-JSX-中指定屬性"><a href="#在-JSX-中指定屬性" class="headerlink" title="在 JSX 中指定屬性"></a>在 JSX 中指定屬性</h4><ul><li><h5 id="可以使用引號將字串設定為屬性："><a href="#可以使用引號將字串設定為屬性：" class="headerlink" title="可以使用引號將字串設定為屬性："></a>可以使用引號將字串設定為屬性：</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">tabIndex</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure></li><li><h5 id="也可以在屬性中使用大括號來嵌入一個-JavaScript-expression："><a href="#也可以在屬性中使用大括號來嵌入一個-JavaScript-expression：" class="headerlink" title="也可以在屬性中使用大括號來嵌入一個 JavaScript expression："></a>也可以在屬性中使用大括號來嵌入一個 JavaScript expression：</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;user.avatarUrl&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>  不要在嵌入 JavaScript expression 作為屬性的時候同時使用引號或是大括號。</p><blockquote><p>React DOM 使用 <code>camelCase</code> 來命名屬性而不是使用慣有的 HTML 屬性名稱。<br>舉例來說：在 JSX 之中，<code>class</code> 變成了 className 而 <code>tabindex</code> 變成了 tabIndex。</p></blockquote></li><li><h5 id="在-JSX-中指定-Children"><a href="#在-JSX-中指定-Children" class="headerlink" title="在 JSX 中指定 Children"></a>在 JSX 中指定 Children</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;user.avatarUrl&#125;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;Hello!&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;Good to see you here.&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h5 id="JSX-表示物件"><a href="#JSX-表示物件" class="headerlink" title="JSX 表示物件"></a>JSX 表示物件</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  &lt;h1 className=<span class="string">&quot;greeting&quot;</span>&gt;</span><br><span class="line">    Hello, World!</span><br><span class="line">  &lt;/h1&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Babel 將 JSX 編譯為呼叫 <code>React.createElement()</code> 的程式。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = React.createElement(</span><br><span class="line">  <span class="string">&#x27;h1&#x27;</span>,</span><br><span class="line">  &#123;<span class="attr">className</span>: <span class="string">&#x27;greeting&#x27;</span>&#125;,</span><br><span class="line">  <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h3 id="Render-Element"><a href="#Render-Element" class="headerlink" title="Render Element"></a>Render Element</h3><p>建立 React 應用程式最小的單位是 element。<br>與瀏覽器的 DOM element 不同，<br><code>React element</code> 是單純的 object，而且很容易被建立。<br><code>React DOM</code> 負責更新 DOM 來符合 React element。</p><ul><li><h4 id="Render-Element-到-DOM內"><a href="#Render-Element-到-DOM內" class="headerlink" title="Render Element 到 DOM內"></a>Render Element 到 DOM內</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;root&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>使用 React 建立應用程式時，通常會有一個單一的 root DOM node。<br>如果想要整合 React 到現有的應用程式時，可以根據需求獨立出多個 root DOM node。<br>如果要 render 一個 React element 到 root DOM node，傳入兩者到 <code>ReactDOM.render()</code>。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="更新被-Render-的-Element"><a href="#更新被-Render-的-Element" class="headerlink" title="更新被 Render 的 Element"></a>更新被 Render 的 Element</h4>React element 是 <code>不可變動性</code> 的。<br>一旦你建立一個 element，你不能改變它的 children 或是 attribute。<br>更新 UI 唯一的方式是建立一個新的 element，並且將它傳入到 <code>ReactDOM.render()</code>。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> element = (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">      &lt;h2&gt;It is &#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">  ReactDOM.render(element, <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(tick, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">// 從 setInterval() callback 每秒呼叫 ReactDOM.render()。</span></span><br></pre></td></tr></table></figure></li><li><h4 id="React-只更新必要的-Element"><a href="#React-只更新必要的-Element" class="headerlink" title="React 只更新必要的 Element"></a>React 只更新必要的 Element</h4>React DOM 會將 element 和它的 children 與先前的狀態做比較，<br>並且只更新必要的 DOM 達到理想的狀態。<br>只有內容更改的 node 才會被 React DOM 更新。</li></ul></li><li><h3 id="Components-與-Props"><a href="#Components-與-Props" class="headerlink" title="Components 與 Props"></a>Components 與 Props</h3><p>概念上來說，component 就像是 JavaScript 的 function，<br>它接收任意的參數（稱之為「props」）並且回傳描述畫面的 React element。</p><ul><li><h4 id="Function-Component-與-Class-Component"><a href="#Function-Component-與-Class-Component" class="headerlink" title="Function Component 與 Class Component"></a>Function Component 與 Class Component</h4>定義 component 最簡單的方法即是撰寫一個 Javascript function：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Welcome</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>也可以使用 ES6 Class 來定義 component：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="Render-一個-Component"><a href="#Render-一個-Component" class="headerlink" title="Render 一個 Component"></a>Render 一個 Component</h4>React element 也可以是使用者自定義的 component：<br>當 React 看到由使用者定義 component 的 element 時，<br>它將 JSX 屬性和 children 作為 single object 傳遞給該 component。<br>我們稱這個 object 為「props」。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Welcome</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">Welcome</span> <span class="attr">name</span>=<span class="string">&quot;Sara&quot;</span> /&gt;</span></span>;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>React 以 <code>&#123;name: &#39;Sara&#39;&#125;</code> 作為 props 傳入 Welcome component 並呼叫。<br>Welcome component 回傳了 <code>&lt;h1&gt;Hello, Sara&lt;/h1&gt;</code> 這個 element 作為返回值。<blockquote><p>Component 的字首須為大寫字母。<br>React 會將小寫字母開頭的組件視為原始 DOM 標籤。</p></blockquote></li><li><h4 id="組合-Component"><a href="#組合-Component" class="headerlink" title="組合 Component"></a>組合 Component</h4>Component 可以在輸出中引用其他 component。<br>可以在任何層次中抽象化相同的 component，按鈕、表單、對話框、甚至是整個畫面，<br>在 React 應用程式中都將以 component 的方式呈現。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Welcome</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;Welcome name=<span class="string">&quot;Sara&quot;</span> /&gt;</span><br><span class="line">      &lt;Welcome name=<span class="string">&quot;Cahal&quot;</span> /&gt;</span><br><span class="line">      &lt;Welcome name=<span class="string">&quot;Edite&quot;</span> /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;App /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>通常來說，每個 React 應用程式都有一個最高層級的 App component。<br>然而，將 React 結合至現存的應用程式中，可能需要使用像 Button 這樣的小型 component，<br>並由下往上，逐步應用到畫面的最高層級。</li><li><h4 id="Props-是唯讀的"><a href="#Props-是唯讀的" class="headerlink" title="Props 是唯讀的"></a>Props 是唯讀的</h4>不管你使用 <code>function</code> 或是 <code>class</code> 來宣告 component，<br>都絕不能修改自己的 props。<br>所有的 React component 都必須像 Pure function 一般保護他的 props。</li></ul></li><li><h3 id="State-和生命週期"><a href="#State-和生命週期" class="headerlink" title="State 和生命週期"></a>State 和生命週期</h3><p>封裝 Clock component 讓它可以真正的被重複使用。<br>它將會設定本身的 timer 並且每秒更新一次。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Clock</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">      &lt;h2&gt;It is &#123;props.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  ReactDOM.render(</span><br><span class="line">    &lt;Clock date=&#123;<span class="keyword">new</span> <span class="built_in">Date</span>()&#125; /&gt;,</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(tick, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>理想情況下，Clock 會自己更新，需要加入 <code>state</code>到 Clock component。<br>State 類似於 prop，但它是私有且由 component 完全控制的。</p><ul><li><h4 id="轉換-Function-成-Class"><a href="#轉換-Function-成-Class" class="headerlink" title="轉換 Function 成 Class"></a>轉換 Function 成 Class</h4><p>透過以下 5 個步驟轉換一個 function component 像是 Clock 成為 class：</p><ol><li>建立一個相同名稱並且繼承 <code>React.Component</code> 的 ES6 class。</li><li>加入一個 <code>render()</code> 的空方法。</li><li>將 function 的內容搬到 <code>render()</code> 方法。</li><li>將 <code>render()</code> 內的 <code>props</code> 替換成 <code>this.props</code>。</li><li>刪除剩下空的 function 宣告。</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;It is &#123;<span class="built_in">this</span>.props.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="加入-Local-State-到-Class"><a href="#加入-Local-State-到-Class" class="headerlink" title="加入 Local State 到 Class"></a>加入 Local State 到 Class</h4><p>透過以下 3 個步驟將 date 從搬移到 state：</p><ol><li>將 <code>render()</code> 方法內的 <code>this.props.date</code> 替換成 <code>this.state.date</code>：</li><li>加入一個 class constructor 並分配初始的 <code>this.state</code>：</li><li>從 <code>&lt;Clock /&gt;</code> element 中移除 <code>date</code> prop：</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="built_in">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;It is &#123;<span class="built_in">this</span>.state.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Clock /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="加入生命週期方法到-Class"><a href="#加入生命週期方法到-Class" class="headerlink" title="加入生命週期方法到 Class"></a>加入生命週期方法到 Class</h4><p>每當 <code>Clock</code> render 到 DOM 的時候，我們想要設定一個 <code>timer</code>。在 React 中稱為「mount」。<br>每當產生的 <code>Clock</code> DOM 被移除時，我們想要清除 <code>timer</code>。在 React 中稱為「unmount」。<br>這些方法被稱為 <code>「生命週期方法」</code>。<br><code>componentDidMount()</code> 方法會在 component 被 render 到 DOM 之後才會執行。<br>在 <code>componentWillUnmount()</code> 生命週期方法內移除 timer。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="built_in">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">componentDidMount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.timerID = <span class="built_in">setInterval</span>(</span><br><span class="line">      () =&gt; <span class="built_in">this</span>.tick(),</span><br><span class="line">      <span class="number">1000</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">componentWillUnmount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timerID);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">tick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">      date: <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;It is &#123;<span class="built_in">this</span>.state.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Clock /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="正確的使用-State"><a href="#正確的使用-State" class="headerlink" title="正確的使用 State"></a>正確的使用 State</h4><ul><li><h5 id="請不要直接修改-State"><a href="#請不要直接修改-State" class="headerlink" title="請不要直接修改 State"></a>請不要直接修改 State</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 錯誤</span></span><br><span class="line"><span class="comment">// 唯一可以指定 `this.state` 值的地方是在 constructor。</span></span><br><span class="line"><span class="built_in">this</span>.state.comment = <span class="string">&#x27;Hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確</span></span><br><span class="line"><span class="built_in">this</span>.setState(&#123;<span class="attr">comment</span>: <span class="string">&#x27;Hello&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure></li><li><h5 id="State-的更新可能是非同步的"><a href="#State-的更新可能是非同步的" class="headerlink" title="State 的更新可能是非同步的"></a>State 的更新可能是非同步的</h5>React 可以將多個 <code>setState()</code> 呼叫批次處理為單一的更新，以提高效能。<br><code>this.props</code> 和 <code>this.state</code> 可能是非同步的被更新，你不應該依賴它們的值來計算新的 state。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 錯誤</span></span><br><span class="line"><span class="built_in">this</span>.setState(&#123;</span><br><span class="line">  counter: <span class="built_in">this</span>.state.counter + <span class="built_in">this</span>.props.increment,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確</span></span><br><span class="line"><span class="built_in">this</span>.setState(<span class="function">(<span class="params">state, props</span>) =&gt;</span> (&#123;</span><br><span class="line">  counter: state.counter + props.increment</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></li><li><h5 id="State-的更新將會被-Merge"><a href="#State-的更新將會被-Merge" class="headerlink" title="State 的更新將會被 Merge"></a>State 的更新將會被 Merge</h5>呼叫 <code>setState()</code> 時，React 會 merge object 到目前的 state。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">super</span>(props);</span><br><span class="line">  <span class="built_in">this</span>.state = &#123;</span><br><span class="line">    posts: [],</span><br><span class="line">    comments: []</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">componentDidMount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  fetchPosts().then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">      posts: response.posts</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  fetchComments().then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">      comments: response.comments</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="向下資料流"><a href="#向下資料流" class="headerlink" title="向下資料流"></a>向下資料流</h4><p>Component 可以選擇將它的 state 做為 props 往下傳遞到它的 child component：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;FormattedDate date=&#123;<span class="built_in">this</span>.state.date&#125; /&gt;</span><br></pre></td></tr></table></figure><p>FormattedDate component 會在它的 props 接收到 date</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">FormattedDate</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;props.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>任何 state 總是由某個特定的 component 所擁有，<br>任何從 state 得到的資料或 UI，state 只能影響在 tree「以下」的 component。</p></li></ul></li><li><h3 id="事件處理"><a href="#事件處理" class="headerlink" title="事件處理"></a>事件處理</h3><ul><li>事件的名稱在 React 中都是 <code>camelCase</code>，而在 HTML DOM 中則是小寫。</li><li>事件的值在 JSX 中是一個 <code>function</code>，而在 HTML DOM 中則是一個 string。<br>在 HTML 中的語法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;activateLasers()&quot;</span>&gt;</span></span><br><span class="line">  Activate Lasers</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>在 React 中的語法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;activateLasers&#125;</span>&gt;</span></span><br><span class="line">  Activate Lasers</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>在 React 中，不能夠使用 return false 來避免瀏覽器預設行為。<br>必須明確地呼叫 <code>preventDefault</code>。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Form</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">handleSubmit</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;You clicked submit.&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;form onSubmit=&#123;handleSubmit&#125;&gt;</span><br><span class="line">      &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;Submit&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>請特別注意 <code>this</code> 在 JSX callback 中的意義。<br>在 JavaScript 中，class 的方法在預設上是沒有被綁定（<code>bound</code>）的。<br>把它傳遞給 onClick 的話，this 的值將會在該 function 被呼叫時變成 undefined。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Toggle</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">isToggleOn</span>: <span class="literal">true</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 為了讓 `this` 能在 callback 中被使用，這裡的綁定是必要的：</span></span><br><span class="line">    <span class="built_in">this</span>.handleClick = <span class="built_in">this</span>.handleClick.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">      isToggleOn: !prevState.isToggleOn</span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;button onClick=&#123;<span class="built_in">this</span>.handleClick&#125;&gt;</span><br><span class="line">        &#123;<span class="built_in">this</span>.state.isToggleOn ? <span class="string">&#x27;ON&#x27;</span> : <span class="string">&#x27;OFF&#x27;</span>&#125;</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Toggle /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="將參數傳給-Event-Handler"><a href="#將參數傳給-Event-Handler" class="headerlink" title="將參數傳給 Event Handler"></a>將參數傳給 Event Handler</h4>在一個迴圈中，我們常常會需要傳遞一個額外的參數給 event handler。<br>如果 id 是每一行的 ID 的話，下面兩種語法都可行：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;(e)</span> =&gt;</span> this.deleteRow(id, e)&#125;&gt;Delete Row<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.deleteRow.bind(this,</span> <span class="attr">id</span>)&#125;&gt;</span>Delete Row<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>以這兩個例子來說，<code>e</code> 這個參數所代表的 React 事件將會被當作 ID 之後的第二個參數被傳遞下去。<br>在使用 arrow function 時，我們必須明確地將它傳遞下去，<br>但若使用 bind 語法，未來任何的參數都將會自動被傳遞下去。</li></ul></li><li><h3 id="條件-Render"><a href="#條件-Render" class="headerlink" title="條件 Render"></a>條件 Render</h3><p>使用 JavaScript 中的運算子如 <code>if</code> 或者 <code>三元運算子</code> 來建立表示目前 state 的 element，<br>然後讓 React 根據它們來更新 UI。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">UserGreeting</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome back!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuestGreeting</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Please sign up.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立一個 Greeting component，它會根據使用者是否已登入來顯示其中之一：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Greeting</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> isLoggedIn = props.isLoggedIn;</span><br><span class="line">  <span class="keyword">if</span> (isLoggedIn) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">UserGreeting</span> /&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">GuestGreeting</span> /&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  <span class="comment">// 根據 isLoggedIn prop 的值來 render 不同的問候語。</span></span><br><span class="line">  &lt;Greeting isLoggedIn=&#123;<span class="literal">false</span>&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><h4 id="Element-變數"><a href="#Element-變數" class="headerlink" title="Element 變數"></a>Element 變數</h4><p>可以用變數來儲存 element。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoginButton</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;button onClick=&#123;props.onClick&#125;&gt;</span><br><span class="line">      Login</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LogoutButton</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;button onClick=&#123;props.onClick&#125;&gt;</span><br><span class="line">      Logout</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立一個名為 LoginControl 的 stateful component。</span></span><br><span class="line"><span class="comment">// 它將根據目前的 state 來 render &lt;LoginButton /&gt; 或 &lt; LogoutButton /&gt;。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginControl</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.handleLoginClick = <span class="built_in">this</span>.handleLoginClick.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleLogoutClick = <span class="built_in">this</span>.handleLogoutClick.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">isLoggedIn</span>: <span class="literal">false</span>&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleLoginClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">isLoggedIn</span>: <span class="literal">true</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleLogoutClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">isLoggedIn</span>: <span class="literal">false</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isLoggedIn = <span class="built_in">this</span>.state.isLoggedIn;</span><br><span class="line">    <span class="keyword">let</span> button;</span><br><span class="line">    <span class="keyword">if</span> (isLoggedIn) &#123;</span><br><span class="line">      button = <span class="xml"><span class="tag">&lt;<span class="name">LogoutButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      button = <span class="xml"><span class="tag">&lt;<span class="name">LoginButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;Greeting isLoggedIn=&#123;isLoggedIn&#125; /&gt;</span><br><span class="line">        &#123;button&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;LoginControl /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="Inline-If-與-amp-amp-邏輯運算子"><a href="#Inline-If-與-amp-amp-邏輯運算子" class="headerlink" title="Inline If 與 &amp;&amp; 邏輯運算子"></a>Inline If 與 &amp;&amp; 邏輯運算子</h4><p>透過大括號在 JSX 中嵌入表達式，包括 JavaScript 的 &amp;&amp; 邏輯運算子，<br>可以方便 render 有條件的 element：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Mailbox</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> unreadMessages = props.unreadMessages;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Hello!&lt;/h1&gt;</span><br><span class="line">      &#123;unreadMessages.length &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        &lt;h2&gt;</span><br><span class="line">          You have &#123;unreadMessages.length&#125; unread messages.</span><br><span class="line">        &lt;/h2&gt;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> messages = [<span class="string">&#x27;React&#x27;</span>, <span class="string">&#x27;Re: React&#x27;</span>, <span class="string">&#x27;Re:Re: React&#x27;</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Mailbox unreadMessages=&#123;messages&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>能夠這樣做是因為在 JavaScript 中，<br><code>true &amp;&amp; expression</code> 總是回傳 <code>expression</code>，<br>而 <code>false &amp;&amp; expression</code> 總是回傳 <code>false</code>。</p><p>所以，當條件為 <code>true</code> 時，<code>&amp;&amp;</code> 右側的 element 會出現在輸出中，如果是 <code>false</code>，React 會忽略並跳過它。</p><p>請注意，回傳 falsy expression 仍會導致 <code>&amp;&amp;</code> 之後的 element 被忽略，<br>但依舊回傳 falsy expression，在下面的範例中，render 將會回傳 <code>&lt;div&gt;0&lt;/div&gt;</code>。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123; count &amp;&amp; <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Messages: &#123;count&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="Inline-If-Else-與三元運算子"><a href="#Inline-If-Else-與三元運算子" class="headerlink" title="Inline If-Else 與三元運算子"></a>Inline If-Else 與三元運算子</h4><p>另一個有條件 render element 的方式是透過 JavaScript 的三元運算子 <code>condition ? true : false</code>。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> isLoggedIn = <span class="built_in">this</span>.state.isLoggedIn;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      The user is &lt;b&gt;&#123;isLoggedIn ? <span class="string">&#x27;currently&#x27;</span> : <span class="string">&#x27;not&#x27;</span>&#125;&lt;/b&gt; logged <span class="keyword">in</span>.</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> isLoggedIn = <span class="built_in">this</span>.state.isLoggedIn;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123;isLoggedIn</span><br><span class="line">        ? <span class="xml"><span class="tag">&lt;<span class="name">LogoutButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span></span><br><span class="line">        : <span class="xml"><span class="tag">&lt;<span class="name">LoginButton</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="防止-Component-Render"><a href="#防止-Component-Render" class="headerlink" title="防止 Component Render"></a>防止 Component Render</h4><p>在少數的情況下，可能希望 component 隱藏自己本身，即便它是由另一個 component 被 render。<br>可以透過回傳 <code>null</code> 而不是它的 render 輸出。</p><p>在下面的範例中，<code>&lt;WarningBanner /&gt;</code> 的 render 取決於 <code>warn</code> prop 的值。<br>如果 prop 是 <code>false</code>，它就不會 render。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">WarningBanner</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!props.warn) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">&quot;warning&quot;</span>&gt;</span><br><span class="line">      Warning!</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Page</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">showWarning</span>: <span class="literal">true</span>&#125;;</span><br><span class="line">    <span class="built_in">this</span>.handleToggleClick = <span class="built_in">this</span>.handleToggleClick.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleToggleClick</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(<span class="function"><span class="params">state</span> =&gt;</span> (&#123;</span><br><span class="line">      showWarning: !state.showWarning</span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;WarningBanner warn=&#123;<span class="built_in">this</span>.state.showWarning&#125; /&gt;</span><br><span class="line">        &lt;button onClick=&#123;<span class="built_in">this</span>.handleToggleClick&#125;&gt;</span><br><span class="line">          &#123;<span class="built_in">this</span>.state.showWarning ? <span class="string">&#x27;Hide&#x27;</span> : <span class="string">&#x27;Show&#x27;</span>&#125;</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Page /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在 component 中回傳 null 並不會影響 component 的生命週期方法。<br>例如 componentDidUpdate 依然可以被呼叫。</p></li></ul></li><li><h3 id="列表與Key"><a href="#列表與Key" class="headerlink" title="列表與Key"></a>列表與Key</h3><ul><li><h4 id="Render-多個-Component"><a href="#Render-多個-Component" class="headerlink" title="Render 多個 Component"></a>Render 多個 Component</h4><p>可以建立一系列的 element 並用大括號 <code>&#123;&#125;</code> <code>將它們包含在 JSX 裡面</code>。<br>用 JavaScript 的 map() function 迭代 <code>numbers</code> array，我們每次都會回傳一個 <code>&lt;li&gt;</code> element。<br>最後，我們會把結果產生的 element array 設定為 <code>listItems</code>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">  &lt;li&gt;&#123;number&#125;&lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>把整個 <code>listItems</code> array 包含在一個 <code>&lt;ul&gt;</code> element 裡，然後 <code>render 到 DOM 上面</code>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="基本列表-Component"><a href="#基本列表-Component" class="headerlink" title="基本列表 Component"></a>基本列表 Component</h4><p>將上面的範例改寫為一個接收 <code>numbers</code> array 並輸出一個沒有排序的 element 列表的 component。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;li&gt;&#123;number&#125;&lt;/li&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>當執行這段程式碼時，會收到一個關於應該提供 key 給每一個列表項目的警告。<br>「key」是當你在建立一個 element 列表時必須使用的特殊的 string attribute。</p><p>為 numbers.map() 列表中的每個項目分配一個 key，並修正遺漏 key 的問題。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;li key=&#123;number.toString()&#125;&gt;</span><br><span class="line">      &#123;number&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="Key"><a href="#Key" class="headerlink" title="Key"></a>Key</h4><p>Key 幫助 React 分辨哪些項目被改變、增加或刪除。<br>在 array 裡面的每個 element 都應該要有一個 key，如此才能給予每個 element 一個固定的身份：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">  &lt;li key=&#123;number.toString()&#125;&gt;</span><br><span class="line">    &#123;number&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>選擇 key 最佳的方法是在列表中使用唯一識別字串來區別 sibling 項目。<br>通常，會使用資料的 ID 作為 key：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> todoItems = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span></span><br><span class="line">  &lt;li key=&#123;todo.id&#125;&gt;</span><br><span class="line">    &#123;todo.text&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>當 render 的項目沒有固定的 ID ，且也沒有更好的辦法時，<br>可以使用項目的索引做為 key：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 請在項目沒有固定的 ID 時才這樣做</span></span><br><span class="line"><span class="keyword">const</span> todoItems = todos.map(<span class="function">(<span class="params">todo, index</span>) =&gt;</span></span><br><span class="line">  &lt;li key=&#123;index&#125;&gt;</span><br><span class="line">    &#123;todo.text&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>不建議使用索引作為 key，尤其如果項目的順序會改變的話。<br>這會對效能產生不好的影響，也可能會讓 component state 產生問題。</p></li><li><h4 id="用-Key-抽離-Component"><a href="#用-Key-抽離-Component" class="headerlink" title="用 Key 抽離 Component"></a>用 Key 抽離 Component</h4><p>Key 只有在周遭有 array 的情境中才有意義。<br>例如，如果要抽離一個 ListItem component 的話，應該把 key 放在 array 裡的 <ListItem /> element 上，<br>而不是把它放在 ListItem 裡面的 <li> element 上。</p><p>範例：Key 的錯誤使用方式</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ListItem</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> value = props.value;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">// 錯！你不需要在這裡指出 key：</span></span><br><span class="line">    &lt;li key=&#123;value.toString()&#125;&gt;</span><br><span class="line">      &#123;value&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;ListItem value=&#123;number&#125; /&gt;           <span class="comment">// 應該要在這裡指出 key：</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;listItems&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>範例：Key 的正確使用方式</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ListItem</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 不需要在這裡指出 key：</span></span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;props.value&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;ListItem key=&#123;number.toString()&#125; value=&#123;number&#125; /&gt;     <span class="comment">// 正確！Key 應該在 array 內被指定。</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;listItems&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>一個好的經驗法則是，在 <code>map()</code> 呼叫中的每個 element 都會需要 key。</p></li><li><h4 id="Key-必須在-Sibling-中是唯一的"><a href="#Key-必須在-Sibling-中是唯一的" class="headerlink" title="Key 必須在 Sibling 中是唯一的"></a>Key 必須在 Sibling 中是唯一的</h4><p>在 array 中使用的 key 應該要是唯一的值。然而，它們不必在全域中唯一。<br>當產生兩個不同的 array 時，仍然可以使用相同的 key：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Blog</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> sidebar = (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;props.posts.map(<span class="function">(<span class="params">post</span>) =&gt;</span></span><br><span class="line">        &lt;li key=&#123;post.id&#125;&gt;</span><br><span class="line">          &#123;post.title&#125;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      )&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> content = props.posts.map(<span class="function">(<span class="params">post</span>) =&gt;</span></span><br><span class="line">    &lt;div key=&#123;post.id&#125;&gt;</span><br><span class="line">      &lt;h3&gt;&#123;post.title&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;p&gt;&#123;post.content&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123;sidebar&#125;</span><br><span class="line">      &lt;hr /&gt;</span><br><span class="line">      &#123;content&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> posts = [</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">title</span>: <span class="string">&#x27;Hello World&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;Welcome to learning React!&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">title</span>: <span class="string">&#x27;Installation&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;You can install React from npm.&#x27;</span>&#125;</span><br><span class="line">];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Blog posts=&#123;posts&#125; /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Key 的功能是提示 React，但它們不會被傳遞到你的 component。<br>如果在 component 中需要同樣的值，可以直接把這個值用一個不同的名稱作為 prop 傳下去：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> content = posts.map(<span class="function">(<span class="params">post</span>) =&gt;</span></span><br><span class="line">  &lt;Post</span><br><span class="line">    key=&#123;post.id&#125;</span><br><span class="line">    id=&#123;post.id&#125;</span><br><span class="line">    title=&#123;post.title&#125; /&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>Post</code> component 可以讀取 <code>props.id</code>，但不能讀取 <code>props.key</code>。</p></li><li><h4 id="在-JSX-中嵌入-map"><a href="#在-JSX-中嵌入-map" class="headerlink" title="在 JSX 中嵌入 map()"></a>在 JSX 中嵌入 map()</h4><p>在上面的例子中，我們宣告了另一個 <code>listItems</code> 變數並把它包含在 JSX 中：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">const</span> listItems = numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">    &lt;ListItem key=&#123;number.toString()&#125; value=&#123;number&#125; /&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;listItems&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JSX 能在大括號中<code>嵌入任何表達式</code>，所以能夠 inline <code>map()</code> 的結果：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumberList</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> numbers = props.numbers;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;numbers.map(<span class="function">(<span class="params">number</span>) =&gt;</span></span><br><span class="line">        &lt;ListItem key=&#123;number.toString()&#125; value=&#123;number&#125; /&gt;</span><br><span class="line">      )&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有時候這會產生更乾淨的程式碼，但這種風格也可能被濫用。<br>就像 JavaScript 一樣，是否要將變數抽取出來以增加可讀性完全是看你的決定。<br>請記得，如果 <code>map()</code> 的程式碼層級變得過度巢狀，也許就是使用 <code>抽離component</code> 的時候了。</p></li></ul></li><li><h3 id="表單"><a href="#表單" class="headerlink" title="表單"></a>表單</h3><ul><li><h4 id="Controlled-Component"><a href="#Controlled-Component" class="headerlink" title="Controlled Component"></a>Controlled Component</h4><p>在 HTML 中，表單的 element 像是 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 通常會維持它們自身的 state，並根據使用者的輸入來更新 state。<br>在 React 中，可變的 state 通常是被維持在 component 中的 state property，並只能以 setState() 來更新。<br>render 表單的 React component 同時也掌握了後續使用者的輸入對表單帶來的改變。<br>像這樣一個輸入表單的 element，被 React 用這樣的方式來控制它的值，就被稱為「controlled component」。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameForm</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">value</span>: <span class="string">&#x27;&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.handleChange = <span class="built_in">this</span>.handleChange.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleSubmit = <span class="built_in">this</span>.handleSubmit.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">value</span>: event.target.value&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleSubmit</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;A name was submitted: &#x27;</span> + <span class="built_in">this</span>.state.value);</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;form onSubmit=&#123;<span class="built_in">this</span>.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          Name:</span><br><span class="line">          &lt;input type=<span class="string">&quot;text&quot;</span> value=&#123;<span class="built_in">this</span>.state.value&#125; onChange=&#123;<span class="built_in">this</span>.handleChange&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由於 <code>value</code> attribute 是被設定在表單 element 上，顯示的 value 會永遠是 <code>this.state.value</code>，這使得 React 的 state 成為了資料來源。<br>由於 <code>handleChange</code> 在每一次鍵盤被敲擊時都會被執行，並更新 React 的 state，因此被顯示的 value 將會在使用者打字的同時被更新。</p><p>在這樣的 controlled component 中，顯示的 value 始終由 React 的 state 驅動，<br>雖然這意味著必須寫更多的 code，但現在同時可以將 value 傳遞給其他的 UI element，或是從其他 event handler 重置。</p></li><li><h4 id="Textarea-標籤"><a href="#Textarea-標籤" class="headerlink" title="Textarea 標籤"></a>Textarea 標籤</h4><p>在 HTML 中，一個 <code>&lt;textarea&gt;</code> 的 element 是經由它的 children 來定義它的文字：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span></span><br><span class="line">  Hello there, this is some text in a text area</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 React 中，<code>&lt;textarea&gt;</code> 則是使用一個 <code>value</code> 的 attribute。<br>如此一來，一個使用 <code>&lt;textarea&gt;</code> 的表單可以使用非常類似單行的 input 方法來寫成：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EssayForm</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;</span><br><span class="line">      value: <span class="string">&#x27;Please write an essay about your favorite DOM element.&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.handleChange = <span class="built_in">this</span>.handleChange.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleSubmit = <span class="built_in">this</span>.handleSubmit.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">value</span>: event.target.value&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleSubmit</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;An essay was submitted: &#x27;</span> + <span class="built_in">this</span>.state.value);</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;form onSubmit=&#123;<span class="built_in">this</span>.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          Essay:</span><br><span class="line">          &lt;textarea value=&#123;<span class="built_in">this</span>.state.value&#125; onChange=&#123;<span class="built_in">this</span>.handleChange&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="Select-標籤"><a href="#Select-標籤" class="headerlink" title="Select 標籤"></a>Select 標籤</h4><p>在 HTML 中，<code>&lt;select&gt;</code> 會建立一個下拉式選單。<br>例如，這個 HTML 會建立一個有各種水果的下拉式選單：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;grapefruit&quot;</span>&gt;</span>Grapefruit<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;lime&quot;</span>&gt;</span>Lime<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span> <span class="attr">value</span>=<span class="string">&quot;coconut&quot;</span>&gt;</span>Coconut<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;mango&quot;</span>&gt;</span>Mango<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>椰子的選項是一開始就被選定的，因為它有一個 <code>selected</code> attribute。<br>但是在 React 中並不是用 <code>selected</code> attribute，而是在 <code>select</code> 的標籤上用一個 <code>value</code> attribute。<br>對一個 controlled component 來說這是比較方便的，因為只需要在一個地方更新它。例如：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlavorForm</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;<span class="attr">value</span>: <span class="string">&#x27;coconut&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.handleChange = <span class="built_in">this</span>.handleChange.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.handleSubmit = <span class="built_in">this</span>.handleSubmit.bind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;<span class="attr">value</span>: event.target.value&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleSubmit</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;Your favorite flavor is: &#x27;</span> + <span class="built_in">this</span>.state.value);</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;form onSubmit=&#123;<span class="built_in">this</span>.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          Pick your favorite flavor:</span><br><span class="line">          &lt;select value=&#123;<span class="built_in">this</span>.state.value&#125; onChange=&#123;<span class="built_in">this</span>.handleChange&#125;&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;grapefruit&quot;</span>&gt;Grapefruit&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;lime&quot;</span>&gt;Lime&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;coconut&quot;</span>&gt;Coconut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;mango&quot;</span>&gt;Mango&lt;/option&gt;</span><br><span class="line">          &lt;/select&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整體來說，這使得 <code>&lt;input type=&quot;text&quot;&gt;</code>，<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 使用起來都很類似。<br>它們全都會接收一個 controlled component 時會使用到的 <code>value</code> attribute。</p></li><li><h4 id="檔案-input-標籤"><a href="#檔案-input-標籤" class="headerlink" title="檔案 input 標籤"></a>檔案 input 標籤</h4><p>在 HTML 中，<code>&lt;input type=&quot;file&quot;&gt;</code> 讓使用者從它們的儲存裝置中選擇一個至多個檔案，<br>並把它們上傳到伺服器或透過 <code>File API</code> 被 JavaScript 處理。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>由於它的值是唯讀，它在 React 中是一個 uncontrolled component。</p></li><li><h4 id="處理多個輸入"><a href="#處理多個輸入" class="headerlink" title="處理多個輸入"></a>處理多個輸入</h4><p>當需要處理多個 controlled <code>input</code> element，可以在每個 element 中加入一個 <code>name</code> attribute，<br>並讓 handler function 選擇基於 <code>event.target.name</code> 的值該怎麼做：</p></li></ul></li></ul><p>參考資源：</p><ul><li><a href="https://zh-hant.reactjs.org/">React 官方中文文檔</a></li><li><a href="https://blog.gtwang.org/web-development/react-hello-world-tutorial/">React 入門教學與 Hello World 基礎範例</a></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_hexo</title>
      <link href="2022/02/05/%E7%AD%86%E8%A8%98-hexo/"/>
      <url>2022/02/05/%E7%AD%86%E8%A8%98-hexo/</url>
      
        <content type="html"><![CDATA[<p>寫作筆記</p><a id="more"></a><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="寫作"><a href="#寫作" class="headerlink" title="寫作"></a>寫作</h3><ul><li>設定<br>所有文章都會在 <code>source/_posts</code> 裡面。<br>若想每新增一篇文章，自動在 <code>source/_posts</code> 裡，<br>新增一個跟文章同名的資料夾用來放置圖片資源，<br>可在 <code>_config.yml</code> 中，進行設定：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>新增文章<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&#x27;文章標題&#x27;</span></span><br></pre></td></tr></table></figure><code>hexo new</code> 預設為 <code>post</code>。<br>Hexo 有三種預設佈局： <code>post</code>、<code>page</code>、<code>draft</code>，分別對應不同的路徑<table><thead><tr><th>佈局</th><th>路徑</th></tr></thead><tbody><tr><td><code>post</code></td><td>source/_posts</td></tr><tr><td><code>page</code></td><td>source</td></tr><tr><td><code>draft</code></td><td>source/_drafts</td></tr></tbody></table></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_從零開始 邁向數據分析 SQL資料庫語法入門</title>
      <link href="2022/01/28/%E7%AD%86%E8%A8%98-%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E9%82%81%E5%90%91%E6%95%B8%E6%93%9A%E5%88%86%E6%9E%90SQL%E8%B3%87%E6%96%99%E5%BA%AB%E8%AA%9E%E6%B3%95%E5%85%A5%E9%96%80/"/>
      <url>2022/01/28/%E7%AD%86%E8%A8%98-%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E9%82%81%E5%90%91%E6%95%B8%E6%93%9A%E5%88%86%E6%9E%90SQL%E8%B3%87%E6%96%99%E5%BA%AB%E8%AA%9E%E6%B3%95%E5%85%A5%E9%96%80/</url>
      
        <content type="html"><![CDATA[<p>紮穩 SQL 基礎, 循序養成大數據分析新技能<br>MySQL / MariaDB、MS SQL Server、Oracle、PostgreSQL、DB2 全適用！</p><a id="more"></a><h2 id="建構SQL執行環境"><a href="#建構SQL執行環境" class="headerlink" title="建構SQL執行環境"></a>建構SQL執行環境</h2><ul><li><h3 id="安裝-XAMPP-來建構-MySQL-MariaDB-資料庫"><a href="#安裝-XAMPP-來建構-MySQL-MariaDB-資料庫" class="headerlink" title="安裝 XAMPP 來建構 MySQL / MariaDB 資料庫"></a>安裝 XAMPP 來建構 MySQL / MariaDB 資料庫</h3><ul><li><h4 id="安裝-XAMPP"><a href="#安裝-XAMPP" class="headerlink" title="安裝 XAMPP"></a>安裝 XAMPP</h4><a href="https://www.apachefriends.org/zh_tw/index.html">下載 XAMPP (https://www.apachefriends.org/zh_tw/index.html)</a><img data-src="/2022/01/28/%E7%AD%86%E8%A8%98-%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E9%82%81%E5%90%91%E6%95%B8%E6%93%9A%E5%88%86%E6%9E%90SQL%E8%B3%87%E6%96%99%E5%BA%AB%E8%AA%9E%E6%B3%95%E5%85%A5%E9%96%80/1.png" class=""></li><li><h4 id="設定-MySQL-MariaDB-管理員密碼"><a href="#設定-MySQL-MariaDB-管理員密碼" class="headerlink" title="設定 MySQL / MariaDB 管理員密碼"></a>設定 MySQL / MariaDB 管理員密碼</h4></li></ul></li><li><h3 id="建立學習用資料庫"><a href="#建立學習用資料庫" class="headerlink" title="建立學習用資料庫"></a>建立學習用資料庫</h3><ul><li><h4 id="透過-SQL-語法來操作資料庫"><a href="#透過-SQL-語法來操作資料庫" class="headerlink" title="透過 SQL 語法來操作資料庫"></a>透過 SQL 語法來操作資料庫</h4></li></ul></li></ul><h2 id="資料庫與SQL"><a href="#資料庫與SQL" class="headerlink" title="資料庫與SQL"></a>資料庫與SQL</h2><h3 id="資料庫是什麼"><a href="#資料庫是什麼" class="headerlink" title="資料庫是什麼"></a>資料庫是什麼</h3><pre><code>#### 身邊隨處可見的資料庫#### 為什麼需要 DBMS#### DBMS 具有許多類型</code></pre><h3 id="資料庫的架構"><a href="#資料庫的架構" class="headerlink" title="資料庫的架構"></a>資料庫的架構</h3><pre><code>#### 一般 RDBMS 的系統架構#### 資料表的結構</code></pre><h3 id="SQL-基本概要"><a href="#SQL-基本概要" class="headerlink" title="SQL 基本概要"></a>SQL 基本概要</h3><pre><code>#### 標準 SQL#### SQL 敘述與其分類#### SQL 的基本撰寫規則</code></pre><h3 id="建立資料表"><a href="#建立資料表" class="headerlink" title="建立資料表"></a>建立資料表</h3><pre><code>#### 資料表的內容#### 建立資料庫 (Create Database 敘述)#### 建立資料表 (Create Table 敘述)#### 命名規則#### 指定資料型別#### 設定條件約束</code></pre><h3 id="刪除與修改資料表"><a href="#刪除與修改資料表" class="headerlink" title="刪除與修改資料表"></a>刪除與修改資料表</h3><pre><code>#### 刪除資料表 (Drop Table 敘述)#### 修改資料表結構 (Alter Table 敘述)#### 新增資料至資料表</code></pre><h3 id="自我練習"><a href="#自我練習" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="查詢的基本語法"><a href="#查詢的基本語法" class="headerlink" title="查詢的基本語法"></a>查詢的基本語法</h2><h3 id="SELECT-敘述的基本語法"><a href="#SELECT-敘述的基本語法" class="headerlink" title="SELECT 敘述的基本語法"></a>SELECT 敘述的基本語法</h3><pre><code>#### 輸出特定欄位資料#### 輸出所有欄位資料#### 替欄位取個別名#### 輸出常數#### 省略結果中重複的紀錄#### 以 WHERE 子句篩選特定紀錄#### 註解的寫法</code></pre><h3 id="算術運算子與比較運算子"><a href="#算術運算子與比較運算子" class="headerlink" title="算術運算子與比較運算子"></a>算術運算子與比較運算子</h3><pre><code>#### 算術運算子#### 請留意 NULL 的運算#### 比較運算子#### 對字串使用不等號的需注意事項#### 不能對 NULL 使用比較運算子</code></pre><h3 id="邏輯運算子"><a href="#邏輯運算子" class="headerlink" title="邏輯運算子"></a>邏輯運算子</h3><pre><code>#### NOT 運算子#### AND 運算子與 OR 運算子#### 加上括號的部分優先處理#### 邏輯運算子與真偽值#### 含有 NULL 時的真偽值</code></pre><h3 id="自我練習-1"><a href="#自我練習-1" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="彙總與排序"><a href="#彙總與排序" class="headerlink" title="彙總與排序"></a>彙總與排序</h2><h3 id="查詢時彙總資料"><a href="#查詢時彙總資料" class="headerlink" title="查詢時彙總資料"></a>查詢時彙總資料</h3><pre><code>#### 彙總函數#### 計算資料表的紀錄筆數#### 計算 NULL 以外的紀錄筆數#### 求得總計#### 求得平均值#### 求得最大、最小值#### 排除重複值再使用彙總函數 (DISTINCT 關鍵字)</code></pre><h3 id="資料分群"><a href="#資料分群" class="headerlink" title="資料分群"></a>資料分群</h3><pre><code>#### GROUP BY 子句#### 彙總鍵包含 NULL 的狀況#### 使用 WHRER 子句時 GROUP BY 的作用#### 彙總函數與 GROUP BY 子句的常見錯誤</code></pre><h3 id="對彙總結果指定條件"><a href="#對彙總結果指定條件" class="headerlink" title="對彙總結果指定條件"></a>對彙總結果指定條件</h3><pre><code>#### HAVING 子句#### 可寫在 HAVING 子句的元素#### 適合以 WHERE 子句取代 HAVING 子句的條件</code></pre><h3 id="查詢結果排序"><a href="#查詢結果排序" class="headerlink" title="查詢結果排序"></a>查詢結果排序</h3><pre><code>#### ORDER BY 子句#### 指定升幂或降幂#### 指定多個排序鍵#### NULL 的順序#### 使用欄位別名指定排序鍵#### ORDER BY 子句可使用的欄位#### 請勿使用欄位編號</code></pre><h3 id="自我練習-2"><a href="#自我練習-2" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="更新資料"><a href="#更新資料" class="headerlink" title="更新資料"></a>更新資料</h2><h3 id="新增資料-INSERT"><a href="#新增資料-INSERT" class="headerlink" title="新增資料 (INSERT)"></a>新增資料 (INSERT)</h3><pre><code>#### 什麼是 INSERT#### INSERT 敘述的基本語法#### 省略欄位串列#### 存入 NULL#### 存入預設值#### 從其他資料表複製資料</code></pre><h3 id="刪除資料-DELETE"><a href="#刪除資料-DELETE" class="headerlink" title="刪除資料 (DELETE)"></a>刪除資料 (DELETE)</h3><pre><code>#### DROP TABLE 敘述與 DELETE 敘述#### DELETE 敘述的基本語法#### 刪除特定紀錄的 DELETE 敘述 (搜尋式 DELETE)</code></pre><h3 id="修改資料-UPDATE"><a href="#修改資料-UPDATE" class="headerlink" title="修改資料 (UPDATE)"></a>修改資料 (UPDATE)</h3><pre><code>#### UPDATE 的基本語法#### 指定條件的 UPDATE 敘述 (搜尋式 UPDATE)#### 將資料改為 NULL#### 修改多個欄位的資料</code></pre><h3 id="交易功能"><a href="#交易功能" class="headerlink" title="交易功能"></a>交易功能</h3><pre><code>#### 什麼是交易功能#### 如何設定交易功能#### ACID 特性</code></pre><h3 id="自我練習-3"><a href="#自我練習-3" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="進階查詢功能"><a href="#進階查詢功能" class="headerlink" title="進階查詢功能"></a>進階查詢功能</h2><h3 id="檢視表"><a href="#檢視表" class="headerlink" title="檢視表"></a>檢視表</h3><pre><code>#### 檢視表與資料表#### 檢視表的建立方式#### 檢視表的限制(1) 建立時不可使用 ORDER BY 子句#### 檢視表的限制(2) 透過檢視表更新資料#### 刪除檢視表</code></pre><h3 id="子查詢"><a href="#子查詢" class="headerlink" title="子查詢"></a>子查詢</h3><pre><code>#### 子查詢與檢視表#### 子查詢的名稱#### 純量子查詢#### 可寫入純量子查詢的位置#### 使用純量子查詢的需注意事項</code></pre><h3 id="關聯子查詢"><a href="#關聯子查詢" class="headerlink" title="關聯子查詢"></a>關聯子查詢</h3><pre><code>#### 一般子查詢與關聯子查詢的差異#### 關聯子查詢也能進行資料分群#### 連結條件必須寫在子查詢內</code></pre><h3 id="自我練習-4"><a href="#自我練習-4" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="函數、述詞、Case-運算式"><a href="#函數、述詞、Case-運算式" class="headerlink" title="函數、述詞、Case 運算式"></a>函數、述詞、Case 運算式</h2><h3 id="各式各樣的函數"><a href="#各式各樣的函數" class="headerlink" title="各式各樣的函數"></a>各式各樣的函數</h3><pre><code>#### 函數的類型#### 數學函數#### 字串函數#### 日期函數#### 轉換函數</code></pre><h3 id="述詞"><a href="#述詞" class="headerlink" title="述詞"></a>述詞</h3><pre><code>#### 什麼是述詞#### LIKE 述詞 - 搜尋相同的字串#### BETWEEN - 範圍搜尋#### IS NULL、IS NOT NULL - 判斷是否為 NULL#### IN 述詞 - OR 的簡便形式#### 指定子查詢做為 IN 述詞的參數#### EXISTS 述詞</code></pre><h3 id="CASE-運算式"><a href="#CASE-運算式" class="headerlink" title="CASE 運算式"></a>CASE 運算式</h3><pre><code>#### 什麼是 CASE 運算式#### CASE 運算式的語法#### CASE 運算式的使用方式</code></pre><h3 id="自我練習-5"><a href="#自我練習-5" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="集合運算-合併查詢"><a href="#集合運算-合併查詢" class="headerlink" title="集合運算 (合併查詢)"></a>集合運算 (合併查詢)</h2><h3 id="資料表的加法與減法運算"><a href="#資料表的加法與減法運算" class="headerlink" title="資料表的加法與減法運算"></a>資料表的加法與減法運算</h3><pre><code>#### 什麼是集合運算#### 資料表的加法運算 - UNION#### 集合運算的注意事項#### 列出重複紀錄的集合運算 - ALL選項#### 篩選出資料表的共通部分 - INTERSECT#### 紀錄的減法運算 - EXCEPT</code></pre><h3 id="結合-聯結多個資料表欄位"><a href="#結合-聯結多個資料表欄位" class="headerlink" title="結合 (聯結多個資料表欄位)"></a>結合 (聯結多個資料表欄位)</h3><pre><code>#### 什麼是結合#### 內部結合 - INNER JOIN#### 外部結合 - OUTER JOIN#### 使用3個以上資料表的結合#### 交叉結合 - CROSS JOIN</code></pre><h3 id="自我練習-6"><a href="#自我練習-6" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="SQL-進階處理功能"><a href="#SQL-進階處理功能" class="headerlink" title="SQL 進階處理功能"></a>SQL 進階處理功能</h2><h3 id="各式各樣的函數-1"><a href="#各式各樣的函數-1" class="headerlink" title="各式各樣的函數"></a>各式各樣的函數</h3><pre><code>#### 什麼是視窗函數#### 視窗函數的語法#### 基本使用方式 - 以 RANK 函數為例#### 也可以不指定 PARTITION BY#### 常用的視窗專用函數#### 視窗函數應當寫在何處#### 將彙總函數當作視窗函數使用#### 計算移動平均#### 2個 ORDER BY</code></pre><h3 id="GROUPING-運算子"><a href="#GROUPING-運算子" class="headerlink" title="GROUPING 運算子"></a>GROUPING 運算子</h3><pre><code>#### 一併列出總計行#### ROLLUP - 1次取得總計與小計#### GROUPING 函數 - 分辨 NULL 的真偽#### CUBE - 將資料堆疊成積木#### GROUPING SETS - 只取出部分積木</code></pre><h3 id="自我練習-7"><a href="#自我練習-7" class="headerlink" title="自我練習"></a>自我練習</h3><h2 id="從應用程式連接資料庫"><a href="#從應用程式連接資料庫" class="headerlink" title="從應用程式連接資料庫"></a>從應用程式連接資料庫</h2><h3 id="串聯資料庫和應用程式"><a href="#串聯資料庫和應用程式" class="headerlink" title="串聯資料庫和應用程式"></a>串聯資料庫和應用程式</h3><pre><code>#### 資料庫與應用程式的關係#### 驅動程式 - 2個世界的橋樑#### 驅動程式的種類</code></pre><h3 id="程式的基礎知識"><a href="#程式的基礎知識" class="headerlink" title="程式的基礎知識"></a>程式的基礎知識</h3><pre><code>#### 一如往例的 「Hello, World」#### 編譯與執行程式#### 常見的錯誤</code></pre><h3 id="利用程式連到-MariaDB"><a href="#利用程式連到-MariaDB" class="headerlink" title="利用程式連到 MariaDB"></a>利用程式連到 MariaDB</h3><pre><code>#### 執行 SQL 敘述的 Java 程式#### Java 如何從資料庫取得資料#### 執行連接至資料庫的程式#### 嘗試篩選出資料表的資料#### 嘗試修改資料表的資料#### 小結</code></pre><h3 id="自我練習-8"><a href="#自我練習-8" class="headerlink" title="自我練習"></a>自我練習</h3><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> 筆記 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_正規表達式</title>
      <link href="2022/01/16/%E7%AD%86%E8%A8%98-%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F/"/>
      <url>2022/01/16/%E7%AD%86%E8%A8%98-%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="正規表達式-Regulay-Expression"><a href="#正規表達式-Regulay-Expression" class="headerlink" title="正規表達式 (Regulay Expression)"></a>正規表達式 (Regulay Expression)</h2><ul><li><code>Regular Expression</code> 是一套規則模式(pattern)，<br>可以用來做文字的搜尋、比對、萃取、替代、轉換等等，在許多的程式語言中都支援，<br>簡稱 <code>Regex</code>, <code>Regexp</code> 或 <code>RE</code>。</li></ul><a id="more"></a><ul><li><p><code>Regular Expression</code> 是在 UNIX 世界中發展出來的字串比對技巧，<br>基本概念是用一套簡單 (但功能強大) 的符號來比對字串，<br>並可對符合比對條件的字串進行修改或其他運算。</p></li><li><p><code>Regex</code> 可以實用的情境大致有幾種：</p><ol><li>尋找匹配的字串</li><li>取代匹配的字串</li><li>驗證使用者輸入資料的欄位</li><li>擷取某段想要的資訊</li></ol></li></ul><h2 id="撰寫正規表達式"><a href="#撰寫正規表達式" class="headerlink" title="撰寫正規表達式"></a>撰寫正規表達式</h2><ul><li><code>pattern</code> 代表正規表達式的字串，區分大小寫。</li><li><code>flag</code> 則是比對的方式。</li><li>可透過下列兩種方式創建正規表達式：<ul><li>使用 <code>RegExp 物件的建構子函式</code>，<br>新增一個 <code>RegExp</code> 物件：<br>當模式會異動、事先未知匹配模式、或者從其他地方取得時，使用 <code>建構子函數</code> 較為合適。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> rules = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;pattern&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li>使用 <code>正規表達式實字</code>，<br>用兩個 <code>//</code> 包住條件：<br>當正規表達式為定值時，使用此方法可獲得較佳效能。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> rules = <span class="regexp">/pattern/</span>flag;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="修飾符-flag"><a href="#修飾符-flag" class="headerlink" title="修飾符 (flag)"></a>修飾符 (flag)</h2><table><thead><tr><th></th><th>說明</th></tr></thead><tbody><tr><td><code>i</code></td><td>不區分大小寫。</td></tr><tr><td><code>m</code></td><td>使用多行模式，<br>使 <code>^</code> 和 <code>$</code> 會比對每一行的開頭與結尾，而不是輸入字串的開頭和結尾。</td></tr><tr><td><code>s</code></td><td>使用單行模式，<br>使 <code>句點.</code> 會比對每個字元，而不是換行符號 <code>\n</code> 以外的每個字元。</td></tr><tr><td><code>g</code></td><td>使用全域比對模式，<br>g flag 會保留lastIndex的狀態，讓下一次再匹配時，可以從lastIndex的位置開始找起。</td></tr><tr><td><code>x</code></td><td>將模式中的空白忽略。</td></tr><tr><td><code>A</code></td><td>強制以目標字符串開頭匹配。</td></tr><tr><td><code>U</code></td><td>禁止貪婪匹配，只匹配最近的一個字符串。 (不重複匹配)</td></tr><tr><td><code>gi</code></td><td>全域比對並忽略大小寫。</td></tr></tbody></table><h2 id="RegExp-物件方法"><a href="#RegExp-物件方法" class="headerlink" title="RegExp 物件方法"></a>RegExp 物件方法</h2><table><thead><tr><th>方法</th><th>說明</th><th>語法格式</th></tr></thead><tbody><tr><td><code>exec</code></td><td>搜尋比對，符合傳回Array；不符合傳回 null。</td><td><code>regexObj.exec(str)</code></td></tr><tr><td><code>test</code></td><td>搜尋比對，符合傳回true；不符合傳回false。</td><td><code>regexObj.test(str)</code></td></tr></tbody></table><h2 id="字串物件方法"><a href="#字串物件方法" class="headerlink" title="字串物件方法"></a>字串物件方法</h2><table><thead><tr><th>方法</th><th>說明</th><th>語法格式</th></tr></thead><tbody><tr><td><code>match</code></td><td>搜尋比對，如果符合的狀況正規表達式<br>包含g符號，則傳回所有相符的字串；<br>不包含g則傳回Array，<br>無符合傳回null。</td><td><code>str.match(regexp)</code></td></tr><tr><td><code>search</code></td><td>搜尋比對，<br>符合傳回第一個相符的索引 (index)，<br>不符合傳回 -1。</td><td><code>str.search(regexp)</code></td></tr><tr><td><code>replace</code></td><td>取代字串，<br>如果符合傳回一個新字串，不影響原字串。</td><td><code>str.replace(regexp, newstr)</code></td></tr><tr><td><code>split</code></td><td>分割字串，<br>如果符合傳回分割後的Array，不影響原字串。</td><td><code>str.split(regexp)</code></td></tr></tbody></table><h2 id="特殊字元"><a href="#特殊字元" class="headerlink" title="特殊字元"></a>特殊字元</h2><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>\</code></td><td>反斜線，跳脫特殊字元。</td></tr><tr><td><code>.</code></td><td>任意字元。</td></tr><tr><td><code>$</code></td><td>字元結尾。</td></tr><tr><td><code>^</code></td><td>字元開頭</td></tr><tr><td><code>|</code></td><td>同程式常見的 OR 邏輯</td></tr></tbody></table><h2 id="常用字元"><a href="#常用字元" class="headerlink" title="常用字元"></a>常用字元</h2><table><thead><tr><th>字元</th><th>匹配說明</th><th>等效正規表達式</th></tr></thead><tbody><tr><td><code>\d</code></td><td>數字。</td><td><code>[0-9]</code></td></tr><tr><td><code>\w</code></td><td>數字、字母、底線。</td><td><code>[a-zA-Z0-9_]</code></td></tr><tr><td><code>\s</code></td><td>空白字元、tab、換頁、換行。</td><td><code>[\r\t\n\f]</code></td></tr><tr><td><code>\b</code></td><td>英文單詞邊界。</td><td></td></tr></tbody></table><table><thead><tr><th>反義字元</th><th>匹配說明</th><th>等效正規表達式</th></tr></thead><tbody><tr><td><code>\D</code></td><td>非 數字。</td><td><code>[^0-9]</code>、<code>[^\d]</code></td></tr><tr><td><code>\W</code></td><td>非 數字、字母、底線。</td><td><code>[^a-zA-Z0-9_]</code>、<code>[^\w]</code></td></tr><tr><td><code>\S</code></td><td>非 空白字元、tab、換頁、換行。</td><td><code>[^\r\t\n\f]</code>、<code>[^\s]</code></td></tr><tr><td><code>\B</code></td><td>非 英文單詞邊界。</td><td><code>[^\b]</code></td></tr></tbody></table><table><thead><tr><th>其他字元</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>\0</code></td><td>查找 NULL 字符。</td></tr><tr><td><code>\n</code></td><td>查找換行符。</td></tr><tr><td><code>\f</code></td><td>查找換頁符。</td></tr><tr><td><code>\r</code></td><td>查找回車符。</td></tr><tr><td><code>\t</code></td><td>查找製表符(tab鍵)。</td></tr><tr><td><code>\v</code></td><td>查找垂直製表符。</td></tr><tr><td><code>\xxx</code></td><td>查找以八進制數 xxx 規定的字符。</td></tr><tr><td><code>\xdd</code></td><td>查找以十六進制數 dd 規定的字符。</td></tr><tr><td><code>\uxxxx</code></td><td>查找以十六進制數 xxxx 規定的Unicode字符。</td></tr></tbody></table><h2 id="量詞"><a href="#量詞" class="headerlink" title="量詞"></a>量詞</h2><table><thead><tr><th>符號</th><th>匹配說明</th><th>等效正規表達式</th></tr></thead><tbody><tr><td>n<code>*</code></td><td>0次以上。</td><td>n<code>&#123;0,&#125;</code></td></tr><tr><td>n<code>+</code></td><td>至少1次以上。</td><td>n<code>&#123;1,&#125;</code></td></tr><tr><td>n<code>?</code></td><td>0次或1次。</td><td>n<code>&#123;0,1&#125;</code></td></tr><tr><td>n<code>&#123;x&#125;</code></td><td>x次 的 n。</td><td></td></tr><tr><td>n<code>&#123;x,&#125;</code></td><td>至少x次以上 的 n。</td><td></td></tr><tr><td>n<code>&#123;,y&#125;</code></td><td>最多y次 的 n。</td><td></td></tr><tr><td>n<code>&#123;x,y&#125;</code></td><td>至少x次以上，最多y次 的 n。</td><td></td></tr></tbody></table><p>  對於量詞，Regex的匹配預設採取貪婪模式(盡可能多匹配)。<br>  <code>?</code>接在量詞後方，表示盡可能匹配短結果。<br>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> match = <span class="regexp">/&lt;.+?&gt;/</span>.exec(<span class="string">&#x27;&lt;em&gt;Hello World&lt;/em&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(match[<span class="number">0</span>]);        <span class="comment">// &lt;em&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="方括號"><a href="#方括號" class="headerlink" title="方括號 []"></a>方括號 []</h2><p>  比對方括號裡面的任一字元，可以用範圍匹配</p><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>[]</code></td><td>方括號，比對方括號裡面的任一字元，可以用範圍匹配： [A-Z]、[a-z]、[0-9]</td></tr><tr><td><code>[^]</code>、<code>[!]</code></td><td>^代表「反」，比對方括號裡面<code>以外</code>的任一字元</td></tr></tbody></table><h2 id="群組"><a href="#群組" class="headerlink" title="群組 ()"></a>群組 ()</h2><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>(x)</code></td><td>比對x，並將符合的部分存入一個變數(自動命名的變數)</td></tr><tr><td><code>(?&lt;name&gt;x)</code></td><td>比對x，並將符合的部分存入name變數</td></tr><tr><td><code>(?:x)</code></td><td>比對x，但不存入結果陣列</td></tr><tr><td><code>x(?=y)</code></td><td>x之後必須接y</td></tr><tr><td><code>x(?!y)</code></td><td>x之後不能接y</td></tr><tr><td><code>(?&lt;=y)x</code></td><td>x前面必須接y</td></tr><tr><td><code>(?&lt;!y)x</code></td><td>x前面不能接y</td></tr></tbody></table><h2 id="回溯-Backreference"><a href="#回溯-Backreference" class="headerlink" title="回溯 (Backreference)"></a>回溯 (Backreference)</h2><p>  用來引用群組的內容。<br>  使用反斜線加上數字。e.g.: <code>\1</code> (代表第一個群組)<br>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> regex = <span class="regexp">/(\d+)a\1b/</span></span><br><span class="line">regex.test(<span class="string">&#x27;1a1b&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">regex.test(<span class="string">&#x27;1a2b&#x27;</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p><h2 id="替換"><a href="#替換" class="headerlink" title="替換"></a>替換</h2><p>  與群組<code>()</code>一起使用。</p><table><thead><tr><th>符號</th><th>匹配說明</th></tr></thead><tbody><tr><td><code>$number</code>、<code>$&#123;number&#125;</code></td><td>number 表示匹配的群組 (capturing group)，群組編號從 1 開始 $1。<br>$ 後面接著的所有數字都會被解讀為屬於 number 群組，<br>可以用 <code>$&#123;number&#125;</code> 語法，例如用 <code>$&#123;1&#125;</code>1 就不會被解讀為第 11 個群組，而是第 1 個。</td></tr><tr><td><code>$&#123;name&#125;</code></td><td>用來引用 Named Capturing Group 的值。</td></tr><tr><td>$$</td><td>用來跳脫 (escape) $ 的特殊意義，表示 $ 字元。</td></tr><tr><td>$&amp;</td><td>用來引用整個匹配的字串。</td></tr><tr><td>$`</td><td>用來引用匹配字串的前面的所有字 (before match)。</td></tr><tr><td>$’</td><td>用來引用匹配字串的後面的所有字 (after match)。</td></tr><tr><td>$+</td><td>用來引用匹配的最後一個群組。</td></tr><tr><td>$_</td><td>用來引用整個輸入的字串。</td></tr></tbody></table><h2 id="常用實例"><a href="#常用實例" class="headerlink" title="常用實例"></a>常用實例</h2><table><thead><tr><th></th><th>表達式</th></tr></thead><tbody><tr><td>Email</td><td><code>^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)$</code></td></tr><tr><td>URL網址</td><td><code>^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)([\/\w \.-]*)*\/?$</code></td></tr><tr><td>IP位址</td><td><code>^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$</code></td></tr><tr><td>手機號碼</td><td><code>^09\d&#123;8&#125;$</code></td></tr><tr><td>身份證字號</td><td><code>^[A-Z]&#123;1&#125;[1-2]&#123;1&#125;[0-9]&#123;8&#125;$</code></td></tr><tr><td>HTML Tag</td><td><code>^&lt;([a-z]+)([^&lt;]+)*(?:&gt;(.*)&lt;\/\1&gt;|\s+\/&gt;)$</code></td></tr><tr><td>副檔名</td><td><code>(\w+)\.(jpg|gif)$</code></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 筆記 </tag>
            
            <tag> 正規表達式 </tag>
            
            <tag> RegExp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_Array</title>
      <link href="2021/11/29/%E9%80%9F%E6%9F%A5%E8%A1%A8-Array/"/>
      <url>2021/11/29/%E9%80%9F%E6%9F%A5%E8%A1%A8-Array/</url>
      
        <content type="html"><![CDATA[<p>各種常用 Array語法 速查表</p><a id="more"></a><ul><li><h2 id="操作方法分類"><a href="#操作方法分類" class="headerlink" title="操作方法分類"></a>操作方法分類</h2><table><thead><tr><th>分類</th><th>方法</th></tr></thead><tbody><tr><td>會改變原始陣列</td><td><a href="#push">push()</a>、<a href="#pop">pop()</a>、<a href="#shift">shift()</a>、<a href="#unshift">unshift()</a>、<a href="#reverse">reverse()</a>、<a href="#splice">splice()</a>、<a href="#sort">sort()</a>、<a href="#copyWithin">copyWithin()</a>、<a href="#fill">fill()</a></td></tr><tr><td>回傳陣列元素資訊或索引值</td><td><a href="#length">length</a>、<a href="#at">at()</a>、<a href="#indexOf">indexOf()</a>、<a href="#lastIndexOf">lastIndexOf()</a>、<a href="#find">find()</a>、<a href="#findIndex">findIndex()</a>、<a href="#filter">filter()</a></td></tr><tr><td>針對每個元素處理</td><td><a href="#forEach">forEach()</a></td></tr><tr><td>產生新的陣列或新的值</td><td><a href="#concat">concat()</a>、<a href="#slice">slice()</a>、<a href="#map">map()</a>、<a href="#reduce">reduce()</a>、<a href="#reduceRight">reduceRight()</a>、<a href="#flat">flat()</a>、<a href="#flatMap">flatMap()</a>、<br><a href="#Array-from">Array.from()</a>、<a href="#Array-of">Array.of()</a></td></tr><tr><td>回傳迭代器(Iteration)</td><td><a href="#entries">entries()</a>、<a href="#keys">keys()</a>、<a href="#values">values()</a></td></tr><tr><td>回傳字串</td><td><a href="#join">join()</a>、<a href="#toString">toString()</a></td></tr><tr><td>判斷並回傳布林值</td><td><a href="#every">every()</a>、<a href="#some">some()</a>、<a href="#includes">includes()</a>、<a href="#Array-isArray">Array.isArray()</a></td></tr></tbody></table></li><li><h2 id="會改變原始陣列"><a href="#會改變原始陣列" class="headerlink" title="會改變原始陣列"></a>會改變原始陣列</h2><ul><li><h3 id="push"><a href="#push" class="headerlink" title="push()"></a>push()</h3><p><code>push()</code> 可以將一個或多個元素，加入陣列後方，並回傳修改後的陣列。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">a.push(<span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="pop"><a href="#pop" class="headerlink" title="pop()"></a>pop()</h3><p><code>pop()</code> 從陣列移除(取出)最後一個元素。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> b = a.pop();</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 3]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);     <span class="comment">// [4]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="shift"><a href="#shift" class="headerlink" title="shift()"></a>shift()</h3><p><code>shift()</code> 從陣列移除(取出)第一個元素。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> b = a.shift();</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [2, 3, 4]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);     <span class="comment">// [1]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="unshift"><a href="#unshift" class="headerlink" title="unshift()"></a>unshift()</h3><p><code>shift()</code> 可以將一個或多個元素，加入陣列前方，並回傳修改後的陣列。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">a.unshift(<span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [5, 6, 1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="reverse"><a href="#reverse" class="headerlink" title="reverse()"></a>reverse()</h3><p><code>reverse()</code> 將陣列作反向排序。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">a.reverse();</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="splice"><a href="#splice" class="headerlink" title="splice()"></a>splice()</h3><p><code>splice()</code> 可以移除或新增陣列的元素。<br>包含三個以上參數：</p><ul><li>第一個：要從哪個元素索引值開始，索引從0開始。</li><li>第二個：要移除的總筆數，若省略，則從刪除起點開始的所有元素都會被刪除；若設為0或負數，則不移除元素。</li><li>第三個以上：要添加的元素，若省略，則原陣列資料不會添加新資料，表示不增加只刪除。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 刪除一筆資料</span></span><br><span class="line">a.splice(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 4, 5]   3被移除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 刪除索引之後的所有元素</span></span><br><span class="line">a.splice(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1]   2以後的所有元素被移除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 取代</span></span><br><span class="line">a.splice(<span class="number">2</span>, <span class="number">3</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 100, 200, 300]   3,4,5被移除，並添加100,200,300</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不刪除，僅添加</span></span><br><span class="line">a.splice(<span class="number">2</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">// [1, 2, 100, 3, 4, 5]   在索引2的地方添加100</span></span><br></pre></td></tr></table></figure></li><li><h3 id="sort"><a href="#sort" class="headerlink" title="sort()"></a>sort()</h3><p><code>sort()</code> 可以針對陣列的元素進行排序，裡頭包含了一個排序用的判斷函式，<br>函式內必須包含兩個參數，這兩個參數分別代表陣列裡第 n 個和第 n+1 個元素，<br>透過比較第 n 和第 n+1 個元素的大小來進行排序。<br>會改變原本的陣列內容。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">99</span>, <span class="number">999</span>, <span class="number">88</span>, <span class="number">888</span>, <span class="number">666</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 由小到大排列</span></span><br><span class="line">nums.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a - b);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [88, 99, 666, 888, 999]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由大到小排列</span></span><br><span class="line">nums.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> b - a);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [999, 888, 666, 99, 88]</span></span><br></pre></td></tr></table></figure><p>如果不使用判斷函式，預設會將元素轉換成字串，並採用 <code>unicode</code> 來判斷。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">99</span>, <span class="number">999</span>, <span class="number">88</span>, <span class="number">888</span>, <span class="number">666</span>];</span><br><span class="line"></span><br><span class="line">nums.sort();</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [666, 88, 888, 99, 999]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="copyWithin"><a href="#copyWithin" class="headerlink" title="copyWithin()"></a>copyWithin()</h3><p><code>copyWithin()</code> 複製陣列中的元素，並置換原始陣列中的元素。<br>包含三個參數：</p><ul><li>第一個是要置換的位置 (必填)。</li><li>第二個是複製起點的索引值 (選填，預設0)。</li><li>第三個是複製終點的索引值+1 (選填，預設等於陣列長度)。</li></ul><p>處理後的陣列長度必須等於原本的長度，超過的部分會被移除。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">nums.copyWithin(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [1,2,1,2,3,4]  (5,6被移除)</span></span><br><span class="line"></span><br><span class="line">nums.copyWithin(<span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [1,2,3,2,3,6]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="fill"><a href="#fill" class="headerlink" title="fill()"></a>fill()</h3><p><code>fill()</code> 用一個指定的值置換陣列中所有元素。<br>包含三個參數：</p><ul><li><p>第一個是指定要置換的值 (必填)。</p></li><li><p>第二個是置換起點的索引值 (選填，預設0)。</p></li><li><p>第三個是置換終點的索引值+1 (選填，預設等於陣列長度)。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">nums.fill(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;,&#x27;a&#x27;]</span></span><br><span class="line"></span><br><span class="line">nums.fill(<span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);        <span class="comment">// [1,2,3,&#x27;b&#x27;,&#x27;b&#x27;,6]</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h2 id="回傳陣列元素資訊或索引值"><a href="#回傳陣列元素資訊或索引值" class="headerlink" title="回傳陣列元素資訊或索引值"></a>回傳陣列元素資訊或索引值</h2><ul><li><h3 id="length"><a href="#length" class="headerlink" title="length"></a>length</h3><p><code>length</code> 可以取得陣列的長度(所有元素的數量)。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(a.length);     <span class="comment">// 4</span></span><br></pre></td></tr></table></figure></li><li><h3 id="at"><a href="#at" class="headerlink" title="at()"></a>at()</h3><p><code>at</code> 接收一個索引值，並返回該元素。<br>類似 array[index]。<br>參數：</p><ul><li><code>index</code> 要返回的陣列元素的索引位置，若為負數，則從陣列的尾端開始尋找 (必填)。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> cart = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.at(-<span class="number">1</span>));        <span class="comment">// &#x27;pear&#x27;</span></span><br><span class="line"></span><br><span class="line">cart.push(<span class="string">&#x27;orange&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr.at(-<span class="number">1</span>));        <span class="comment">// &#x27;orange&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf()"></a>indexOf()</h3><p><code>indexOf</code> 在陣列中搜尋指定元素，回傳第一個符合條件的元素的索引值；若沒找到，則回傳 -1。<br>參數：</p><ul><li>第一個參數為 要查找的值 (必填)。</li><li>第二個參數為 搜尋起點的索引值 (選填，預設為0)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fruits = [<span class="string">&#x27;蘋果&#x27;</span>, <span class="string">&#x27;香蕉&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;番茄&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;香蕉&#x27;</span>));        <span class="comment">// 1，代表元素在索引值 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;芭樂&#x27;</span>));        <span class="comment">// 2，只會回傳第一個符合的元素索引值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;榴槤&#x27;</span>));        <span class="comment">// -1，表示陣列中無此資料</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;香蕉&#x27;</span>, <span class="number">3</span>));     <span class="comment">// -1，從索引值 3 開始尋找，沒找到</span></span><br></pre></td></tr></table></figure></li><li><h3 id="lastIndexOf"><a href="#lastIndexOf" class="headerlink" title="lastIndexOf()"></a>lastIndexOf()</h3><p><code>lastIndexOf</code> 在陣列中搜尋指定元素，將會回傳最後一個符合條件的元素的索引值，若在陣列中沒找到則回傳 -1。<br>參數：</p><ul><li>第一個參數為 要查找的值 (必填)。</li><li>第二個參數為 由後向前搜尋的起點索引值 (選填，預設為整個陣列長度-1)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fruits = [<span class="string">&#x27;蘋果&#x27;</span>, <span class="string">&#x27;香蕉&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;番茄&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(fruits.lastIndexOf(<span class="string">&#x27;芭樂&#x27;</span>));        <span class="comment">// 3，只會回傳最後一個符合的元素索引值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.lastIndexOf(<span class="string">&#x27;香蕉&#x27;</span>, <span class="number">3</span>));     <span class="comment">// 1，從索引值3往回找。</span></span><br></pre></td></tr></table></figure></li><li><h3 id="find"><a href="#find" class="headerlink" title="find()"></a>find()</h3><p><code>find</code> 回傳第一個滿足條件的值，如果找不到則回傳 undefined。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(array.find(<span class="function"><span class="params">ele</span> =&gt;</span> ele &gt; <span class="number">10</span>));        <span class="comment">// 12 (回傳第一個滿足條件的值)</span></span><br><span class="line"><span class="built_in">console</span>.log(array.find(<span class="function"><span class="params">ele</span> =&gt;</span> ele &lt; <span class="number">0</span>));         <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></li><li><h3 id="findIndex"><a href="#findIndex" class="headerlink" title="findIndex()"></a>findIndex()</h3><p><code>findIndex</code> 回傳第一個滿足條件的索引值，如果找不到則回傳 -1。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(array.findIndex(<span class="function"><span class="params">ele</span> =&gt;</span> ele &gt; <span class="number">13</span>));        <span class="comment">// 3 (回傳第一個滿足條件的索引值)</span></span><br><span class="line"><span class="built_in">console</span>.log(array.findIndex(<span class="function"><span class="params">ele</span> =&gt;</span> ele &lt; <span class="number">0</span>));         <span class="comment">// -1</span></span><br></pre></td></tr></table></figure></li><li><h3 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h3><p><code>filter</code> 回傳所有符合條件的值，組成新陣列。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> words = [<span class="string">&#x27;spray&#x27;</span>, <span class="string">&#x27;limit&#x27;</span>, <span class="string">&#x27;elite&#x27;</span>, <span class="string">&#x27;exuberant&#x27;</span>, <span class="string">&#x27;destruction&#x27;</span>, <span class="string">&#x27;present&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(words.filter(<span class="function"><span class="params">w</span> =&gt;</span> w.length &gt; <span class="number">6</span>));</span><br><span class="line"><span class="comment">// [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="針對每個元素處理"><a href="#針對每個元素處理" class="headerlink" title="針對每個元素處理"></a>針對每個元素處理</h2><ul><li><h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach()"></a>forEach()</h3><p><code>forEach</code> 會將陣列中的每個元素，皆傳入函式中執行。<br>無法使用 <code>break</code> 中斷，若需中斷執行，請改用傳統的 <code>for</code> 迴圈。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    </span><br><span class="line">nums.forEach(<span class="function"><span class="params">n</span> =&gt;</span> <span class="built_in">console</span>.log(n));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  1</span></span><br><span class="line"><span class="comment">  2</span></span><br><span class="line"><span class="comment">  3</span></span><br><span class="line"><span class="comment">  4</span></span><br><span class="line"><span class="comment">  5</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>若想改變原始陣列，可善用索引值</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    </span><br><span class="line">nums.forEach(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  arr[index] = item * <span class="number">10</span>;</span><br><span class="line">&#125;)</span><br><span class="line">consolse.log(nums);               <span class="comment">// [10, 20, 30, 40, 50]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="產生新的陣列或新的值"><a href="#產生新的陣列或新的值" class="headerlink" title="產生新的陣列或新的值"></a>產生新的陣列或新的值</h2><ul><li><h3 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h3><p><code>concat</code> 可以將多個陣列合併在一起，也可使用擴展運算符 <code>...</code> 來代替。</p>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> num2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">let</span> num3 = [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line">      </span><br><span class="line"><span class="keyword">let</span> nums = num1.concat(num2, num3);</span><br><span class="line"><span class="keyword">let</span> spread = [...num1, ...num2, ...num3];</span><br><span class="line"><span class="built_in">console</span>.log(nums);            <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="built_in">console</span>.log(spread);          <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br></pre></td></tr></table></figure><p>  注意：合併巢狀陣列 (concat 只有淺拷貝)</p>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = [[<span class="number">1</span>]];</span><br><span class="line"><span class="keyword">let</span> num2 = [<span class="number">2</span>, [<span class="number">3</span>]];</span><br><span class="line">      </span><br><span class="line"><span class="keyword">var</span> nums = num1.concat(num2);</span><br><span class="line"><span class="built_in">console</span>.log(nums);              <span class="comment">// [[1], 2, [3]]</span></span><br><span class="line"></span><br><span class="line">num1[<span class="number">0</span>].push(<span class="number">4</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nums);              <span class="comment">// [[1, 4], 2, [3]]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="slice"><a href="#slice" class="headerlink" title="slice()"></a>slice()</h3><p><code>slice</code> 擷取原始陣列之 <code>begin</code> 至 <code>end</code> (不含end) 部分的淺拷貝，回傳一個新陣列物件。<br>包含兩個參數：</p><ul><li><code>begin</code> (選填，預設為0)，<br>從哪一個索引值開始提取拷貝 (起始為0)，<br>可使用負數，表示由陣列末端索引開始提取。</li><li><code>end</code> (選填，預設為陣列長度)，<br>至哪一個索引值之前停止提取，不含end (起始為0)，<br>可使用負數，表示到陣列末端索引結束提取，<br>若大於陣列長度，會提取至陣列最後一個元素。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> animals = [<span class="string">&#x27;ant&#x27;</span>, <span class="string">&#x27;bison&#x27;</span>, <span class="string">&#x27;camel&#x27;</span>, <span class="string">&#x27;duck&#x27;</span>, <span class="string">&#x27;elephant&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice());       <span class="comment">// [&#x27;ant&#x27;, &#x27;bison&#x27;, &#x27;camel&#x27;, &#x27;duck&#x27;, &#x27;elephant&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(<span class="number">2</span>));      <span class="comment">// [&#x27;camel&#x27;, &#x27;duck&#x27;, &#x27;elephant&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(<span class="number">2</span>, <span class="number">4</span>));   <span class="comment">// [&#x27;camel&#x27;, &#x27;duck&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(-<span class="number">2</span>));     <span class="comment">// [&#x27;duck&#x27;, &#x27;elephant&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(animals.slice(<span class="number">2</span>, -<span class="number">1</span>));  <span class="comment">// [&#x27;camel&#x27;, &#x27;duck&#x27;]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="map"><a href="#map" class="headerlink" title="map()"></a>map()</h3><p><code>map</code> 將原陣列的每一個元素經由回呼函式運算後，回傳一個新陣列物件。<br><code>map</code> 會處理每一個元素，就算不 <code>return</code>，也會出現 <code>undefined</code>，此時可先透過 <code>filter</code> 篩選過後，再使用 <code>map</code>。<br>若不需要回傳新陣列，可改用 <code>forEach</code>。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> maps = nums.map(<span class="function"><span class="params">x</span> =&gt;</span> x + <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(maps);          <span class="comment">// [11, 12, 13, 14]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce()"></a>reduce()</h3><p><code>reduce</code> 將陣列中每個元素進行運算，每次函式的回傳值會當作下一次函式的傳入值，最後回傳最終結果。<br>空值會略過。<br>若初始計算的數值未提供，會跳過第一個陣列索引，從索引1開始執行回呼函式。<br>若有提供初始計算的數值，則會由陣列索引0開始執行。<br>不只可加總數字，也可做字串串接。<br>參數：</p><ul><li>含有一個 callback 函式參數 (必填) 和初始計算的數值 (選填，預設為陣列的第一個值)。</li><li>函式中有兩個必填參數及兩個選填參數：<ul><li>累加器，用來累積函式每一次執行的回傳值 (必填)</li><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">previousVal, current</span>) =&gt;</span> previousVal + current;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(nums.reduce(reducer));           <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(nums.reduce(reducer, <span class="number">5</span>));        <span class="comment">// 15，初始計算值：5</span></span><br></pre></td></tr></table></figure><p>HTML字串加總範例</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> lists = [<span class="string">&#x27;第一項&#x27;</span>, <span class="string">&#x27;第二項&#x27;</span>, <span class="string">&#x27;第三項&#x27;</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">previousVal, current</span>) =&gt;</span> <span class="string">`<span class="subst">$&#123;previousVal&#125;</span>&lt;li&gt;<span class="subst">$&#123;current&#125;</span>&lt;/li&gt;`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ulTag = <span class="built_in">document</span>.createElement(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">ulTag.append(lists.reduce(reducer, <span class="string">&#x27;&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ulTag);</span><br><span class="line"><span class="comment">// &lt;ul&gt;&lt;li&gt;第一項&lt;/li&gt;&lt;li&gt;第二項&lt;/li&gt;&lt;li&gt;第三項&lt;/li&gt;&lt;/ul&gt;</span></span><br></pre></td></tr></table></figure></li><li><h3 id="reduceRight"><a href="#reduceRight" class="headerlink" title="reduceRight()"></a>reduceRight()</h3><p><code>reduceRight</code> 與 <code>reduce</code> 大同小異，只是其計算方式是由右到左，<br>對於加法來說沒什麼影響，旦對於減法而言就有差異。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">accumulator, current</span>) =&gt;</span> accumulator - current;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(nums.reduce(reducer));           <span class="comment">// -2</span></span><br></pre></td></tr></table></figure></li><li><h3 id="flat"><a href="#flat" class="headerlink" title="flat()"></a>flat()</h3><p><code>flat</code> 可以將一個多維陣列的深度轉成一維 (扁平化)，<br>如果深度有很多層，可使用 <code>Infinity</code> 來全部展開成一維陣列。<br>參數：</p><ul><li><code>depth</code>，指定要轉換的結構深度 (選填，預設為1)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]];</span><br><span class="line"><span class="built_in">console</span>.log(arr1.flat());                 <span class="comment">// [0, 1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, [[[<span class="number">3</span>, <span class="number">4</span>]]]];</span><br><span class="line"><span class="built_in">console</span>.log(arr2.flat(<span class="number">2</span>));                <span class="comment">// [0, 1, 2, [3, 4]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 Infinity，可展開任意深度的陣列</span></span><br><span class="line"><span class="keyword">var</span> arr3 = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, [<span class="number">5</span>, <span class="number">6</span>, [<span class="number">7</span>, <span class="number">8</span>, [<span class="number">9</span>, <span class="number">10</span>]]]]];</span><br><span class="line">arr3.flat(<span class="literal">Infinity</span>);                      <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// flat() 會移除陣列中的空值</span></span><br><span class="line"><span class="keyword">var</span> arr4 = [<span class="number">1</span>, <span class="number">2</span>, , <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">arr4.flat();                              <span class="comment">// [1, 2, 4, 5]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap()"></a>flatMap()</h3><p><code>flatMap</code> 等於 <code>map()</code> 和 <code>flat()</code> 的組合，在運算後直接將陣列扁平化處理。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">arr1.flatMap(<span class="function"><span class="params">x</span> =&gt;</span> [x * <span class="number">2</span>]);        <span class="comment">// [2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line">arr1.flatMap(<span class="function"><span class="params">x</span> =&gt;</span> [[x * <span class="number">2</span>]]);      <span class="comment">// [[2], [4], [6], [8]]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from()"></a>Array.from()</h3><p><code>Array.from()</code> 會將 『類陣列物件』、『可迭代的物件』轉換成陣列。<br>類陣列物件：擁有一個length屬性和若干索引屬性的任務對象。<br>可迭代物件：可以獲取對象中的元素，如 <code>Map</code> 和 <code>Set</code> 等。<br>參數：</p><ul><li><code>arrayLike</code> 想要轉換成數組的類陣列或可迭代對象 (必填)。</li><li><code>mapFn</code> 新陣列中的每個元素會執行該回呼函式 (選填)。</li><li><code>this</code> 執行回呼函式mapFn時 this 對象 (選填)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(<span class="string">&#x27;foo&#x27;</span>));                     <span class="comment">// [&#x27;f&#x27;, &#x27;o&#x27;, &#x27;o&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="function"><span class="params">x</span> =&gt;</span> x + x));     <span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="Array-of"><a href="#Array-of" class="headerlink" title="Array.of()"></a>Array.of()</h3><p><code>Array.of()</code> 可以快速將數字、字串等內容，轉換成陣列。<br>Array.of() 與 Array 建構式之間的不同在於如何處理整數引數：<br>Array.of(7) 會建立一個擁有單個元素—7—的陣列，<br>而 Array(7) 會建立一個 length 屬性值為 7 的空陣列（註：這意味著這個陣列有 7 個空缺欄位（empty slots），而非 7 個值為 undefined 的欄位）。<br>參數：</p><ul><li><code>elementN</code> 要用來成為新建立之陣列的元素。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.of(<span class="number">7</span>);          <span class="comment">// [7]</span></span><br><span class="line"><span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);    <span class="comment">// [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span>(<span class="number">7</span>);             <span class="comment">// [ , , , , , , ]</span></span><br><span class="line"><span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);       <span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="回傳迭代器-Iteration"><a href="#回傳迭代器-Iteration" class="headerlink" title="回傳迭代器 (Iteration)"></a>回傳迭代器 (Iteration)</h2><ul><li><h3 id="什麼是迭代？"><a href="#什麼是迭代？" class="headerlink" title="什麼是迭代？"></a>什麼是迭代？</h3><p>迭代指的是對物件重複同樣的處理方式，每重複一次就稱為一次迭代。<br>JavaScript 中迭代大部分指的是迴圈，但陣列中也有類似迴圈功能的方法，<br>這些方法會產生「迭代器」來達成類似迴圈的效果。<br>#<code>產生器物件(Generator object)</code>、<br>#<code>委派(yield *)</code>、<br>#<code>建立產生器(function *)</code></p><blockquote><p><a href="https://cythilya.github.io/2020/01/29/generator/">Summer。桑莫。夏天 - 產生器(Generator)</a></p></blockquote></li><li><h3 id="回傳迭代器物件的陣列方法"><a href="#回傳迭代器物件的陣列方法" class="headerlink" title="回傳迭代器物件的陣列方法"></a>回傳迭代器物件的陣列方法</h3><p>有些方法回傳的不是新陣列或是特定的值，而是一個陣列迭代器物件，<br>要操作或是讀取該物件的值就需要使用 <code>for...of</code> 語法。<br><code>for...of</code> 除了用在陣列以外，也可用在 <code>字串</code>、<code>map</code>、<code>set</code> 等等…</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> 元素 <span class="keyword">of</span> 迭代器)&#123;</span><br><span class="line">  執行動作...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>迭代器用法</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> iterator = a.values();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// w</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// y</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// k</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// o</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next().value); <span class="comment">// p</span></span><br></pre></td></tr></table></figure></li><li><h3 id="entries"><a href="#entries" class="headerlink" title="entries()"></a>entries()</h3><p><code>entries</code> 會回傳一個新陣列迭代器物件，包含陣列中每一索引值與元素的配對。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fruits = [<span class="string">&#x27;蘋果&#x27;</span>, <span class="string">&#x27;香蕉&#x27;</span>, <span class="string">&#x27;芭樂&#x27;</span>, <span class="string">&#x27;木瓜&#x27;</span>, <span class="string">&#x27;番茄&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> iterator = fruits.entries();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> iterator)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  [0, &quot;蘋果&quot;]</span></span><br><span class="line"><span class="comment">  [1, &quot;香蕉&quot;]</span></span><br><span class="line"><span class="comment">  [2, &quot;芭樂&quot;]</span></span><br><span class="line"><span class="comment">  [3, &quot;木瓜&quot;]</span></span><br><span class="line"><span class="comment">  [4, &quot;番茄&quot;]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><h3 id="keys"><a href="#keys" class="headerlink" title="keys()"></a>keys()</h3><p><code>keys</code> 回傳陣列中的每一個索引值(key)成為新的 Array Iterator 物件 (迭代器物件)。<br>需要使用 <code>for...of</code> 來讀取迭代器的值。<br>或使用 <code>Array.from()</code>、<code>解構賦值(展開)</code> 轉換成陣列。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> getKeys = arr.keys();</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">of</span> getKeys) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    0</span></span><br><span class="line"><span class="comment">    1</span></span><br><span class="line"><span class="comment">    2</span></span><br><span class="line"><span class="comment">    3</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fromKeys = <span class="built_in">Array</span>.from(getKeys);</span><br><span class="line"><span class="keyword">let</span> denseKeys = [...getKeys];</span><br><span class="line"><span class="built_in">console</span>.log(fromKeys);           <span class="comment">// [0, 1, 2, 3]</span></span><br><span class="line"><span class="built_in">console</span>.log(denseKeys);          <span class="comment">// [0, 1, 2, 3]</span></span><br></pre></td></tr></table></figure></li><li><h3 id="values"><a href="#values" class="headerlink" title="values()"></a>values()</h3><p><code>values</code> 回傳陣列中的每一個元素的值成為新的 Array Iterator 物件 (迭代器物件)。<br>需要使用 <code>for...of</code> 來讀取迭代器的值。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> getVals = arr.values();</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> getVals) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  a</span></span><br><span class="line"><span class="comment">  b</span></span><br><span class="line"><span class="comment">  c</span></span><br><span class="line"><span class="comment">  d</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="回傳字串"><a href="#回傳字串" class="headerlink" title="回傳字串"></a>回傳字串</h2><ul><li><h3 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h3><p><code>join</code> 可以將陣列中所有元素，藉由指定的字符合併在一起變成字串呈現，若沒有指定字符預設會用「逗號」合併。<br>任何 undefined 或 null 的元素都會被視為空字串處理。<br>參數：</p><ul><li>含有一個串接符號參數 (選填，預設 <code>,</code>)</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> elements = [<span class="string">&#x27;Fire&#x27;</span>, <span class="string">&#x27;Air&#x27;</span>, <span class="string">&#x27;Water&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(elements.join());           <span class="comment">// Fire,Air,Water</span></span><br><span class="line"><span class="built_in">console</span>.log(elements.join(<span class="string">&#x27;&#x27;</span>));         <span class="comment">// FireAirWater</span></span><br><span class="line"><span class="built_in">console</span>.log(elements.join(<span class="string">&#x27;--&#x27;</span>));       <span class="comment">// Fire--Air--Water</span></span><br></pre></td></tr></table></figure></li><li><h3 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString()"></a>toString()</h3><p><code>toString()</code> 將陣列以字串方式回傳。<br>Array 覆寫了 Object 中的 toString 方法。<br>陣列的 <code>toString</code> 方法會將陣列中的每個元素用逗號串接起來成為一個字串，並回傳該字串。<br>在會以文字型態表示的地方使用了陣列，或是在字串的串接中使用到了陣列，JavaScript 會自動為該陣列使用toString 方法。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;1a&#x27;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(array1.toString());         <span class="comment">// &#x27;1,2,a,1a&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="判斷並回傳布林值"><a href="#判斷並回傳布林值" class="headerlink" title="判斷並回傳布林值"></a>判斷並回傳布林值</h2><ul><li><h3 id="every"><a href="#every" class="headerlink" title="every()"></a>every()</h3><p><code>every</code> 會測試陣列中的所有元素，是否都通過了由給定之函式所實作的測試，並回傳布林值。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">30</span>, <span class="number">39</span>, <span class="number">29</span>, <span class="number">10</span>, <span class="number">13</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(array1.every(<span class="function"><span class="params">e</span> =&gt;</span> e &lt; <span class="number">40</span>));       <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(array1.every(<span class="function"><span class="params">e</span> =&gt;</span> e &gt; <span class="number">30</span>));       <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><h3 id="some"><a href="#some" class="headerlink" title="some()"></a>some()</h3><p><code>some</code> 會測試陣列中的至少有一個元素，通過由給定之函式所實作的測試，並回傳布林值。<br>參數：</p><ul><li>含有一個 callback 函式參數。</li><li>函式中有一個必填參數及三個選填參數：<ul><li>每個被迭代的元素 (必填)</li><li>目前處理的元素索引值 (選填)</li><li>使用該方法的陣列 (選填)</li><li>執行此函式的 this 值 (選填)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(array1.some(<span class="function"><span class="params">e</span> =&gt;</span> e % <span class="number">2</span> === <span class="number">0</span>));       <span class="comment">// true (至少有一個元素是偶數)</span></span><br></pre></td></tr></table></figure></li><li><h3 id="includes"><a href="#includes" class="headerlink" title="includes()"></a>includes()</h3><p><code>includes</code> 會判斷陣列中是否包含某個元素，並以此回傳 true 或 false。<br>參數：</p><ul><li><code>searchElement</code> 要搜索的元素 (必填)。</li><li><code>fromIndex</code> 搜尋起點的索引值，<br>若為負數值，則搜尋起點將會是陣列長度 + 此參數的值。<br>若fromIndex大於或等於陣列長度，會回傳 false (選填，預設0)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">2</span>);      <span class="comment">// true</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">4</span>);      <span class="comment">// false</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">3</span>, <span class="number">3</span>);   <span class="comment">// false</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">3</span>, -<span class="number">1</span>);  <span class="comment">// true</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NaN</span>].includes(<span class="literal">NaN</span>);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h3 id="Array-isArray"><a href="#Array-isArray" class="headerlink" title="Array.isArray()"></a>Array.isArray()</h3><p><code>Array.isArray()</code> 能判斷一個物件是否為陣列，並回傳 true 或 false。<br>參數：</p><ul><li><code>obj</code> 要檢查的物件 (必填)。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下方都回傳 true</span></span><br><span class="line"><span class="built_in">Array</span>.isArray([]);</span><br><span class="line"><span class="built_in">Array</span>.isArray([<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>());</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>));</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>));</span><br><span class="line"><span class="comment">// 小細節：Array.prototype 本身是陣列：</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="built_in">Array</span>.prototype);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下方都回傳 false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray();</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123;&#125;);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">null</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">undefined</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="number">17</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="string">&#x27;Array&#x27;</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123; <span class="attr">__proto__</span>: <span class="built_in">Array</span>.prototype &#125;);</span><br></pre></td></tr></table></figure><p><code>instanceof</code> vs <code>isArray</code><br>當檢查Array實例時，<code>Array.isArray</code> 相較於 <code>instanceof</code> 更加推薦，因為它可以穿透 <code>iframes</code> 。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line">xArray = <span class="built_in">window</span>.frames[<span class="built_in">window</span>.frames.length-<span class="number">1</span>].Array;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> xArray(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// [1,2,3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確地檢查陣列型態</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(arr);  <span class="comment">// true</span></span><br><span class="line"><span class="comment">// 它不能在 iframes 之間正常運作</span></span><br><span class="line">arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>; <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_Markdown</title>
      <link href="2021/11/07/%E7%AD%86%E8%A8%98-Markdown/"/>
      <url>2021/11/07/%E7%AD%86%E8%A8%98-Markdown/</url>
      
        <content type="html"><![CDATA[<p>Markdown 是一種輕量級標記語言，允許使用易讀寫的純文本格式編寫文檔。<br>Markdown 編寫的文檔可以導出 <code>HTML</code>、<code>Word</code>、<code>圖像</code>、<code>PDF</code>、<code>Epub</code> 等多種格式的文檔。<br>Markdown 編寫的文檔後綴為 <code>.md</code> 、 <code>.markdown</code> 。</p><a id="more"></a><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>  製作表格使用 <code>|</code> 來分隔不同的單元格，使用 <code>-</code> 來分隔表頭和其他行。</p><ul><li><h3 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h3><ul><li><h4 id="語法格式如下："><a href="#語法格式如下：" class="headerlink" title="語法格式如下："></a>語法格式如下：</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|  表頭  |  表頭 |</span><br><span class="line">|  ---- |  ---  |</span><br><span class="line">| 單元格 | 單元格 |</span><br><span class="line">| 單元格 | 單元格 |</span><br></pre></td></tr></table></figure></li><li><h4 id="顯示結果如下："><a href="#顯示結果如下：" class="headerlink" title="顯示結果如下："></a>顯示結果如下：</h4><table><thead><tr><th>表頭</th><th>表頭</th></tr></thead><tbody><tr><td>單元格</td><td>單元格</td></tr><tr><td>單元格</td><td>單元格</td></tr></tbody></table></li></ul></li><li><h3 id="對齊方式"><a href="#對齊方式" class="headerlink" title="對齊方式"></a>對齊方式</h3><p>可以設置表格的對齊方式：</p><ul><li><code>-:</code> 設置內容和標題，置右對齊。</li><li><code>:-</code> 設置內容和標題，置左對齊。</li><li><code>:-:</code> 設置內容和標題，置中對齊。</li><li><h4 id="語法格式如下：-1"><a href="#語法格式如下：-1" class="headerlink" title="語法格式如下："></a>語法格式如下：</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 置左對齊 | 置中對齊 | 置右對齊 ｜</span><br><span class="line">|  :----  |  :---:  |  ----:  |</span><br><span class="line">|  單元格  |  單元格  |  單元格  |</span><br><span class="line">|  單元格  |  單元格  |  單元格  |</span><br></pre></td></tr></table></figure></li><li><h4 id="顯示結果如下：-1"><a href="#顯示結果如下：-1" class="headerlink" title="顯示結果如下："></a>顯示結果如下：</h4><table><thead><tr><th align="left">置左對齊</th><th align="center">置中對齊</th><th align="right">置右對齊</th></tr></thead><tbody><tr><td align="left">單元格</td><td align="center">單元格</td><td align="right">單元格</td></tr><tr><td align="left">單元格</td><td align="center">單元格</td><td align="right">單元格</td></tr></tbody></table></li></ul></li></ul><div style="text-align: center; color:#aaa;"><small>/... 未完待續 .../</small></div>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_NPM</title>
      <link href="2021/11/07/%E7%AD%86%E8%A8%98-NPM/"/>
      <url>2021/11/07/%E7%AD%86%E8%A8%98-NPM/</url>
      
        <content type="html"><![CDATA[<p><code>npm</code> 是用 <code>Node.js</code> 編寫的，所以需要安裝 <code>Node.js</code> 才能使用。<br><small>本篇程式碼皆使用iOS版本語法示範</small></p><a id="more"></a><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>  使用NVM安裝Nodejs，可參考：<a href="/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Windows/">Window篇</a>、<a href="/2021/10/27/%E7%AD%86%E8%A8%98-NVM-Mac/">Mac篇</a>。</p><h2 id="檢查npm是否安裝完成"><a href="#檢查npm是否安裝完成" class="headerlink" title="檢查npm是否安裝完成"></a>檢查npm是否安裝完成</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm -v      <span class="comment"># npm --version</span></span></span><br><span class="line">2.3.0</span><br></pre></td></tr></table></figure><h2 id="若要安裝最新版本"><a href="#若要安裝最新版本" class="headerlink" title="若要安裝最新版本"></a>若要安裝最新版本</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm i npm@latest -g</span></span><br></pre></td></tr></table></figure><p>  <small>『 npm i 』為 npm install 的縮寫，『@latest』表示最新版本，『-g』表示全局安裝。</small></p><h2 id="新建package-json，npm-初始化"><a href="#新建package-json，npm-初始化" class="headerlink" title="新建package.json，npm 初始化"></a>新建package.json，npm 初始化</h2><ul><li><p>請先建立新專案並切換至專案根目錄。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir demo-project</span><br><span class="line">cd demo-project</span><br></pre></td></tr></table></figure></li><li><p>npm 初始化</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><ul><li><p>初始化後，進行相關設定</p><table><thead><tr><th>關鍵字</th><th>說明</th></tr></thead><tbody><tr><td><code>name</code></td><td>專案名稱 (預設為目錄名)</td></tr><tr><td><code>version</code></td><td>專案版本</td></tr><tr><td><code>description</code></td><td>專案描述</td></tr><tr><td><code>entry point</code></td><td>專案切入點</td></tr><tr><td><code>test command</code></td><td>專案測試指令</td></tr><tr><td><code>git repository</code></td><td>專案原始碼的版本控管位置</td></tr><tr><td><code>keywords</code></td><td>專案關鍵字</td></tr><tr><td><code>auther</code></td><td>專案作者 (以 auther-name &lt;auther @email.com&gt; 寫之)</td></tr><tr><td><code>license</code></td><td>專案版權</td></tr></tbody></table></li><li><p>可略過設定，生成 package.json 後，再進行修改</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm init --yes  或  npm init -y</span><br></pre></td></tr></table></figure><p><code>npm init</code> 用來初始化生成一個新的 <code>package.json</code> 文件。<br><code>-f</code> (代表force)、<code>-y</code> (代表yes)，則跳過提問階段，直接生成一個新的<code>package.json</code>。</p></li><li><p>設定 init 預設值<br>為 <code>npm init</code> 設置默認值，這些訊息會存放在用戶主目錄的 <code>~/.npmrc</code> 文件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm set init-author-name &#x27;Your name&#x27;</span><br><span class="line">npm set init-author-email &#x27;Your email&#x27;</span><br><span class="line">npm set init-author-url &#x27;https://arx827.github.io/&#x27;</span><br><span class="line">npm set init-license &#x27;MIT&#x27;</span><br></pre></td></tr></table></figure></li><li><p>加入模塊時，紀錄確切版本，而不是一個可選的版本範圍</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm set save-exact true</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i &lt;packageName&gt;</span><br></pre></td></tr></table></figure><h2 id="查看安裝資訊"><a href="#查看安裝資訊" class="headerlink" title="查看安裝資訊"></a>查看安裝資訊</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm list -g</span><br></pre></td></tr></table></figure><ul><li>如果要查看某個套件的版本號，可使用命令如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm list grunt</span><br></pre></td></tr></table></figure></li><li>結果如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">projectName@projectVersion /path/to/project/folder</span><br><span class="line">└── grunt@0.4.1</span><br></pre></td></tr></table></figure></li></ul><h2 id="Package-json-屬性說明"><a href="#Package-json-屬性說明" class="headerlink" title="Package.json 屬性說明"></a>Package.json 屬性說明</h2><table><thead><tr><th>屬性</th><th>說明</th></tr></thead><tbody><tr><td><code>name</code></td><td>套件名稱</td></tr><tr><td><code>version</code></td><td>套件版本號</td></tr><tr><td><code>description</code></td><td>套件描述</td></tr><tr><td><code>homepage</code></td><td>套件的官網url</td></tr><tr><td><code>author</code></td><td>套件的作者姓名</td></tr><tr><td><code>contributors</code></td><td>套件的其他貢獻者姓名</td></tr><tr><td><code>dependencies</code></td><td>依賴套件列表。如果依賴套件沒有安裝，npm會自動將依賴套件安裝在node_module目錄下</td></tr><tr><td><code>repository</code></td><td>套件代碼存放地方的類型，可以是git或svn，git可在Github上</td></tr><tr><td><code>main</code></td><td>main字段指定了程序的主入口文件，require(‘moduleName’)就會加載這個文件。這個字段的默認值是套件跟目錄下面的index.js</td></tr><tr><td><code>keywords</code></td><td>關鍵字</td></tr></tbody></table><h2 id="卸載套件"><a href="#卸載套件" class="headerlink" title="卸載套件"></a>卸載套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall &lt;packageName&gt;</span><br></pre></td></tr></table></figure><h2 id="更新套件"><a href="#更新套件" class="headerlink" title="更新套件"></a>更新套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update &lt;packageName&gt;</span><br></pre></td></tr></table></figure><h2 id="搜索套件"><a href="#搜索套件" class="headerlink" title="搜索套件"></a>搜索套件</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm search &lt;packageName&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> NPM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_NPM</title>
      <link href="2021/11/07/%E9%80%9F%E6%9F%A5%E8%A1%A8-NPM/"/>
      <url>2021/11/07/%E9%80%9F%E6%9F%A5%E8%A1%A8-NPM/</url>
      
        <content type="html"><![CDATA[<p>NPM 常用指令 速查表</p><h2 id="簡寫"><a href="#簡寫" class="headerlink" title="簡寫"></a>簡寫</h2><table><thead><tr><th>簡寫語法</th><th>說明</th></tr></thead><tbody><tr><td><code>npm -v</code></td><td><code>npm --version</code>。</td></tr><tr><td><code>-g</code></td><td><code>--global</code>，縮寫為 <code>-g</code>，<br>表示安裝包時，視作 <code>全域</code> 的包。安裝之後的包將位於系統預設的目錄之下。</td></tr><tr><td><code>-S</code></td><td><code>--save</code>，縮寫為 <code>-S</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>dependencies</code>。</td></tr><tr><td><code>-D</code></td><td><code>--save-dev</code>，縮寫為 <code>-D</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>devDependencies</code>。</td></tr><tr><td><code>-O</code></td><td><code>--save-optional</code>，縮寫為 <code>-O</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>optionalDependencies</code>。</td></tr><tr><td><code>-E</code></td><td><code>--save-exact</code>，縮寫為 <code>-E</code>，<br>表示安裝的包的版本是精確指定的。</td></tr><tr><td><code>-B</code></td><td><code>--save-bundle</code>，縮寫為 <code>-B</code>，<br>表示安裝的包將寫入 <code>package.json</code> 裡面的 <code>bundleDependencies</code>。</td></tr><tr><td><code>-f</code></td><td><code>--force</code>，縮寫為 <code>-f</code>，<br>表示不管是否安裝過，都要強制重新安裝。</td></tr></tbody></table><a id="more"></a><ul><li><h2 id="npm-init"><a href="#npm-init" class="headerlink" title="npm init"></a>npm init</h2><p><small>初始化生成package.json</small></p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm init</code></td><td></td><td>初始化生成一個新的<code>package.json</code></td></tr><tr><td><code>npm init --yes</code></td><td><code>npm init -y</code></td><td>跳過提問階段，直接初始化生成一個新的<code>package.json</code></td></tr></tbody></table></li><li><h2 id="npm-set"><a href="#npm-set" class="headerlink" title="npm set"></a>npm set</h2><p><small>初始化時，預設的設置，這些信息會存放在用戶主目錄的 ~/.npmrc 文件</small></p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm set init-author-name &#39;Your name&#39;</code></td><td>預設作者名稱</td></tr><tr><td><code>npm set init-author-email &#39;Your email&#39;</code></td><td>預設信箱</td></tr><tr><td><code>npm set init-author-url &#39;https://arx827.github.io/&#39;</code></td><td>預設主頁</td></tr><tr><td><code>npm set init-lincense &#39;MIT&#39;</code></td><td>預設許可證字段</td></tr></tbody></table><p><small>設置 package.json 儲存確切版本號</small></p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm set save-exact true</code></td><td><code>package.json</code>將紀錄套件的確切版本，<br>而不是一個可選版本的範圍</td></tr></tbody></table></li><li><h2 id="npm-config"><a href="#npm-config" class="headerlink" title="npm config"></a>npm config</h2><p><small>設置 .npmrc 相關設定</small><br>npmrc 有 四個相關文件</p><table><thead><tr><th>路徑</th><th>說明</th></tr></thead><tbody><tr><td><code>/path/to/my/project/.npmrc</code></td><td>每個項目的配置文件</td></tr><tr><td><code>$HOME/.npmrc</code></td><td>每個用戶的配置文件，<br>可通過 CLI 選項–userconfig或環境變量配置<br>$NPM_CONFIG_USERCONFIG</td></tr><tr><td><code>$PREFIX/etc/npmrc</code></td><td>全域配置文件，<br>可通過 CLI 選項–globalconfig或環境變量配置<br>$NPM_CONFIG_GLOBALCONFIG</td></tr><tr><td><code>/path/to/npm/npmrc</code></td><td>npm 的內置配置文件</td></tr></tbody></table><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm config set &lt;key&gt; &lt;value&gt; [-g|--global]</code></td><td>將 <code>&lt;key&gt;</code> 設置為 <code>&lt;value&gt;</code>，<br>省略 <code>&lt;value&gt;</code> 時，則將其設置為 <code>true</code>。</td></tr><tr><td><code>npm config get &lt;key&gt;</code></td><td>顯示配置值</td></tr><tr><td><code>npm config delete &lt;key&gt;</code></td><td>刪除配置項</td></tr><tr><td><code>npm config list [-l] [--json]</code></td><td>顯示所有配置項</td></tr><tr><td><code>npm config edit</code></td><td>在編輯器中打開配置文件</td></tr><tr><td><code>npm set &lt;key&gt; &lt;value&gt; [-g|--global]</code></td><td>將 <code>&lt;key&gt;</code> 設置為 <code>&lt;value&gt;</code></td></tr><tr><td><code>npm get &lt;key&gt;</code></td><td>顯示配置值</td></tr><tr><td><code>npm config list -l</code></td><td>查看 npm 的配置。</td></tr></tbody></table></li><li><h2 id="npm-info"><a href="#npm-info" class="headerlink" title="npm info"></a>npm info</h2><p><small>可查看每個套件的具體資訊</small></p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm info &lt;packageName&gt;</code></td><td>查看套件資訊</td></tr><tr><td><code>npm info &lt;packageName&gt; &lt;key&gt;</code></td><td>查看套件單一項資訊</td></tr></tbody></table><p>下面命令的效果一樣</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm info react</span><br><span class="line">$ npm view react</span><br><span class="line">$ npm view &lt;別名&gt;</span><br><span class="line">$ npm show react</span><br><span class="line">$ npm v react</span><br></pre></td></tr></table></figure></li><li><h2 id="npm-search"><a href="#npm-search" class="headerlink" title="npm search"></a>npm search</h2><p><code>npm search</code> 命令用於搜索npm倉庫，它後面可以跟字符串，也可以跟正規表達式。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm search &lt;關鍵字&gt;</span><br></pre></td></tr></table></figure><p>下面是一個例子</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm search node-gyp</span><br><span class="line">// NAME                  DESCRIPTION</span><br><span class="line">// autogypi              Autogypi handles dependencies <span class="keyword">for</span> node-gyp projects.</span><br><span class="line">// grunt-node-gyp        Run node-gyp commands from Grunt.</span><br><span class="line">// gyp-io                Temporary solution to <span class="built_in">let</span> node-gyp run `rebuild` under…</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure></li><li><h2 id="npm-list"><a href="#npm-list" class="headerlink" title="npm list"></a>npm list</h2><p><code>npm list</code> 命令以樹形結構列出當前項目安裝的所有套件，以及它們依賴的套件。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm list</code></td><td><code>npm ls</code></td><td>列出當前項目安裝的所有套件</td></tr><tr><td><code>npm list -global</code></td><td><code>npm ls -g</code></td><td>列出全域安裝的所有套件</td></tr><tr><td><code>npm list &lt;packageName&gt;</code></td><td><code>npm ls &lt;packageName&gt;</code></td><td>列出單個套件依賴關係</td></tr></tbody></table></li><li><h2 id="npm-install"><a href="#npm-install" class="headerlink" title="npm install"></a>npm install</h2><ul><li><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>安裝之前，<code>npm install</code> 會先檢查，<code>node_modules</code> 目錄之中是否已經存在指定套件。如果存在，就不再重新安裝。即使遠程倉庫已經有一個新版本，也是如此。<br>每個套件可以『全域安裝』、『本地安裝』。</p><ul><li>『全域安裝』適用於工具模塊，e.g.: <code>eslint</code> 和 <code>gulp</code>。</li><li>『本地安裝』指將一個套件下載到當前項目的 <code>node_modules</code>子目錄，只有在項目目錄中，才能調用這個套件。</li></ul><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt;</code></td><td><code>npm i &lt;packageName&gt;</code></td><td>本地安裝 <code>&lt;packageName&gt;</code> 套件</td></tr><tr><td><code>npm install -global &lt;packageName&gt;</code></td><td><code>npm i -g &lt;packageName&gt;</code></td><td>全域安裝<code>&lt;packageName&gt;</code>套件</td></tr><tr><td><code>npm install &lt;packageName&gt; --force</code></td><td><code>npm i &lt;packageName&gt; -f</code></td><td>強制重新安裝<code>&lt;packageName&gt;</code>套件</td></tr></tbody></table></li><li><h3 id="安裝不同版本"><a href="#安裝不同版本" class="headerlink" title="安裝不同版本"></a>安裝不同版本</h3><p>install命令總是安裝套件的最新版本，如果要安裝套件的特定版本，可以在套件名後面加上@和版本號。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt;@latest</code></td><td><code>npm i &lt;packageName&gt;@latest</code></td><td></td></tr><tr><td><code>npm install &lt;packageName&gt;@0.1.1</code></td><td><code>npm i &lt;packageName&gt;@0.1.1</code></td><td></td></tr><tr><td><code>npm install &lt;packageName&gt;@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</code></td><td><code>npm i &lt;packageName&gt;@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</code></td><td></td></tr></tbody></table><p>如果使用 <code>--save-exact</code> 參數，會在package.json文件指定安裝套件的確切版本</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm install readable-stream --save --save-exact</span><br></pre></td></tr></table></figure><p>install命令可以使用不同參數，指定所安裝的套件屬於哪一種性質的依賴關係，即出現在package.json文件的哪一項中</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt; --save</code></td><td><code>npm i &lt;packageName&gt; -S</code></td><td>套件將被添加到 dependencies</td></tr><tr><td><code>npm install &lt;packageName&gt; --save-dev</code></td><td><code>npm i &lt;packageName&gt; -D</code></td><td>套件將被添加到 devDependencies</td></tr></tbody></table><p>如果要安裝beta版本的套件，需要使用下面的命令</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm install &lt;packageName&gt;@beat (latest beta)</code></td><td><code>npm i &lt;packageName&gt;@beat (latest beta)</code></td><td>安裝最新的beta版</td></tr><tr><td><code>npm install &lt;packageName&gt;@1.3.1-beat.3</code></td><td><code>npm i &lt;packageName&gt;@1.3.1-beat.3</code></td><td>安裝指定的beta版</td></tr></tbody></table><p><code>npm install</code> 默認會安裝 <code>dependencies</code> 字段和 <code>devDependencies</code> 字段中的所有套件，<br>如果使用 <code>-production</code> 參數，可以只安裝 <code>dependencies</code> 字段的套件。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm install --production</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ NODE_ENV=production npm install</span><br></pre></td></tr></table></figure><p>一旦安裝了某個套件，就可以在代碼中用 <code>require</code> 命令加載這個套件。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> backbone = <span class="built_in">require</span>(<span class="string">&#x27;backbone&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(backbone.VERSION)</span><br></pre></td></tr></table></figure></li><li><h3 id="避免系統權限"><a href="#避免系統權限" class="headerlink" title="避免系統權限"></a>避免系統權限</h3><p>默認情況下，NPM全域套件都安裝在系統目錄 (如：<code>/usr/local/lib/</code>)，普通用戶沒有寫入權限，需要用到 <code>sudo</code> 命令。<br>這不是很方便，可以在沒有root權限的情況下，安裝全域套件。<br>首先，在主目錄下新建配置文件 <code>.npmrc</code>，然後在該文件中將 <code>prefix</code> 變數定義到主目錄下面。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">prefix = /home/yourUsername/npm</span><br></pre></td></tr></table></figure><p>然後在主目錄下新建 <code>npm</code> 子目錄。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/npm</span><br></pre></td></tr></table></figure><p>此後，全域安裝的套件都會安裝在這個子目錄中，npm也會到 <code>~/npm/bin</code> 目錄去尋找命令。<br>最後，將這個路徑在 <code>.bash_profile</code> 文件 (或 <code>.bashrc</code> 文件) 中加入 PASH 變數。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=~/npm/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h2 id="npm-update"><a href="#npm-update" class="headerlink" title="npm update"></a>npm update</h2><p><small>更新已安裝套件</small><br>會先到遠程倉庫查詢最新版本，然後查詢本地版本。<br>如果本地版本不存在，或者遠程版本較新，就會安裝。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm update &lt;packageName&gt;</code></td><td></td><td>更新 <code>&lt;packageName&gt;</code> 套件</td></tr></tbody></table><p>注意，從npm v2.6.1 開始， <code>npm update</code> 只更新頂層套件，而不更新依賴的依賴，以前版本是遞迴更新的。<br>如果想取到舊版本的效果，要使用下面的命令。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm --depth 9999 update</span><br></pre></td></tr></table></figure></li><li><h2 id="npm-uninstall"><a href="#npm-uninstall" class="headerlink" title="npm uninstall"></a>npm uninstall</h2><p><small>卸載已安裝套件</small></p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm uninstall &lt;packageName&gt;</code></td><td><code>npm un &lt;packageName&gt;</code></td><td>卸載 <code>&lt;packageName&gt;</code> 套件</td></tr><tr><td><code>npm uninstall &lt;packageName&gt; -global</code></td><td><code>npm un &lt;packageName&gt; -g</code></td><td>卸載全域 <code>&lt;packageName&gt;</code> 套件</td></tr></tbody></table></li><li><h2 id="npm-run"><a href="#npm-run" class="headerlink" title="npm run"></a>npm run</h2><p><code>package.json</code> 文件有一個 <code>scripts</code> 字段，可以用於執行腳本命令，供 <code>npm</code> 直接調用。<br><code>npm run</code> 命令會自動在環境變數 <code>$PATH</code> 添加 <code>node_modules/.bin</code> 目錄，所以 <code>scripts</code> 字段裡面調用命令時不用加上路徑。<br><code>npm run</code> 會創建一個 Shell，執行指定的命令，並臨時將 <code>node_modules/.bin</code> 加入PATH變數，意味著本地套件可以直接運行。<br>bash腳本，可直接存成 <code>.sh</code> 檔案，就可以在 <code>scripts</code> 屬性中引用該文件。 e.g.: <code>&quot;build-js&quot;: &quot;bin/build.sh&quot;</code>。</p><table><thead><tr><th>指令</th><th>簡寫</th><th>說明</th></tr></thead><tbody><tr><td><code>npm run-script</code></td><td><code>npm run</code></td><td>列出 <code>package.json</code> 裡所有可執行的腳本命令</td></tr><tr><td><code>npm run-script &lt;scriptName&gt;</code></td><td><code>npm run &lt;scriptName&gt;</code></td><td>執行 <code>scripts</code> 中 <code>&lt;scriptName&gt;</code> 的腳本命令</td></tr></tbody></table><ul><li><h3 id="參數"><a href="#參數" class="headerlink" title="參數"></a>參數</h3><p><code>npm run</code> 命令還可以添加參數。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;test&quot;</span>: <span class="string">&quot;mocha test/&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代碼指定 <code>npm test</code>，實際運行 <code>mocha test</code>。<br>如果要通過 <code>npm test</code>，將參數傳入mocha，則參數前面要加上兩個連字號『 <code>--</code> 』。<br>下面命令表示，mocha要運行所有 <code>test</code> 子目錄的測試腳本，以及另外一個測試腳本<code>anothertest.js</code>。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm run <span class="built_in">test</span> -- anothertest.js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ mocha <span class="built_in">test</span>/ anothertest.js</span><br></pre></td></tr></table></figure><p>若參數後面不指定任何值將設置為 <code>true</code>。</p><p><code>npm run</code> 本身有一個參數 <code>-s</code>，表示關閉npm本身的輸出，只輸出腳本產生的結果。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 輸出npm命令頭</span></span><br><span class="line">$ npm run <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 不輸出npm命令頭</span></span><br><span class="line">$ npm run -s <span class="built_in">test</span></span><br></pre></td></tr></table></figure></li><li><h3 id="scripts腳本命令最佳實踐"><a href="#scripts腳本命令最佳實踐" class="headerlink" title="scripts腳本命令最佳實踐"></a>scripts腳本命令最佳實踐</h3><p><code>scripts</code> 字段的腳本命令，有一些最佳實踐，可以方便開發。<br>首先，安裝 <code>npm-run-all</code> 套件。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm i -D npm-run-all</span><br></pre></td></tr></table></figure><p>這個套件用於運行多個 <code>scripts</code> 腳本命令。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#繼發執行</span></span><br><span class="line">$ npm-run-all build:html build:js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ npm run build:html &amp;&amp; npm run build:js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 併發執行</span></span><br><span class="line">$ npm-run-all --parallel watch:html watch:js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ npm run watch:html &amp; npm run watch:js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 混合執行</span></span><br><span class="line">$ npm-run-all clean lint --parallel watch:html watch:js</span><br><span class="line"><span class="comment"># 等同於</span></span><br><span class="line">$ npm-run-all clean lint</span><br><span class="line">$ npm-run-all --parallel watch:html watch:js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通配符</span></span><br><span class="line">$ npm-run-all --parallel watch:*</span><br></pre></td></tr></table></figure><ol><li><h4 id="start-腳本命令"><a href="#start-腳本命令" class="headerlink" title="start 腳本命令"></a>start 腳本命令</h4><p><code>start</code> 腳本命令，用於啟動應用程序。<br>下面命令併行執行 <code>dev</code> 腳本命令和 <code>serve</code> 腳本命令</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;start&quot;: &quot;npm-run-all --parallel dev serve&quot;</span><br></pre></td></tr></table></figure><p>等同於下面形式。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm run dev &amp; npm run serve</span><br></pre></td></tr></table></figure><p>如果start腳本沒有配置，<code>npm start</code> 命令默認執行 <code>node server.js</code>，<br>前提是套件的根目錄存在一個server.js文件。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ node server.js</span><br></pre></td></tr></table></figure></li><li><h4 id="dev-腳本命令"><a href="#dev-腳本命令" class="headerlink" title="dev 腳本命令"></a>dev 腳本命令</h4><p><code>dev</code> 腳本命令，規定開發階段所要做的處理。<br>下面的命令用於繼發執行所有 <code>dev</code> 的子命令。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;dev&quot;: &quot;npm-run-all dev:*&quot;</span><br></pre></td></tr></table></figure><p>下面命令將sass文件編譯為css文件，並生成source map文件。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;predev:sass&quot;: &quot;node-sass --source-map src/css/hoodie.css.map --output-style nested src/sass/base.scss src/css/hoodie.css&quot;</span><br></pre></td></tr></table></figure><p>下面命令會監視sass文件的變動，只要有變動，就自動將其編譯為css文件。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;dev:sass&quot;: &quot;node-sass --source-map src/css/hoodie.css.map --watch --output-style nested src/sass/base.scss src/css/hoodie.css&quot;</span><br></pre></td></tr></table></figure><p>下面命令為css文件加上瀏覽器前綴，限制條件是只考慮市場使用率大於5％的瀏覽器。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;dev:autoprefix&quot;: &quot;postcss --use autoprefixer --autoprefixer.browsers \&quot;&gt; 5%\&quot; --output src/css/hoodie.css src/css/hoodie.css&quot;</span><br></pre></td></tr></table></figure></li><li><h4 id="serve-腳本命令"><a href="#serve-腳本命令" class="headerlink" title="serve 腳本命令"></a>serve 腳本命令</h4><p><code>serve</code> 腳本命令用於啟動服務。<br>下面命令啟動服務，用的是 <a href="https://www.npmjs.com/package/live-server">live-server</a> 套件，將服務啟動在9090端口，展示 <code>dist</code> 子目錄。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;serve&quot;: &quot;live-server dist/ --port=9090&quot;</span><br></pre></td></tr></table></figure><p><code>live-server</code> 套件有三個功能。</p><blockquote><ul><li>啟動一個HTTP服務器，展示指定目錄的 <code>index.html</code> 文件，通過該文件加載各種網路資源，這是 <code>file://</code> 協議做不到的。</li><li>添加自動刷新功能。只要指定目錄之中，文件有任何變化，它就會刷新頁面。</li><li><code>npm run serve</code> 命令執行以後，自動打開瀏覽器。</li></ul></blockquote><p>以前，上面三個功能需要三個套件來完成： <code>http-server</code>、<code>live-reload</code> 和 <code>opener</code>，現在只要 <code>live-server</code> 一個套件就夠了。</p></li><li><h4 id="test-腳本命令"><a href="#test-腳本命令" class="headerlink" title="test 腳本命令"></a>test 腳本命令</h4><p><code>test</code> 腳本命令用於執行測試。<br>下面命令規定，執行測試時，運行 <code>lint</code> 腳本，檢查腳本之中的語法錯誤。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;test&quot;: &quot;npm-run-all test:*&quot;,</span><br><span class="line">&quot;test:lint&quot;: &quot;sass-lint --verbose --config .sass-lint.yml src/sass/*&quot;</span><br></pre></td></tr></table></figure></li><li><h4 id="prod-腳本命令"><a href="#prod-腳本命令" class="headerlink" title="prod 腳本命令"></a>prod 腳本命令</h4><p><code>prod</code> 腳本命令，規定進入生產環境時需要做的處理。<br>下面命令將sass文件轉為css文件，並加上瀏覽器前綴。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;prod&quot;: &quot;npm-run-all prod:*&quot;,</span><br><span class="line">&quot;prod:sass&quot;: &quot;node-sass --output-style compressed src/sass/base.scss src/css/prod/hoodie.min.css&quot;,</span><br><span class="line">&quot;prod:autoprefix&quot;: &quot;postcss --use autoprefixer --autoprefixer.browsers &quot;&gt; 5%&quot; --output src/css/prod/hoodie.min.css src/css/prod/hoodie.min.css&quot;</span><br></pre></td></tr></table></figure></li><li><h4 id="help-腳本命令"><a href="#help-腳本命令" class="headerlink" title="help 腳本命令"></a>help 腳本命令</h4><p>下面命令之中，<code>markdown-chalk</code> 套件用於將指定的markdown文件，轉為彩色文本顯示在終端之中。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;help&quot;: &quot;markdown-chalk --input DEVELOPMENT.md&quot;</span><br></pre></td></tr></table></figure></li><li><h4 id="docs-腳本命令"><a href="#docs-腳本命令" class="headerlink" title="docs 腳本命令"></a>docs 腳本命令</h4><p><code>docs</code> 腳本命令用於生成文檔。<br>下面命令使用 <code>kss-node</code> 套件，提供源碼的註釋生成markdown格式的文檔。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;docs&quot;: &quot;kss-node --source src/sass --homepage ../../styleguide.md&quot;</span><br></pre></td></tr></table></figure></li></ol></li><li><h3 id="pre-和-post-腳本"><a href="#pre-和-post-腳本" class="headerlink" title="pre- 和 post- 腳本"></a>pre- 和 post- 腳本</h3><p><code>npm run</code> 為每條命令提供了 <code>pre-</code> 和 <code>post-</code> 兩個鉤子(hook)。<br>以 <code>npm run lint</code> 為例，執行這條命令之前，npm會先查看有沒有定義prelint和postlint兩個鉤子，<br>如果有的話，就會先執行 <code>npm run prelint</code>，然後執行 <code>npm run lint</code>，最後執行 <code>npm run postlint</code>。<br>下面代碼是一個 <code>package.json</code> 文件的例子。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;myproject&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span>: <span class="string">&quot;latest&quot;</span></span><br><span class="line">    <span class="string">&quot;karma&quot;</span>: <span class="string">&quot;latest&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;lint&quot;</span>: <span class="string">&quot;eslint --cache --ext .js --ext .jsx src&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;karma start --log-leve=error karma.config.js --single-run=true&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;pretest&quot;</span>: <span class="string">&quot;npm run lint&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;posttest&quot;</span>: <span class="string">&quot;echo &#x27;Finished running tests&#x27;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果執行過程出錯，就不會執行排在後面的腳本，即如果prelint腳本執行錯誤，就不會接著執行lint和postlint腳本。</p><p>如果執行 <code>npm test</code>，會按下面的順序執行相應的命令。</p><ol><li>pretest</li><li>test</li><li>posttest</li></ol><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;karma start&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;test:lint&quot;</span>: <span class="string">&quot;eslint . --ext .js --ext .jsx&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;pretest&quot;</span>: <span class="string">&quot;npm run test:lint&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一些常見的 <code>pre-</code> 和 <code>post-</code> 腳本。</p><table><thead><tr><th>腳本</th><th>說明</th></tr></thead><tbody><tr><td><code>prepublish</code></td><td>發佈一個套件前執行。</td></tr><tr><td><code>postpublish</code></td><td>發佈一個套件後執行。</td></tr><tr><td><code>preinstall</code></td><td>執行 <code>npm install</code> 命令前執行。</td></tr><tr><td><code>postinstall</code></td><td>執行 <code>npm install</code> 命令後執行。</td></tr><tr><td><code>preuninstall</code></td><td>卸載一個套件前執行。</td></tr><tr><td><code>postuninstall</code></td><td>卸載一個套件後執行。</td></tr><tr><td><code>preversion</code></td><td>更改套件版本前執行。</td></tr><tr><td><code>postversion</code></td><td>更改套件版本後執行。</td></tr><tr><td><code>pretest</code></td><td>運行 <code>npm run test</code> 命令前執行。</td></tr><tr><td><code>posttest</code></td><td>運行 <code>npm run test</code> 命令後執行。</td></tr><tr><td><code>prestop</code></td><td>運行 <code>npm run stop</code> 命令前執行。</td></tr><tr><td><code>poststop</code></td><td>運行 <code>npm run stop</code> 命令後執行。</td></tr><tr><td><code>prestart</code></td><td>運行 <code>npm run start</code> 命令前執行。</td></tr><tr><td><code>poststart</code></td><td>運行 <code>npm run start</code> 命令後執行。</td></tr><tr><td><code>prerestart</code></td><td>運行 <code>npm run restart</code> 命令前執行。</td></tr><tr><td><code>postrestart</code></td><td>運行 <code>npm run restart</code> 命令後執行。</td></tr></tbody></table><p>對於 <code>npm run restart</code>命令，如果沒有設置 <code>restart</code> 腳本，<code>prerestart</code> 和 <code>postrestart</code> 會依次執行stop和start腳本。</p><p>也支持Git相關的鉤子。下面以 <a href="https://github.com/typicode/husky">husky</a> 套件為例。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm i husky -D</span><br></pre></td></tr></table></figure><p>安裝以後，就能在 <code>package.json</code> 添加 <code>precommit</code>、<code>prepush</code> 等鉤子。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;lint&quot;</span>: <span class="string">&quot;eslint yourJsFiles.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;precommit&quot;</span>: <span class="string">&quot;npm run test &amp;&amp; npm run lint&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;prepush&quot;</span>: <span class="string">&quot;npm run test &amp;&amp; npm run lint&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;...&quot;</span>: <span class="string">&quot;...&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>類似作用的套件還有 <code>pre-commit</code>、<code>precommit-hook</code> 等。</p></li><li><h3 id="內部變數"><a href="#內部變數" class="headerlink" title="內部變數"></a>內部變數</h3><p>scripts字段可以使用一些內部變數，主要是package.json的各種字段。<br>不區分大小寫，Node會優先選擇小寫版本。<br>在npm-scripts內部，npm將設置自己的環境變數。<br>例如：package.json的內容是 <code>&#123;&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;&#125;</code>，<br>那麼變數 <code>npm_package_name</code> 的值是foo，變數 <code>npm_package_version</code> 的值是1.2.5。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;bundle&quot;</span>: <span class="string">&quot;mkdir -p build/$npm_package_version/&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>運行 <code>npm run bundle</code> 以後，將會生成 <code>build/1.2.5/</code> 子目錄。</p><p><code>config</code> 字段也可以用於設置內部字段。<br>下面代碼中，變數 <code>npm_package_config_reporter</code> 對應的就是reporter。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;fooproject&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;config&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;reporter&quot;</span>: <span class="string">&quot;xunit&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;mocha test/ --reporter $npm_package_config_reporter&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><p>npm的通配符的規則如下：</p><table><thead><tr><th>通配符</th><th>說明</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配0個或多個字符。</td></tr><tr><td><code>?</code></td><td>匹配1個字符。</td></tr><tr><td><code>[...]</code></td><td>匹配某個範圍的字符。如果該範圍的第一個字符是 <code>!</code> 或 <code>^</code>，則匹配不在該範圍的字符。</td></tr><tr><td><code>!(pattern|pattern|pattern)</code></td><td>匹配任何不符合給定的模式。</td></tr><tr><td><code>?(pattern|pattern|pattern)</code></td><td>匹配0個或1個給定的模式。</td></tr><tr><td><code>+(pattern|pattern|pattern)</code></td><td>匹配1個或多個給定的模式。</td></tr><tr><td><code>*(a|b|c)</code></td><td>匹配0個或多個給定的模式。</td></tr><tr><td><code>@(pattern|pat*|pat?erN)</code></td><td>只匹配給定模式之一。</td></tr><tr><td><code>**</code></td><td>如果出現在路徑部分，表示0個或多個子目錄。</td></tr></tbody></table></li></ul></li></ul><ul><li><h2 id="npm-link"><a href="#npm-link" class="headerlink" title="npm link"></a>npm link</h2><p>開發NPM套件的時候，有時會希望，邊開發邊試用，比如本地調適的時候， <code>require(&#39;packageName&#39;)</code> 會自動加載本地開發中的套件。<br>Node規定，使用一個套件時，需要將其安裝到全域的或項目的 <code>node_modules</code> 目錄之中。<br>對於開發中的套件，解決方法就是在全域的 <code>node_modules</code> 目錄之中，生成一個符號連結，指向套件的本地目錄。<br><code>npm link</code> 能自動建立這個符號連結。<br>假設，開發一個套件 <code>myModule</code>，目錄為 <code>src/myModule</code>，<br>開發項目為 <code>myProject</code> 要用到這個套件，項目目錄為 <code>src/myProject</code>。</p><p>思路：</p><ul><li>先在全域套件目錄中，新增一個文件指向開發中的套件。<br><code>/path/to/global/node_modules/myModule -&gt; src/myModule</code></li><li>將開發項目要用到的套件，指向全域套件目錄<br><code>src/myProject/node_modules/myModule -&gt; /path/to/global/node_modules/myModule</code></li><li>就可在開發項目中，加載該套件了<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myModule = <span class="built_in">require</span>(<span class="string">&#x27;myModule&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li>這樣一來，<code>myModule</code>的任何變化，都可以直接反映在 <code>myProject</code> 項目之中，但是相對的在 <code>myProject</code> 目錄中對 <code>myModule</code> 的修改，也會反映到套件的源碼中。</li><li>若不再需要該套件時，可以在項目目錄中執行 <code>npm unlink</code>，刪除符號連結。</li></ul><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm link</code></td><td>在套件目錄 <code>src/myModule</code>執行命令，會在NPM的全域套件目錄內，<br>生成一個符號連結文件，該文件的名稱就是 <code>package.json</code> 文件中指定的套件名。</td></tr><tr><td><code>npm link myModule</code></td><td>在項目目錄 <code>src/myProject</code>執行命令，並指定套件名，<br>就可以全域調用 <code>myModule</code> 套件了。</td></tr><tr><td><code>npm unlink</code></td><td>在項目目錄 <code>src/myProject</code>執行命令，刪除符號連結。</td></tr></tbody></table></li><li><h2 id="npm-bin"><a href="#npm-bin" class="headerlink" title="npm bin"></a>npm bin</h2><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm bin</code></td><td>顯示相對於當前目錄的，Node套件的可執行腳本所在目錄 (即 <code>.bin</code> 目錄)。</td></tr></tbody></table></li><li><h2 id="npm-adduser"><a href="#npm-adduser" class="headerlink" title="npm adduser"></a>npm adduser</h2><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm adduser</code></td><td>向 <a href="https://www.npmjs.com/">npmjs.com</a> 申請用戶名。</td></tr><tr><td><code>npm login</code></td><td>已經註冊過，就可以此命令登錄。</td></tr></tbody></table></li><li><h2 id="npm-publish"><a href="#npm-publish" class="headerlink" title="npm publish"></a>npm publish</h2><p>用於將當前套件發佈到 <a href="https://www.npmjs.com/">npmjs.com</a>。<br>執行 <code>npm publish</code> 之前，需先執行 <code>npm adduser</code> 向 <a href="https://www.npmjs.com/">npmjs.com</a> 申請用戶名，<br>並執行 <code>npm login</code> 登錄。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm publish</code></td><td>登錄後，就可以使用 <code>npm publish</code> 命令發佈。</td></tr><tr><td><code>npm publish --tag beta</code></td><td>如果當前套件是一個beta版，發佈的時候需要使用 <code>tag</code> 參數，<br>將其發佈到指定標籤，默認發佈標籤是 <code>latest</code>。</td></tr></tbody></table></li><li><h2 id="npm-deprecate"><a href="#npm-deprecate" class="headerlink" title="npm deprecate"></a>npm deprecate</h2><p>如果想廢棄某個版本的套件，可以使用 <code>npm deprecate</code> 命令。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm deprecate &lt;packageName&gt;@&quot;&lt;0.2.3&quot; &quot;critical bug fixed in v0.2.3&quot;</code></td><td>小於 <code>0.2.3</code> 版本的套件的 <code>package.json</code> ，都會在命令行顯示警告。</td></tr></tbody></table></li><li><h2 id="npm-owner"><a href="#npm-owner" class="headerlink" title="npm owner"></a>npm owner</h2><p>套件的維護者可以發佈新版本。 <code>npm owner</code> 用於管理套件的維護者。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm owner ls &lt;packageName&gt;</code></td><td>列出指定套件的維護者。</td></tr><tr><td><code>npm owner add &lt;user&gt; &lt;packageName&gt;</code></td><td>新增維護者。</td></tr><tr><td><code>npm owner rm &lt;user&gt; &lt;packageName&gt;</code></td><td>刪除維護者。</td></tr></tbody></table></li><li><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><ul><li><h3 id="npm-home-、-npm-repo"><a href="#npm-home-、-npm-repo" class="headerlink" title="npm home 、 npm repo"></a>npm home 、 npm repo</h3><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm home &lt;packageName&gt;</code></td><td>打開一個套件的主頁。</td></tr><tr><td><code>npm repo &lt;packageName&gt;</code></td><td>打開一個套件的代碼倉庫。</td></tr></tbody></table></li><li><h3 id="npm-outdated"><a href="#npm-outdated" class="headerlink" title="npm outdated"></a>npm outdated</h3><p>會列出：</p><ul><li>當前版本 (current version)</li><li>應當安裝的版本 (wanted version)</li><li>最新發佈的版本 (latest version)</li></ul><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm outdated</code></td><td>檢查當前項目所依賴的套件，是否已經有新版本。</td></tr></tbody></table></li><li><h3 id="npm-prune"><a href="#npm-prune" class="headerlink" title="npm prune"></a>npm prune</h3><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm prune</code></td><td>檢查<code>node_modules</code>，是否有<code>package.json</code>裡面沒有提到的套件，輸出在命令行中。</td></tr></tbody></table></li><li><h3 id="npm-shrinkwrap"><a href="#npm-shrinkwrap" class="headerlink" title="npm shrinkwrap"></a>npm shrinkwrap</h3><p>運行該命令後，會在當前項目的根目錄下生成一個 <code>npm-shrinkwrap.json</code> 文件，內容是 <code>node_modules</code> 目錄下所有已經安裝的套件，以及它們的精確版本。<br>下次運行 <code>npm install</code> 命令時，npm 發現當前目錄下有 <code>npm-shrinkwrap.json</code> 文件，就會只安裝裡面提到的模塊，且版本也會保持一致。</p><table><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td><code>npm shrinkwrap</code></td><td>鎖定當前項目的依賴套件的版本。</td></tr></tbody></table></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> NPM </tag>
            
            <tag> 速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_NVM_Windows</title>
      <link href="2021/10/27/%E7%AD%86%E8%A8%98-NVM-Windows/"/>
      <url>2021/10/27/%E7%AD%86%E8%A8%98-NVM-Windows/</url>
      
        <content type="html"><![CDATA[<ul><li><h2 id="NVM-Node-Version-Manager-for-Windows"><a href="#NVM-Node-Version-Manager-for-Windows" class="headerlink" title="NVM (Node Version Manager) for Windows"></a>NVM (Node Version Manager) for Windows</h2><p>是 Node.js 的版本管理工具，<br>因為不同的專案可能使用不同 Node.js 版本，在同一台主機上安裝多個版本環境時，<br>可利用 NVM 來管理 Node.js 的版本控制和快速切換。</p><a id="more"></a><p>安裝流程：</p><ol><li>卸載(移除)原有的node相關目錄、檔案 (含npm、node)</li><li>安裝NVM</li><li>使用NVM 安裝Node指定版本</li></ol></li></ul><ul><li><h3 id="卸載-移除-原有的node相關目錄、檔案-含npm、node"><a href="#卸載-移除-原有的node相關目錄、檔案-含npm、node" class="headerlink" title="卸載(移除)原有的node相關目錄、檔案 (含npm、node)"></a>卸載(移除)原有的node相關目錄、檔案 (含npm、node)</h3><ul><li>在移除軟體中，卸載node.js</li><li>在環境變數中刪除所有與node相關的路徑</li><li>刪除以下路徑的文件<blockquote><p>C:\Program Files (x86)\nodejs<br>C:\Program Files\nodejs<br>C:\Users{User}\AppData\Roaming\npm<br>C:\Users{User}\AppData\Roaming\npm-cache<br>C:\Users{User}\node_modules (電腦上的路徑)</p></blockquote></li></ul></li><li><h3 id="安裝NVM"><a href="#安裝NVM" class="headerlink" title="安裝NVM"></a>安裝NVM</h3><p>到<a href="https://github.com/coreybutler/nvm-windows/releases">GitHub</a>的項目下載地址，<br>選擇下載 <code>nvm-setup.zip</code>，解壓縮後開啟安裝程式即可。<br>找到 install.cmd 檔案並執行設定Path，直接按Enter進行設定</p><h4 id="確認是否安裝成功"><a href="#確認是否安裝成功" class="headerlink" title="確認是否安裝成功"></a>確認是否安裝成功</h4>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm version</span></span><br></pre></td></tr></table></figure><ul><li>查詢結果<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 1.1.7</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="使用NVM-安裝Node指定版本"><a href="#使用NVM-安裝Node指定版本" class="headerlink" title="使用NVM 安裝Node指定版本"></a>使用NVM 安裝Node指定版本</h3><ul><li><h4 id="查看可安裝的nodejs版本"><a href="#查看可安裝的nodejs版本" class="headerlink" title="查看可安裝的nodejs版本"></a>查看可安裝的nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm list available</span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看已安裝的nodejs版本"><a href="#查看已安裝的nodejs版本" class="headerlink" title="查看已安裝的nodejs版本"></a>查看已安裝的nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm list</span></span><br></pre></td></tr></table></figure><ul><li>如果是第一次安装，使用該命令結果如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">No installations recognized.</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="安裝指定Nodejs版本"><a href="#安裝指定Nodejs版本" class="headerlink" title="安裝指定Nodejs版本"></a>安裝指定Nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm install &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="切換到指定Nodejs版本"><a href="#切換到指定Nodejs版本" class="headerlink" title="切換到指定Nodejs版本"></a>切換到指定Nodejs版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm use &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="設定預設使用該版本的node-避免下次重啟後又恢復預設"><a href="#設定預設使用該版本的node-避免下次重啟後又恢復預設" class="headerlink" title="設定預設使用該版本的node 避免下次重啟後又恢復預設"></a>設定預設使用該版本的node 避免下次重啟後又恢復預設</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm <span class="built_in">alias</span> default &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="刪除指定版本"><a href="#刪除指定版本" class="headerlink" title="刪除指定版本"></a>刪除指定版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> nvm uninstall &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> 筆記 </tag>
            
            <tag> NVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_NVM_Mac</title>
      <link href="2021/10/27/%E7%AD%86%E8%A8%98-NVM-Mac/"/>
      <url>2021/10/27/%E7%AD%86%E8%A8%98-NVM-Mac/</url>
      
        <content type="html"><![CDATA[<ul><li><h2 id="NVM-Node-Version-Manager-for-Mac"><a href="#NVM-Node-Version-Manager-for-Mac" class="headerlink" title="NVM (Node Version Manager) for Mac"></a>NVM (Node Version Manager) for Mac</h2><p>是 Node.js 的版本管理工具，<br>因為不同的專案可能使用不同 Node.js 版本，在同一台主機上安裝多個版本環境時，<br>可利用 NVM 來管理 Node.js 的版本控制和快速切換。</p><a id="more"></a><p>安裝流程：</p><ol><li>卸載(移除)原有的node相關目錄、檔案 (含npm、node)</li><li>安裝NVM</li><li>使用NVM 安裝Node指定版本</li></ol></li></ul><ul><li><h3 id="卸載-移除-原有的node相關目錄、檔案-含npm、node"><a href="#卸載-移除-原有的node相關目錄、檔案-含npm、node" class="headerlink" title="卸載(移除)原有的node相關目錄、檔案 (含npm、node)"></a>卸載(移除)原有的node相關目錄、檔案 (含npm、node)</h3><p>NVM不支援透過 <code>Brew (Homebrew)</code> 安裝的nodejs版本，<br>若先前已單獨安裝Node，請先刪除乾淨，再重新安裝。</p><ul><li>每次打開終端機都會顯示：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node: command not found.</span><br><span class="line">npm: command not found.</span><br></pre></td></tr></table></figure></li></ul><p>依原先nodejs安裝方式，選擇不同卸載。</p><ul><li><h5 id="手動安裝-直接從官網下載"><a href="#手動安裝-直接從官網下載" class="headerlink" title="手動安裝 (直接從官網下載)"></a>手動安裝 (直接從官網下載)</h5><ul><li><p>刪除 <code>/usr/local/lib/</code> 目錄中的 <code>node</code> 與 <code>node_modules</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/include/</code> 目錄中的 <code>node</code> 與 <code>node_modules</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/bin/</code> 目錄中的 <code>node</code>、<code>node_modules</code>、<code>node-gyp</code> 目錄。</p></li><li><p>刪除個人目錄下的 <code>.npmrc</code> 文件。 <small>(這是npm的設置文件，若計畫以後要重新安裝nodejs，可以不刪)</small></p></li><li><p>刪除個人目錄下的 <code>.npm</code> 文件目錄。</p></li><li><p>刪除個人目錄下的 <code>.node-gyp</code> 目錄。</p></li><li><p>刪除個人目錄下的 <code>.node_repl_history</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/share/man/man1/</code> 中所有與 <code>node</code> 和 <code>npm</code> 有關的文件。 <small>(node*, npm*)</small></p></li><li><p>刪除 <code>/usr/local/lib/dtrace/</code> 中的 <code>node.d</code>。</p></li><li><p>刪除 <code>/opt/local/bin/</code> 中的 <code>node</code> 目錄。</p></li><li><p>刪除 <code>/opt/local/include/</code> 中的 <code>node</code> 目錄。</p></li><li><p>刪除 <code>/opt/local/lib/</code> 目錄中的 <code>node_modules</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/share/doc/</code> 目錄中的 <code>node</code> 目錄。</p></li><li><p>刪除 <code>/usr/local/share/systemtap/tapset/</code> 目錄中的 <code>node.stp</code>。<br>以上目錄依次刪除就好，命令<code>rm -rf &lt;path&gt;</code>，刪除命令比較危險，請格外小心輸入。</p></li><li><p>其他方法 使用命令刪除</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rm -rf ~/.nvm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rm -rf ~/.npm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rm -rf ~/.bower</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或使用以下命令 配合上方手動刪除 一個一個刪</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo rm -rf /usr/<span class="built_in">local</span>/lib/...</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="通過-Homebrew-安裝"><a href="#通過-Homebrew-安裝" class="headerlink" title="通過 Homebrew 安裝"></a>通過 Homebrew 安裝</h5><p>若原先使用 <code>Homebrew</code> 安裝的，可另用反向命令移除。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew uninstall node</span></span><br></pre></td></tr></table></figure></li><li><h5 id="通過-NVM-Node-Version-Manager-安裝"><a href="#通過-NVM-Node-Version-Manager-安裝" class="headerlink" title="通過 NVM (Node Version Manager) 安裝"></a>通過 NVM (Node Version Manager) 安裝</h5><p>若想刪除某一版本的 <code>nodejs</code>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm uninstall v7.7.4</span></span><br></pre></td></tr></table></figure></li><li><h5 id="未知的安裝方式"><a href="#未知的安裝方式" class="headerlink" title="未知的安裝方式"></a>未知的安裝方式</h5><p>另用which命令，由安裝路徑查找是哪一種安裝方式：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">which</span> node</span></span><br></pre></td></tr></table></figure><blockquote><p>ex：<code>/Users/scott/.nvm/versions/node/v4.1.2/bin/node</code> <small>(由路徑可得知為nvm安裝)</small></p></blockquote></li></ul></li><li><h3 id="安裝NVM"><a href="#安裝NVM" class="headerlink" title="安裝NVM"></a>安裝NVM</h3><ul><li>請先 前往 <a href="https://github.com/nvm-sh/nvm/releases">https://github.com/nvm-sh/nvm/releases</a> 確認目前nvm最新版本</li><li>根據最新版本資訊，使用 <code>cURL</code> 或 <code>wget</code> 指令安裝腳本 <small>(請依據最新版本號更改以下腳本路徑)</small><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span></span><br></pre></td></tr></table></figure>或<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span></span><br></pre></td></tr></table></figure></li><li>NVM已自動加入環境變數<br>腳本已clone <code>~/.nvm</code> 到 配置文件<br>(<code>~/.bash_profile</code>、<code>~/.zshrc</code>、<code>~/.profile</code> 或 <code>~/.bashrc</code> )<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class="line">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure></li><li>確認是否安裝完成<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm -v</span></span><br></pre></td></tr></table></figure>若還是無法使用 nvm ，可執行下面指令立即應用ZSH的設定<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> .zshrc</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h3 id="使用NVM-安裝Node及相關指令"><a href="#使用NVM-安裝Node及相關指令" class="headerlink" title="使用NVM 安裝Node及相關指令"></a>使用NVM 安裝Node及相關指令</h3><ul><li><h4 id="查看所有指令"><a href="#查看所有指令" class="headerlink" title="查看所有指令"></a>查看所有指令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm --<span class="built_in">help</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看-Nodejs"><a href="#查看-Nodejs" class="headerlink" title="查看 Nodejs"></a>查看 Nodejs</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote                       <span class="comment"># 查看可用的版本</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote 12                    <span class="comment"># 加上版號可縮小搜尋</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote --lts                 <span class="comment"># 列出可用的LTS版</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm ls-remote --lts | grep Latest   <span class="comment"># 列出可用的最新LTS版</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="安裝-Nodejs"><a href="#安裝-Nodejs" class="headerlink" title="安裝 Nodejs"></a>安裝 Nodejs</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm install latest          <span class="comment"># 安裝最新版本</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm install &lt;version&gt;       <span class="comment"># 安裝指定版本 e.g.: nvm install 12</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm install --lts           <span class="comment"># 安裝長期支援版本 (LTS： Long term support)</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看可用已安裝版本"><a href="#查看可用已安裝版本" class="headerlink" title="查看可用已安裝版本"></a>查看可用已安裝版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm ls</span></span><br></pre></td></tr></table></figure></li><li><h4 id="切換-Nodejs-版本"><a href="#切換-Nodejs-版本" class="headerlink" title="切換 Nodejs 版本"></a>切換 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm use &lt;version&gt;       <span class="comment"># 使用指定版本 e.g.: nvm use 12</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm use stable          <span class="comment"># 使用穩定版本</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看目前使用的-Nodejs-版本"><a href="#查看目前使用的-Nodejs-版本" class="headerlink" title="查看目前使用的 Nodejs 版本"></a>查看目前使用的 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm use node</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或 $ nvm current</span></span><br></pre></td></tr></table></figure></li><li><h4 id="直接執行-Nodejs"><a href="#直接執行-Nodejs" class="headerlink" title="直接執行 Nodejs"></a>直接執行 Nodejs</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm run node              <span class="comment"># 執行目前版本</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm run node &lt;version&gt;    <span class="comment"># 指定要直接執行的版本  或 $ nvm exec &lt;version&gt; node</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看-Nodejs-安裝路徑"><a href="#查看-Nodejs-安裝路徑" class="headerlink" title="查看 Nodejs 安裝路徑"></a>查看 Nodejs 安裝路徑</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">which</span> &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="設定預設啟用的-Nodejs-版本"><a href="#設定預設啟用的-Nodejs-版本" class="headerlink" title="設定預設啟用的 Nodejs 版本"></a>設定預設啟用的 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">alias</span> default &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="設定版本別名"><a href="#設定版本別名" class="headerlink" title="設定版本別名"></a>設定版本別名</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">alias</span> &lt;name&gt; &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="查看所有別名配對"><a href="#查看所有別名配對" class="headerlink" title="查看所有別名配對"></a>查看所有別名配對</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm <span class="built_in">alias</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可在以下指令中使用別名</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nvm install、 use、 run、 <span class="built_in">exec</span>、 <span class="built_in">which</span> ...等。</span></span><br></pre></td></tr></table></figure></li><li><h4 id="移除已安裝的-Nodejs-版本"><a href="#移除已安裝的-Nodejs-版本" class="headerlink" title="移除已安裝的 Nodejs 版本"></a>移除已安裝的 Nodejs 版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm uninstall &lt;version&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 管理工具 </tag>
            
            <tag> 筆記 </tag>
            
            <tag> NVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[工具]_normalize.css</title>
      <link href="2021/10/26/%E5%B7%A5%E5%85%B7-normalize-css/"/>
      <url>2021/10/26/%E5%B7%A5%E5%85%B7-normalize-css/</url>
      
        <content type="html"><![CDATA[<p>normalize.css 最大的特色就是保留原本預設 HTML 標籤的樣式，<br>僅針對不同瀏覽器與各版本間不相容的標籤進行些微調整。<br>目的在一開始將各瀏覽器之間的差異進行調整。</p><a id="more"></a><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Document 文件</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 修正所有瀏覽器中的行高。</span></span><br><span class="line"><span class="comment"> * 2. 避免在 iOS 中，因螢幕方向的改變而調整字型大小。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">-webkit-text-size-adjust</span>: <span class="number">100%</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Sections 段落</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 移除所有瀏覽器中的 margin。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 中一致地呈現 `main` 元素。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome、Firefox 與 Safari 瀏覽器中，修正寫在 `section` 與 `article` 內之 `h1` 元素</span></span><br><span class="line"><span class="comment"> * 的字型大小與邊寬。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.67em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Grouping content 群組內容</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 Firefox 中新增正確的盒框尺寸。</span></span><br><span class="line"><span class="comment"> * 2. 在 Edge 與 IE 中顯示 overflow。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">hr</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: content-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在所有瀏覽器中，修正繼承與字型大小的調整。</span></span><br><span class="line"><span class="comment"> * 2. 在所有瀏覽器中，修正突兀的 `em` 字型大小單位。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">pre</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Text-level semantics 文本層級語意</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE10 中，移除套用在 active link 上的灰色背景。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 去除 Chrome 57- 的底部邊框。</span></span><br><span class="line"><span class="comment"> * 2. 在 Chrome、Edge、IE、Opera 和 Safari 瀏覽器中，新增正確的文本修飾。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">abbr</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline dotted; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome、Edge 和 Safari 瀏覽器中，新增正確的字型粗細。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在所有瀏覽器中，修正字型大小的繼承與縮放。</span></span><br><span class="line"><span class="comment"> * 2. 在所有瀏覽器中，修正突兀的 `em` 字型大小單位。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">kbd</span>,</span><br><span class="line"><span class="selector-tag">samp</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在所有瀏覽器中，新增正確的字型大小。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">small</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 避免 `sub` 與 `sup` 元素影響到所有瀏覽器中的行高。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sub</span>,</span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sub</span> &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">0.25em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Embedded content 嵌入內容</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE10 與之前瀏覽器中，移除連結中影像的邊框。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Forms 表單</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在所有瀏覽器中，調整字型樣式 (視需要調整)。</span></span><br><span class="line"><span class="comment"> * 2. 在 Firefox 和 Safari 中，移除邊距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-tag">optgroup</span>,</span><br><span class="line"><span class="selector-tag">select</span>,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: inherit; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 中顯示 overflow</span></span><br><span class="line"><span class="comment"> * 1. 在 Edge 中顯示 overflow</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Edge、Firefox 與 IE 中，移除字型形變的繼承。</span></span><br><span class="line"><span class="comment"> * 1. 在 Firefox 中，移除字型形變的繼承。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">select</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 iOS 和 Safari 中，修正無法調整可點按類型樣式的問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: button;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Firefox 中，移除內邊框與內距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">::-moz-focus-inner</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span><span class="selector-pseudo">::-moz-focus-inner</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span><span class="selector-pseudo">::-moz-focus-inner</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">::-moz-focus-inner</span> &#123;</span><br><span class="line">  <span class="attribute">border-style</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 回存之前規則未設定的 focus 樣式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:-moz-focusring</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span><span class="selector-pseudo">:-moz-focusring</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span><span class="selector-pseudo">:-moz-focusring</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:-moz-focusring</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">1px</span> dotted ButtonText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Firefox 中，修正 padding。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.35em</span> <span class="number">0.75em</span> <span class="number">0.625em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 Edge 和 IE 中，修正文字換行。</span></span><br><span class="line"><span class="comment"> * 2. 在 IE 中，修正由 `fieldset` 元素繼承而來的顏色。</span></span><br><span class="line"><span class="comment"> * 3. 在所有瀏覽器中，移除內距，讓開發者不會因將 `fieldset` 設為0而造成問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">color</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">display</span>: table; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 3 */</span></span><br><span class="line">  <span class="attribute">white-space</span>: normal; <span class="comment">/* 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome、Firefox 和 Opera 中，新增正確的垂直對齊。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">progress</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 10+ 中，刪除預設的垂直捲軸。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 IE10 與之前的瀏覽器中，新增正確的盒框大小。</span></span><br><span class="line"><span class="comment"> * 2. 在 IE10 與之前的瀏覽器中，移除內距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;radio&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 Chrome 中，為遞增或遞減按鈕修正游標樣式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;number&quot;</span>]</span><span class="selector-pseudo">::-webkit-inner-spin-button</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;number&quot;</span>]</span><span class="selector-pseudo">::-webkit-outer-spin-button</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 Chrome 和 Safari 中，修正突兀的外觀。</span></span><br><span class="line"><span class="comment"> * 2. 在 Safari 中，修正外框樣式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: textfield; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">outline-offset</span>: -<span class="number">2px</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 macOS 上的 Chrome 和 Safari 中，移除內距。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span><span class="selector-pseudo">::-webkit-search-decoration</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 在 iOS 和 Safari 中，修正無法調整可點按類型樣式的問題。</span></span><br><span class="line"><span class="comment"> * 2. 在 Safari 中，將字型屬性改為 `inherit`。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">::-webkit-file-upload-button</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: button; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Interactive 互動</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 在 Edge、IE 10+ 和 Firefox 中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">details</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 在所有瀏覽器中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">summary</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: list-item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Misc 雜項</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 10+ 中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">template</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 IE 10 中，新增正確的 display。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]_CSS重構</title>
      <link href="2021/09/18/%E7%AD%86%E8%A8%98-CSS%E9%87%8D%E6%A7%8B/"/>
      <url>2021/09/18/%E7%AD%86%E8%A8%98-CSS%E9%87%8D%E6%A7%8B/</url>
      
        <content type="html"><![CDATA[<ul><li><small><a href="http://www.cssrefactoringbook.com/">本書相關範例</a></small></li></ul><h2 id="第一章-重構與架構"><a href="#第一章-重構與架構" class="headerlink" title="第一章 - 重構與架構"></a>第一章 - <em>重構與架構</em></h2><ul><li><h3 id="重構-Refactoring"><a href="#重構-Refactoring" class="headerlink" title="重構 (Refactoring)"></a>重構 (Refactoring)</h3><p>是為了讓程式更簡單且更容易複用，在不改變其行為的情況下重寫程式的過程。</p></li><li><h3 id="軟體架構-software-architecture"><a href="#軟體架構-software-architecture" class="headerlink" title="軟體架構 (software architecture)"></a>軟體架構 (software architecture)</h3><p>描述軟體專案中這些零件如何組織在一起的用語，最好的架構通常會在進行編程之前就被規劃妥當。</p><ol><li><h4 id="好架構可預期"><a href="#好架構可預期" class="headerlink" title="好架構可預期"></a>好架構可預期</h4>可預期，意指可以對軟體的運作方式與其組成作為精確的假設。</li><li><h4 id="好架構有助於樣式碼複用"><a href="#好架構有助於樣式碼複用" class="headerlink" title="好架構有助於樣式碼複用"></a>好架構有助於樣式碼複用</h4>樣式碼複用，指樣式碼不需複製就可以在許多地方使用的性質。</li><li><h4 id="好架構易擴充"><a href="#好架構易擴充" class="headerlink" title="好架構易擴充"></a>好架構易擴充</h4>擴充性，具有這種特質的系統，可以很容易地在其上加進新的功能。</li><li><h4 id="好架構易維護"><a href="#好架構易維護" class="headerlink" title="好架構易維護"></a>好架構易維護</h4>維護性，維護性高，調整起現有功能來就比較容易。</li></ol><h4 id="為什麼重構？"><a href="#為什麼重構？" class="headerlink" title="為什麼重構？"></a>為什麼重構？</h4><p>重構能改善軟體架構，一種可將程式碼重新組織成結構性更好的技術，<br>目的是讓程式更容易預期、複用、擴充與維護。</p></li></ul><a id="more"></a><ul><li><h3 id="進行重構的原因"><a href="#進行重構的原因" class="headerlink" title="進行重構的原因"></a>進行重構的原因</h3><ol><li><h4 id="需求改變"><a href="#需求改變" class="headerlink" title="需求改變"></a>需求改變</h4>軟體系統會因為需求改變而演變。</li><li><h4 id="設計不良的架構"><a href="#設計不良的架構" class="headerlink" title="設計不良的架構"></a>設計不良的架構</h4>現實環境的限制下，通常無法有足夠的時間作完整的規劃。</li><li><h4 id="低估難度"><a href="#低估難度" class="headerlink" title="低估難度"></a>低估難度</h4>在專案時程被低估時，開發者寫碼時就不會深思熟慮。</li><li><h4 id="忽視最佳實務"><a href="#忽視最佳實務" class="headerlink" title="忽視最佳實務"></a>忽視最佳實務</h4>需要再重新檢視樣式碼並進行某種程度的重構。</li></ol></li><li><h3 id="何時該重構樣式碼？"><a href="#何時該重構樣式碼？" class="headerlink" title="何時該重構樣式碼？"></a>何時該重構樣式碼？</h3><p>通常在修正錯誤或使用現有樣式碼建置新功能時，就是重構的最佳時機。<br>固定進行的重構會讓程式品質不斷提升。</p></li><li><h3 id="何時「不該」重構樣式碼？"><a href="#何時「不該」重構樣式碼？" class="headerlink" title="何時「不該」重構樣式碼？"></a>何時「不該」重構樣式碼？</h3><p>應該只在能改善架構或為了符合一慣的編程準則時，才進行重構。</p></li><li><h3 id="重構範例"><a href="#重構範例" class="headerlink" title="重構範例"></a>重構範例</h3><blockquote><p><small>單元測試，是一段執行另一段程式的碼，用來檢查該程式是否如預期地運作。<br>為了將可能浮現之任何問題的根本肇因範圍縮小，<br>單元測試應該只用來檢測單一功能的樣式碼。</small></p></blockquote><ul><li><h4 id="JS重構後，通常會出現下列現象："><a href="#JS重構後，通常會出現下列現象：" class="headerlink" title="JS重構後，通常會出現下列現象："></a>JS重構後，通常會出現下列現象：</h4><ul><li>函式數量比之前更多。</li><li>單元測試比之前更多。</li><li>每個函式都只做一件特定的工作。</li><li>每個函式都有一個相對應的單元測試。</li><li>函式可互相搭配以進行更複雜的計算。</li></ul></li><li><h4 id="CSS重構後，會出現下列現象："><a href="#CSS重構後，會出現下列現象：" class="headerlink" title="CSS重構後，會出現下列現象："></a>CSS重構後，會出現下列現象：</h4><ul><li>抽離行內CSS有助於提高複用性 (reusability)。</li><li>功能區隔 (樣式與結構)，讓樣式碼的可讀性提高。</li><li>回歸測試 (regression testing) 可透過網頁瀏覽器手動的方式，或透過比較截圖與重構後介面的方式來進行。</li></ul></li></ul></li></ul><hr><h2 id="第二章-暸解串接"><a href="#第二章-暸解串接" class="headerlink" title="第二章 - 暸解串接"></a>第二章 - <em>暸解串接</em></h2><ul><li><h3 id="串接-cascade"><a href="#串接-cascade" class="headerlink" title="串接 (cascade)"></a>串接 (cascade)</h3>是瀏覽器用來決定樣式如何套用到元素上的方法。</li><li><h3 id="選取器特定度-specificity"><a href="#選取器特定度-specificity" class="headerlink" title="選取器特定度 (specificity)"></a>選取器特定度 (specificity)</h3>是所使用的CSS選取器能多精準地將元素識別出來的一種估測。<br>(a, b, c, d, e)<ul><li>a: !important</li><li>b: inline style</li><li>c: ID選取器</li><li>d: class選取器、屬性選取器、偽類</li><li>e: 類型選取器、偽元素</li></ul></li><li><h3 id="規則集順序"><a href="#規則集順序" class="headerlink" title="規則集順序"></a>規則集順序</h3>CSS規則集在樣式表中的位置。<br>較晚出現的宣告區塊具有較高的優先權。</li></ul><hr><h2 id="第三章-編寫較佳的CSS"><a href="#第三章-編寫較佳的CSS" class="headerlink" title="第三章 - 編寫較佳的CSS"></a>第三章 - <em>編寫較佳的CSS</em></h2><ul><li><h3 id="善用註解"><a href="#善用註解" class="headerlink" title="善用註解"></a>善用註解</h3><p>應該加上註解部份包括：</p><ol><li>檔案內容。</li><li>選取器的相依性與用法等。</li><li>為何要如此宣告 (處理瀏覽器特有渲染方式時特別有用)。</li><li>重構過但已停用的樣式 (deprecated styles) 與不該再使用的樣式。</li></ol><p>CSS只有區塊型註釋 (多行註釋)，以 <code>/*</code> 開頭，以 <code>*/</code> 結尾。</p>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 主要導覽連結的樣式</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><h3 id="一致的結構規則集"><a href="#一致的結構規則集" class="headerlink" title="一致的結構規則集"></a>一致的結構規則集</h3><p>以一致的方式來編寫規則集可讓CSS更容易預期，也更容易被理解。<br>1.寫成一行的CSS規則集</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">selector &#123;property1: value; property2: value; property3: value&#125;</span><br></pre></td></tr></table></figure><p>2.寫成多行的CSS規則及</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">selector</span> &#123;</span><br><span class="line">  property1: value;</span><br><span class="line">  <span class="selector-tag">property2</span>: <span class="selector-tag">value</span>;</span><br><span class="line">  <span class="selector-tag">property3</span>: <span class="selector-tag">value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.大括號另成一行的CSS規則集</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">selector</span></span><br><span class="line">&#123;</span><br><span class="line">  property1: value;</span><br><span class="line">  <span class="selector-tag">property2</span>: <span class="selector-tag">value</span>;</span><br><span class="line">  <span class="selector-tag">property3</span>: <span class="selector-tag">value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="以供應商前綴整理性質"><a href="#以供應商前綴整理性質" class="headerlink" title="以供應商前綴整理性質"></a>以供應商前綴整理性質</h4><p>供應商前綴 (vendor prefix) 是瀏覽器開發商在新的實驗性CSS屬性尚未標準化前，在屬性名稱前加上的標示用字串。</p><ul><li>使用 Blink 或 Webkit 渲染引擎的瀏覽器，(如 Chrome 與 Safari) 會使用 <code>-webkit-</code> 前綴。</li><li>使用 Gecko 渲染引擎的瀏覽器，(如 Firefox) 會使用 <code>-moz</code> 前綴。</li><li>使用 Trident 渲染引擎的瀏覽器，(如 Internet Explorer / Edge)，會使用 <code>-ms</code> 前綴。</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.border-radius</span>&#123;</span><br><span class="line">  <span class="attribute">-ms-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當該屬性標準化後，就不會再加上前綴。<br>這些屬性的排列順序很重要，瀏覽器會以宣告區塊中由上而下的順序來套用這些屬性，<br>沒有辦法辨識的，它就會略過。<br>因為要讓特定瀏覽器的使用者升級其瀏覽器需要一些時間，<br>有前綴與沒有前綴屬性應該都要保留，直到你的網站不支援該瀏覽器為止。</p></li></ul></li><li><h3 id="維持選取器的單純"><a href="#維持選取器的單純" class="headerlink" title="維持選取器的單純"></a>維持選取器的單純</h3><p>有時使用限定選取器是比較洽當的。</p><ul><li><h4 id="高效選取器"><a href="#高效選取器" class="headerlink" title="高效選取器"></a>高效選取器</h4>簡單選取器的效能會比複雜選取器的效能要好。<ul><li><h5 id="由右向左比對選取器"><a href="#由右向左比對選取器" class="headerlink" title="由右向左比對選取器"></a>由右向左比對選取器</h5>瀏覽器會從右自左比對選取器，所以它能排除前頭不符合的元素，不會浪費時間在檢查可能符合的元素。</li><li><h5 id="關鍵選取器"><a href="#關鍵選取器" class="headerlink" title="關鍵選取器"></a>關鍵選取器</h5>選取器最右邊的部份稱為關鍵選取器。<br>只用全域選取器 (<code>*</code>) 不與組合器與其他選取器併用 (<code>body *</code>)。</li></ul></li></ul></li><li><h3 id="切斷CSS與JavaScript的耦合"><a href="#切斷CSS與JavaScript的耦合" class="headerlink" title="切斷CSS與JavaScript的耦合"></a>切斷CSS與JavaScript的耦合</h3><p>  JavaScript中用來選取元素的類別與ID不應該用來為元素指定樣式，<br>  當元素的樣式需要透過JavaScript來調整時，應該透過增刪類別的方式來做。</p><ul><li><h4 id="為JavaScript中的類別與ID名稱之前加上前綴"><a href="#為JavaScript中的類別與ID名稱之前加上前綴" class="headerlink" title="為JavaScript中的類別與ID名稱之前加上前綴"></a>為JavaScript中的類別與ID名稱之前加上前綴</h4>於要用在JavaScript中的類別與ID名稱之前加上<code>js-</code>。</li><li><h4 id="以類別修改元素樣式"><a href="#以類別修改元素樣式" class="headerlink" title="以類別修改元素樣式"></a>以類別修改元素樣式</h4>與其透過JavaScript將樣式加到元素style屬性的方式來調整HTML元素的樣式，應該透過增刪元素類別的方式來進行調整。</li></ul></li><li><h3 id="使用類別"><a href="#使用類別" class="headerlink" title="使用類別"></a>使用類別</h3><p>元素使用唯一ID所能獲得的好處其實可以用唯一的類別名稱來替代，可以有相同的效果。</p><blockquote><p><small>ID是JavaScript中選取元素最快的方法，<br>與在類別名稱前加上 <code>js-</code> 一樣，<br>不用它指定元素的樣式是另一種將CSS與JavaScript分離的好方法。</small></p></blockquote></li><li><h3 id="為類別取有意義的名稱"><a href="#為類別取有意義的名稱" class="headerlink" title="為類別取有意義的名稱"></a>為類別取有意義的名稱</h3><p>能清楚表達意義很重要，但也要注意千萬別做過頭了。<br>e.g.: <code>.female-black-and-white-kitten </code></p><ul><li><h4 id="避免類別過度模組化"><a href="#避免類別過度模組化" class="headerlink" title="避免類別過度模組化"></a>避免類別過度模組化</h4>有意義的類別名稱所表示的是要套用樣式的元素，而不是要被套用到元素上的樣式。 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;font-bold uppercase blue-text margin-bottom-large no-padding&quot;</span>&gt;</span></span><br><span class="line">  Too Many CSS Classes</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>應該避免使用過度模組化的類別，因為它們比行內樣式好不到哪兒去。</li><li><h4 id="建造較佳的盒框"><a href="#建造較佳的盒框" class="headerlink" title="建造較佳的盒框"></a>建造較佳的盒框</h4>盒框模型 (box model) 是瀏覽器決定如何渲染 (render) 一個方型區域的方法，HTML的所有元素基本上都可視為是一個盒框。<ul><li><h5 id="box-sizing-content-box"><a href="#box-sizing-content-box" class="headerlink" title="box-sizing: content-box"></a>box-sizing: <code>content-box</code></h5>盒框元素 height 與 width，不包含 padding 與 border</li><li><h5 id="box-sizing-border-box"><a href="#box-sizing-border-box" class="headerlink" title="box-sizing: border-box"></a>box-sizing: <code>border-box</code></h5>盒框元素 height 與 width，包含 padding 與 border<br>為了一致性，通常只會選一種來使用，可以透過全域選取器來為它設定一個適當的值。</li></ul></li></ul></li></ul><h2 id="第四章-為不同類型的樣式分類"><a href="#第四章-為不同類型的樣式分類" class="headerlink" title="第四章 - 為不同類型的樣式分類"></a>第四章 - <em>為不同類型的樣式分類</em></h2><p>  為不同樣式作分類才能善用串接的特性</p><ul><li><h3 id="樣式分類的重要性"><a href="#樣式分類的重要性" class="headerlink" title="樣式分類的重要性"></a>樣式分類的重要性</h3><p>具語意的 HTML標籤 來描述要呈現的內容。<br>有助於創建出更好的架構，因為將樣式組織成不同的分類能讓樣式碼更容易複用。</p></li><li><h3 id="樣式正規化"><a href="#樣式正規化" class="headerlink" title="樣式正規化"></a>樣式正規化</h3><p>不同的瀏覽器，樣式表集的屬性與值可能略有不同。<br>樣式正規化 (normalizing styles) 用來提供不同元素的屬性預設值。<br>為不同瀏覽器族系所製作的開源正規化樣式 e.g.: <code>normalize.css</code></p></li><li><h3 id="基底樣式"><a href="#基底樣式" class="headerlink" title="基底樣式"></a>基底樣式</h3><p>基底樣式 (base styles) 用來作為其他特定度更高之樣式的建構基點。<br>編寫基底樣式時要注意的原則是，後來添加的樣式應該不需要覆寫太多基底樣式就可以做得出來。</p><ul><li><h4 id="定義基底樣式"><a href="#定義基底樣式" class="headerlink" title="定義基底樣式"></a>定義基底樣式</h4><p>設計樣式時，應考慮元素最常見的使用方式，適合於最常見之使用情境的值。<br>經常用到的屬性包括：</p><ul><li><code>color</code></li><li><code>font-family</code></li><li><code>font-size</code></li><li><code>font-weight</code></li><li><code>letter-spacing</code></li><li><code>line-height</code></li><li><code>margin</code></li><li><code>padding</code></li></ul></li><li><h4 id="文件詮釋資料"><a href="#文件詮釋資料" class="headerlink" title="文件詮釋資料"></a>文件詮釋資料</h4><p>文件詮釋資料 (metadata) 標籤包括<code>&lt;head&gt;</code>、<code>&lt;title&gt;</code>、<code>&lt;base&gt;</code>、<code>&lt;link&gt;</code>與<code>&lt;meta&gt;</code>等。<br>因為使用者看不到它們，所以無法指定這些標籤的樣式。</p></li><li><h4 id="分段元素"><a href="#分段元素" class="headerlink" title="分段元素"></a>分段元素</h4><p>分段元素 (sectioning elements)包括<code>&lt;address&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;aside&gt;</code>、<code>&lt;body&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;header&gt;</code>、<code>&lt;nav&gt;</code>與<code>&lt;section&gt;</code>等。<br>通常會包含其他元素，構成HTML文件中不同的段落。</p></li><li><h4 id="標頭與文本元素"><a href="#標頭與文本元素" class="headerlink" title="標頭與文本元素"></a>標頭與文本元素</h4><p>標頭元素 (heading elements) 包括 <code>&lt;h1&gt;</code> ~ <code>&lt;h6&gt;</code> 元素，<br>是用來在HTML文件中定義每一不同段落主題的元素。<br>文本元素 (text elements) 包括 <code>figure</code>、<code>&lt;figcaption&gt;</code>、<code>&lt;p&gt;</code>與<code>&lt;pre&gt;</code>元素，用來顯示文本區塊。</p></li><li><h4 id="錨點標籤"><a href="#錨點標籤" class="headerlink" title="錨點標籤"></a>錨點標籤</h4><p>錨點標籤 (anchor tags) 提供可連到其他HTML文件或同一份HTML文件中段落的連結，<br>能搭配常用來顯示狀態的 <code>:link</code>、<code>:visited</code>、<code>:focus</code>、<code>:hover</code>與<code>:active</code> 虛擬類別。</p><ul><li><code>:link</code><br>套用在具有href屬性的元素上。</li><li><code>:visited</code><br>套用在具有href屬性的連結上，且該連結的位置已列在瀏覽器的瀏覽歷史紀錄中。</li><li><code>:focus</code><br>當元素被點選、觸碰或透過跳位鍵(Tab key)選到該元素時，此樣式會被套用。</li><li><code>:hover</code><br>套用在滑鼠指標下的連結。在觸控裝置上，因為不具有hover狀態，通常會被套用在被觸碰的元素上。</li><li><code>:active</code><br>套用在連結『被啟用(activated)』的元素上。<br>在滑鼠的情況下，點選連結但滑鼠鍵還未放開時就是處於這種狀態。<br>在觸控裝置上，點選元素但手指尚未移開螢幕時，元素會處於這種狀態。</li></ul></li><li><h4 id="文本語意"><a href="#文本語意" class="headerlink" title="文本語意"></a>文本語意</h4><p>文本語意 (text semantics)，用來賦予文本更多意義或結構的元素。通常是行內型，包括：<br><code>&lt;abbr&gt;</code>、<code>&lt;b&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;code&gt;</code>、<code>&lt;data&gt;</code>、<code>&lt;dfn&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;i&gt;</code>、<code>&lt;kbd&gt;</code>、<code>&lt;s&gt;</code>、<code>&lt;strong&gt;</code>、<code>&lt;sub&gt;</code>、<code>&lt;sup&gt;</code>、<code>&lt;time&gt;</code>與<code>&lt;u&gt;</code>等標籤。</p></li><li><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>包括</p><ul><li><code>&lt;ol&gt;</code> (有序列表，ordered list)</li><li><code>&lt;ul&gt;</code> (無序列表，unordered list)</li><li><code>&lt;dl&gt;</code> (定義列表，definition list)</li></ul><p>有序與無序列表只能內含<code>&lt;li&gt;</code>(列表項目，list item)元素，<br>定義列表只能包含<code>&lt;dt&gt;</code>(定義項，definition term)與<code>&lt;dd&gt;</code>(定義說明，definition description)元素。</p><p><code>list-style-type</code>、<code>list-style-image</code>與<code>list-style-position</code>屬性，<br>若列表元素比較少用，直接設定成 <code>none</code> 可能會比較好，避免需要不斷地去覆寫這些屬性。<br><code>&lt;ol&gt;</code> 或 <code>&lt;ul&gt;</code> 的 <code>padding-left</code> 屬性應該設為0。<br>子<code>&lt;li&gt;</code>元素會繼承其父元素<code>&lt;ol&gt;</code>或<code>&lt;ul&gt;</code>的<code>font-family</code>、<code>font-size</code>與<code>line-height</code>屬性，但不會繼承<code>margin</code>、<code>padding</code>屬性。</p></li><li><h4 id="群組元素"><a href="#群組元素" class="headerlink" title="群組元素"></a>群組元素</h4><p>包括<code>&lt;div&gt;</code>、<code>&lt;main&gt;</code>與<code>&lt;span&gt;</code>。<br><code>&lt;span&gt;</code>標籤，主要用來群組文本或行內元素。</p></li><li><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>包括 <code>&lt;table&gt;</code>、<code>&lt;caption&gt;</code>、<code>&lt;colgroup&gt;</code>、<br><code>&lt;col&gt;</code> (列，column)、<br><code>&lt;tbody&gt;</code> (表格主體，table body)、<br><code>&lt;thead&gt;</code> (表格標題，table header)、<br><code>&lt;tfoot&gt;</code> (表格頁尾，table footer)、<br><code>&lt;tr&gt;</code> (表格列，table row)、<br><code>&lt;td&gt;</code> (表格方格，table cell)、<br><code>&lt;th&gt;</code> (表格標題方格，table header cell)等元素。</p></li><li><h4 id="表單"><a href="#表單" class="headerlink" title="表單"></a>表單</h4><p>包括 <code>&lt;form&gt;</code>、<code>&lt;label&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;button&gt;</code>、<code>&lt;select&gt;</code>、<code>&lt;datalist&gt;</code>、<code>&lt;optgroup&gt;</code>、<code>&lt;option&gt;</code>、<code>&lt;textarea&gt;</code>、<code>&lt;output&gt;</code>、<code>&lt;progress&gt;</code>、<code>&lt;meter&gt;</code>、<code>&lt;fieldset&gt;</code>與<code>&lt;legend&gt;</code>等元素。<br>某些表單元素的樣式可能不容易設定，因為瀏覽器會直接忽略其上所套用的屬性。<br>e.g.: 瀏覽器會忽略套用在複選框(checkboxes)與選項鈕(radio button)上的<code>border-color</code>、<code>border-width</code>、<code>background-color</code>或其他屬性。</p></li><li><h4 id="影像"><a href="#影像" class="headerlink" title="影像"></a>影像</h4><p>圖片可透過<code>&lt;img&gt;</code>與<code>&lt;picture&gt;</code>標籤來呈現。<br>因為<code>&lt;img&gt;</code>元素可在行內的格式情境中使用，<code>baseline</code>是<code>vertical-align</code>屬性的預設值。<br>避免影像超出其容器的範圍，可將其<code>max-width</code>設定成等於其父容器的100%。<br><code>img</code>標籤基底樣式可設定成：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="組件樣式"><a href="#組件樣式" class="headerlink" title="組件樣式"></a>組件樣式</h4><p>可複用組件 (reusable components)，<br>在製作可複用組件時，可先思考可複用組件的流程：</p><ol><li>在製作組件前，先定義所需的行為。</li><li>保持組件樣式粒度並設定合理的預設值。</li><li>在其周圍置放具不同類別之容器元素的方式，視需要覆寫群組組件的視覺樣式。</li><li>讓結構容器為其指定大小。</li></ol><p>ex：</p><ul><li><h5 id="定義需要建置的行為"><a href="#定義需要建置的行為" class="headerlink" title="定義需要建置的行為"></a>定義需要建置的行為</h5><ul><li>組件應該可以只有2個或更多的頁籤。</li><li>當頁籤被點選時，底框會變成藍色而背景則為白色。</li><li>當頁籤未被點選時，背景色為灰色。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Tab One<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Tab Two<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Tab Three<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="保持組件樣式粒度"><a href="#保持組件樣式粒度" class="headerlink" title="保持組件樣式粒度"></a>保持組件樣式粒度</h5><p>每一種組件樣式應該只用來為一個元素指定樣式。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 分別為每個頁籤指定樣式會產生不少重複的碼</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-1</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span>,</span><br><span class="line">.tab-3 &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab-1</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line">.tab-3:hover &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab-1</span><span class="selector-pseudo">:active</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span><span class="selector-pseudo">:active</span>,</span><br><span class="line">.tab-3:active &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab-1</span> &gt; <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.tab-2</span> &gt; <span class="selector-tag">a</span>,</span><br><span class="line">.tab-3 &gt; a &#123; ... &#125;</span><br><span class="line"></span><br><span class="line">.tab-group &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>將樣式抽離到一個可重複使用的類別。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 頁籤組件樣式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#F2F2F2</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#2196F3</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#F9F9F9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: inherit;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 頁籤組件容器</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-group</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="讓組件容器依需要覆寫視覺樣式"><a href="#讓組件容器依需要覆寫視覺樣式" class="headerlink" title="讓組件容器依需要覆寫視覺樣式"></a>讓組件容器依需要覆寫視覺樣式</h5><p>將定義這些樣式的工作委派給父容器來處理。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 水平頁籤群組</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-group</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab-group</span> <span class="selector-class">.tab</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 垂直頁籤群組</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.tab-group-vertical</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tab-group-vertical</span> <span class="selector-class">.tab</span>&#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#EEEEEE</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="將指定尺寸委派給結構容器"><a href="#將指定尺寸委派給結構容器" class="headerlink" title="將指定尺寸委派給結構容器"></a>將指定尺寸委派給結構容器</h5><p>指定尺寸的責任應該被委派給包含該組件或組件群組的結構。</p></li></ul></li><li><h4 id="結構樣式"><a href="#結構樣式" class="headerlink" title="結構樣式"></a>結構樣式</h4><p>結構樣式，包含組件及其容器。</p></li><li><h4 id="工具樣式"><a href="#工具樣式" class="headerlink" title="工具樣式"></a>工具樣式</h4><p>工具樣式(utility styles)，在定義要套用到HTML元素上之類別時，套用到元素上的樣式，或是在滿足特定條件時，由JavaScript所指定之樣式。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>:none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="瀏覽器特定樣式"><a href="#瀏覽器特定樣式" class="headerlink" title="瀏覽器特定樣式"></a>瀏覽器特定樣式</h4><p>透過瀏覽器-特定的CSS改裝來對付有怪癖的舊版瀏覽器。<br>可以將這些改裝另外放在專屬的樣式表中，<br>並透過條件式註解將它們加到頁面裡，<br>這些條件式註解只會為特定版本的瀏覽器載入這些樣式。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE7]&gt;</span></span><br><span class="line"><span class="comment">  &lt;link rel=&quot;stylesheet&quot; href=&quot;ie7.css&quot; type=&quot;text/css&quot; /&gt;</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="第五章-測試"><a href="#第五章-測試" class="headerlink" title="第五章 - 測試"></a>第五章 - <em>測試</em></h2><p>  測試CSS可能會很困難，因為有許多不同的平台、螢幕尺寸與裝置形體 (form factors) 需要進行檢測。</p><ul><li><h3 id="測試為何困難？"><a href="#測試為何困難？" class="headerlink" title="測試為何困難？"></a>測試為何困難？</h3><p>要徹底檢測CSS的變動，可能會耗費許多時間，也需要一些工具的輔助。<br>需要思考的因素：</p><ol><li>檢測網頁的瀏覽器是哪一種？</li><li>如何對不同作業系統上的幾種瀏覽器進行測試？</li><li>檢視網頁的視窗尺寸為何？</li><li>如何快速檢測為數眾多的網頁？</li><li>如何確認所見的結果是正確的？</li><li>如何在無法取得某些特定裝置的情況下，在這些裝置上檢測網站？</li></ol></li><li><h3 id="哪些瀏覽器對測試而言是重要的？"><a href="#哪些瀏覽器對測試而言是重要的？" class="headerlink" title="哪些瀏覽器對測試而言是重要的？"></a>哪些瀏覽器對測試而言是重要的？</h3><p>理想上，只需要支援有一定數量的使用者用來檢視網站的瀏覽器即可。<br>透過分析工具，可以很容易地解析出使用者用來瀏覽網站的瀏覽器與裝置的各種版本。</p></li><li><h3 id="瀏覽器市佔率"><a href="#瀏覽器市佔率" class="headerlink" title="瀏覽器市佔率"></a>瀏覽器市佔率</h3><p>支援最近幾年釋出的主要瀏覽器是很重要的工作。<br>Chrome、Firefox、Safari、Edge與其行動裝置的版本大部分都已符合標準的規範，瀏覽器行為不一致的情況也較之前少。<br>若使用舊版瀏覽器的網站使用者並不多，也許就不需要特別為這些舊瀏覽器去維護樣式碼。</p><ul><li><h4 id="從Google-Analytics取得瀏覽器與螢幕解析度的統計資料"><a href="#從Google-Analytics取得瀏覽器與螢幕解析度的統計資料" class="headerlink" title="從Google Analytics取得瀏覽器與螢幕解析度的統計資料"></a>從Google Analytics取得瀏覽器與螢幕解析度的統計資料</h4><a href="https://analytics.google.com/">Google Analytics</a> 是google所提供的免費服務，也是最常見的分析套件；<br>能追蹤網站流量、使用者的操作行為以及提供其他網站瀏覽資訊等。</li><li><h4 id="瀏覽器資訊"><a href="#瀏覽器資訊" class="headerlink" title="瀏覽器資訊"></a>瀏覽器資訊</h4>當「Browser」被選成主要考量時，瀏覽器資訊可在GA中的Audience -&gt; Technology -&gt; Browser &amp; OS選單下找到。<br>這些資訊可讓你瞭解有哪些瀏覽器會被用來瀏覽你的網站，</li><li><h4 id="螢幕解析度"><a href="#螢幕解析度" class="headerlink" title="螢幕解析度"></a>螢幕解析度</h4>當「Screen Resolution」被選成主要考量時，螢幕解析度資訊也可在GA中的Audience -&gt; Technology -&gt; Browser &amp; OS選單下找到，<br>這些資訊呈現出用來瀏覽你的裝置螢幕尺寸為何。</li></ul></li><li><h3 id="以幾種瀏覽器進行測試"><a href="#以幾種瀏覽器進行測試" class="headerlink" title="以幾種瀏覽器進行測試"></a>以幾種瀏覽器進行測試</h3><p>在不同瀏覽器上檢測CSS最常見的方法是以手動方式進行測試。<br>目前主流的瀏覽器有:</p><ul><li>Google Chrome</li><li>Firefox</li><li>Safari</li><li>Microsoft Edge</li></ul><p>就行動裝置的測試而言，也會需要從對應的市集(marketplace)中下載所需的瀏覽器。</p><ul><li><h4 id="iOS版的Safari"><a href="#iOS版的Safari" class="headerlink" title="iOS版的Safari"></a>iOS版的Safari</h4>iOS上的Safari可以透過iOS裝置上的原生應用程式或是使用Xcode裡面的iOS Simulator來測試<br>要注意的是Xcode只能在Mac OS上執行，他沒辦法在Windows上安裝。</li><li><h4 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h4>可以透過Android Studio中的擬真器(emulators)來進行在Android裝置上的測試</li></ul></li><li><h3 id="以舊版瀏覽器進行測試"><a href="#以舊版瀏覽器進行測試" class="headerlink" title="以舊版瀏覽器進行測試"></a>以舊版瀏覽器進行測試</h3><ul><li><h4 id="Internet-Eplorer-與-Microsoft-Edge"><a href="#Internet-Eplorer-與-Microsoft-Edge" class="headerlink" title="Internet Eplorer 與 Microsoft Edge"></a>Internet Eplorer 與 Microsoft Edge</h4>可以從Microsoft的網站上面下載到Microsoft Edge和舊版的Internet Eplorer以供檢測使用。</li><li><h4 id="Firefox"><a href="#Firefox" class="headerlink" title="Firefox"></a>Firefox</h4>可以從Firefox的網站上面下載到舊版的Firefox，只要找到你要測試的版本並下載在你的作業系統上能運行的版本即可。</li><li><h4 id="Safari與iOS版的Safari"><a href="#Safari與iOS版的Safari" class="headerlink" title="Safari與iOS版的Safari"></a>Safari與iOS版的Safari</h4>因為Safari使用OS X上的WebKit框架來渲染網頁，要測試舊版的Safari會比較麻煩，需要找到舊版的Mac OS才行。<br>不過，要進行舊版的Safari for iOS測試可以透過Xcode上的模擬器來進行。</li><li><h4 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h4>然Google並沒有提供舊版的Chrome讓大家下載測試，不過每六週都會有新版的Chrome釋出，而且每一個新版本的採用率(adoption rate)都非常高。</li></ul></li><li><h3 id="測試最新版本"><a href="#測試最新版本" class="headerlink" title="測試最新版本"></a>測試最新版本</h3><p>各瀏覽器最新的開發測試版：</p><ul><li><a href="https://www.google.com/chrome/browser/canary.html">Chrome Canary</a></li><li><a href="https://nightly.mozilla.org/">Firefox Aurora</a></li><li><a href="https://nightly.webkit.org/">WebKit Nightly</a></li></ul><p>Microsoft並沒有提供Edge的開發測試版，但經常會提供先期版本給<a href="https://insider.window/">Windows Insider Program</a>的會員進行測試。</p></li><li><h3 id="第三方測試服務"><a href="#第三方測試服務" class="headerlink" title="第三方測試服務"></a>第三方測試服務</h3><p>採用第三方廠商所提供的服務，是另一種在多重作業系統上透過一些瀏覽器與模擬器來測試網站的方法。</p></li><li><h3 id="以開發者工具進行測試"><a href="#以開發者工具進行測試" class="headerlink" title="以開發者工具進行測試"></a>以開發者工具進行測試</h3><p>每一種主流瀏覽器都會附帶一組開發者工具，來協助開發者將網站做得更好。</p><ul><li><a href="https://developer.chrome.com/devtools">Chrome DevTools</a></li><li><a href="https://developer.apple.com/safari/tools/">Safari for Developers</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Tools">Firefox Developer Tools</a></li><li><a href="https://dev.modern.ie/platform/documentation/f12-devtools-guide/">Microsoft Edge Developer Tools</a></li><li><h4 id="模擬裝置尺寸"><a href="#模擬裝置尺寸" class="headerlink" title="模擬裝置尺寸"></a>模擬裝置尺寸</h4>要在不同的裝置形體 (如手機、平板等) 上進行測試，透過瀏覽器的開發者工具來模擬目標裝置的尺寸。</li></ul></li><li><h3 id="視覺回歸測試-visual-regression-testing"><a href="#視覺回歸測試-visual-regression-testing" class="headerlink" title="視覺回歸測試 (visual regression testing)"></a>視覺回歸測試 (visual regression testing)</h3><p>產生一張使用者介面的比較基準圖 (baseline image)，然後用它來與後續的使用者介面圖進行比較。</p><ul><li><h4 id="視覺回歸測試的技巧"><a href="#視覺回歸測試的技巧" class="headerlink" title="視覺回歸測試的技巧"></a>視覺回歸測試的技巧</h4><ul><li><h5 id="測試重要的東西"><a href="#測試重要的東西" class="headerlink" title="測試重要的東西"></a>測試重要的東西</h5>測試越多，需要維護的就越多，與其要在大量的測試中打轉，不如只測試真正重要的。<br>基底樣式 (base styles)，通常不太會再回歸；<br>檢測更複雜且可能會更難處理的可複用元件，反而比較要緊。</li><li><h5 id="保持測試粒度"><a href="#保持測試粒度" class="headerlink" title="保持測試粒度"></a>保持測試粒度</h5>若有太多元件一起測試，很難找出造成一個回歸產生的確切原因，個別測試一個元件，才能維持測試的粒度。</li><li><h5 id="使用不同的瀏覽器"><a href="#使用不同的瀏覽器" class="headerlink" title="使用不同的瀏覽器"></a>使用不同的瀏覽器</h5>因為不同的瀏覽器間可能會有不一致的現象。</li></ul></li><li><h4 id="以Gemini進行視覺回歸測試"><a href="#以Gemini進行視覺回歸測試" class="headerlink" title="以Gemini進行視覺回歸測試"></a>以Gemini進行視覺回歸測試</h4>它能在任何主要瀏覽器上編寫自動為元素截圖的程序(Script)，然後讓這些截圖與基準圖作比較，並以不同的反白強調方式，將差異處標示出來。<br>透過無介面瀏覽器 <a href="http://phantomjs.org/">PhantomJS</a> 來存取該操作介面。<br>無介面瀏覽器 (headless browser) 是沒有使用者操作介面的網頁瀏覽器，<br>能在不顯示網頁的情況下渲染網站並截取螢幕截圖。<blockquote><p><a href="https://github.com/gemini-testing/gemini">Gemini安裝</a>、<a href="https://phantomjs.org/">PhantomJS安裝</a><br><small>Gemini也可以測試其他使用 Selenium 或如 Sauce Labs 及 BrowserStack 等雲端服務的瀏覽器。</small></p></blockquote><ul><li><h5 id="組態"><a href="#組態" class="headerlink" title="組態"></a>組態</h5>安裝 Gemini 之後，需要在專案的根目錄下創建一個名為 <code>.gemini.js</code> 的檔案。<br><a href="https://github.com/gemini-testing/gemini">完整的組態選項列表</a><br>範例：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  rootUrl: <span class="string">&#x27;http://127.0.0.1:8000&#x27;</span>,</span><br><span class="line">  browsers: &#123;</span><br><span class="line">    phantomjs: &#123;</span><br><span class="line">      desiredCapabilities: &#123;</span><br><span class="line">        browserName: <span class="string">&#x27;phantomjs&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>根網址(root URL)設定成 <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000</a> ，<br>以 PhantomJS 來進行測試，而且用該瀏覽器截下來的圖，<br>要以 <code>phantomjs</code> 為其檔名。(當使用多瀏覽器測試時，方便辨識)</li><li><h5 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h5>編寫一個測試檔。<br>Gemini 本身有一套功能，能開啟URL、選取特定元素、操作視窗並截取螢幕截圖等。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Gemini 測試套組檔 (animal-tests.js)</span></span><br><span class="line">gemini.suite(<span class="string">&#x27;animals&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">suite</span>)</span>&#123;</span><br><span class="line">  suite.setUrl(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    .setCaptureElements(<span class="string">&#x27;.animal&#x27;</span>)</span><br><span class="line">    .capture(<span class="string">&#x27;plain&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>先宣告測試套組(test suite)，為其命名( <code>&#39;animals&#39;</code> )。<br>網站的首頁( <code>/</code> )則透過 <code>setUrl</code> 指定成要開啟的URL。<br>用 <code>.setCaptureElements</code> 選取要測試的元素，<br>以 <code>.capture</code> 來截取螢幕截圖。</li><li><h5 id="收集基準圖"><a href="#收集基準圖" class="headerlink" title="收集基準圖"></a>收集基準圖</h5>在進行任何測試前，要先收集基準圖，如此 Gemini 才能用它們來比較新的截圖。<br>先在終端機 (terminal) 中執行 PhantomJS 與 Gemini，才能截取基準圖。<ul><li>開啟終端機視窗並輸入 <code>phontomjs -webdriver=4444</code> 指令。<br>讓 PhantomJS 在 WebDriver 模式中的 4444 號埠上執行。<br>是 Gemini 與瀏覽器互動的管道。</li><li>另一個終端機跳到 <code>.gemini.js</code> 檔所在的目錄，<br>執行 <code>gemini update test/gemini/animal-tests.js</code> 指令，以取得基準螢幕截圖。<br>基準圖收集完成後，它們會被存放在 <code>gemini/screens/animals/plain</code> 這個新目錄底下。</li></ul></li><li><h5 id="測試回歸"><a href="#測試回歸" class="headerlink" title="測試回歸"></a>測試回歸</h5>基準圖已經收集完成，可以測試回歸了。<br>以 <code>gemini test -reporter html tests/gemini/animal-test.js</code> 指令來執行Gemini。<br>這個指令要Gemini執行測試、比較螢幕截圖並將結果輸出到存放在gemini-report/index.html的HTML網頁中。<ul><li><h6 id="Gemini的替代方案"><a href="#Gemini的替代方案" class="headerlink" title="Gemini的替代方案"></a>Gemini的替代方案</h6>Wraith 與 PhantomCSS。<br>都可以被用來開啟網站、透過PhantomJS (Webkit型的無介面瀏覽器) 或SlimerJS (Gecko型的無介面瀏覽器)來為元素截圖，並呈現元素目前版本與比較基準版本的不同。<ul><li><a href="http://bbc-news.github.io/wraith/index.html">Wraith</a><br>由BBC開發而成。<br>需要 CasperJS、PhantomJS 或 SlimerJS 以及 ImageMagick 與 Ruby 的支援。</li><li><a href="https://github.com/Huddle/PhantomCSS">PhantomCSS</a><br>由James Cryer 與 <a href="http://huddle.com/">Huddle</a>的開發團隊發展而成。<br>需要 CasperJS 與 Resemble.JS 的支援，也可以搭配 PhantomJS 與 SlimerJS 使用。</li></ul></li></ul></li></ul></li></ul></li><li><h3 id="維護樣式碼"><a href="#維護樣式碼" class="headerlink" title="維護樣式碼"></a>維護樣式碼</h3><p>樣式碼的品質可透過寫碼準則與樣式庫來維護。</p><ul><li><h4 id="寫碼準則-coding-standards"><a href="#寫碼準則-coding-standards" class="headerlink" title="寫碼準則 (coding standards)"></a>寫碼準則 (coding standards)</h4><p>團隊成員以同一方式來編寫樣式碼的指引方針。<br>CSS寫碼準則通常會規定註解、格式、命名、選取器使用的慣用法。</p><ul><li><h5 id="寫碼準則範本"><a href="#寫碼準則範本" class="headerlink" title="寫碼準則範本"></a>寫碼準則範本</h5><ol><li><p>註解<br>A. 每一個檔的開頭都應寫上註解，說明該檔案的內容：</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 這個檔案內含頁籤群組的樣式。</span></span><br><span class="line"><span class="comment">* 頁籤群組只會用來含括帶有頁籤類別的元素。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>B. 可能會產生混淆的屬性應該以註解說明：</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tab-group-flush</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">12px</span>; <span class="comment">/* 移除父容器的內距 */</span></span><br><span class="line">  <span class="attribute">margin-right</span>: -<span class="number">12px</span>; <span class="comment">/* 移除父容器的內距 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>格式<br>A. 規則集 (rulesets) 應該：</p><ul><li>若屬性不只一個，則應該要分行編寫。</li><li>其中的宣告須縮排4格</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">property1: value;</span><br><span class="line"><span class="selector-tag">property2</span>: <span class="selector-tag">value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">        property1: value;</span><br><span class="line">        <span class="selector-tag">property2</span>: <span class="selector-tag">value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line">.selector &#123; property1: value; property2: value; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1: value;</span><br><span class="line">    <span class="selector-tag">property2</span>: <span class="selector-tag">value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B. 宣告應該：</p><ul><li>在冒號後加上一個空格。</li><li>結尾一定加上分號。</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1:value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1: value</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1 : value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    property1: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C. 在幾個規則集有不同之 <code>background-position</code> 設定的情況下，規則集可以寫在一行。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line">.selector1 &#123; property1: value; property2: value;&#125;</span><br><span class="line">.selector2 &#123; property1: value; property2: value;&#125;</span><br><span class="line">.selector3 &#123; property1: value; property2: value;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector1</span> &#123; <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-class">.selector2</span> &#123; <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">10px</span>; &#125;</span><br><span class="line"><span class="selector-class">.selector3</span> &#123; <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">10px</span>; &#125;</span><br></pre></td></tr></table></figure><p>D. 規則集與宣告後的空白必須移除。</p></li><li><p>選取器命名慣例：<br>A. 只使用小寫字母。</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.SeleCtor</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.SELECTOR</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>B. 由多字組成的選取器必須以骨節式 (spinal-case) 表示。</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selectorWithMultipleWords</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.SELECTORWITHMULTIPLEWORDS</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.selector_with_multiple_words</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.selectorWith_multiple-words</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector-with-multiple-words</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>C. ID不能用來為元素訂樣式；請改用類別。</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-id">#element-to-style</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.element-to-style</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>D. 會用JavaScript調整的樣式 (不管框架為何)，必須以新增或刪除CSS類別的方式來進行。</p> <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  不正確的寫法：元素樣式會被JavaScript中的樣式屬性改變</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$(<span class="string">&#x27;.js-menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;#FFFF00&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  正確的寫法：元素樣式會透過JavaScript新增的類別來調整</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> $(<span class="string">&#x27;.js-menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">   $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;highlighted&#x27;</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>E. 作爲JavaScript選取器使用的類別與ID，必須加上 <code>js-</code> 字頭，而且不能寫在樣式表中。</p> <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  不正確的寫法：帶有js-字頭的樣式不應該出現在樣式表中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> #js-element-only-used-by-javascript &#123;</span><br><span class="line">     background-color: #FFFF00;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  不正確的寫法：透過指定元素樣式的類別在JavaScript中選取元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> $(<span class="string">&#x27;.menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;highlighted&#x27;</span>);</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  正確的寫法：在JavaScript中以用來在JavaScript中使用的選取器選取元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> $(<span class="string">&#x27;.js-menu-item&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   $(<span class="built_in">this</span>).addClass(<span class="string">&#x27;highlighted&#x27;</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>F. 必須使用有意義的類別名稱</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法：沒有意義的類別名稱 */</span></span><br><span class="line"><span class="selector-class">.r</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法：有意義且具說明性的類別名稱 */</span></span><br><span class="line"><span class="selector-class">.resident</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>G. 類別名稱要描述被指定樣式的標的，而不是樣式本身</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法：描述要套用的樣式 */</span></span><br><span class="line"><span class="selector-class">.float-left-bold</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法：描述要套用樣式的標的 */</span></span><br><span class="line"><span class="selector-class">.sidebar-important</span> &#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>屬性<br>A. 只能在 <code>border</code> 、 <code>margin</code> 與 <code>padding</code> 上使用屬性的速寫法</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法：在字型屬性上使用速寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span> Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法：只在border屬性上使用速寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B. 屬性必須按照字母排序排列</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C. 值為0的屬性其單位必須省略</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 不正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正確的寫法 */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>可參照下列寫碼準則</p><ul><li><a href="http://bit.ly/2e68N3y">Google CSS 寫碼準則</a></li><li><a href="http://bit.ly/2fgLrp2">WordPress CSS</a></li><li><a href="https://pages.18f.gov/frontend/#css">18F 前端指引</a></li></ul></li></ul></li><li><h4 id="模版庫-pattern-library"><a href="#模版庫-pattern-library" class="headerlink" title="模版庫 (pattern library)"></a>模版庫 (pattern library)</h4><p>是一組在網站上使用的操作介面模版，重要資訊包括：</p><ul><li>模版的使用時機</li><li>簡單的模版使用說明</li><li>為何要使用某特定模版的原因</li></ul><p>e.g.: <a href="https://www.yelp.com/styleguide">Yelp 模版庫</a>、<a href="https://ux.mailchimp.com/patterns">MailChimp 模版庫</a></p><ul><li><h5 id="好處"><a href="#好處" class="headerlink" title="好處"></a>好處</h5>模版庫呈現了所有組成網站的元件，讓每位成員都能取得建造網站的基礎元件，也可確保成員們熟悉其運作方式。<br>不需為每一個新專案重新製作這些基礎元件。<br>讓所有元件都陳列在同一個地方，藉以建置出的使用者介面更一致。</li><li><h5 id="建置模版庫"><a href="#建置模版庫" class="headerlink" title="建置模版庫"></a>建置模版庫</h5>包含 可運行的實作、使用時機的指引，以及呈現如何實作該模版的範例樣式碼。</li></ul><blockquote><p><small>取得更多模版庫資源：<a href="http://styleguides.io/">http://styleguides.io</a></small></p></blockquote></li></ul></li></ul><h2 id="第六章-樣式碼置放與重構策略"><a href="#第六章-樣式碼置放與重構策略" class="headerlink" title="第六章 - 樣式碼置放與重構策略"></a>第六章 - 樣式碼置放與重構策略</h2><ul><li><h3 id="從特定度低到特定度高之樣式的順序來組織CSS"><a href="#從特定度低到特定度高之樣式的順序來組織CSS" class="headerlink" title="從特定度低到特定度高之樣式的順序來組織CSS"></a>從特定度低到特定度高之樣式的順序來組織CSS</h3><p>CSS樣式依據特定度與被引用的順序來套用，按照被套用的順序來組織CSS也是很合理的</p><ol><li>正規化樣式 (normalizing styles)</li><li>基底樣式 (base styles)</li><li>組件及其容器使用的樣式</li><li>結構樣式 (structural styles)</li><li>工具樣式 (utility styles)</li><li>瀏覽器特定樣式 (如果一定需要的話)</li></ol><ul><li><h4 id="正規化樣式"><a href="#正規化樣式" class="headerlink" title="正規化樣式"></a>正規化樣式</h4>將各瀏覽器不一致的地方排除。</li><li><h4 id="基底樣式-1"><a href="#基底樣式-1" class="headerlink" title="基底樣式"></a>基底樣式</h4>定義了網站中所有元件的起始樣式。</li><li><h4 id="組件與其容器的樣式"><a href="#組件與其容器的樣式" class="headerlink" title="組件與其容器的樣式"></a>組件與其容器的樣式</h4>以基底樣式為基礎，提供具視覺意涵的樣式，應該要能適用於全站的主要使用案例上，樣式上的任何調整，應該委派給父容器。</li><li><h4 id="結構化樣式"><a href="#結構化樣式" class="headerlink" title="結構化樣式"></a>結構化樣式</h4>包含組件與其容器，用來創建網頁的版面與適用於一般情況的尺寸。</li><li><h4 id="工具樣式-1"><a href="#工具樣式-1" class="headerlink" title="工具樣式"></a>工具樣式</h4>特定度最高的樣式。像其他單一用途的樣式，由JavaScript所套用，會用到!important的類別，應該寫在這。</li><li><h4 id="瀏覽器特定樣式-1"><a href="#瀏覽器特定樣式-1" class="headerlink" title="瀏覽器特定樣式"></a>瀏覽器特定樣式</h4>要支援傳統的瀏覽器，特別實作出的樣式。可能也會用到!important，也可能由網站依據條件而引用。<br>不需要的時候，記得要將它們刪除。</li></ul><blockquote><p><small><b>媒介查詢 (media queries)</b><br>用來在特定條件滿足時，為元素套用不同的樣式。<br>媒體查詢應該儘可能地寫在靠近樣式宣告區塊的位置，而不是放在CSS的結尾處或另外存成一個檔案。</small></p></blockquote></li><li><h3 id="多檔還是單一大檔"><a href="#多檔還是單一大檔" class="headerlink" title="多檔還是單一大檔 ?"></a>多檔還是單一大檔 ?</h3><ul><li><h4 id="供應CSS"><a href="#供應CSS" class="headerlink" title="供應CSS"></a>供應CSS</h4><p>造訪網站時，瀏覽器會要求下載檔案然後進行解析並套用適當的樣式。<br>因此，為了能迅速下載，這些檔案越小越好。</p><ul><li><h5 id="併接-concatenation"><a href="#併接-concatenation" class="headerlink" title="併接 (concatenation)"></a>併接 (concatenation)</h5>減少需下載的檔案數來降低頁面下載時間的常用技術。<ul><li>headings.css<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含基本標頭元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>lists.css<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含列表元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>併接而成的CSS檔<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含基本標頭元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本檔內含列表元素的樣式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="縮整-minification"><a href="#縮整-minification" class="headerlink" title="縮整 (minification)"></a>縮整 (minification)</h5>是移除檔案不需要的空白、註解與新行碼 (newlines) 的操作。<ul><li>縮整後的CSS<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;<span class="attribute">color</span>:<span class="number">#333</span>;<span class="attribute">font-size</span>:<span class="number">24px</span>;<span class="attribute">margin-bottom</span>:<span class="number">6px</span>;<span class="attribute">margin-left</span>:<span class="number">12px</span>;<span class="attribute">margin-right</span>:<span class="number">6px</span>;<span class="attribute">margin-top</span>:<span class="number">12px</span>;&#125;<span class="selector-tag">ul</span>&#123;<span class="attribute">list-style-type</span>:none;<span class="attribute">padding-bottom</span>:<span class="number">12px</span>;<span class="attribute">padding-left</span>:<span class="number">0</span>;<span class="attribute">padding-top</span>:<span class="number">12px</span>;<span class="attribute">padding-right</span>:<span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="單檔開發"><a href="#單檔開發" class="headerlink" title="單檔開發"></a>單檔開發</h4><p>小型專案而言，將CSS放在一個檔中，依據CSS被引入的串接順序，適當地以註解將之分段組織好，</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 正規化樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基底樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 基底樣式：表單 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：標頭 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：影像 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：列表 */</span></span><br><span class="line"><span class="comment">/* 基底樣式：表格 */</span></span><br><span class="line"><span class="comment">/* 等等 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 組件樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 組件樣式：警告 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：按鈕 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：輪播 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：下拉式選單 */</span></span><br><span class="line"><span class="comment">/* 組件樣式：模板 */</span></span><br><span class="line"><span class="comment">/* 等等 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 結構樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 結構樣式：登出版面 */</span></span><br><span class="line"><span class="comment">/* 結構樣式：側欄版面 */</span></span><br><span class="line"><span class="comment">/* 結構樣式：主要版面 */</span></span><br><span class="line"><span class="comment">/* 結構樣式：設定版面 */</span></span><br><span class="line"><span class="comment">/* 等等 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工具樣式</span></span><br><span class="line"><span class="comment"> * -----------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>若到了某個臨界點，還是需要將CSS拆分成幾個檔案。</p></li><li><h4 id="多檔開發"><a href="#多檔開發" class="headerlink" title="多檔開發"></a>多檔開發</h4><p>透過好幾個CSS檔來開發網站時，每個檔案的內容就可以聚焦。<br>避免CSS被放在另一個比較不恰當的地方而影響到優化。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|-css/</span><br><span class="line">| |-normalizing-styles</span><br><span class="line">| |   |- normalize.css</span><br><span class="line">| |</span><br><span class="line">| |-base-styles</span><br><span class="line">| |   |- forms.css</span><br><span class="line">| |   |- headings.css</span><br><span class="line">| |   |- images.css</span><br><span class="line">| |   |- lists.css</span><br><span class="line">| |   |- tables.css</span><br><span class="line">| |   |- etc.</span><br><span class="line">| |</span><br><span class="line">| |-bcomponent-styles</span><br><span class="line">| |   |- alerts.css</span><br><span class="line">| |   |- buttons.css</span><br><span class="line">| |   |- carousel.css</span><br><span class="line">| |   |- dropdowns.css</span><br><span class="line">| |   |- modals.css</span><br><span class="line">| |   |- etc.</span><br><span class="line">| |</span><br><span class="line">| |-structural-styles</span><br><span class="line">| |   |- layout-checkout.css</span><br><span class="line">| |   |- layout-sidebar.css</span><br><span class="line">| |   |- layout-primary.css</span><br><span class="line">| |   |- layout-settings.css</span><br><span class="line">| |   |- etc.</span><br><span class="line">| |</span><br><span class="line">| |-utility-styles</span><br><span class="line">| |   |- utility.css</span><br><span class="line">| |</span><br><span class="line">| |-browser-specific-styles</span><br><span class="line">| |   |- ie8.css</span><br></pre></td></tr></table></figure><p>有這麼多的樣式檔，就不應該在HTML中把每一個都引進來。<br>因為太多檔案要求會讓頁面的載入速度變慢。</p></li></ul></li><li><h3 id="重構前檢核CSS"><a href="#重構前檢核CSS" class="headerlink" title="重構前檢核CSS"></a>重構前檢核CSS</h3><p>高階的CSS評估準則：</p><ul><li>所用屬性列表</li><li>使用特定屬性之宣告區塊列表</li><li>所用之不同顏色的數量</li><li>所用之最高與最低的特定度</li><li>具最高與最低特定度的選擇器</li><li>選擇器的長度</li></ul><p>推薦一個Google Chrome瀏覽器的外掛工具『CSS Dig』，<br>只要到Chrome的擴充功能裡面搜尋 <a href="http://cssdig.com/">CSS Dig</a> 並下載，<br>在網站內按下CSS Dig的圖示就可以使用，<br>能夠分析網頁內可用的CSS，是一套能將樣式碼整理好的實用工具！</p></li><li><h3 id="重構策略"><a href="#重構策略" class="headerlink" title="重構策略"></a>重構策略</h3><p>應該儘可能只在常需被檢核與釋出的小且可控制的區段(chunks)上進行重構。<br>若在一個小區段中進行樣式碼的重構，會變動且產生回歸的地方就比較少，測試起來也比較容易。<br>建議每次只進行能很快佈署出去的小範圍變動。</p><ul><li><h4 id="一致地架構規則集"><a href="#一致地架構規則集" class="headerlink" title="一致地架構規則集"></a>一致地架構規則集</h4><p>取決於要將宣告區塊寫成什麼格式，以及宣告的順序要如何安排。</p></li><li><h4 id="刪除廢碼"><a href="#刪除廢碼" class="headerlink" title="刪除廢碼"></a>刪除廢碼</h4><p>廢碼(dead code)指的是有寫但沒有用到的碼。</p><ul><li><h5 id="未用宣告區塊-unused-declaration-blocks"><a href="#未用宣告區塊-unused-declaration-blocks" class="headerlink" title="未用宣告區塊 (unused declaration blocks)"></a>未用宣告區塊 (unused declaration blocks)</h5>有寫但絕不會被用到的宣告區塊。</li><li><h5 id="重複宣告區塊-duplicate-declaration-blocks"><a href="#重複宣告區塊-duplicate-declaration-blocks" class="headerlink" title="重複宣告區塊 (duplicate declaration blocks)"></a>重複宣告區塊 (duplicate declaration blocks)</h5>因與其他現有宣告完全相同而變成不需要重複的宣告區塊。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 重複宣告區塊 */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="重複宣告-duplicate-declarations"><a href="#重複宣告-duplicate-declarations" class="headerlink" title="重複宣告 (duplicate declarations)"></a>重複宣告 (duplicate declarations)</h5>在同一規則集中，應避免出現重複的宣告，因為只有最後那一個宣告才會被套用。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>; <span class="comment">/* 重複宣告 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="切斷CSS與JavaScript的耦合-1"><a href="#切斷CSS與JavaScript的耦合-1" class="headerlink" title="切斷CSS與JavaScript的耦合"></a>切斷CSS與JavaScript的耦合</h4><p>用來為元素指定樣式的類別與ID不應該在JavaScript中被用來選取元素，會產生相依性(dependency)，讓這些選取器不容易被修改。<br>因為類別與ID一被修改，可能會造成JavaScript的錯誤。<br>先在JavaScript中找到選取元素的地方，然後在選取器前加上 <code>js-</code> ，再將選取器加到定義元素的HTML裡頭即可。</p></li><li><h4 id="拆分基底樣式"><a href="#拆分基底樣式" class="headerlink" title="拆分基底樣式"></a>拆分基底樣式</h4><p>它們運用的是類型選取器(type selectors)。<br>用『CSS Dig』 分析過網站後，Selectors 面板會列出不少選取器在何時與何處的使用資訊。<br>將基底樣式用分組的方式列出來：</p><ul><li>標題 (<code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>)</li><li>文本 (<code>&lt;p&gt;</code>，<code>&lt;fig&gt;</code>，<code>&lt;code&gt;</code>)</li><li>連結 (<code>&lt;a&gt;</code>)</li><li>列表 (<code>&lt;dl&gt;</code>，<code>&lt;ol&gt;</code>，<code>&lt;ul&gt;</code>)</li><li>表單 (<code>&lt;form&gt;</code>，<code>&lt;legend&gt;</code>，<code>&lt;fieldset&gt;</code>，<code>&lt;input&gt;</code>，<code>&lt;button&gt;</code>)</li><li>表格 (<code>&lt;table&gt;</code>，<code>&lt;thead&gt;</code>，<code>&lt;tbody&gt;</code>，<code>&lt;tfoot&gt;</code>，<code>&lt;tr&gt;</code>，<code>&lt;td&gt;</code>)</li><li>媒體 (<code>&lt;audio&gt;</code>，<code>&lt;object&gt;</code>，<code>&lt;video&gt;</code>)</li></ul><p>做完之後，使用『CSS Dig』再去找可以歸類在特定分類的選取器，找出最常用的屬性。<br>依照下列步驟來處理：</p><ol><li>在基底樣式中為要進行重構的類型選取器製作新的規則集。</li><li>將在所有類型選取器中找出的最常用屬性複製到新做好的規則集中。</li><li>移除其他規則集中可繼承自新基底樣式的重複樣式。</li></ol><p>範例：</p>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：style.css */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.section-condensed</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.order-form</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>第一步，製作一個新的規則集：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：headings.css */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123; &#125;</span><br></pre></td></tr></table></figure></li><li>接著，複製最常用的樣式到規則集裡頭：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：headings.css */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>最後，從規則集中移除重複的樣式，改由繼承基底樣式的樣式：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 檔案：style.css */</span></span><br><span class="line"><span class="selector-tag">body</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.section-condensed</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.order-form</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>仔細檢查那些不包含在基本樣式中的樣式，看看這些樣式是否已經偏離了方向，<br>若是，可將這些偏離方向的樣式移除。</p></li><li><h4 id="移除多餘的ID"><a href="#移除多餘的ID" class="headerlink" title="移除多餘的ID"></a>移除多餘的ID</h4><p>在一個選取器中多寫的那幾個ID都是多餘的。<br>調降具更高特定度之選取器的特定度。<br>範例：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main-header</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">ul</span><span class="selector-id">#main-menu</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>從選取器中移除多餘的ID<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main-header</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="將ID轉成類別"><a href="#將ID轉成類別" class="headerlink" title="將ID轉成類別"></a>將ID轉成類別</h4><p>多餘的ID被移除之後，其餘用到ID的選取器可以轉而使用類別。而且很容易就可以在需要的地方複用。<br>若需要調整許多其他的選取器才能解決一個特定問題，比較好的方法是不將ID變成類別，等到有特定度更高的樣式需要被重構成較低特定度時，再來重構這部份的樣式碼。</p></li><li><h4 id="拆分工具樣式"><a href="#拆分工具樣式" class="headerlink" title="拆分工具樣式"></a>拆分工具樣式</h4><p>工具樣式是可運用 <code>!important</code> 例外的唯一樣式。當CSS併接的時候，工具樣式應該放在最後。<br>使用瀏覽器的開發者工具進行分析。若分析後發現它並不需要用到 <code>!important</code> ，則應該可以放心地將它移除。</p></li><li><h4 id="定義可複用組件-reusable-components"><a href="#定義可複用組件-reusable-components" class="headerlink" title="定義可複用組件 (reusable components)"></a>定義可複用組件 (reusable components)</h4><p>是進行CSS重構時最棘手的工作之一。<br>先選取一種常常被重複使用的介面模板 (interface pattern，如頁籤)，然後用一些時間檢視網站，看看有哪些地方使用。<br>記下該模版任何不同的地方，然後更新所有現行的模版，轉而使用新寫的樣式碼。<br>定義可複用組件有助於移除重複的CSS。</p></li><li><h4 id="移除行內CSS與過度模組化的類別"><a href="#移除行內CSS與過度模組化的類別" class="headerlink" title="移除行內CSS與過度模組化的類別"></a>移除行內CSS與過度模組化的類別</h4><p>移除行內 (inline) CSS與過度模組化的類別應該要同時進行，<br>移除這二種東西，應該晚點做而不要太早做。<br>在移除行內CSS之前，需要將它暫時放在樣式表末，也許還要用 <code>!important</code> 來維持它的特定度。<br>檢查那些與基本及組件樣式不同的行內樣式，看看它是不是因設計或寫碼不一致所產生的。<br>若是，則可放心地將該行內樣式移除。<br>若樣式的不同是刻意做出來的，則應該透過元素的容器來使用該樣式。<br>如果按照順序進行重構，應該：</p><ul><li>有一套自己的方法能一致地將CSS架構好。</li><li>不能留有太多廢碼。</li><li>已將CSS與JavaScript的耦合切斷。</li><li>已建置好基本樣式。</li><li>已透過移除多餘ID並將ID轉成類別的方式，將最高特定度降低。</li><li>已將工具樣式拆分，並減少 <code>!important</code> 的使用。</li><li>已定義可複用組件。</li></ul></li><li><h4 id="隔離針對特定瀏覽器的CSS改裝"><a href="#隔離針對特定瀏覽器的CSS改裝" class="headerlink" title="隔離針對特定瀏覽器的CSS改裝"></a>隔離針對特定瀏覽器的CSS改裝</h4><p>為了克服瀏覽器的限制所做的改裝 (hacks)，很容易就會污染到CSS。<br>在隔離之前，判斷是否不再支援該瀏覽器。</p></li></ul></li><li><h3 id="成效評估"><a href="#成效評估" class="headerlink" title="成效評估"></a>成效評估</h3><ul><li><h4 id="網站壞了嗎？"><a href="#網站壞了嗎？" class="headerlink" title="網站壞了嗎？"></a>網站壞了嗎？</h4>重構是在不改變樣式行為的前提下，進行重新寫碼的過程。<br>先檢查外觀是否相同，若沒發現任何視覺回歸，再開始檢查其他的面向。</li><li><h4 id="低耦合"><a href="#低耦合" class="headerlink" title="低耦合"></a>低耦合</h4>將CSS與HTML間的耦合拆解掉。<br>試著別讓選取器過度複雜化。<br><code>CSS Dig</code> 可協助找出複雜且超格的選取器，應盡量設法將它們一般化。</li><li><h4 id="低特定度"><a href="#低特定度" class="headerlink" title="低特定度"></a>低特定度</h4>選取器特定度是可以被估算，且被用來判斷CSS碼庫中是否含有許多不容易維護，且帶有高特定度之選取器的衡量標準。<br><code>CSS Dig</code> 能運用這個特質，篩選出選取器。</li><li><h4 id="檔案更少也更小"><a href="#檔案更少也更小" class="headerlink" title="檔案更少也更小"></a>檔案更少也更小</h4>「 併接 」 可減少需下載的檔案數，<br>「 縮整 」 則可透過移除不必要之字元的方式，來降低檔案的大小。</li><li><h4 id="UI錯誤數"><a href="#UI錯誤數" class="headerlink" title="UI錯誤數"></a>UI錯誤數</h4>透過模版庫與視覺回歸測試這二種有效的方法，就可以越快偵測並診斷出問題。</li><li><h4 id="省下開發與檢測時間"><a href="#省下開發與檢測時間" class="headerlink" title="省下開發與檢測時間"></a>省下開發與檢測時間</h4>將CSS有條理地組織成幾個檔、建立編碼準則以及創建UI模版庫之後，建造並維護使用者介面的速度，會比之前要來得快上許多。<br>除了縮短開發時程之外，檢測介面的速度也會變得更快。</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_uiux</title>
      <link href="2021/04/24/link-uiux/"/>
      <url>2021/04/24/link-uiux/</url>
      
        <content type="html"><![CDATA[<h4 id="教學"><a href="#教學" class="headerlink" title="教學"></a>教學</h4><ul><li><a href="https://www.uisdc.com/archives">優設</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> UI/UX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_專有名詞</title>
      <link href="2021/04/24/link-%E5%B0%88%E6%9C%89%E5%90%8D%E8%A9%9E/"/>
      <url>2021/04/24/link-%E5%B0%88%E6%9C%89%E5%90%8D%E8%A9%9E/</url>
      
        <content type="html"><![CDATA[<h4 id="關於那些縮寫"><a href="#關於那些縮寫" class="headerlink" title="關於那些縮寫"></a>關於那些縮寫</h4><ul><li><a href="https://www.design-hu.com/web-news/cms.html">CMS 是什麼 ？ 讓你秒懂什麽是 網站 後台 管理 CMS系統 - 鵠崙設計</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 專有名詞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_D3</title>
      <link href="2021/04/24/link-D3/"/>
      <url>2021/04/24/link-D3/</url>
      
        <content type="html"><![CDATA[<h4 id="基礎"><a href="#基礎" class="headerlink" title="基礎"></a>基礎</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10196538">M重新認識 JavaScript 番外篇 (3) - 鐵人賽戰況分析 - Kuro</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> D3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_其他</title>
      <link href="2021/04/18/link-%E5%85%B6%E4%BB%96/"/>
      <url>2021/04/18/link-%E5%85%B6%E4%BB%96/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://smarter01.com/2017/03/01/%EF%BB%BF%E5%8F%B0%E5%8C%97-%E9%81%A9%E5%90%88%E8%AE%80%E6%9B%B8%E6%9C%83%E3%80%81%E4%BA%A4%E6%B5%81%E6%9C%83%E6%88%96%E6%9C%83%E8%AD%B0%E7%9A%84%E5%92%96%E5%95%A1%E5%BB%B3%E6%B6%88%E8%B2%BB/">台北適合會議、讀書會或交流會的11間咖啡廳推薦</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_專案管理</title>
      <link href="2021/04/04/link-%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
      <url>2021/04/04/link-%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20105176/ironman/3831">[iT邦] 從 RD 到 PM 的奇妙旅程 - 陪伴我成長的心法與工具整理集 - 小學生</a> - 2020</li></ul><h4 id="Side-Project"><a href="#Side-Project" class="headerlink" title="Side Project"></a>Side Project</h4><ul><li><a href="https://blog.hahow.in/samuel-side-project/amp/">9 個開始 Side Project 前一定要知道的事 - hahow</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 專案管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_API</title>
      <link href="2021/04/04/link-API/"/>
      <url>2021/04/04/link-API/</url>
      
        <content type="html"><![CDATA[<h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://graphql.org/">GraphQL - 官方</a></li><li><a href="https://ithelp.ithome.com.tw/users/20111997/ironman/1878">[iT邦] GraphQL系列 - fx777</a></li><li><a href="https://tw.alphacamp.co/blog/api-introduction-understand-web-api-http-json">API是什麼？認識 Web API、HTTP 和 JSON 資料交換格式 - alphacamp</a></li></ul><h4 id="模擬"><a href="#模擬" class="headerlink" title="模擬"></a>模擬</h4><ul><li><a href="https://medium.com/@debbyji/%E7%94%A8-json-server-%E6%A8%A1%E6%93%AC-restful-api-f07abda3927c">用 JSON Server 模擬 RESTful API - medium</a> - 2019</li><li><a href="https://jsonplaceholder.typicode.com/">JSON Placeholder - 官方</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> link </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Python</title>
      <link href="2021/04/04/link-Python/"/>
      <url>2021/04/04/link-Python/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://mofanpy.com/">莫煩Python</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Vue全家餐</title>
      <link href="2021/03/22/link-Vue%E5%85%A8%E5%AE%B6%E9%A4%90/"/>
      <url>2021/03/22/link-Vue%E5%85%A8%E5%AE%B6%E9%A4%90/</url>
      
        <content type="html"><![CDATA[<h4 id="Vue-源碼探索"><a href="#Vue-源碼探索" class="headerlink" title="Vue 源碼探索"></a>Vue 源碼探索</h4><ul><li><a href="https://ustbhuangyi.github.io/vue-analysis/v2/prepare/">Vue2技術揭秘</a></li><li><a href="https://ustbhuangyi.github.io/vue-analysis/v3/new/">Vue3技術揭秘</a></li></ul><a id="more"></a><h4 id="Cli"><a href="#Cli" class="headerlink" title="Cli"></a>Cli</h4><ul><li><p><a href="https://juejin.cn/post/6844903919911436296">Vue Cli3 MPA 多页面配置 - 掘金</a> - 2019</p></li><li><p><a href="https://cli.vuejs.org/zh/guide/">Vue Cli學習教程 - 官方</a></p></li><li><p><a href="https://cli.vuejs.org/zh/config/#%E5%85%A8%E5%B1%80-cli-%E9%85%8D%E7%BD%AE">Vue Cli學習教程-配置 - 官方</a></p></li><li><p><a href="https://staven630.github.io/vue-cli4-config/">vue-cli4全面配置（持續更新）</a></p></li><li><p><a href="https://cli.vuejs.org/zh/guide/webpack.html#%E5%AE%A1%E6%9F%A5%E9%A1%B9%E7%9B%AE%E7%9A%84-webpack-%E9%85%8D%E7%BD%AE">Vue Cli學習教程-審查項目的webpack 配置 - 官方</a></p></li><li><p><a href="https://github.com/neutrinojs/webpack-chain">webpack-chain - Github</a></p></li><li><p><a href="https://forum.vuejs.org/t/chainwebpack-configurewebpack/68750">chainWebpack與configureWebpack</a></p></li><li><p><a href="https://juejin.cn/post/6844904138954801166">前端工程化：webpack-chain - 掘金</a> - 2020</p></li><li><p><a href="https://blog.csdn.net/weixin_43443341/article/details/108865372">configureWebpack、chainWebpack配置vue.config.js - CSDN</a> - 2020</p></li><li><p><a href="https://juejin.cn/post/6844904154360446983">Vue CLI 源碼探索 - 掘金</a> - 2020</p></li><li><h5 id="多頁"><a href="#多頁" class="headerlink" title="多頁"></a>多頁</h5><ul><li><a href="https://medium.com/@nchuuu/%E5%88%A9%E7%94%A8vue-cli-%E9%80%B2%E8%A1%8C%E5%A4%9A%E9%A0%81%E6%89%93%E5%8C%85-633b39bb157">Vue-CLI 製作 SPA 很方便，那需要多頁面的時候呢？ - Medium</a> - 2019</li><li><a href="https://github.com/liuyunzhuge/vue-multi-page-demo">vue-multi-page-demo - Github</a> - 2019</li><li><a href="https://blog.liuyunzhuge.com/2019/12/21/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8vue-cli4%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%A4%9A%E9%A1%B5%E5%BA%94%E7%94%A8/">如何使用vue-cli4构建一个多页应用 - 流云诸葛</a> - 2019</li></ul></li></ul><h4 id="Vue-Loader"><a href="#Vue-Loader" class="headerlink" title="Vue Loader"></a>Vue Loader</h4><ul><li><a href="https://vue-loader.vuejs.org/zh/spec.html">Vue 單文件組件(SFC) 規範 - 官方</a></li><li><a href="https://awdr74100.github.io/2020-04-13-webpack-vueloader/">Webpack 前端打包工具 - 使用 vue-loader 手動建置出 Vue CLI 環境 - Roya’s Blog</a></li></ul><h4 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h4><ul><li><a href="https://vuex.vuejs.org/zh/">[官方] - Vuex</a></li><li><a href="https://medium.com/itsems-frontend/vue-vuex1-state-mutations-364163b3acac">Vuex 是什麼? 怎麼用? - Medium</a> - 2020</li></ul><h4 id="Vue-Router"><a href="#Vue-Router" class="headerlink" title="Vue Router"></a>Vue Router</h4><ul><li><a href="https://router.vuejs.org/zh/">[官方] - Vue Router</a></li><li><a href="https://www.jianshu.com/p/f920b0e994dc">使用vue-router+vuex進行導航守衛 - 簡書</a> - 2018</li><li><a href="https://zhuanlan.zhihu.com/p/54112006">vue-router導航守衛，不懂的來 - 知乎</a> - 2019</li><li><a href="https://zhuanlan.zhihu.com/p/54112006">Vue Router 導航守衛 - JC2182</a></li></ul><h4 id="Vue套件"><a href="#Vue套件" class="headerlink" title="Vue套件"></a>Vue套件</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10188743">[iT邦] 其他現成UI - Ralph</a> - 2017</li></ul><h4 id="NuxtJs"><a href="#NuxtJs" class="headerlink" title="NuxtJs"></a>NuxtJs</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20103424/ironman/1961">[iT邦] Nuxt - 使用 Vue.js 做 SSR 的第一哩路 - Ralph</a> - 2018</li><li><a href="https://medium.com/@jackercleaninglab/ssr-nuxt-js-%E8%B6%85%E5%85%A5%E9%96%80-84a0823b45ed">SSR — Nuxt.js 超入門 - Medium</a> - 2019</li><li><a href="https://www.youtube.com/watch?v=szrRDJBFmvQ&feature=youtu.be">[YouTube] Vue Nuxt 介紹與實作範例 - 六角學院</a> - 2018</li><li><a href="https://www.youtube.com/watch?v=wgW1o4Nswqs&feature=youtu.be">[YouTube] 👨‍💻 Nuxt 怎麼一回事｜#1 起源、環境安裝與第一次的開發 - Alex 宅開發</a> - 2019</li></ul><h4 id="Vuetify"><a href="#Vuetify" class="headerlink" title="Vuetify"></a>Vuetify</h4><ul><li><a href="https://vuetifyjs.com/zh-Hans/introduction/why-vuetify/">Vuetify - 官方教學文件</a></li></ul><h4 id="Vite"><a href="#Vite" class="headerlink" title="Vite"></a>Vite</h4><ul><li><a href="https://kknews.cc/code/n2mrkvg.amp">是什麼導致尤大大選擇放棄Webpack？【vite 原理解析】 - 每日頭條</a></li></ul><h4 id="PreRender-spa"><a href="#PreRender-spa" class="headerlink" title="PreRender-spa"></a>PreRender-spa</h4><ul><li><a href="https://awdr74100.github.io/2020-07-13-webpack-prerenderspaplugin/">使用 prerender-spa-plugin 預渲染單頁應用 - Roya’s Blog</a> - 2020</li><li><a href="https://www.mdeditor.tw/pl/pyyk/zh-hk">基於prerender-spa-plugin的Vue.js預渲染實踐 - MdEditor</a> - 2020</li><li><a href="https://www.itread01.com/content/1544722025.html">單頁面的SEO優化：在vue中使用prerender-spa-plugin - itread01</a> - 2018</li></ul><h4 id="PWA-漸進式網頁應用程式"><a href="#PWA-漸進式網頁應用程式" class="headerlink" title="PWA 漸進式網頁應用程式"></a>PWA 漸進式網頁應用程式</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10215567">[iT邦]30 天 Progressive Web App 學習筆記 - iamya</a> - 2016</li><li><a href="https://3c.ltn.com.tw/news/37555">Google Chrome 必學秘技！讓網頁一鍵變身桌面 App - 3C科技</a> - 2019</li><li><a href="https://medium.com/@zhenghaoli1996/%E8%A8%98%E9%8C%84%E4%B8%80%E6%AC%A1%E5%9F%BA%E6%96%BCvue-typescript-pwa%E7%9A%84%E9%A0%85%E7%9B%AE%E7%94%B1%E9%96%8B%E7%99%BC%E5%88%B0%E9%83%A8%E7%BD%B2-6d5189ddc22d">記錄一次基於vue、typescript、pwa的項目由開發到部署 - Medium</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/articles/10215567">[iT邦]什麼是漸進式網頁應用(Progressive Web Application) - rehome</a> - 2019</li></ul><h4 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h4><ul><li><h5 id="父子關係"><a href="#父子關係" class="headerlink" title="父子關係"></a>父子關係</h5><ul><li><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/204272/">父元件呼叫子元件方法及事件 - 程式前沿</a> - 2018</li></ul></li><li><h5 id="部署Github"><a href="#部署Github" class="headerlink" title="部署Github"></a>部署Github</h5><ul><li><a href="https://dean34520.medium.com/vue%E7%B3%BB%E5%88%97%E6%96%87-%E5%B0%87vue%E6%AA%94%E6%A1%88%E9%83%A8%E7%BD%B2%E8%87%B3github-334951cadede">將Vue專案部署至Github Pages - Medium</a> - 2019</li></ul></li></ul><h4 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h4><ul><li><a href="https://www.creative-tim.com/blog/freebies/vuejs/top-vuejs-free-templates-for-this-summer/">10+ Top Vue.js Free Templates for 2021 - creative-tim</a> - 2021</li></ul><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><ul><li><p><a href="https://vuejsexamples.com/">Vue.js Examples - 總匯</a></p></li><li><p><a href="https://kknews.cc/code/kbejqlb.html">實用的vue插件大匯總，趕緊收藏起來 - 每日頭條</a> - 2018</p></li><li><h5 id="虛擬滾動"><a href="#虛擬滾動" class="headerlink" title="虛擬滾動"></a>虛擬滾動</h5><ul><li><a href="https://github.com/tangbc/vue-virtual-scroll-list">vue-virtual-scroll-list - Github</a> - 2019</li><li><a href="https://github.com/Akryum/vue-virtual-scroller">vue-virtual-scroller - Github</a> - 2020</li></ul></li><li><h5 id="格式化時間"><a href="#格式化時間" class="headerlink" title="格式化時間"></a>格式化時間</h5><ul><li><a href="https://segmentfault.com/a/1190000021200938">vue+moment.js使用 - segmentfault</a> - 2019</li><li><a href="https://blog.csdn.net/lihefei_coder/article/details/92628030">vue中使用Moment.js - CSDN</a> - 2019</li></ul></li></ul><h4 id="Blog-參考"><a href="#Blog-參考" class="headerlink" title="Blog 參考"></a>Blog 參考</h4><ul><li><a href="https://github.com/uncleLian/vue-blog">vue-blog - Github</a> - 2019</li><li><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/#%E5%8A%9F%E8%83%BD">vue-element-admin</a></li></ul><h4 id="API"><a href="#API" class="headerlink" title="API"></a>API</h4><ul><li><a href="https://kuro.tw/posts/2017/06/07/%E5%A6%82%E4%BD%95%E5%9C%A8-Vue-CLI-%E5%BB%BA%E7%AB%8B%E7%9A%84%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E5%91%BC%E5%8F%AB%E8%B7%A8%E5%9F%9F%E9%81%A0%E7%AB%AF-RESTful-APIs/">如何在 Vue-CLI 建立的開發環境呼叫跨域遠端 RESTful APIs - Kuro’s Blog</a> - 2017</li><li><a href="https://medium.com/%E4%BC%81%E9%B5%9D%E4%B9%9F%E6%87%82%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/vue%E5%B0%88%E6%A1%88%E4%B8%AD%E7%9A%84api%E7%AE%A1%E7%90%86%E5%8F%8A%E5%B0%81%E8%A3%9D-bccb77f82f98">Vue專案中的API管理及封裝 - 企鵝也懂程式設計</a> - 2019</li><li><a href="https://zhuanlan.zhihu.com/p/231082156">Vue Axios之生產/開發環境跨域問題解決 - 知乎</a> - 2020</li></ul><h4 id="性能優化"><a href="#性能優化" class="headerlink" title="性能優化"></a>性能優化</h4><ul><li><a href="https://juejin.cn/post/6844903913410314247">Vue 項目性能優化— 實踐指南（網上最全/ 詳細） - 掘金</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/articles/10249161">[iT邦] Vue Speed Level Up - Peter Lu</a> - 2020</li><li><a href="https://mp.weixin.qq.com/s/6BrE36U72LD_kGX0N1jQ5Q">面試官問Vue 性能優化，我該怎麼回答？ - 畫漫畫的程序員</a> - 2021</li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://hackmd.io/@FortesHuang/rJf6CYynS">VueJS 教學筆記: 正規表示法 - hackmd</a> - 2019</li><li><a href="https://iter01.com/536683.html">Vue系列-import動態引入的坑 - IT人</a> - 2020</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Vue全家餐 </tag>
            
            <tag> Vue套件 </tag>
            
            <tag> Cli3 </tag>
            
            <tag> Vuex </tag>
            
            <tag> Vue Router </tag>
            
            <tag> NuxtJs </tag>
            
            <tag> Vuetify </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_規範</title>
      <link href="2021/03/22/link-%E8%A6%8F%E7%AF%84/"/>
      <url>2021/03/22/link-%E8%A6%8F%E7%AF%84/</url>
      
        <content type="html"><![CDATA[<h4 id="CSS規範"><a href="#CSS規範" class="headerlink" title="CSS規範"></a>CSS規範</h4><ul><li><a href="https://github.com/doggy8088/CSS-Guidelines">CSS 筆記、建議與指導方針總整理 - doggy8088</a> - 2013</li></ul><a id="more"></a><h4 id="Vue規範"><a href="#Vue規範" class="headerlink" title="Vue規範"></a>Vue規範</h4><ul><li><a href="https://lq782655835.github.io/blogs/team-standard/1.standard-ai-vue.html">AI前端Vue規範 - springleo’s blog</a></li></ul><h4 id="團隊規範-含各項規範"><a href="#團隊規範-含各項規範" class="headerlink" title="團隊規範(含各項規範)"></a>團隊規範(含各項規範)</h4><ul><li><a href="https://lq782655835.github.io/blogs/team-standard/0.standard-ai-summary.html">團隊規範 - springleo</a></li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/642504/">if我是前端團隊Leader，怎麼制定前端協作規範? - 程式前沿</a> - 2019</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/738497/">前端團隊代碼風格統一規範實踐 - 程式前沿</a> - 2020</li><li><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/29402/">Airbnb JavaScript 編碼風格指南（2018年最新版） - 程式前沿</a> - 2018</li></ul><h4 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h4><ul><li><a href="https://pjchender.blogspot.com/2019/07/vue-vue-style-guide-eslint-plugin-vue.html?m=1">[Vue] 整合 Vue style guide, eslint-plugin-vue 和 VSCode - Pjchender</a> - 2019</li><li><a href="https://www.tpisoftware.com/tpu/articleDetails/1950">啟用 ESLint 跟 stylelint 保持良好的 Coding Style - TPIU</a> - 2020</li><li><a href="https://github.com/stylelint/vscode-stylelint">vscode-stylelint - Github</a></li><li><a href="https://stylelint.io/user-guide/usage/node-api#configoverrides">stylelint - 官方</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> CSS </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 規範 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_SVG</title>
      <link href="2021/03/12/link-SVG/"/>
      <url>2021/03/12/link-SVG/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://kknews.cc/news/qepgpko.html">曾經自己學習的前端矢量圖繪製 - 每日頭條</a> - 2017</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> SVG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Webpack</title>
      <link href="2021/03/12/link-Webpack/"/>
      <url>2021/03/12/link-Webpack/</url>
      
        <content type="html"><![CDATA[<h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20107789/ironman/3332">[iT邦] 尋覓 webpack - 藉由 webpack 學習網頁前端工程的精妙之處 - Peter Chen</a> - 2020</li><li><a href="https://webpack.docschina.org/concepts/">v4.0教程 - 官方</a></li><li><a href="https://www.yuque.com/fe9/basic/fnvdeu">Webpack基本配置 - 前端九部</a></li></ul><a id="more"></a><h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://shunnnet.github.io/blog/2020/04/07/%E4%BD%BF%E7%94%A8%20Webpack%20%E8%93%8B%E5%87%BA%20Vue-CLI%20%E7%9A%84%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F/">使用 Webpack 蓋出 Vue-CLI 的打包程序 - 邊緣邊緣人</a> - 2020</li></ul><h4 id="環境建置"><a href="#環境建置" class="headerlink" title="環境建置"></a>環境建置</h4><ul><li><a href="https://devs.tw/post/60">手動建置一個Webpack-Vue的開發環境 - Devs.tw</a> - 2018</li></ul><h4 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h4><ul><li><h5 id="postcss-loader"><a href="#postcss-loader" class="headerlink" title="postcss-loader"></a>postcss-loader</h5><ul><li><a href="https://awdr74100.github.io/2020-03-05-webpack-postcssloader/">Webpack 前端打包工具 - 使用 postcss-loader 自動為 CSS 增加 Prefix - Roya’s Blog</a> - 2020</li></ul></li></ul><h4 id="plugin"><a href="#plugin" class="headerlink" title="plugin"></a>plugin</h4>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 管理工具 </tag>
            
            <tag> Webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_工具</title>
      <link href="2021/02/26/link-%E5%B7%A5%E5%85%B7/"/>
      <url>2021/02/26/link-%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h4 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h4><ul><li><a href="http://tools.jb51.net/">腳本之家</a></li></ul><a id="more"></a><h4 id="文書處理"><a href="#文書處理" class="headerlink" title="文書處理"></a>文書處理</h4><ul><li><a href="https://www.ypppt.com/">優品PPT</a></li></ul><h4 id="FlipaClip"><a href="#FlipaClip" class="headerlink" title="FlipaClip"></a>FlipaClip</h4><ul><li><a href="https://www.youtube.com/watch?v=_dBRzmrmchU">[YouTube] 用FlipaClip或PPT製作千萬級爆款視頻，10分鐘學會2種方法！</a> - 2020</li></ul><h4 id="正規表達式"><a href="#正規表達式" class="headerlink" title="正規表達式"></a>正規表達式</h4><ul><li><a href="http://tools.jb51.net/regex/create_reg">正規表達式線上生成工具 - 腳本之家</a></li><li><a href="http://tools.jb51.net/regex/javascript">正規表達式線上測試工具 - 腳本之家</a></li></ul><h4 id="Can-I-系列"><a href="#Can-I-系列" class="headerlink" title="Can I 系列"></a>Can I 系列</h4><ul><li><a href="https://caniuse.com/">Can I use</a></li><li><a href="https://www.caniemail.com/">Can I email</a></li></ul><h4 id="線上編譯器"><a href="#線上編譯器" class="headerlink" title="線上編譯器"></a>線上編譯器</h4><ul><li><a href="https://codesandbox.io/">CodeSandbox</a></li><li><a href="https://html.cafe/">HTML 線上編輯器</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_web-資訊安全</title>
      <link href="2021/02/26/link-web%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/"/>
      <url>2021/02/26/link-web%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="網站安全"><a href="#網站安全" class="headerlink" title="網站安全"></a>網站安全</h4><ul><li><a href="https://medium.com/%E7%A8%8B%E5%BC%8F%E7%8C%BF%E5%90%83%E9%A6%99%E8%95%89/same-origin-policy-%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96-%E4%B8%80%E5%88%87%E5%AE%89%E5%85%A8%E7%9A%84%E5%9F%BA%E7%A4%8E-36432565a226">Same Origin Policy 同源政策 ! 一切安全的基礎 - Medium</a> - 2018</li><li><a href="https://medium.com/%E7%A8%8B%E5%BC%8F%E7%8C%BF%E5%90%83%E9%A6%99%E8%95%89/%E7%9B%AE%E9%8C%84%E9%81%8D%E6%AD%B7-path-traversal-%E6%94%BB%E6%93%8A%E6%89%8B%E6%B3%95-238218d5115d">目錄遍歷 Path Traversal 攻擊手法 - Medium</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Web資訊安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[速查表]_Emmet</title>
      <link href="2021/02/23/%E9%80%9F%E6%9F%A5%E8%A1%A8-emmet/"/>
      <url>2021/02/23/%E9%80%9F%E6%9F%A5%E8%A1%A8-emmet/</url>
      
        <content type="html"><![CDATA[<h3 id="基本階層語法"><a href="#基本階層語法" class="headerlink" title="基本階層語法"></a><font color=#FF6600>基本階層語法</font></h3><ul><li><h4 id="nav-gt-ul-gt-li"><a href="#nav-gt-ul-gt-li" class="headerlink" title="nav&gt;ul&gt;li"></a><code>nav&gt;ul&gt;li</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><hr><h3 id="加入運算式「-」"><a href="#加入運算式「-」" class="headerlink" title="加入運算式「*」"></a><font color=#FF6600>加入運算式「*」</font></h3><ul><li><h4 id="ul-gt-li-5"><a href="#ul-gt-li-5" class="headerlink" title="ul&gt;li*5"></a><code>ul&gt;li*5</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="加入字元變數「-」"><a href="#加入字元變數「-」" class="headerlink" title="加入字元變數「$」"></a><font color=#FF6600>加入字元變數「$」</font></h3><ul><li><h4 id="ul-gt-li-item-5"><a href="#ul-gt-li-item-5" class="headerlink" title="ul&gt;li.item$*5"></a><code>ul&gt;li.item$*5</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="h-title-item-Header-3"><a href="#h-title-item-Header-3" class="headerlink" title="h$[title=item$]{Header $}*3"></a><code>h$[title=item$]&#123;Header $&#125;*3</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">&quot;item1&quot;</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">title</span>=<span class="string">&quot;item2&quot;</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">title</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>Header 3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ul-gt-li-item-5-1"><a href="#ul-gt-li-item-5-1" class="headerlink" title="ul&gt;li.item$$$*5"></a><code>ul&gt;li.item$$$*5</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item002&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item003&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item005&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ul-gt-li-item-5-2"><a href="#ul-gt-li-item-5-2" class="headerlink" title="ul&gt;li.item$@-*5"></a><code>ul&gt;li.item$@-*5</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ul-gt-li-item-3-5"><a href="#ul-gt-li-item-3-5" class="headerlink" title="ul&gt;li.item$@3*5"></a><code>ul&gt;li.item$@3*5</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item7&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="form-search-wide"><a href="#form-search-wide" class="headerlink" title="form#search.wide"></a><code>form#search.wide</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;search&quot;</span> <span class="attr">class</span>=<span class="string">&quot;wide&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="p-class1-class2-class3"><a href="#p-class1-class2-class3" class="headerlink" title="p.class1.class2.class3"></a><code>p.class1.class2.class3</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;class1 class2 class3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="ID-and-CLASS-attributes-快速輸出id和class標籤結構"><a href="#ID-and-CLASS-attributes-快速輸出id和class標籤結構" class="headerlink" title="ID and CLASS attributes 快速輸出id和class標籤結構"></a><font color=#FF6600>ID and CLASS attributes 快速輸出id和class標籤結構</font></h3><ul><li><h4 id="header"><a href="#header" class="headerlink" title="#header"></a><code>#header</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="header-1"><a href="#header-1" class="headerlink" title=".header"></a><code>.header</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="Sibling-組合標籤"><a href="#Sibling-組合標籤" class="headerlink" title="Sibling: + 組合標籤"></a><font color=#FF6600>Sibling: + 組合標籤</font></h3><ul><li><h4 id="div-p-bq"><a href="#div-p-bq" class="headerlink" title="div+p+bq"></a><code>div+p+bq</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="Climb-up"><a href="#Climb-up" class="headerlink" title="Climb-up: ^"></a><font color=#FF6600>Climb-up: ^</font></h3><ul><li><h4 id="div-div-gt-p-gt-span-em-bq"><a href="#div-div-gt-p-gt-span-em-bq" class="headerlink" title="div+div&gt;p&gt;span+em^bq"></a><code>div+div&gt;p&gt;span+em^bq</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="div-div-gt-p-gt-span-em-bq-1"><a href="#div-div-gt-p-gt-span-em-bq-1" class="headerlink" title="div+div&gt;p&gt;span+em^^bq"></a><code>div+div&gt;p&gt;span+em^^bq</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="Grouping"><a href="#Grouping" class="headerlink" title="Grouping: ()"></a><font color=#FF6600>Grouping: ()</font></h3><ul><li><h4 id="div-gt-header-gt-ul-gt-li-2-gt-a-footer-gt-p"><a href="#div-gt-header-gt-ul-gt-li-2-gt-a-footer-gt-p" class="headerlink" title="div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p"></a><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="div-gt-dl-gt-dt-dd-3-footer-gt-p"><a href="#div-gt-dl-gt-dt-dd-3-footer-gt-p" class="headerlink" title="(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p"></a><code>(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="Custom-attributes-自定義對象"><a href="#Custom-attributes-自定義對象" class="headerlink" title="Custom attributes 自定義對象"></a><font color=#FF6600>Custom attributes 自定義對象</font></h3><ul><li><h4 id="p-title-quot-Hello-world-quot"><a href="#p-title-quot-Hello-world-quot" class="headerlink" title="p[title=&quot;Hello world&quot;]"></a><code>p[title=&quot;Hello world&quot;]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;Hello world&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="td-rowspan-2-colspan-3-title"><a href="#td-rowspan-2-colspan-3-title" class="headerlink" title="td[rowspan=2 colspan=3 title]"></a><code>td[rowspan=2 colspan=3 title]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="a-39-value1-39-b-quot-value2-quot"><a href="#a-39-value1-39-b-quot-value2-quot" class="headerlink" title="[a=&#39;value1&#39; b=&quot;value2&quot;]"></a><code>[a=&#39;value1&#39; b=&quot;value2&quot;]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">a</span>=<span class="string">&quot;value1&quot;</span> <span class="attr">b</span>=<span class="string">&quot;value2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="Text"><a href="#Text" class="headerlink" title="Text: {}"></a><font color=#FF6600>Text: {}</font></h3><ul><li><h4 id="a-Click-me"><a href="#a-Click-me" class="headerlink" title="a{Click me}"></a><code>a&#123;Click me&#125;</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="p-gt-Click-a-here-to-continue"><a href="#p-gt-Click-a-here-to-continue" class="headerlink" title="p&gt;{Click }+a{here}+{ to continue}"></a><code>p&gt;&#123;Click &#125;+a&#123;here&#125;+&#123; to continue&#125;</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Click<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>here<span class="tag">&lt;/<span class="name">a</span>&gt;<span class="name">to</span></span> continue<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="Implicit-tag-names"><a href="#Implicit-tag-names" class="headerlink" title="Implicit tag names"></a><font color=#FF6600>Implicit tag names</font></h3><ul><li><h4 id="class"><a href="#class" class="headerlink" title=".class"></a><code>.class</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="em-gt-class"><a href="#em-gt-class" class="headerlink" title="em&gt;.class"></a><code>em&gt;.class</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ul-gt-class"><a href="#ul-gt-class" class="headerlink" title="ul&gt;.class"></a><code>ul&gt;.class</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="table-gt-row-gt-col"><a href="#table-gt-row-gt-col" class="headerlink" title="table&gt;.row&gt;.col"></a><code>table&gt;.row&gt;.col</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="html-5"><a href="#html-5" class="headerlink" title="html:5"></a><code>html:5</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="html元素快速輸出"><a href="#html元素快速輸出" class="headerlink" title="html元素快速輸出"></a><font color=#FF6600>html元素快速輸出</font></h3><ul><li><h4 id="a"><a href="#a" class="headerlink" title="a"></a><code>a</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="a-link"><a href="#a-link" class="headerlink" title="a:link"></a><code>a:link</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="a-mail"><a href="#a-mail" class="headerlink" title="a:mail"></a><code>a:mail</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="abbr"><a href="#abbr" class="headerlink" title="abbr"></a><code>abbr</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="acronym"><a href="#acronym" class="headerlink" title="acronym"></a><code>acronym</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">acronym</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">acronym</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="base"><a href="#base" class="headerlink" title="base"></a><code>base</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="basefont"><a href="#basefont" class="headerlink" title="basefont"></a><code>basefont</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">basefont</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="br"><a href="#br" class="headerlink" title="br"></a><code>br</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="frame"><a href="#frame" class="headerlink" title="frame"></a><code>frame</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="hr"><a href="#hr" class="headerlink" title="hr"></a><code>hr</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bdo"><a href="#bdo" class="headerlink" title="bdo"></a><code>bdo</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bdo-r"><a href="#bdo-r" class="headerlink" title="bdo:r"></a><code>bdo:r</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">&quot;rtl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bdo-l"><a href="#bdo-l" class="headerlink" title="bdo:l"></a><code>bdo:l</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">&quot;ltr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="col"><a href="#col" class="headerlink" title="col"></a><code>col</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">col</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link"><a href="#link" class="headerlink" title="link"></a><code>link</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-css"><a href="#link-css" class="headerlink" title="link:css"></a><code>link:css</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-print"><a href="#link-print" class="headerlink" title="link:print"></a><code>link:print</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;print.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;print&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-favicon"><a href="#link-favicon" class="headerlink" title="link:favicon"></a><code>link:favicon</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.ico&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-touch"><a href="#link-touch" class="headerlink" title="link:touch"></a><code>link:touch</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.png&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-rss"><a href="#link-rss" class="headerlink" title="link:rss"></a><code>link:rss</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/rss+xml&quot;</span> <span class="attr">title</span>=<span class="string">&quot;RSS&quot;</span> <span class="attr">href</span>=<span class="string">&quot;rss.xml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="link-atom"><a href="#link-atom" class="headerlink" title="link:atom"></a><code>link:atom</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/atom+xml&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Atom&quot;</span> <span class="attr">href</span>=<span class="string">&quot;atom.xml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta"><a href="#meta" class="headerlink" title="meta"></a><code>meta</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-utf"><a href="#meta-utf" class="headerlink" title="meta:utf"></a><code>meta:utf</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-win"><a href="#meta-win" class="headerlink" title="meta:win"></a><code>meta:win</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=windows-1251&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-vp"><a href="#meta-vp" class="headerlink" title="meta:vp"></a><code>meta:vp</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="meta-compat"><a href="#meta-compat" class="headerlink" title="meta:compat"></a><code>meta:compat</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=7&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="style"><a href="#style" class="headerlink" title="style"></a><code>style</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="script"><a href="#script" class="headerlink" title="script"></a><code>script</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="script-src"><a href="#script-src" class="headerlink" title="script:src"></a><code>script:src</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="img"><a href="#img" class="headerlink" title="img"></a><code>img</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a><code>iframe</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="embed"><a href="#embed" class="headerlink" title="embed"></a><code>embed</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="object"><a href="#object" class="headerlink" title="object"></a><code>object</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="param"><a href="#param" class="headerlink" title="param"></a><code>param</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="map"><a href="#map" class="headerlink" title="map"></a><code>map</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area"><a href="#area" class="headerlink" title="area"></a><code>area</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-d"><a href="#area-d" class="headerlink" title="area:d"></a><code>area:d</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;default&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-c"><a href="#area-c" class="headerlink" title="area:c"></a><code>area:c</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-r"><a href="#area-r" class="headerlink" title="area:r"></a><code>area:r</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="area-p"><a href="#area-p" class="headerlink" title="area:p"></a><code>area:p</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;poly&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="form"><a href="#form" class="headerlink" title="form"></a><code>form</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="form-get"><a href="#form-get" class="headerlink" title="form:get"></a><code>form:get</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="form-post"><a href="#form-post" class="headerlink" title="form:post"></a><code>form:post</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="label"><a href="#label" class="headerlink" title="label"></a><code>label</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input"><a href="#input" class="headerlink" title="input"></a><code>input</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="inp"><a href="#inp" class="headerlink" title="inp"></a><code>inp</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-hidden-或-input-type-hidden-name-或-input-h-或-input-hidden"><a href="#input-hidden-或-input-type-hidden-name-或-input-h-或-input-hidden" class="headerlink" title="input:hidden 或 input[type=hidden name] 或 input:h 或 input:hidden"></a><code>input:hidden</code> 或 <code>input[type=hidden name]</code> 或 <code>input:h</code> 或 <code>input:hidden</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-text-或-input-t-或-inp"><a href="#input-text-或-input-t-或-inp" class="headerlink" title="input:text 或 input:t 或 inp"></a><code>input:text</code> 或 <code>input:t</code> 或 <code>inp</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-search-或-inp-type-search"><a href="#input-search-或-inp-type-search" class="headerlink" title="input:search 或 inp[type=search]"></a><code>input:search</code> 或 <code>inp[type=search]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-email-或-inp-type-email"><a href="#input-email-或-inp-type-email" class="headerlink" title="input:email 或 inp[type=email]"></a><code>input:email</code> 或 <code>inp[type=email]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-url-或-inp-type-url"><a href="#input-url-或-inp-type-url" class="headerlink" title="input:url 或 inp[type=url]"></a><code>input:url</code> 或 <code>inp[type=url]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-password-或-inp-type-password-或-input-p-或-input-password"><a href="#input-password-或-inp-type-password-或-input-p-或-input-password" class="headerlink" title="input:password 或 inp[type=password] 或 input:p 或 input:password"></a><code>input:password</code> 或 <code>inp[type=password]</code> 或 <code>input:p</code> 或 <code>input:password</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-datetime-或-inp-type-datetime"><a href="#input-datetime-或-inp-type-datetime" class="headerlink" title="input:datetime 或 inp[type=datetime]"></a><code>input:datetime</code> 或 <code>inp[type=datetime]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;datetime&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-date-或-inp-type-date"><a href="#input-date-或-inp-type-date" class="headerlink" title="input:date 或 inp[type=date]"></a><code>input:date</code> 或 <code>inp[type=date]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-datetime-local-或-inp-type-datetime-local"><a href="#input-datetime-local-或-inp-type-datetime-local" class="headerlink" title="input:datetime-local 或 inp[type=datetime-local]"></a><code>input:datetime-local</code> 或 <code>inp[type=datetime-local]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;datetime-local&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-month-或-inp-type-month"><a href="#input-month-或-inp-type-month" class="headerlink" title="input:month 或 inp[type=month]"></a><code>input:month</code> 或 <code>inp[type=month]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;month&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-week-或-inp-type-week"><a href="#input-week-或-inp-type-week" class="headerlink" title="input:week 或 inp[type=week]"></a><code>input:week</code> 或 <code>inp[type=week]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;week&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-time-或-inp-type-time"><a href="#input-time-或-inp-type-time" class="headerlink" title="input:time 或 inp[type=time]"></a><code>input:time</code> 或 <code>inp[type=time]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;time&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-number-或-inp-type-number"><a href="#input-number-或-inp-type-number" class="headerlink" title="input:number 或 inp[type=number]"></a><code>input:number</code> 或 <code>inp[type=number]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-color-或-inp-type-color"><a href="#input-color-或-inp-type-color" class="headerlink" title="input:color 或 inp[type=color]"></a><code>input:color</code> 或 <code>inp[type=color]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-c-或-input-checkbox"><a href="#input-c-或-input-checkbox" class="headerlink" title="input:c 或 input:checkbox"></a><code>input:c</code> 或 <code>input:checkbox</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-radio-或-inp-type-radio-或-input-r"><a href="#input-radio-或-inp-type-radio-或-input-r" class="headerlink" title="input:radio 或 inp[type=radio] 或 input:r"></a><code>input:radio</code> 或 <code>inp[type=radio]</code> 或 <code>input:r</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-range-或-inp-type-range"><a href="#input-range-或-inp-type-range" class="headerlink" title="input:range 或 inp[type=range]"></a><code>input:range</code> 或 <code>inp[type=range]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-file-或-inp-type-file-或-input-f"><a href="#input-file-或-inp-type-file-或-input-f" class="headerlink" title="input:file 或 inp[type=file] 或 input:f"></a><code>input:file</code> 或 <code>inp[type=file]</code> 或 <code>input:f</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-submit-或-input-s"><a href="#input-submit-或-input-s" class="headerlink" title="input:submit 或 input:s"></a><code>input:submit</code> 或 <code>input:s</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-image"><a href="#input-image" class="headerlink" title="input:image"></a><code>input:image</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-image-或-input-i"><a href="#input-image-或-input-i" class="headerlink" title="input:image 或 input:i"></a><code>input:image</code> 或 <code>input:i</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-button"><a href="#input-button" class="headerlink" title="input:button"></a><code>input:button</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-button-或-input-b"><a href="#input-button-或-input-b" class="headerlink" title="input:button 或 input:b"></a><code>input:button</code> 或 <code>input:b</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="isindex"><a href="#isindex" class="headerlink" title="isindex"></a><code>isindex</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">isindex</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="input-reset-或-input-button-type-reset"><a href="#input-reset-或-input-button-type-reset" class="headerlink" title="input:reset 或 input:button[type=reset]"></a><code>input:reset</code> 或 <code>input:button[type=reset]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="select"><a href="#select" class="headerlink" title="select"></a><code>select</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="option"><a href="#option" class="headerlink" title="option"></a><code>option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="textarea"><a href="#textarea" class="headerlink" title="textarea"></a><code>textarea</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="menu-context-或-menu-type-context-gt-或-menu-c"><a href="#menu-context-或-menu-type-context-gt-或-menu-c" class="headerlink" title="menu:context 或 menu[type=context]&gt; 或 menu:c"></a><code>menu:context</code> 或 <code>menu[type=context]&gt;</code> 或 <code>menu:c</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">type</span>=<span class="string">&quot;context&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="menu-toolbar-或-menu-type-toolbar-gt-或-menu-t"><a href="#menu-toolbar-或-menu-type-toolbar-gt-或-menu-t" class="headerlink" title="menu:toolbar 或 menu[type=toolbar]&gt; 或 menu:t"></a><code>menu:toolbar</code> 或 <code>menu[type=toolbar]&gt;</code> 或 <code>menu:t</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">type</span>=<span class="string">&quot;toolbar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="video"><a href="#video" class="headerlink" title="video"></a><code>video</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="audio"><a href="#audio" class="headerlink" title="audio"></a><code>audio</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="html-xml"><a href="#html-xml" class="headerlink" title="html:xml"></a><code>html:xml</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="keygen"><a href="#keygen" class="headerlink" title="keygen"></a><code>keygen</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keygen</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="command"><a href="#command" class="headerlink" title="command"></a><code>command</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">command</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="bq-或-blockquote"><a href="#bq-或-blockquote" class="headerlink" title="bq 或 blockquote"></a><code>bq</code> 或 <code>blockquote</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="acr-或-acronym"><a href="#acr-或-acronym" class="headerlink" title="acr 或 acronym"></a><code>acr</code> 或 <code>acronym</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">acronym</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">acronym</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="fig-或-figure"><a href="#fig-或-figure" class="headerlink" title="fig 或 figure"></a><code>fig</code> 或 <code>figure</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="figc-或-figcaption"><a href="#figc-或-figcaption" class="headerlink" title="figc 或 figcaption"></a><code>figc</code> 或 <code>figcaption</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ifr-或-iframe"><a href="#ifr-或-iframe" class="headerlink" title="ifr 或 iframe"></a><code>ifr</code> 或 <code>iframe</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="emb-或-embed"><a href="#emb-或-embed" class="headerlink" title="emb 或 embed"></a><code>emb</code> 或 <code>embed</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="obj-或-object"><a href="#obj-或-object" class="headerlink" title="obj 或 object"></a><code>obj</code> 或 <code>object</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="src-或-source"><a href="#src-或-source" class="headerlink" title="src 或 source"></a><code>src</code> 或 <code>source</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span><span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cap-或-caption"><a href="#cap-或-caption" class="headerlink" title="cap 或 caption"></a><code>cap</code> 或 <code>caption</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="colg-或-colgroup"><a href="#colg-或-colgroup" class="headerlink" title="colg 或 colgroup"></a><code>colg</code> 或 <code>colgroup</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span><span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="fst-或-fset-或-fieldset"><a href="#fst-或-fset-或-fieldset" class="headerlink" title="fst 或 fset 或 fieldset"></a><code>fst</code> 或 <code>fset</code> 或 <code>fieldset</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-或-button"><a href="#btn-或-button" class="headerlink" title="btn 或 button"></a><code>btn</code> 或 <code>button</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-b-或-button-type-button"><a href="#btn-b-或-button-type-button" class="headerlink" title="btn:b 或 button[type=button]"></a><code>btn:b</code> 或 <code>button[type=button]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-r-或-button-type-reset"><a href="#btn-r-或-button-type-reset" class="headerlink" title="btn:r 或 button[type=reset]"></a><code>btn:r</code> 或 <code>button[type=reset]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="btn-s-或-button-type-submit"><a href="#btn-s-或-button-type-submit" class="headerlink" title="btn:s 或 button[type=submit]"></a><code>btn:s</code> 或 <code>button[type=submit]</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="optg-或-optgroup"><a href="#optg-或-optgroup" class="headerlink" title="optg 或 optgroup"></a><code>optg</code> 或 <code>optgroup</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">optgroup</span>&gt;</span><span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="opt-或-option"><a href="#opt-或-option" class="headerlink" title="opt 或 option"></a><code>opt</code> 或 <code>option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="tarea-或-textarea"><a href="#tarea-或-textarea" class="headerlink" title="tarea 或 textarea"></a><code>tarea</code> 或 <code>textarea</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="leg-或-legend"><a href="#leg-或-legend" class="headerlink" title="leg 或 legend"></a><code>leg</code> 或 <code>legend</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span><span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="sect-或-section"><a href="#sect-或-section" class="headerlink" title="sect 或 section"></a><code>sect</code> 或 <code>section</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="art-或-article"><a href="#art-或-article" class="headerlink" title="art 或 article"></a><code>art</code> 或 <code>article</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="hdr-或-header"><a href="#hdr-或-header" class="headerlink" title="hdr 或 header"></a><code>hdr</code> 或 <code>header</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ftr-或-footer"><a href="#ftr-或-footer" class="headerlink" title="ftr 或 footer"></a><code>ftr</code> 或 <code>footer</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="adr-或-address"><a href="#adr-或-address" class="headerlink" title="adr 或 address"></a><code>adr</code> 或 <code>address</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="dlg-或-dialog"><a href="#dlg-或-dialog" class="headerlink" title="dlg 或 dialog"></a><code>dlg</code> 或 <code>dialog</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dialog</span>&gt;</span><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="str-或-strong"><a href="#str-或-strong" class="headerlink" title="str 或 strong"></a><code>str</code> 或 <code>strong</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="prog-或-progress"><a href="#prog-或-progress" class="headerlink" title="prog 或 progress"></a><code>prog</code> 或 <code>progress</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">progress</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="datag-或-datagrid"><a href="#datag-或-datagrid" class="headerlink" title="datag 或 datagrid"></a><code>datag</code> 或 <code>datagrid</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">datagrid</span>&gt;</span><span class="tag">&lt;/<span class="name">datagrid</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="datal-或-datalist"><a href="#datal-或-datalist" class="headerlink" title="datal 或 datalist"></a><code>datal</code> 或 <code>datalist</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">datalist</span>&gt;</span><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="kg-或-keygen"><a href="#kg-或-keygen" class="headerlink" title="kg 或 keygen"></a><code>kg</code> 或 <code>keygen</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keygen</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="out-或-output"><a href="#out-或-output" class="headerlink" title="out 或 output"></a><code>out</code> 或 <code>output</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">output</span>&gt;</span><span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="det-或-details"><a href="#det-或-details" class="headerlink" title="det 或 details"></a><code>det</code> 或 <code>details</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cmd-或-command"><a href="#cmd-或-command" class="headerlink" title="cmd 或 command"></a><code>cmd</code> 或 <code>command</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">command</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ol-或-ol-gt-li"><a href="#ol-或-ol-gt-li" class="headerlink" title="ol+ 或 ol&gt;li"></a><code>ol+</code> 或 <code>ol&gt;li</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ul-或-ul-gt-li"><a href="#ul-或-ul-gt-li" class="headerlink" title="ul+ 或 ul&gt;li"></a><code>ul+</code> 或 <code>ul&gt;li</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="dl-或-dl-gt-dt-dd"><a href="#dl-或-dl-gt-dt-dd" class="headerlink" title="dl+ 或 dl&gt;dt+dd"></a><code>dl+</code> 或 <code>dl&gt;dt+dd</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span><span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="map-或-map-gt-area"><a href="#map-或-map-gt-area" class="headerlink" title="map+ 或 map&gt;area"></a><code>map+</code> 或 <code>map&gt;area</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="table-或-table-gt-tr-gt-td"><a href="#table-或-table-gt-tr-gt-td" class="headerlink" title="table+ 或 table&gt;tr&gt;td"></a><code>table+</code> 或 <code>table&gt;tr&gt;td</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="colgroup-或-colg-或-colgroup-gt-col"><a href="#colgroup-或-colg-或-colgroup-gt-col" class="headerlink" title="colgroup+ 或 colg+ 或 colgroup&gt;col"></a><code>colgroup+</code> 或 <code>colg+</code> 或 <code>colgroup&gt;col</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span> <span class="tag">&lt;<span class="name">col</span> /&gt;</span> <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="tr-或-tr-gt-td"><a href="#tr-或-tr-gt-td" class="headerlink" title="tr+ 或 tr&gt;td"></a><code>tr+</code> 或 <code>tr&gt;td</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="select-或-select-gt-option"><a href="#select-或-select-gt-option" class="headerlink" title="select+ 或 select&gt;option"></a><code>select+</code> 或 <code>select&gt;option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="optgroup-或-optg-或-optgroup-gt-option"><a href="#optgroup-或-optg-或-optgroup-gt-option" class="headerlink" title="optgroup+ 或 optg+ 或 optgroup&gt;option"></a><code>optgroup+</code> 或 <code>optg+</code> 或 <code>optgroup&gt;option</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">optgroup</span>&gt;</span><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id=""><a href="#" class="headerlink" title="!!!"></a><code>!!!</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="4t"><a href="#4t" class="headerlink" title="!!!4t"></a><code>!!!4t</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="4s"><a href="#4s" class="headerlink" title="!!!4s"></a><code>!!!4s</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="xt"><a href="#xt" class="headerlink" title="!!!xt"></a><code>!!!xt</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="xs"><a href="#xs" class="headerlink" title="!!!xs"></a><code>!!!xs</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="xxs"><a href="#xxs" class="headerlink" title="!!!xxs"></a><code>!!!xxs</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.1//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="c"><a href="#c" class="headerlink" title="c"></a><code>c</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- $&#123;child&#125; --&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cc-ie6"><a href="#cc-ie6" class="headerlink" title="cc:ie6"></a><code>cc:ie6</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lte IE 6]&gt; $&#123;child&#125; &lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cc-ie"><a href="#cc-ie" class="headerlink" title="cc:ie"></a><code>cc:ie</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE]&gt; $&#123;child&#125; &lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="cc-noie"><a href="#cc-noie" class="headerlink" title="cc:noie"></a><code>cc:noie</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if !IE]&gt;&lt;!--&gt;</span> $&#123;child&#125; <span class="comment">&lt;!--&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p><a href="https://alrin0000.blogspot.com/2014/05/emmet.html">[參考] Emmet語法大全（補充中）</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 速查表 </tag>
            
            <tag> Emmet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_VScode</title>
      <link href="2021/02/23/link-VScode/"/>
      <url>2021/02/23/link-VScode/</url>
      
        <content type="html"><![CDATA[<h4 id="外掛"><a href="#外掛" class="headerlink" title="外掛"></a>外掛</h4><ul><li><h5 id="MJML"><a href="#MJML" class="headerlink" title="MJML"></a>MJML</h5><ul><li><a href="https://github.com/mjmlio/mjml">MJML - Github</a></li><li><a href="https://uu9924079.medium.com/%E8%AE%93-email-%E5%88%87%E7%89%88%E4%B8%8D%E5%86%8D%E5%8F%AF%E6%80%95-mjml-%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97-2b9748a47f87">讓 Email 切版不再可怕－MJML 初次使用心得 - Medium</a> - 2021</li><li><a href="https://medium.com/schaoss-blog/build-rwd-email-template-via-mjml-9665421c4c46">透過 MJML 快速完成 RWD Email 排版 - Medium</a> - 2020</li></ul></li></ul><a id="more"></a><h4 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h4><ul><li><h5 id="emmet"><a href="#emmet" class="headerlink" title="emmet"></a>emmet</h5><ul><li><a href="https://chunchun0401.medium.com/vscode-%E8%A8%AD%E5%AE%9A-js-%E7%9A%84-emmet-609bcadfa40c">VScode 設定 js 的 emmet - Medium</a> - 2020</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> VScode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[議題]_關於那些被IE排擠的屬性</title>
      <link href="2021/02/23/%E9%97%9C%E6%96%BC%E9%82%A3%E4%BA%9B%E8%A2%ABIE%E6%8E%92%E6%93%A0%E7%9A%84%E5%B1%AC%E6%80%A7/"/>
      <url>2021/02/23/%E9%97%9C%E6%96%BC%E9%82%A3%E4%BA%9B%E8%A2%ABIE%E6%8E%92%E6%93%A0%E7%9A%84%E5%B1%AC%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<ul><li><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><ul><li><h5 id="多行文本溢出顯示…"><a href="#多行文本溢出顯示…" class="headerlink" title="多行文本溢出顯示…"></a>多行文本溢出顯示…</h5><ul><li><code>-webkit-line-clamp</code></li><li>需搭配 -webkit-box-orient 使用</li><li>目前支援line-clamp的，只有Chrome與Safari</li><li>Firefox與IE，需用高度來將超出的文字給隱藏起來</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">72px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://caniuse.com/?search=line-clamp">[Can I use] -webkit-line-clamp</a><br><a href="https://caniuse.com/?search=-webkit-box-orient">[Can I use] -webkit-box-orient</a><br><a href="https://www.minwt.com/webdesign-dev/css/18447.html">[參考] 免寫程式！透過CSS3將多行文字自動省略，並出現… - 梅問題教學網</a> - 2017<br><a href="https://www.itread01.com/content/1502438188.html">[參考] 多行文本溢出顯示…的方法 - ITREAD</a> - 2017<br><a href="https://css-tricks.com/almanac/properties/l/line-clamp/">[參考] line-clamp - CSS-TRICKS</a> - 2018<br><a href="https://ithelp.ithome.com.tw/articles/10245872">[參考] [iT邦] line-clamp - futian_shen</a> - 2020<br><a href="https://wsw0615.medium.com/%E6%83%B3%E7%9F%A5%E9%81%93%E5%97%8E-text-overflow%E6%8A%8A%E8%A1%8C%E5%B0%BE%E8%AE%8A%E6%88%90-e86ad8bf827c">[參考] 想知道嗎：Text-overflow把行尾變成… - Medium</a> - 2020</p></blockquote></li><li><h5 id="Flex"><a href="#Flex" class="headerlink" title="Flex"></a>Flex</h5><ul><li><code>flex: 1;</code></li></ul></li></ul></li></ul><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 被IE排擠 </tag>
            
            <tag> 議題 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]-資料視覺化</title>
      <link href="2021/02/22/link-%E8%B3%87%E6%96%99%E8%A6%96%E8%A6%BA%E5%8C%96/"/>
      <url>2021/02/22/link-%E8%B3%87%E6%96%99%E8%A6%96%E8%A6%BA%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://www.luoow.com/dc_tw/103222144">拿好！52個實用的資料視覺化工具！ - 微文庫</a> - 2017</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 資料視覺化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_HTTP</title>
      <link href="2021/02/21/link-HTTP/"/>
      <url>2021/02/21/link-HTTP/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP">HTTP系列 - MDN Web Docs</a></li></ul><a id="more"></a><h4 id="跨源資源共享-CORS"><a href="#跨源資源共享-CORS" class="headerlink" title="跨源資源共享 (CORS)"></a>跨源資源共享 (CORS)</h4><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS">CORS - MDN Web Docs</a></li></ul><h4 id="HTTP緩存機制"><a href="#HTTP緩存機制" class="headerlink" title="HTTP緩存機制"></a>HTTP緩存機制</h4><ul><li><a href="https://www.bilibili.com/read/cv3403681/">徹底弄懂HTTP緩存機制及原理 - bilibili</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Git</title>
      <link href="2021/02/19/link-Git/"/>
      <url>2021/02/19/link-Git/</url>
      
        <content type="html"><![CDATA[<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://medium.com/@alex_cheng_9527/git-%E8%87%AA%E7%B0%BD%E6%86%91%E8%AD%89%E5%95%8F%E9%A1%8C-self-signed-certificate-1ebba5eaf61c">[Git SSL自簽憑證問題] - Medium</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Markdown</title>
      <link href="2021/02/19/link-Markdown/"/>
      <url>2021/02/19/link-Markdown/</url>
      
        <content type="html"><![CDATA[<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://www.twblogs.net/a/5c0612dcbd9eee0cf7a20d63">原來組織架構圖可以醬紫畫 - 台部落</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_web-browser</title>
      <link href="2021/02/16/link-web-browser/"/>
      <url>2021/02/16/link-web-browser/</url>
      
        <content type="html"><![CDATA[<h4 id="瀏覽器渲染"><a href="#瀏覽器渲染" class="headerlink" title="瀏覽器渲染"></a>瀏覽器渲染</h4><ul><li><a href="https://shubo.io/browser-rendering/">瀏覽器轉譯/渲染(Browser Rendering)原理 - Shubo</a> - 2016</li><li><a href="https://blog.techbridge.cc/2016/04/02/Browser-Rendering-Optimization/">Browser Rendering Optimization - TechBridge 技術共筆部落格</a> - 2016</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> web-browser </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_SASS/SCSS</title>
      <link href="2021/02/16/link-SASS/"/>
      <url>2021/02/16/link-SASS/</url>
      
        <content type="html"><![CDATA[<h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://sass-lang.com/guide">Sass官網</a></li><li><a href="https://hackmd.io/@FortesHuang/SyKirdx78">學習Sass，你需要更有效率的切版方式(上) - hackmd</a> - 2020</li><li><a href="https://hackmd.io/@FortesHuang/HJPE3sCXU">學習Sass，你需要更有效率的切版方式(下) - hackmd</a> - 2020</li></ul><a id="more"></a><h4 id="map-get"><a href="#map-get" class="headerlink" title="map get"></a>map get</h4><ul><li><a href="https://wcc723.github.io/sass/2015/02/11/sass-map-get/">Sass map get - 卡斯伯</a> - 2015</li></ul><h4 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h4><ul><li><a href="https://ithelp.ithome.com.tw/articles/10159400">[iT邦]Sass教學 (26) - 使用animate.scss增強網頁瀏覽體驗 - 廖洧杰</a> - 2014</li><li><a href="https://happyjayxin.medium.com/%E5%88%A9%E7%94%A8-scss-%E6%9B%B4%E7%B0%A1%E6%BD%94%E7%9A%84%E4%BD%BF%E7%94%A8-css-animation-f0717a958a69">利用 SCSS 更方便的使用 CSS Animation - Medium</a> - 2019</li><li><a href="https://css-tricks.com/repeatable-staggered-animation-three-ways-sass-gsap-web-animations-api/">loading動態圖 - CSS-Tricks</a> - 2020</li><li><a href="https://github.com/tgdev/animate-sass">animate-sass - Github</a></li></ul><h4 id="其他議題"><a href="#其他議題" class="headerlink" title="其他議題"></a>其他議題</h4><ul><li><a href="https://wcc723.github.io/sass/2013/08/26/sass-hsl-funtion/">HSL function - 卡斯伯</a> - 2013</li><li><a href="https://medium.com/d-d-mag/%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-sass-%E6%8A%80%E5%B7%A7-c97d4d5e0fc4">你可能不知道的 Sass 技巧 - 愷開</a> - 2017</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> SASS/SCSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_React</title>
      <link href="2021/02/16/link-React/"/>
      <url>2021/02/16/link-React/</url>
      
        <content type="html"><![CDATA[<h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://zh-hant.reactjs.org/">[官網] - ReactJS</a></li><li><a href="https://ithelp.ithome.com.tw/users/20129269/ironman/3050">[iT邦] React 30 天學習歷程 - gigd123</a> - 2020</li><li><a href="https://www.youtube.com/watch?v=zqV7NIFGDrQ">[Youtube]【前端速成】React 快速入門｜Tiktok工程師帶你入門前端｜布魯斯前端</a> - 2021</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 框架 </tag>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_VR</title>
      <link href="2021/02/16/link-VR/"/>
      <url>2021/02/16/link-VR/</url>
      
        <content type="html"><![CDATA[<h4 id="3D產品展示"><a href="#3D產品展示" class="headerlink" title="3D產品展示"></a>3D產品展示</h4><ul><li><a href="https://www.trplus.com.tw/p/016051276">Demo</a></li><li><a href="https://luxion.atlassian.net/wiki/spaces/K6M/pages/5767183/KeyShotVR+Variables">運用技術 - VR產品圖片產生器</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_TypeScript</title>
      <link href="2021/02/14/link-TypeScript/"/>
      <url>2021/02/14/link-TypeScript/</url>
      
        <content type="html"><![CDATA[<h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20120614/ironman/2685">[iT邦] - 讓 TypeScript 成為你全端開發的 ACE！ - Maxwell Alexius</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Bootstrap</title>
      <link href="2021/02/14/link-Bootstrap/"/>
      <url>2021/02/14/link-Bootstrap/</url>
      
        <content type="html"><![CDATA[<h4 id="BS4"><a href="#BS4" class="headerlink" title="BS4"></a>BS4</h4><ul><li><a href="https://www.slideshare.net/chihchengwang3/bootstrap-keynote">Bootstrap 4與3的差異 - 卡斯伯</a> - 2017</li></ul><h4 id="BS5"><a href="#BS5" class="headerlink" title="BS5"></a>BS5</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/3796">[iT邦] 金魚都能懂的Bootstrap5網頁框架開發 - CSScoke</a> - 2020</li><li><a href="https://www.youtube.com/playlist?list=PLqivELodHt3jq3oWBZfdhMu0GE7774HBW">[Youtube] 金魚都能懂的Bootstrap5網頁框架開發 - CSScoke</a> - 2020</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Bit</title>
      <link href="2021/02/14/link-Bit/"/>
      <url>2021/02/14/link-Bit/</url>
      
        <content type="html"><![CDATA[<h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://www.twblogs.net/a/5d7110fbbd9eee541c3401f1">Bit系列 - 組件管理工具Bit</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Bit </tag>
            
            <tag> 管理工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Angular</title>
      <link href="2021/02/14/link-Angular/"/>
      <url>2021/02/14/link-Angular/</url>
      
        <content type="html"><![CDATA[<h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20090728/ironman/1600">[iT邦] Angular 深入淺出三十天 - Leo</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/695">[iT邦] 入門AngularJS筆記與前端領域的學習筆記分享 - iamya</a> - 2013</li></ul><a id="more"></a><h4 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h4><ul><li><a href="https://www.facebook.com/will.fans/videos/251547546415443?sfns=mo">[Facebook 影片] 多奇技術分享會：Angular Testing 101 - Will保哥</a> - 2021</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Angular </tag>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_NodeJs</title>
      <link href="2021/02/14/link-NodeJs/"/>
      <url>2021/02/14/link-NodeJs/</url>
      
        <content type="html"><![CDATA[<h4 id="NodeJs"><a href="#NodeJs" class="headerlink" title="NodeJs"></a>NodeJs</h4><ul><li><a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js 教程 - Runoob</a> </li></ul><a id="more"></a><h4 id="NVM"><a href="#NVM" class="headerlink" title="NVM"></a>NVM</h4><ul><li><a href="https://sasacode.wordpress.com/">Mac下的NVM - HappyCoder 的填坑筆記</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10184980">[iT邦]Node.js 必備工具 - NVM 、 NPM - Ivan Wei</a> - 2016</li><li><a href="https://ithelp.ithome.com.tw/articles/10207177">[iT邦]nvm - 版本隨你切 - 六角學院</a> - 2018</li><li><a href="https://medium.com/%E5%93%86%E5%95%A6%E5%AF%A6%E9%A9%97%E5%AE%A4/node-js%E7%AE%A1%E7%90%86%E7%A5%9E%E5%99%A8nvm-b6acfca44ea5">Node.js管理神器nvm - Medium</a> - 2018</li><li><a href="https://noob.tw/nvm/amp/">nvm：快速安裝、切換不同版本的 Node.js - NOOB</a> - 2019</li><li><a href="https://www.onejar99.com/nvm-install-for-windows/">安裝 NVM (Node Version Manager) 來切換 Node.js 版本 for Windows - OneJar的隧道</a> - 2019</li><li><a href="https://bmhiamso1.medium.com/ubuntu-%E5%AE%89%E8%A3%9D-nvm-npm-3bf6bffa9152">Ubuntu 安裝 nvm +npm - Medium</a> - 2019</li><li><a href="https://titangene.github.io/article/nvm.html">nvm：安裝、切換不同 Node.js 版本的管理器 - Titangene Blog</a> - 2020</li></ul><h4 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h4><ul><li><a href="https://pjchender.blogspot.com/p/blog-page.html">NPM系列 - 從手動到自動 - PJCHENder</a> </li><li><a href="https://medium.com/itsems-frontend/whats-npx-e83400efe7f8">npx 是什麼? 跟 npm 差在哪? - Medium</a> </li><li><a href="https://javascript.ruanyifeng.com/nodejs/npm.html">npm模塊管理器 - 阮一峰</a> </li><li><a href="https://medium.com/html-test/%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B-%E4%BD%BF%E7%94%A8npm%E5%A5%97%E4%BB%B6-317beefdf182">從零開始: 使用NPM套件 - medium</a> - 2017</li><li><a href="https://www.runoob.com/nodejs/nodejs-npm.html">NPM 使用介绍 - Runoob</a></li><li><a href="https://cloud.tencent.com/developer/chapter/18114">CLI命令 - 雲社區</a></li></ul><h4 id="NPX"><a href="#NPX" class="headerlink" title="NPX"></a>NPX</h4><ul><li><a href="https://www.ruanyifeng.com/blog/2019/02/npx.html">npx 使用教程 - 阮一峰</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 管理工具 </tag>
            
            <tag> Node </tag>
            
            <tag> NPM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_jQuery</title>
      <link href="2021/02/14/link-jQuery/"/>
      <url>2021/02/14/link-jQuery/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://pjchender.blogspot.com/p/blog-page_18.html">jQuery系列 - PJCHENder</a></li><li><a href="https://www.itread01.com/content/1542724273.html">原生JS替代jQuery的各種方法彙總 - ITREAD01</a></li></ul><a id="more"></a><h4 id="議題"><a href="#議題" class="headerlink" title="議題"></a>議題</h4><ul><li><a href="https://tw.alphacamp.co/blog/jquery-javascript-library-overview">什麼是 jQuery？前端框架盛行還需要JavaScript函式庫嗎？ - alphacamp</a></li></ul><h4 id="套件"><a href="#套件" class="headerlink" title="套件"></a>套件</h4><ul><li><a href="https://www.ucamc.com/e-learning/javascript/298-fullpage-js%E5%96%AE%E9%A0%81%E5%BC%8F%E9%81%B8%E5%96%AE%E6%BB%91%E5%8B%95%E5%8D%80%E5%A1%8A%E7%9A%84%E5%85%A8%E5%B1%8F%E6%BB%BE%E5%8B%95%E7%B6%B2%E7%AB%99">jQuery - fullPage.js - 使用fullPage.js設計單頁式選單滑動區塊的全屏滾動網站 - ucamc</a> - 2018</li><li><a href="https://www.itread01.com/content/1520158803.html">jQuery - fullPage.js - 學習 | jQuery全屏滾動插件FullPage.js - ITREAD01</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_HTML5</title>
      <link href="2021/02/14/link-HTML5/"/>
      <url>2021/02/14/link-HTML5/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://pjchender.blogspot.com/search/label/HTML">HTML5系列 - PJCHENder</a></li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/387">[iT邦] 只是路過 HTML5 - iamya</a> - 2012</li></ul><a id="more"></a><h4 id="其他議題"><a href="#其他議題" class="headerlink" title="其他議題"></a>其他議題</h4><ul><li><a href="https://pjchender.blogspot.com/2017/01/html-5-data-attribute.html?m=1">[技術分享] 什麼是 HTML 5 中的資料屬性（data-* attribute） - PJCHENder</a></li><li><a href="https://medium.com/@papashong1111/html-%E9%9B%BB%E5%AD%90%E5%A0%B1%E6%94%BB%E7%95%A5-7fe3a4fcffd2">HTML 電子報攻略 - Medium</a></li><li><a href="https://segmentfault.com/a/1190000017896469">referrer策略和meta標籤的問題 - Segmentfault</a> - 2019</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_JavaScript</title>
      <link href="2021/02/14/link-JavaScript/"/>
      <url>2021/02/14/link-JavaScript/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://pjchender.blogspot.com/p/blog-page_72.html">JavaScript系列 - PJCHENder</a></li><li><a href="https://pjchender.blogspot.com/2017/06/javascript-understanding-weird-part.html">你所不知道的JavaScript - PJCHENder</a> - 2017</li><li><a href="https://pjchender.blogspot.com/2017/06/js30.html">JS30 - PJCHENder</a> - 2017</li><li><a href="https://openhome.cc/Gossip/ECMAScript/index.html">ECMASCRIPT - openhome</a></li><li><a href="https://wangdoc.com/javascript/index.html">JavaScript 教程 - WangDoc</a></li><li><a href="https://ithelp.ithome.com.tw/users/20065504/ironman/1259">[iT邦] 重新認識 JavaScript - Kuro</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20112656/ironman/2782">[iT邦] 好 Js 不學嗎 !? JavaScript 入門中的入門 - Vita Ora</a> - 2019</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dYbxVoYDyT_fmXZHnuKg2Fq">[Youtube] 深入淺出 Javascript30 快速導覽 - Alex 宅幹嘛</a> - 2020</li><li><h5 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h5><ul><li><a href="https://es6.ruanyifeng.com/">ECMAScript 6 入門 - 阮一峰</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes">Classes - Mozilla</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes/constructor">建構子 - Mozilla</a></li></ul></li></ul><a id="more"></a><h4 id="基礎"><a href="#基礎" class="headerlink" title="基礎"></a>基礎</h4><ul><li><p><a href="https://fred-zone.blogspot.com/2017/01/javascript-mapreduce.html?m=1">上手使用 JavaScript 的 Map、Reduce 吧！ - Fred chien</a> - 2017</p></li><li><h5 id="物件"><a href="#物件" class="headerlink" title="物件"></a>物件</h5><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Learn/JavaScript/Objects">JavaScript 物件介紹 - mozilla</a></li></ul></li><li><h5 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h5><ul><li><a href="https://jmln.tw/blog/2017-07-07-vanilla-javascript-dom-manipulation.html">都 2017 年了，學學用原生 JS 來操作 DOM 吧 - Jimmy</a> - 2017</li><li><a href="https://notfalse.net/64/js-dom-2017">學學用原生JS來操作DOM吧 - notfalse技術客</a> - 2018</li></ul></li><li><h5 id="編程風格"><a href="#編程風格" class="headerlink" title="編程風格"></a>編程風格</h5><ul><li><a href="https://es6.ruanyifeng.com/#docs/style">編程風格 - 阮一峰</a></li></ul></li><li><h5 id="console"><a href="#console" class="headerlink" title="console"></a>console</h5><ul><li><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/218950/">除Console.log()外更多的Javascript除錯命令 - 程式前沿</a></li></ul></li><li><h5 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h5><ul><li><a href="https://www.oxxostudio.tw/articles/201908/js-array.html">JavaScript Array 陣列操作方法大全 ( 含 ES6 ) - oxxostudio</a> - 2019</li></ul></li><li><h5 id="閉包"><a href="#閉包" class="headerlink" title="閉包"></a>閉包</h5><ul><li><a href="https://openhome.cc/Gossip/JavaScript/Closure.html">閉包 - openhome</a></li><li><a href="https://pjchender.blogspot.com/2017/05/javascript-closure.html">深入淺出瞭解 JavaScript 閉包（closure） - PJCHENder</a> - 2017</li><li><a href="https://cythilya.github.io/2018/10/22/closure/">你懂 JavaScript 嗎？#15 閉包（Closure） - Summer。桑莫。夏天</a> - 2018</li><li><a href="https://blog.techbridge.cc/2018/12/08/javascript-closure/">所有的函式都是閉包：談 JS 中的作用域與 Closure - TechBridge 技術共筆部落格</a> - 2018</li><li><a href="https://wangdoc.com/javascript/types/function.html#%E9%97%AD%E5%8C%85">閉包 - WangDoc</a></li></ul></li><li><h5 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h5><ul><li><a href="https://blog.techbridge.cc/2018/05/27/js-proxy-reflect/">一起來了解 Javascript 中的 Proxy 與 Reflect - TechBridge 技術共筆部落格</a> - 2018</li></ul></li><li><h5 id="正規表達式"><a href="#正規表達式" class="headerlink" title="正規表達式"></a>正規表達式</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10221016">[iT邦]JavaScript - RegExp 物件 - Vita Ora</a> - 2019</li></ul></li></ul><h4 id="其他議題"><a href="#其他議題" class="headerlink" title="其他議題"></a>其他議題</h4><ul><li><h5 id="JSDoc-文檔註解"><a href="#JSDoc-文檔註解" class="headerlink" title="JSDoc 文檔註解"></a>JSDoc 文檔註解</h5><ul><li><a href="https://www.ucamc.com/e-learning/javascript/250-javascript-use-jsdoc">Javascript文檔註解規則使用方式 @use JSDoc - ucamc</a> - 2018</li></ul></li><li><h5 id="Preload-Prefetch-Preconnect"><a href="#Preload-Prefetch-Preconnect" class="headerlink" title="Preload, Prefetch, Preconnect"></a>Preload, Prefetch, Preconnect</h5><ul><li><a href="https://shubo.io/preload-prefetch-preconnect/">深入淺出 Preload, Prefetch 和 Preconnect：三種加快網頁載入速度的 Resource Hint 技巧 - Shubo</a> - 2019</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/672381/">資源提示——什麼是Preload，Prefetch和Preconnect？ - 程式前沿</a> - 2019</li></ul></li><li><p><a href="https://blog.csdn.net/dKnightL/article/details/89517010">拖曳時，禁止觸發點擊事件的三種方法 - CSDN</a> - 2019</p></li><li><p><a href="https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror">使用window.onerror捕獲並報告JavaScript錯誤 - SENTRY</a> - 2016</p></li><li><p><a href="https://kuro.tw/posts/2019/08/04/JS-%E5%86%B7%E7%9F%A5%E8%AD%98-%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-void/">JS 冷知識: 你所不知道的 void - Kuro</a> - 2019</p></li><li><p><a href="https://ithelp.ithome.com.tw/articles/10197335">網頁的生命週期 - Kuro</a> - 2018</p></li><li><p><a href="https://pjchender.blogspot.com/2016/06/javascriptprototypeprototype.html">[筆記] 了解JavaScript中原型(prototype)、原型鍊（prototype chain）和繼承(inheritance)的概念 - PJCHENder</a> - 2016</p></li><li><p><a href="https://www.796t.com/article.php?id=137003">詳解JavaScript型別判斷的四種方法 - 程式人生</a> - 2020</p></li><li><p><a href="https://hooty868.medium.com/%E4%BD%A0%E7%9F%A5%E9%81%93javascript%E5%85%B6%E5%AF%A6%E6%98%AF%E5%96%AE%E7%B7%9A%E7%A8%8B%E5%97%8E-8eb6fce68920">你知道JavaScript其實是單線程嗎 ? - Steve chu</a> - 2020</p></li></ul><h4 id="第三方套件"><a href="#第三方套件" class="headerlink" title="第三方套件"></a>第三方套件</h4><ul><li><a href="https://chriscavs.github.io/rallax-demo/">Rallax.js - 滾動視差效果</a></li><li><a href="https://github.com/asvd/dragscroll">dragscroll.js - 拖曳捲動</a></li><li><h4 id="瀑布流"><a href="#瀑布流" class="headerlink" title="瀑布流"></a>瀑布流</h4><ul><li><a href="https://isotope.metafizzy.co/">isotope.js - 可篩選排序的瀑布流</a></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_CSS</title>
      <link href="2021/02/14/link-CSS/"/>
      <url>2021/02/14/link-CSS/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><p><a href="https://pjchender.blogspot.com/search/label/CSS">CSS系列 - PJCHENder</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20117586/ironman/2617">[iT邦] 重新認識 CSS - Titangene</a> - 2019</p></li><li><h5 id="金魚系列"><a href="#金魚系列" class="headerlink" title="金魚系列"></a>金魚系列</h5><ul><li><a href="http://csscoke.com/">CSS系列 - CSScoke</a></li><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/3803">[iT邦] 金魚都能懂的CSS必學屬性 - CSScoke</a> - 2020</li></ul></li></ul><a id="more"></a><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ul><li><a href="https://code.ciaoca.com/style/css-cheat-sheet/">CSS速查表</a></li><li><h5 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h5><ul><li><a href="https://github.com/necolas/normalize.css">normalize.css</a></li></ul></li></ul><h4 id="基礎"><a href="#基礎" class="headerlink" title="基礎"></a>基礎</h4><ul><li><h5 id="CSS選取器"><a href="#CSS選取器" class="headerlink" title="CSS選取器"></a>CSS選取器</h5><ul><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2799">[iT邦] 金魚都能懂的 CSS 選取器 - CSScoke</a> - 2019</li></ul></li><li><h5 id="CSS模組化-設計模式"><a href="#CSS模組化-設計模式" class="headerlink" title="CSS模組化(設計模式)"></a>CSS模組化(設計模式)</h5><ul><li><a href="https://www.slideshare.net/kurotanshi/css-oocss-smacss-bem">[PPT]漫談 CSS 架構方法 - 以 OOCSS, SMACSS, BEM 為例 - Kuro Hsu</a> - 2014</li><li><a href="https://cythilya.github.io/2018/06/05/css-methodologies/">OOCSS、SMACSS、BEM、CSS Modules、CSS in JS - Summer。桑莫。夏天</a> - 2018</li><li><a href="https://chupainotebook.blogspot.com/2019/05/bemcss.html?m=1">BEM，CSS 設計模式 - 竹白記事本</a> - 2019</li></ul></li><li><h5 id="CSS變數"><a href="#CSS變數" class="headerlink" title="CSS變數"></a>CSS變數</h5><ul><li><a href="https://www.itread01.com/content/1541942662.html">CSS變數實用指南及注意事項 - ITREAD01</a> - 2018</li><li><a href="https://w3c.hexschool.com/blog/21985acb">原生 CSS 變數運用技巧 - W3HexSchool</a> - 2019</li><li><a href="https://www.mdeditor.tw/pl/2AUE/zh-tw">自定義變數帶你隨心所欲，一鍵換膚 - MdEditor</a> - 2019</li><li><a href="https://www.itread01.com/content/1550553325.html">CSS 自定義屬性的策略指南 - ITREAD01</a> - 2019</li></ul></li><li><h5 id="CSS權重"><a href="#CSS權重" class="headerlink" title="CSS權重"></a>CSS權重</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10196454">小事之 CSS 權重 (css specificity) - 小艾iris</a> - 2018</li></ul></li><li><h5 id="垂直置中"><a href="#垂直置中" class="headerlink" title="垂直置中"></a>垂直置中</h5><ul><li><a href="http://csscoke.com/2018/08/21/css-vertical-align/">CSS垂直置中技巧 - CSScoke</a></li><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2092">[iT邦] 連續30天的超實務網頁設計的垂直置中教學</a></li></ul></li><li><h5 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h5><ul><li><a href="https://www.youtube.com/watch?v=fYcz3FUqv7M&feature=youtu.be">[Youtube] CSS GRID / CSS格線好好玩【完整版】 | CSS教學 | CSS格線 - CSScoke</a></li><li><a href="https://cssgridgarden.com/#zh-tw">[互動] - Grid - 蘿蔔</a></li><li><a href="https://ballaediworkshop.blogspot.com/2019/10/css-grid-introduction-and-tutorial.html?m=1">Css Grid 概念介紹及使用教學 - Ballaedi</a></li></ul></li><li><h5 id="Flex"><a href="#Flex" class="headerlink" title="Flex"></a>Flex</h5><ul><li><a href="https://www.youtube.com/watch?v=_nCBQ6AIzDU&feature=youtu.be">[Youtube] 玩轉 CSS FLEX | CSS教學 | 網頁教學 | 網頁設計 - CSScoke</a></li><li><a href="https://flexboxfroggy.com/#zh-tw">[互動] - Flex - 青蛙</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10226145">[iT邦] flex 1 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10226454">[iT邦] flex 2 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10226856">[iT邦] flex 3 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10227188">[iT邦] flex 4 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10227461">[iT邦] flex 5 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10227769">[iT邦] flex 6 - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10228020">[iT邦] flex 7 - yachen</a></li></ul></li><li><h5 id="line-box"><a href="#line-box" class="headerlink" title="line box"></a>line box</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10225029">[iT邦] 淺談 line box 高度 - yachen</a></li></ul></li><li><h5 id="box-shadow"><a href="#box-shadow" class="headerlink" title="box-shadow"></a>box-shadow</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10220112">[iT邦] 番外篇 - 胡搞 box-shadow (上) - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10220686">[iT邦] 番外篇 - 胡搞 box-shadow (中) - yachen</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10221008">[iT邦] 番外篇 - 胡搞 box-shadow (下) - yachen</a></li></ul></li><li><h5 id="calc"><a href="#calc" class="headerlink" title="calc"></a>calc</h5><ul><li><a href="https://dotblogs.com.tw/explooosion/2020/06/05/001534">calc 結合變數，從 CSS、SCSS 喇到 Styled Components - Robby</a> - 2020</li></ul></li></ul><h4 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h4><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/CSS_Animations/Using_CSS_animations">CSS animation 設定 - Mozilla</a></li></ul><h4 id="npm-套件"><a href="#npm-套件" class="headerlink" title="npm 套件"></a>npm 套件</h4><ul><li><a href="https://animate.style/">Animate.css</a></li></ul><h4 id="其他議題"><a href="#其他議題" class="headerlink" title="其他議題"></a>其他議題</h4><ul><li><h5 id="Collapsing-margins"><a href="#Collapsing-margins" class="headerlink" title="Collapsing margins"></a>Collapsing margins</h5><ul><li><a href="https://ithelp.ithome.com.tw/articles/10218740">[iT邦] Collapsing margins - yachen</a></li></ul></li><li><h5 id="滿版"><a href="#滿版" class="headerlink" title="滿版"></a>滿版</h5><ul><li><a href="https://css-tricks.com/almanac/properties/o/object-fit/">object-fit - CSS-TRICKS</a></li></ul></li><li><h5 id="判斷觸控設備"><a href="#判斷觸控設備" class="headerlink" title="判斷觸控設備"></a>判斷觸控設備</h5><ul><li><a href="https://www.zhangxinxu.com/wordpress/2020/01/css-any-hover-media/">CSS any-hover any-pointer media查询与交互体验提升 - 鑫空間,鑫生活</a> - 2020</li></ul></li><li><h5 id="幾何圖形"><a href="#幾何圖形" class="headerlink" title="幾何圖形"></a>幾何圖形</h5><ul><li><a href="https://kknews.cc/code/6ae4lop.html">用純css做幾何圖形的技巧 (一) - 每日頭條</a> - 2019</li><li><a href="https://kknews.cc/zh-tw/code/nle3rk8.html">用純css做幾何圖形的技巧（二）clip-path - 每日頭條</a> - 2019</li></ul></li><li><h5 id="postcss"><a href="#postcss" class="headerlink" title="postcss"></a>postcss</h5><ul><li><h6 id="cssnext"><a href="#cssnext" class="headerlink" title="cssnext"></a>cssnext</h6><ul><li><a href="https://blog.csdn.net/qq_20282263/article/details/79437145">postcss-cssnext features - CSDN</a> - 2018</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/752087/">PostCSS以及cssnext語法 - 程式前沿</a></li></ul></li><li><h6 id="pxtorem"><a href="#pxtorem" class="headerlink" title="pxtorem"></a>pxtorem</h6><ul><li><a href="https://www.npmjs.com/package/postcss-pxtorem">px轉rem - npm</a></li></ul></li></ul></li></ul><h4 id="神人膜拜區"><a href="#神人膜拜區" class="headerlink" title="神人膜拜區"></a>神人膜拜區</h4><ul><li><a href="https://codepen.io/miocene/pen/mjLPVp">Moustached Nanny - Julia Miocene</a>、<a href="https://codepen.io/miocene">作者 - Julia Miocene</a></li><li><a href="https://codepen.io/charisseysabel/pen/adXGMe">A love for Cats - Charisse</a></li></ul><h4 id="跨平台解法"><a href="#跨平台解法" class="headerlink" title="跨平台解法"></a>跨平台解法</h4><ul><li><h5 id="Safari"><a href="#Safari" class="headerlink" title="Safari"></a>Safari</h5></li><li><a href="https://stackoverflow.com/questions/3047337/does-overflowhidden-applied-to-body-work-on-iphone-safari">overflow:hidden</a></li><li><a href="https://benfrain.com/preventing-body-scroll-for-modals-in-ios/">Preventing body scroll for modals in iOS</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Hexo</title>
      <link href="2021/02/11/link-Hexo/"/>
      <url>2021/02/11/link-Hexo/</url>
      
        <content type="html"><![CDATA[<h4 id="教學"><a href="#教學" class="headerlink" title="教學"></a>教學</h4><ul><li><a href="https://hexo.io/zh-tw/docs/">[Hexo官方] - 中文文件</a></li><li><a href="https://yogapan.github.io/2017/08/11/%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E9%83%A8%E8%90%BD%E6%A0%BC/">用Hexo + Github Pages搭建個人部落格 - 小蛇蛇的筆記</a></li><li><a href="https://ed521.github.io/2019/08/hexo-admin/">使用 hexo-admin 後台管理工具 - 瑪利歐的部落格</a> - 2019</li></ul><a id="more"></a><h4 id="API"><a href="#API" class="headerlink" title="API"></a>API</h4><ul><li><a href="https://hexo.io/zh-tw/docs/configuration.html">[Hexo官方] - _config.yml配置</a></li></ul><h4 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h4><ul><li><a href="https://hexo.io/themes/">[Hexo官方] - 樣式庫</a></li><li><a href="https://github.com/Molunerfinn/hexo-theme-melody">[melody] - github</a></li><li><a href="https://molunerfinn.com/">[melody] - demo</a></li><li><a href="https://github.com/theme-next/hexo-theme-next">[next] - github</a></li></ul><h4 id="託管"><a href="#託管" class="headerlink" title="託管"></a>託管</h4><ul><li><a href="https://hyrepo.com/tech/hexo-firebase-blog/">使用Hexo+Firebase搭建平台托管的静态博客 - Decouple</a> - 2018</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_前端技術彙整</title>
      <link href="2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/"/>
      <url>2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/</url>
      
        <content type="html"><![CDATA[<h4 id="從零開始"><a href="#從零開始" class="headerlink" title="從零開始"></a>從零開始</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20060646/ironman/477">新手前端日記 - chibc</a> - 2012</li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/494">[iT邦] 視覺設計師邁向程式設計師養成計畫 - iamya</a> - 2012</li><li><a href="https://ithelp.ithome.com.tw/users/20107637/ironman/1457">[iT邦] 前端新手村 - Chris</a> - 2017</li><li><a href="https://ithelp.ithome.com.tw/users/20102825/ironman/1314">[iT邦] 重新學習網頁設計 - Cian</a> - 2017</li><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2072">[iT邦] 金魚都能懂的網頁設計入門 - CSScoke</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20112158/ironman/1914">[iT邦] 前端菜焦阿日記 - mangoSu</a> - 2018</li><li><a href="https://medium.com/i-am-mike/%E5%9C%A8%E9%96%8B%E5%A7%8B%E5%AF%ABcode%E5%89%8D%E7%9A%84%E9%81%B8%E6%93%87-662b3a2debe8">在開始寫Code之前？ - Medium</a> - 2018</li><li><a href="https://www.youtube.com/playlist?list=PLqivELodHt3iL9PgGHg0_EF86FwdiqCre">[Youtube] 金魚都能懂的網頁設計入門 - CSScoke</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20120740/ironman/2632">[iT邦] 前端新手進化史 - yachen</a> - 2019</li><li><a href="https://hulitw.medium.com/front-end-learning-path-55201571ecfe">紮實的網頁前端學習路線與資源推薦 - Medium</a> - 2019</li><li><a href="https://www.cakeresume.com/resources/career-change-frontend-engineers.amp?locale=zh-TW">【轉職前端工程師】無經驗沒關係！給初學者的前端基本介紹 - CakeResume</a> - 2020</li></ul><a id="more"></a><h4 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h4><ul><li><p><a href="https://cythilya.github.io/">[blog] Summer。桑莫。夏天</a></p></li><li><p><a href="https://blog.techbridge.cc/">[blog] TechBridge 技術共筆部落格</a></p></li><li><p><a href="https://pjchender.blogspot.com/">[blog] 那些沒告訴你的小細節 - PJCHENder</a></p></li><li><p><a href="https://wcc723.github.io/">[blog] 卡斯伯</a></p></li><li><p><a href="https://www.oxxostudio.tw/list.html">[blog] oxxostudio</a></p></li><li><p><a href="https://dotblogs.com.tw/wasichris">[blog] 搞搞就懂 - CHRIS CHEN</a></p></li><li><p><a href="https://cloud.tencent.com/developer/devdocs">[blog] 雲社區</a></p></li><li><p><a href="https://codertw.com/">[blog] 程式前沿</a></p></li><li><p><a href="https://medium.com/@kalanyei">[medium] 愷開</a></p></li><li><p><a href="https://medium.com/@sexyoung1985">[medium] sexyoung</a></p></li><li><p><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dZcmTWAHWDgiLhkFAQh-xpA">[Youtube] 網站開發直播主題集合 - Alex 宅幹嘛</a> - 2018</p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20040221/ironman">[iT邦] 廖洧杰</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20103676/ironman/">[iT邦] 若虛</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20071512/ironman">[iT邦] iamya</a></p></li><li><p><a href="https://ballaediworkshop.blogspot.com/">Ballaedi</a></p></li><li><p><a href="https://wsw0615.medium.com/">W.S.Wade</a></p></li></ul><h4 id="切版"><a href="#切版" class="headerlink" title="切版"></a>切版</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2623">[iT邦] 金魚都能懂的網頁切版 - CSScoke</a> - 2019</li><li><a href="https://www.youtube.com/playlist?list=PLqivELodHt3hxeuLX8PYaI8u1GcDaBoJo">[Youtube] 金魚都能懂的網頁切版 - CSScoke</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20001433/ironman/3142?page=1">[iT邦] 我說那個手機版 - 閃光洽</a> - 2020</li></ul><h4 id="題庫"><a href="#題庫" class="headerlink" title="題庫"></a>題庫</h4><ul><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/607762/">前端面試題彙總 筆試題 - 程式前沿</a></li><li><a href="https://ithelp.ithome.com.tw/users/20071512/ironman/974">[iT邦] 前端小字典三十天【每日一字】- iamya</a> - 2014</li></ul><h4 id="效能優化"><a href="#效能優化" class="headerlink" title="效能優化"></a>效能優化</h4><ul><li><a href="https://medium.com/starbugs/%E4%BB%8A%E6%99%9A-%E6%88%91%E6%83%B3%E4%BE%86%E9%BB%9E-web-%E5%89%8D%E7%AB%AF%E6%95%88%E8%83%BD%E5%84%AA%E5%8C%96%E5%A4%A7%E8%A3%9C%E5%B8%96-e1a5805c1ca2">今晚，我想來點 Web 前端效能優化大補帖！ - Medium</a> - 2020</li><li><a href="https://wyattkidd.medium.com/%E9%AB%98%E6%95%88%E8%83%BD%E7%B6%B2%E7%AB%99%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F-f7b7b9499b2e">【翻譯】高效能網站應用程式 - Medium</a> - 2020</li><li><a href="http://skyroxas.tw/%e5%89%8d%e7%ab%af%e6%95%88%e8%83%bd%e5%84%aa%e5%8c%96-%e5%89%8d%e7%ab%af%e6%95%88%e8%83%bd%e5%84%aa%e5%8c%96%e7%9a%84%e7%9b%ae%e7%9a%84%e8%88%87%e9%87%8d%e8%a6%81%e6%80%a7/">[前端效能優化] 前端效能 優化的 目的 與 重要性 - ZHI-WEI</a> - 2017</li><li><a href="https://ppfocus.com/0/di4b1b6c6.html">你不知道的「前端性能優化」知識，我都給你總結好了 - 人人焦點</a> - 2020</li></ul><h4 id="關注未來"><a href="#關注未來" class="headerlink" title="關注未來"></a>關注未來</h4><ul><li><a href="https://kknews.cc/code/l4moaez.amp">前端開發，2019年往這個方向走，最新技術棧公布，國外大牛總結 - 每日頭條</a> - 2018</li><li><a href="https://zhuanlan.zhihu.com/p/53043557">2019 - Web開發技術指南和趨勢 - 知乎</a> - 2019</li><li><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/712917/">從2019看2020前端發展趨勢 - 程式前沿</a> - 2019</li><li><a href="https://www.infoq.cn/article/VdJX0JkmSm_dkJBgF23r">2020年你應該知道的8 種前端JavaScript 趨勢和工具 - alphacamp</a> - 2019</li><li><a href="https://twgreatdaily.com/Ab5UHHABgx9BqZZIPEa_.html">2020年讓人難以置信的50款前端新工具：JavaScript插件篇（一） - 前端達人</a> - 2020</li><li><a href="https://blog.csdn.net/Ed7zgeE9X/article/details/104306013">2020年讓人難以置信的50款前端新工具：CSS &amp; HTML 工具篇（二） - 前端達人</a> - 2020</li><li><a href="https://tw.alphacamp.co/blog/javascript-full-stack-developer-journey-and-skilltree?utm_source=facebook&utm_medium=paidsocial&utm_campaign=Rem-SiteVisitors&utm_term=Rem&utm_content=blog-skilltree-v2">2020年 全端技能樹 - alphacamp</a> - 2020</li><li><a href="https://kknews.cc/code/254438r.amp">你值得擁有的 11 個前端開發利器 - 每日頭條</a> - 2020</li><li><a href="https://www.zhihu.com/question/376613288">2020年，有哪些即將讓人眼前一亮的前端新技術？ - 知乎</a> - 2020</li><li><a href="https://zhuanlan.zhihu.com/p/111532573">2020年不可不知的三大Web前端技術趨勢 - 知乎</a> - 2020</li><li><a href="https://iter01.com/505089.html">2020 有哪些不容錯過的前端技術趨勢？ - IT人</a> - 2020</li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20102562/ironman/987?page=1">[iT邦]DevOps CI 從入門到入坑 - Miles</a> - 2016</li><li><a href="https://ithelp.ithome.com.tw/articles/10202427">MPA 與 SPA - Leo</a> - 2018</li><li><a href="https://vocus.cc/@raychang/5d4d8d31fd89780001faf03c">搞懂網頁技術名詞：MVC、SPA、SSR、AMP 及 PWA - Ray C</a> - 2019</li><li><a href="https://lukajojo.medium.com/%E4%B8%8D%E7%AE%A1%E4%BD%A0%E6%98%AF%E5%89%8D%E7%AB%AF-%E5%BE%8C%E7%AB%AF-%E5%85%87%E7%8B%A0%E7%9A%84%E8%AE%8A%E5%BC%B7%E5%90%A7-%E9%A5%85%E9%A0%AD%E8%A8%88%E7%95%AB%E7%AC%AC%E9%9B%B6%E6%9C%9F-%E6%88%90%E6%9E%9C%E5%88%86%E4%BA%AB-81918be92ca4">饅頭計畫第零彈 — 不管你是前端、後端，兇狠的變強吧 | 成果分享 - Luka Huang</a> - 2019</li><li><a href="https://blog.hiskio.com/%E5%A5%BD%E7%94%A8%E5%89%8D%E7%AB%AF%E8%B3%87%E6%BA%90%E5%8C%85%EF%BC%8Dhtml%E3%80%81css%E3%80%81js%E4%B8%80%E7%B6%B2%E6%89%93%E7%9B%A1/">好用前端資源包－HTML、CSS、JS一網打盡 - HiSKIO</a> - 2019</li><li><a href="https://kknews.cc/code/pl4mrye.amp">推薦8個好用的前端小工具，Web前端程式設計師居家必備良品！ - 每日頭條</a> - 2019</li></ul><h4 id="技能樹"><a href="#技能樹" class="headerlink" title="技能樹"></a>技能樹</h4><ul><li><h5 id="前端技能樹"><a href="#前端技能樹" class="headerlink" title="前端技能樹"></a>前端技能樹</h5><table><thead><tr><th><img data-src="/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/1.jpeg" class=""></th></tr></thead><tbody><tr><td><img data-src="/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/3.png" class=""></td></tr></tbody></table></li><li><h5 id="全端技能樹"><a href="#全端技能樹" class="headerlink" title="全端技能樹"></a>全端技能樹</h5><table><thead><tr><th><img data-src="/2021/02/11/link-%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E5%BD%99%E6%95%B4/2.jpeg" class=""></th></tr></thead></table></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 前端技術彙整 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Vue2</title>
      <link href="2021/02/11/link-Vue2/"/>
      <url>2021/02/11/link-Vue2/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><p><a href="https://pjchender.blogspot.com/search/label/Vue">Vue系列 - PJCHENder</a></p></li><li><p><a href="https://kuro.tw/">Vue系列 - Kuro</a></p></li><li><p><a href="https://hackmd.io/@FortesHuang">Vue系列 - Fortes Huang</a></p></li><li><p><a href="https://dotblogs.com.tw/wasichris/Series?qq=Vue">搞搞就懂 - CHRIS CHEN</a></p></li><li><h5 id="Youtube-Vue系列-Alex-宅幹嘛"><a href="#Youtube-Vue系列-Alex-宅幹嘛" class="headerlink" title="[Youtube] Vue系列 - Alex 宅幹嘛"></a>[Youtube] Vue系列 - Alex 宅幹嘛</h5><ul><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dYor8h4Hi2lqKJ0xqNTFh16">Vue.js 手牽手，一起嗑光全家桶</a> - 2018</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dapPjoPvWX0c8JCK6-mIvGr">Re Vue 重頭說起 第一季</a> - 2020</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4daEhioHKZqrkGXAedXIQ2Cn">Re Vue 重頭說起 第二季</a> - 2020</li><li><a href="https://www.youtube.com/playlist?list=PLEfh-m_KG4dbIlLGrUsF-cQW-mNPNwf1O">Re Vue 重頭說起 第三季</a> - 2020</li></ul></li></ul><a id="more"></a><h4 id="入門"><a href="#入門" class="headerlink" title="入門"></a>入門</h4><ul><li><a href="https://ithelp.ithome.com.tw/users/20103424/ironman/1049">[iT邦] Vue.js 30天 - Ralph</a> - 2016</li><li><a href="https://ithelp.ithome.com.tw/users/20111956/ironman/1784">[iT邦] 網頁設計靠 Vue.js 轉前端 - adam747</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20107789/ironman/1710">[iT邦] 勇者鬥Vue龍 - Peter Chen</a> - 2018</li><li><a href="https://ithelp.ithome.com.tw/users/20114645/ironman/2811">[iT邦] 前端新手筆記-Vue.js - chunwen</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20112158/ironman/2614">[iT邦] 技術在走，Vue.js 要有 - mangoSu</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20109609/ironman/2233">[iT邦] 學習 vue 30天 - sunbu</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20001433/ironman/2154">[iT邦] VueJS 從前端到後端 - 閃光洽</a> - 2019</li><li><a href="https://ithelp.ithome.com.tw/users/20110850/ironman/2171">[iT邦] 超緊繃!30天Vue.js學習日記 - Peter學程式</a> - 2019<h4 id="學習教程"><a href="#學習教程" class="headerlink" title="學習教程"></a>學習教程</h4></li><li><a href="https://cn.vuejs.org/v2/guide/">Vue2學習教程 - 官方</a></li><li><a href="https://cn.vuejs.org/v2/guide/testing.html">測試學習教程 - 官方</a></li></ul><h4 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h4><ul><li><a href="https://medium.com/@debbyji/deep-%E6%98%AF%E4%BB%80%E9%BA%BC-%E8%81%8A%E8%81%8A-vue-%E8%A3%A1%E7%9A%84-scoped-css-d1877f902845">/deep/ 是什麼？ — 聊聊 Vue 裡的 scoped css - Medium</a> - 2020</li></ul><h4 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h4><ul><li><a href="https://yiyingloveart.blogspot.com/2016/06/vuejs-change-custom-delimiters.html?m=1">vue.js 改變分隔符的符號</a> - 2016</li><li><h5 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h5><ul><li><a href="https://blog.csdn.net/summer7310/article/details/90480828">vue開發不同代理方式設置cookies - CSDN</a> - 2019</li><li><a href="https://blog.csdn.net/qq_36297981/article/details/89528832">webpack-dev-server使用proxy跨域cookie問題 - CSDN</a> - 2019</li><li><a href="https://blog.csdn.net/weixin_43160044/article/details/94901074">webpack：proxy中cookie無法保存的解決辦法 - CSDN</a> - 2019</li><li><a href="https://juejin.cn/post/6844903984612818952">wepack-dev-server無法傳遞cookie到後端的問題 - 掘金</a> - 2019</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 框架 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[link]_Vue3</title>
      <link href="2021/02/11/link-Vue3/"/>
      <url>2021/02/11/link-Vue3/</url>
      
        <content type="html"><![CDATA[<h4 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h4><ul><li><a href="https://book.vue.tw/">重新認識 Vue.js - Kuro Hsu</a> - 2020<ul><li><a href="https://github.com/kurotanshi/source-book-vue.js">重新認識 Vue.js(範例檔) - Kuro Hsu</a> - 2020</li></ul></li><li><a href="https://campus-xoops.tn.edu.tw/modules/tad_book3/index.php?op=list_docs&tbsn=33">Vue.js 3.0 筆記 - XOOPS輕鬆架</a> - 2017</li><li><a href="https://www.bilibili.com/video/BV14k4y117LL?from=search&seid=16839590488178074731">「李南江」Vue3.0正式版教程 - bilibili</a> - 2020</li><li><a href="https://github.com/vue3/vue3-News">vue3-News- Github</a></li><li><a href="https://vue3js.cn/docs/zh/">[官方] Vue3中文文檔</a></li><li><a href="https://tw511.com/a/01/13583.html">VUE 3.0初體驗 - TW511教學網</a></li></ul><a id="more"></a><h4 id="Composition-Api"><a href="#Composition-Api" class="headerlink" title="Composition Api"></a>Composition Api</h4><ul><li><a href="https://vue3js.cn/docs/zh/guide/composition-api-introduction.html#%E4%BB%80%E4%B9%88%E6%98%AF%E7%BB%84%E5%90%88%E5%BC%8F-api">[官方] 什麼是組合式API？</a></li><li><a href="https://blog.csdn.net/fesfsefgs/article/details/106572929">vue2中Options API 和vue3中Composition API 的對比 - CSDN</a><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4></li><li><a href="https://juejin.cn/post/6916298446638940173">為什麼Vue3選擇了CSS變數 - 掘金</a> - 2021<ul><li><a href="https://juejin.cn/post/6916298446638940173">Vue3注入CSS變數方式範例 - Github</a> - 2020</li></ul></li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://medium.com/i-am-mike/vue-3-vue3-%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD-suspense-428e02254030">Vue3 的新功能 — Suspense - Medium</a> - 2020</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> link </tag>
            
            <tag> 框架 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
